[{"path":".github/ISSUE_TEMPLATE/bug_report.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"---","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"name: Bug report","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"about: Create a report to help us improve","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"title: \u0027Bug: \u003cTitle Here\u003e\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"labels: \u0027\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"---","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"**Describe the bug**","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"A clear and concise description of what the bug is.","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"**To Reproduce**","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"Steps to reproduce the behavior:","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"1. Go to \u0027...\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"2. Click on \u0027....\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"3. Scroll down to \u0027....\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"4. See error","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"**Expected behavior**","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"A clear and concise description of what you expected to happen.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"**Screenshots**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"If applicable, add screenshots to help explain your problem.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"**Additional context**","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"Add any other context about the problem here.","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Amadeus-Winarto":27}},{"path":".github/ISSUE_TEMPLATE/feature_request.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"---","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"name: Feature request","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"about: Suggest an idea for this project","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"title: \u0027\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"labels: \u0027\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"---","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"**Is your feature request related to a problem? Please describe.**","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"A clear and concise description of what the problem is. Ex. I\u0027m always frustrated when [...]","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"**Describe the solution you\u0027d like**","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"A clear and concise description of what you want to happen.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"**Describe alternatives you\u0027ve considered**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"A clear and concise description of any alternative solutions or features you\u0027ve considered.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"**Additional context**","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"Add any other context or screenshots about the feature request here.","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Amadeus-Winarto":20}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T15-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-T15-3/tp/actions)","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T15-3/tp/branch/master/graph/badge.svg?token\u003d2XF6JTBSXF)](https://codecov.io/gh/AY2122S1-CS2103T-T15-3/tp)","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"# Academy Directory","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"### Introduction","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"* Academy Directory (AD) is a desktop appplication for CS1101S tutors (or Avengers) to manage studentsâ€™ personal","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"  contact, grades, tutorial attendance, and assignment completion, as well as visualizing and manipulating statistics for tutoring purposes.","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"  It is optimized primarily for usage in teaching CS1101S - Programming Methodology I - at the National University of Singapore.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"  ","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"Point of View: You are an Avenger sitting behind the control table, supervising your students through the transparent glass while physically interacting with the system to manage your tutee\u0027s grades and participation.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"Don\u0027t get us wrong though. We are not mad space scientists doing controlled experiment on students. *Or are we?...*","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"* This project is developed with the following discretions:","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"  * It comes with a detailed User Guide and Developer Guide, as well as sufficient and comprehensive software testing for Quality Assurance purposes.","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"  * It is optimized for CLI usage and suitable to fast typists, while at the same time having a highly interactive and stylized GUI for those who do not prefer to type.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"  * It has a wide range of features, of different categories, for usage in recording and analyzing student data.","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"### Site Map","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"* To find out about how to use Academy Directory, [view User Guide here](https://ay2122s1-cs2103t-t15-3.github.io/tp/UserGuide.html)","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"* To find out about how Academy Directory was created and the various software engineering principles behind it, [view Developer Guide here](https://ay2122s1-cs2103t-t15-3.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"* To find out about who the developers of Academy Directory are, [view About Us page here](https://ay2122s1-cs2103t-t15-3.github.io/tp/AboutUs.html)","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"### Feature List (As of Version 1.3)","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Student","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Add a student\u0027s information","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Edit a student\u0027s information","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    * Delete a student\u0027s information","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"    * Tag a student","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"    * Get student\u0027s details","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"    * Find a student through filtering","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"2. Assessment","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"    * Add a grade for student\u0027s assessment","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"    * Edit student attendance of a studio session","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"    * Edit student participation mark of a studio session","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"4. Visualizing data","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"    * View student information","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"    * Show all grades of students","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"    * Visualize students\u0027 grade with box-plot diagram","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"    * Sort a student by metric","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"5. Others","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"    * List all students","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"    * Clear all entry","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"    * Undo and redo changes","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"    * View Help","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"    * View commit history","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"    * Revert commit","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"### Acknowledgement","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"This project is based on the AddressBook-Level3 project","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"It is developed as a student project for CS2103/T - Software Engineering module at NUS.","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"hmanhduc2k":48,"-":10}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"mainClassName \u003d \u0027seedu.academydirectory.Main\u0027","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"    maven {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"        url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"    maven {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"        url \"https://sandec.jfrog.io/artifactory/repo\"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"    implementation group: \u0027com.sandec\u0027, name: \u0027mdfx\u0027, version: \u00270.2.4\u0027","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"    implementation group: \u0027org.jfree\u0027, name: \u0027org.jfree.chart.fx\u0027, version: \u00272.0.1\u0027","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"    testImplementation group: \u0027org.testfx\u0027, name: \u0027testfx-core\u0027, version: \u00274.0.16-alpha\u0027","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":81,"author":{"gitId":"phuccuongngo99"},"content":"    archiveName \u003d \u0027academydirectory.jar\u0027","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"hmanhduc2k"},"content":"    exclude \"com/ibm/**/*\"","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"hmanhduc2k"},"content":"    exclude \"com/openhtmltopdf/**/*\"","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":"    exclude \"libjfxwebkit.dylib\"","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"    exclude \"javafx/scene/web/**/*\"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"hmanhduc2k"},"content":"    exclude \"org/intellij/**/*\"","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"hmanhduc2k"},"content":"    exclude \"org/apache/**/*\"","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"hmanhduc2k"},"content":"    exclude \"org/jetbrains/**/*\"","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"hmanhduc2k"},"content":"    exclude \"jfxwebkit.dll\"","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"cheweejia"},"content":"run {","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"cheweejia"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"phuccuongngo99":6,"-":69,"hmanhduc2k":17,"cheweejia":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"Hi, this is AcademyDirectory!","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"### Manh Duc","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"\u003cimg src\u003d\"images/team/hmanhduc2k.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[github](https://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"* Role: Supreme leader","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"### Phuc Cuong","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"\u003cimg src\u003d\"images/team/phuccuongngo99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"* Role: Minion","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"* Responsibilities: Everything","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"### Ee Jia","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"\u003cimg src\u003d\"images/team/cheweejia.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-06-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"* Role: Minion","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"* Responsibilities: Everything","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"### Amadeus","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"\u003cimg src\u003d\"images/team/amadeus-winarto.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"* Role: Minion","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"* Responsibilities: Everything","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"### Tan Jian Wei","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"\u003cimg src\u003d\"images/team/jianoway.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"[[github](https://github.com/jianoway/)]","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"[[portfolio](team/jianoway.md)]","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"* Role: Minion","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"* Responsibilities: Everything","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":36,"jianoway":23}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"### Table of Contents","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"* [Setting Up, Getting Started](#setting-up-getting-started)","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"* [Design](#design)","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"  * [Architecture](#architecture)","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"  * [UI Component](#ui-component)","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"  * [Logic Component](#logic-component)","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"  * [VersionedModel Component](#versionedmodel-component)","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"  * [Storage Component](#storage-component)","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"  * [Common Classes](#common-classes)","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"  * [Managing Student\u0027s Personal Details](#managing-students-personal-details)","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"    * [AddCommand](#addcommand)","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"    * [DeleteCommand](#deletecommand)","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"    * [TagCommand](#tagcommand)","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [GetCommand](#getcommand)","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"    * [EditCommand](#editcommand)","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"  * [Track Students\u0027 Grades, Studio Attendance, and Participation](#track-students-grades-studio-attendance-and-participation)","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"    * [GradeCommand](#gradecommand)","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"    * [AttendanceCommand](#attendancecommand)","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"    * [ParticipationCommand](#participationcommand)","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"  * [Visualization Tools](#visualization-tools)","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"    * [ViewCommand](#viewcommand)","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"    * [ShowCommand](#showcommand)","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"    * [VisualizeCommand](#visualizecommand)","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"    * [FilterCommand](#filtercommand)","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"    * [SortCommand](#sortcommand)","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"  * [Others](#others)","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"    * [ListCommand](#listcommand)","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"    * [ClearCommand](#clearcommand)","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"    * [UndoCommand](#undocommand)","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"    * [RedoCommand](#redocommand)","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"    * [HelpCommand](#helpcommand)","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"* [Guides](#guides)","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"* [Appendix](#appendix-requirements)","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"  * [Requirement](#appendix-requirements)","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"  * [Manual Testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"    * [Feature Testing](#feature-testing)","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"    * [UI Testing](#ui-testing)","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"    ","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":49,"author":{"gitId":"cheweejia"},"content":"* TBC","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"cheweejia"},"content":"## **Setting Up, Getting Started**","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"![Architecture Diagram](images/dg/architecture/ArchitectureDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-T15-3/tp/blob/master/src/main/java/seedu/academydirectory/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103T-T15-3/tp/blob/master/src/main/java/seedu/academydirectory/MainApp.java). It is responsible for,","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"The rest of the App consists of four main components.","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"* [**`VersionedModel`**](#versionedmodel-component): Holds the data of the App in memory.","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"On top of the above four main components, there is also an additional [`VersionControl`](#versioncontrol-component) which ","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"provides common API for `VersionedModel` and `Storage` to implement version control. Because of this, the `VersionControl` component is usually left out in the diagrams in this ","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"developer guide. For more information regarding the `VersionControl` component, read [here](#versioncontrol-component)","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"jianoway"},"content":"![Architecture Sequence Diagram](images/dg/architecture/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"![Component Managers](images/dg/architecture/ComponentManagers.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"jianoway"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-T15-3/tp/blob/master/src/main/java/seedu/academydirectory/ui/Ui.java)","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"![Structure of the UI Component](images/dg/architecture/ui/UiClassDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"phuccuongngo99"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ChartDisplay`, `StudentListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"jianoway"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103T-T15-3/tp/blob/master/src/main/java/seedu/academydirectory/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103T-T15-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"phuccuongngo99"},"content":"* depends on some classes in the `Model` component, as it displays `Student` object residing in the `Model` and requires grades statistics from `Student` object in the `Model`.","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"jianoway"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-T15-3/tp/blob/master/src/main/java/seedu/academydirectory/logic/Logic.java)","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"jianoway"},"content":"![Logic Class Diagram](images/dg/architecture/logic/LogicClassDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"jianoway"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AcademyDirectoryParser` class to parse the user command.","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"phuccuongngo99"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a student).","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"jianoway"},"content":"![Parser Classes](images/dg/logic/parsers/ParserClasses.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"jianoway"},"content":"* When called upon to parse a user command, the `AcademyDirectoryParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AcademyDirectoryParser` returns back as a `Command` object.","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"Amadeus-Winarto"},"content":"### VersionedModel component","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"Amadeus-Winarto"},"content":"**API** : [`VersionedModel.java`](https://github.com/AY2122S1-CS2103T-T15-3/tp/blob/master/src/main/java/seedu/academydirectory/model/VersionedModel.java)","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"Amadeus-Winarto"},"content":"![Versioned Model Class Diagram](images/dg/architecture/model/ModelClassDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"Amadeus-Winarto"},"content":"The `VersionedModel` component,","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"jianoway"},"content":"* stores the academy directory data i.e., all `Student` objects (which are contained in a `UniqueStudentList` object).","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"phuccuongngo99"},"content":"* stores the currently \u0027selected\u0027 `Student` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cStudent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"Amadeus-Winarto"},"content":"* interfaces with `VersionControl` via the `VersionControlController`, which implements the `Version` API","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"Amadeus-Winarto"},"content":"and thus gives the `VersionedModel` component the ability to interface with version control entities such as `Commit`.","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"Amadeus-Winarto"},"content":"The above implementation is chosen because it makes _turning off_ version control relatively simple; a stub `VersionControlController`","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"Amadeus-Winarto"},"content":"can be used instead.","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"Amadeus-Winarto"},"content":"For more information regarding `VersionControl`, read [here](#versioncontrol-component).","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"jianoway"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AcademyDirectory`, which `Student` references. This allows `AcademyDirectory` to only require one `Tag` object per unique tag, instead of each `Student` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"jianoway"},"content":"![Better Model Class Diagram](images/dg/architecture/model/BetterModelClassDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"jianoway"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-T15-3/tp/blob/master/src/main/java/seedu/academydirectory/storage/Storage.java)","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"jianoway"},"content":"![Storage Class Diagram](images/dg/architecture/storage/StorageClassDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"jianoway"},"content":"* can save both academy directory data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"jianoway"},"content":"* inherits from both `AcademyDirectoryStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":184,"author":{"gitId":"Amadeus-Winarto"},"content":"* can write version control objects to disk","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"jianoway"},"content":"Classes used by multiple components are in the `seedu.academydirectory.commons` package.","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"Amadeus-Winarto"},"content":"### VersionControl Component","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"Amadeus-Winarto"},"content":"The internal version control system in AcademyDirectory is inspired by Git. As such, `VersionControl` ","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"Amadeus-Winarto"},"content":"keeps track of AcademyDirectory data state by using `VcObject` which corresponds to Git objects.","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"Amadeus-Winarto"},"content":"#### VersionControl Objects","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"Amadeus-Winarto"},"content":"Shown below is the corresponding class diagram:","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"Amadeus-Winarto"},"content":"![VCObjectClassDiagram](images/dg/architecture/version/VcObjectClassDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":199,"author":{"gitId":"Amadeus-Winarto"},"content":"Explanation of the objects shown above:","lastModifiedDate":"2021-11-04"},{"lineNumber":200,"author":{"gitId":"Amadeus-Winarto"},"content":"- `Tree`: ","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"Amadeus-Winarto"},"content":"  - represents a snapshot of `data` directory of AcademyDirectory.  It maintains a mapping between version-controlled","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"Amadeus-Winarto"},"content":"filenames and actual filename of tracked blobs.","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"Amadeus-Winarto"},"content":"  - Version controlled name is by default `SHA-1` hash of the blob. However, it is possible ","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"Amadeus-Winarto"},"content":"  to change this to `SHA-256` or even `MD5`. ","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"Amadeus-Winarto"},"content":"  - Supported hash functions are present in `HashMethod`","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"Amadeus-Winarto"},"content":"- `Commit`:","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"Amadeus-Winarto"},"content":"  - saves information regarding the changes to AcademyDirectory data:","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"Amadeus-Winarto"},"content":"    - who makes the change","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"Amadeus-Winarto"},"content":"    - when was the change made","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"Amadeus-Winarto"},"content":"    - what change was made exactly. ","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"Amadeus-Winarto"},"content":"  - points to a `Tree` which represents the snapshot of data _after_ the change is made","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"Amadeus-Winarto"},"content":"  - points to a `Commit` object which represents the parent of the current `Commit` object","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"Amadeus-Winarto"},"content":"- `Label`:","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"Amadeus-Winarto"},"content":"  - labels a `Commit`","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"Amadeus-Winarto"},"content":"  - relevant labels are `HEAD` which represents the current commit, `CURRENT` which represents","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"Amadeus-Winarto"},"content":"current branch, and `OLD` which represents the most recent branch before the current branch.","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"Amadeus-Winarto"},"content":"Note that in the actual implementation, a `VcObject` does not actually hold a reference to ","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"Amadeus-Winarto"},"content":"another `VcObject`; rather it has a `Supplier` of the `VcObject` that it\u0027s supposed to have","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"Amadeus-Winarto"},"content":"a reference to. This is to defer read operations to avoid memory overhead. ","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Interfacing with other components","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"Amadeus-Winarto"},"content":"Both the `Storage` component and `VersionedModel` component interfaces with `VersionControl`","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"Amadeus-Winarto"},"content":"for different reasons:","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"Amadeus-Winarto"},"content":"- `Storage`: needs to be able to write `VcObjects` to disk","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"Amadeus-Winarto"},"content":"- `VersionedModel`:","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"Amadeus-Winarto"},"content":"  - needs to be able to read `VcObjects` from disk.","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"Amadeus-Winarto"},"content":"  - needs to be able to create new `VcObjects` from disk. However, this requires computing ","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"Amadeus-Winarto"},"content":"  file hash i.e. `VersionedModel` needs minimum write access to disk to be able to compute hash","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"Amadeus-Winarto"},"content":"As such, `VersionControl` provides three facade classes, each represents one of the above requirements. The following","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"Amadeus-Winarto"},"content":"class diagram shows this:","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"Amadeus-Winarto"},"content":"![VersionControlClassDiagram](images/dg/architecture/version/VersionControlClassDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":234,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"Amadeus-Winarto"},"content":"The facade classes are: ","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"Amadeus-Winarto"},"content":"- `VersionControlGeneralReader`: to read `VcObject` from disk","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"Amadeus-Winarto"},"content":"- `VersionControlGeneralWriter`: to read `VcObject` to disk","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"Amadeus-Winarto"},"content":"- `HashComputer`: to compute hash of a file or hash of a `VcObject`","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"Amadeus-Winarto"},"content":"To modify disk representation of a particular instance of `VcObject`, modify both its `Reader`","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"Amadeus-Winarto"},"content":"and `Writer`.","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"cheweejia"},"content":"### Managing Students\u0027 Personal Details","lastModifiedDate":"2021-11-03"},{"lineNumber":250,"author":{"gitId":"jianoway"},"content":"### AddCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":252,"author":{"gitId":"jianoway"},"content":"This command adds a new `Student` to `AcademyDirectory`.","lastModifiedDate":"2021-11-03"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":254,"author":{"gitId":"jianoway"},"content":"#### Implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":255,"author":{"gitId":"jianoway"},"content":"`AddCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to serve the aforementioned purpose and is Version Controllable.","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":257,"author":{"gitId":"jianoway"},"content":"`AddCommand` adds students to the `AcademyDirectory`, with prevention of duplicates by ensuring that each `Student` has a unique `NAME`. ","lastModifiedDate":"2021-11-03"},{"lineNumber":258,"author":{"gitId":"jianoway"},"content":"`NAME` is a sufficiently unique field to identify a unique instance of a student as for the purposes of `AcademyDirectory` is scoped to ","lastModifiedDate":"2021-11-03"},{"lineNumber":259,"author":{"gitId":"jianoway"},"content":"service CS1101S Avengers, each `Studio` has approximately 10 `Students`, with the probability of a `NAME` collision being sufficiently minimised.","lastModifiedDate":"2021-11-03"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":261,"author":{"gitId":"jianoway"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The responsibility of ensuring that `Student` ","lastModifiedDate":"2021-11-03"},{"lineNumber":262,"author":{"gitId":"jianoway"},"content":"does not have unnecessary duplicate information (e.g same `PHONE`) is left to an Avenger.","lastModifiedDate":"2021-11-03"},{"lineNumber":263,"author":{"gitId":"jianoway"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":265,"author":{"gitId":"cheweejia"},"content":"### DeleteCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":267,"author":{"gitId":"jianoway"},"content":"This command deletes a `Student` from `AcademyDirectory`.","lastModifiedDate":"2021-11-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"cheweejia"},"content":"#### Implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":270,"author":{"gitId":"jianoway"},"content":"`DeleteCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to serve the aforementioned purpose and is Version Controllable.","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"jianoway"},"content":"`DeleteCommand` deletes `Student` based on the relative `INDEX` in the `ObservableList` which is the list of `Student` viewed by the `Avenger`. To do this, `DeleteCommand` makes a call to `Model#deleteStudent()`.","lastModifiedDate":"2021-11-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":274,"author":{"gitId":"cheweejia"},"content":"### TagCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":276,"author":{"gitId":"jianoway"},"content":"{Add description}","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":278,"author":{"gitId":"cheweejia"},"content":"#### Implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":280,"author":{"gitId":"jianoway"},"content":"{Add implementation}","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"Amadeus-Winarto"},"content":"### GetCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":283,"author":{"gitId":"Amadeus-Winarto"},"content":"This command serves to retrieve a specific `PersonalDetail` of students or a student.","lastModifiedDate":"2021-11-03"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":285,"author":{"gitId":"cheweejia"},"content":"#### Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":286,"author":{"gitId":"Amadeus-Winarto"},"content":"`GetCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to serve the aforementioned purpose.","lastModifiedDate":"2021-11-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"Amadeus-Winarto"},"content":"All fields of `Student` class which implements the `PersonalDetail` interface and whose prefix is present in","lastModifiedDate":"2021-11-03"},{"lineNumber":289,"author":{"gitId":"Amadeus-Winarto"},"content":"the `GetCommand` class can be queried by `GetCommand`.","lastModifiedDate":"2021-11-03"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"Amadeus-Winarto"},"content":"A `GetCommand` is initialized with a list of `Prefix` objects which represents the prefix of the `PersonalDetail`","lastModifiedDate":"2021-11-03"},{"lineNumber":292,"author":{"gitId":"Amadeus-Winarto"},"content":"to be retrieved, and a list of `String` which represents the keywords that will be matched with ","lastModifiedDate":"2021-11-03"},{"lineNumber":293,"author":{"gitId":"Amadeus-Winarto"},"content":"the names of students in Academy Directory. List of `Prefix` cannot be empty, but list of keywords can be.","lastModifiedDate":"2021-11-03"},{"lineNumber":294,"author":{"gitId":"Amadeus-Winarto"},"content":"An empty list of keywords is interpreted as retrieving personal details of all students in the model.","lastModifiedDate":"2021-11-03"},{"lineNumber":295,"author":{"gitId":"Amadeus-Winarto"},"content":"The specifics are shown in the sequence diagram below:","lastModifiedDate":"2021-11-03"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":297,"author":{"gitId":"Amadeus-Winarto"},"content":"A `PersonalDetailRetriever` object can be constructed by passing a `Prefix` and a `Name","lastModifiedDate":"2021-11-03"},{"lineNumber":298,"author":{"gitId":"Amadeus-Winarto"},"content":"![GetCommandSequenceDiagram](images/dg/logic/commands/getcommand/GetCommandSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"cheweejia"},"content":"### EditCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"cheweejia"},"content":"This command edits a `Student`\u0027s personal details such as their `NAME`, `PHONE`, `TELEGRAM` and `EMAIL`.","lastModifiedDate":"2021-11-03"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"hmanhduc2k"},"content":"#### Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"jianoway"},"content":"`EditCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to serve the aforementioned purpose and is Version Controllable.","lastModifiedDate":"2021-11-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"cheweejia"},"content":"Similar to `AddCommand`, `EditCommand` supports duplicate prevention by checking that the `NAME` being edited is unique in the list","lastModifiedDate":"2021-11-03"},{"lineNumber":308,"author":{"gitId":"cheweejia"},"content":"unless the `NAME` is the same  as the `Student` being edited.","lastModifiedDate":"2021-11-03"},{"lineNumber":309,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"cheweejia"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The responsibility of ensuring that `Student` ","lastModifiedDate":"2021-11-03"},{"lineNumber":311,"author":{"gitId":"cheweejia"},"content":"does not have unnecessary duplicate information (e.g same `PHONE`) is left to an Avenger.","lastModifiedDate":"2021-11-03"},{"lineNumber":312,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"cheweejia"},"content":"### Track Students\u0027 Grades, Studio Attendance, and Participation","lastModifiedDate":"2021-11-03"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"cheweejia"},"content":"### GradeCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":318,"author":{"gitId":"cheweejia"},"content":"This command serves to update the `Grade` of various `Assessment` that the students will undergo in CS1101S. The assessments include RA1, Midterm, RA2, Practical Exam (PE), and Final.","lastModifiedDate":"2021-11-03"},{"lineNumber":319,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":320,"author":{"gitId":"cheweejia"},"content":"#### Implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":321,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":322,"author":{"gitId":"cheweejia"},"content":"`GradeCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to serve the aforementioned purpose.","lastModifiedDate":"2021-11-03"},{"lineNumber":323,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":324,"author":{"gitId":"cheweejia"},"content":"The recording of grade is facilitated by adding an `Assessment` parameter to the `Student`.","lastModifiedDate":"2021-11-03"},{"lineNumber":325,"author":{"gitId":"cheweejia"},"content":"The `Assessment` is implemented with a HashMap that stores the String representation of the assessments as the keys, and the integer `Grade` as the values.","lastModifiedDate":"2021-11-03"},{"lineNumber":326,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":327,"author":{"gitId":"cheweejia"},"content":"The following sequence diagram describes what happens when `GradeCommand` is executed:","lastModifiedDate":"2021-11-03"},{"lineNumber":328,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":329,"author":{"gitId":"Amadeus-Winarto"},"content":"![GradeCommandSequenceDiagram](images/dg/logic/commands/gradecommand/GradeCommandSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":330,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":331,"author":{"gitId":"jianoway"},"content":"### AttendanceCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":332,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":333,"author":{"gitId":"jianoway"},"content":"This command serves to update the attendance status of students. A student\u0027s `Attendance` can be either attended or unattended.","lastModifiedDate":"2021-10-19"},{"lineNumber":334,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":335,"author":{"gitId":"jianoway"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":336,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":337,"author":{"gitId":"jianoway"},"content":"`AttendanceCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to serve the aforementioned purpose and is Version Controllable.","lastModifiedDate":"2021-11-04"},{"lineNumber":338,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":339,"author":{"gitId":"jianoway"},"content":"The attendance mechanism is facilitated by adding a `StudioRecord` parameter to the `Student`. This `StudioRecord` has an `Attendance` object which we can use to track and update the `Attendance` of the `Student`. `Attendance` implements `Information` and the actual storing of the attendance status is done with a `boolean array`.","lastModifiedDate":"2021-10-19"},{"lineNumber":340,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":341,"author":{"gitId":"jianoway"},"content":"The following sequence diagram describes what happens when `AttendanceCommand` is executed:","lastModifiedDate":"2021-10-19"},{"lineNumber":342,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":343,"author":{"gitId":"Amadeus-Winarto"},"content":"![AttendanceCommandSequenceDiagram](images/dg/logic/commands/attendancecommand/AttendanceCommandSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":344,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":345,"author":{"gitId":"jianoway"},"content":"For `UpdateModelAttendanceSequenceDiagram`, the sequential diagrams can be found below:","lastModifiedDate":"2021-10-21"},{"lineNumber":346,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":347,"author":{"gitId":"Amadeus-Winarto"},"content":"![UpdateModelAttendanceSequenceDiagram](images/dg/logic/commands/attendancecommand/UpdateModelAttendanceSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":348,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":349,"author":{"gitId":"jianoway"},"content":"### ParticipationCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":350,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":351,"author":{"gitId":"jianoway"},"content":"This command serves to update the `Participation` score of students. Following the XP system for CS1101S, each student is awarded between 0 and 500 XP (inclusive) per Studio session.","lastModifiedDate":"2021-10-19"},{"lineNumber":352,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":353,"author":{"gitId":"jianoway"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":354,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":355,"author":{"gitId":"jianoway"},"content":"`ParticipationCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to serve the aforementioned purpose and is Version Controllable.","lastModifiedDate":"2021-11-04"},{"lineNumber":356,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":357,"author":{"gitId":"jianoway"},"content":"The implementation is similar to `AttendanceCommand`, with the same sequence diagram being applicable for Participation given that the proper refactoring to `Participation` is done.","lastModifiedDate":"2021-11-02"},{"lineNumber":358,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":359,"author":{"gitId":"jianoway"},"content":"`ParticipationCommand` has an additional section in the sequence diagram located above the loop in `AttendanceCommand`. The purpose of the logic below is to update a student\u0027s `Attendance` to be marked as present if the `participationUpdate` is greater than 0. This is because a student that has a positive `Participation` score would also count as having attended the `Studio`.","lastModifiedDate":"2021-11-02"},{"lineNumber":360,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":361,"author":{"gitId":"Amadeus-Winarto"},"content":"![ParticipationCommandMarkAttendanceSequenceDiagram](images/dg/logic/commands/participationcommand/ParticipationCommandMarkAttendanceSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":362,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":363,"author":{"gitId":"jianoway"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The logic above is to update the `Attendance` and is only executed in the event that `participationUpdate` is more than 0. Otherwise, it will not run.","lastModifiedDate":"2021-10-19"},{"lineNumber":364,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":365,"author":{"gitId":"jianoway"},"content":" \u003c/div\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":366,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":367,"author":{"gitId":"jianoway"},"content":"### Visualization Tools","lastModifiedDate":"2021-11-04"},{"lineNumber":368,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":369,"author":{"gitId":"cheweejia"},"content":"### ViewCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":370,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":371,"author":{"gitId":"jianoway"},"content":"This command serves to display the summarised details of a single `Student` in the `AcademyDirectory`.","lastModifiedDate":"2021-11-04"},{"lineNumber":372,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":373,"author":{"gitId":"jianoway"},"content":"`ViewCommand` displays the `Student` based on the relative `INDEX` in the `ObservableList` which is the list of `Student` viewed by the `Avenger`.","lastModifiedDate":"2021-11-04"},{"lineNumber":374,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":375,"author":{"gitId":"jianoway"},"content":"{Improve on explanation and add a possible UML Diagram}","lastModifiedDate":"2021-11-04"},{"lineNumber":376,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":377,"author":{"gitId":"cheweejia"},"content":"#### Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":378,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":379,"author":{"gitId":"jianoway"},"content":"`ViewCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to serve the aforementioned purpose.","lastModifiedDate":"2021-11-04"},{"lineNumber":380,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":381,"author":{"gitId":"cheweejia"},"content":"### ShowCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":382,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":383,"author":{"gitId":"cheweejia"},"content":"This command serves to display the collated score of all students in the Academy Directory for a specific `Assessment`. The assessments that can be queried are: RA1, Midterm, RA2, Practical Exam (PE), and Final.","lastModifiedDate":"2021-10-21"},{"lineNumber":384,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":385,"author":{"gitId":"cheweejia"},"content":"#### Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":386,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":387,"author":{"gitId":"cheweejia"},"content":"`ShowCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to serve the aforementioned purpose.","lastModifiedDate":"2021-10-21"},{"lineNumber":388,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":389,"author":{"gitId":"cheweejia"},"content":"The grades are collated by iterating through all the students and extracting the score from the `Assessment` HashMap using the input `Assessment` as the key.","lastModifiedDate":"2021-11-03"},{"lineNumber":390,"author":{"gitId":"cheweejia"},"content":"The information is formatted into a String and displayed in the AdditionalView. The success message is parsed into `CommandResult` to be returned by `ShowCommand`.","lastModifiedDate":"2021-11-03"},{"lineNumber":391,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":392,"author":{"gitId":"cheweejia"},"content":"The following sequence diagram describes what happens when `ShowCommand` is executed:","lastModifiedDate":"2021-10-21"},{"lineNumber":393,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":394,"author":{"gitId":"Amadeus-Winarto"},"content":"![ShowCommandSequenceDiagram](images/dg/logic/commands/showcommand/ShowCommandSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":395,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":396,"author":{"gitId":"cheweejia"},"content":"### VisualizeCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":397,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":398,"author":{"gitId":"jianoway"},"content":"This command provides a Box Plot of the performance of all `Student` in `AcademyDirectory` in all `Assessment`.","lastModifiedDate":"2021-11-04"},{"lineNumber":399,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":400,"author":{"gitId":"cheweejia"},"content":"#### Implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":401,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":402,"author":{"gitId":"jianoway"},"content":"`VisualizeCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to serve the aforementioned purpose.","lastModifiedDate":"2021-11-04"},{"lineNumber":403,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":404,"author":{"gitId":"jianoway"},"content":"{Improve on explanation and add a possible UML Diagram}","lastModifiedDate":"2021-11-04"},{"lineNumber":405,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":406,"author":{"gitId":"cheweejia"},"content":"### FilterCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":407,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":408,"author":{"gitId":"jianoway"},"content":"This command filters the `ObservableList` by `NAME` or `TAG`.  ","lastModifiedDate":"2021-11-04"},{"lineNumber":409,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":410,"author":{"gitId":"jianoway"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":411,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":412,"author":{"gitId":"jianoway"},"content":"`FilterCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to serve the aforementioned purpose.","lastModifiedDate":"2021-11-04"},{"lineNumber":413,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":414,"author":{"gitId":"jianoway"},"content":"{Improve on explanation and add a possible UML Diagram}","lastModifiedDate":"2021-11-04"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":416,"author":{"gitId":"cheweejia"},"content":"### SortCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":418,"author":{"gitId":"cheweejia"},"content":"This command sorts the `AcademyDirectory` student list based on their `Participation`, `Assessment` and `Name`. When sorting by `Assessment`, users have the option of sorting by individual `Assessment` or by the average grade among. Users can also choose if they want to sort by ascending or descending.","lastModifiedDate":"2021-11-03"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":420,"author":{"gitId":"cheweejia"},"content":"#### Implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":422,"author":{"gitId":"jianoway"},"content":"`SortCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to serve the aforementioned purpose and is Version Controllable.","lastModifiedDate":"2021-11-04"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":424,"author":{"gitId":"cheweejia"},"content":"The sorting mechanism is based on the `List` interface as it sorts the various `FilteredList` instances using `Comparator`. Based on the `attribute` of the `SortCommand` being executed, the `Comparator` differs as shown by the sequential diagram below:","lastModifiedDate":"2021-11-03"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":426,"author":{"gitId":"Amadeus-Winarto"},"content":"![SortCommandSequenceDiagram](images/dg/logic/commands/sortcommand/SortCommandSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":428,"author":{"gitId":"cheweejia"},"content":"The reference frame for GetComparator can be found below. It details the selection process based on the `attribute` of the `SortCommand`.","lastModifiedDate":"2021-11-03"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":430,"author":{"gitId":"Amadeus-Winarto"},"content":"![GetComparatorSequenceDiagram](images/dg/logic/commands/sortcommand/GetComparatorSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":432,"author":{"gitId":"cheweejia"},"content":"### Others","lastModifiedDate":"2021-11-03"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":434,"author":{"gitId":"cheweejia"},"content":"### ListCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":436,"author":{"gitId":"jianoway"},"content":"This command restores the original, unfiltered view of `AcademyDirectory`.","lastModifiedDate":"2021-11-04"},{"lineNumber":437,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":438,"author":{"gitId":"cheweejia"},"content":"#### Implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":439,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":440,"author":{"gitId":"jianoway"},"content":"`ListCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to serve the aforementioned purpose.","lastModifiedDate":"2021-11-04"},{"lineNumber":441,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":442,"author":{"gitId":"jianoway"},"content":"{Add more details on implementation}","lastModifiedDate":"2021-11-04"},{"lineNumber":443,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":444,"author":{"gitId":"cheweejia"},"content":"### ClearCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":445,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":446,"author":{"gitId":"jianoway"},"content":"This command clears all `Student` entries from `AcademyDirectory`.","lastModifiedDate":"2021-11-04"},{"lineNumber":447,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":448,"author":{"gitId":"cheweejia"},"content":"#### Implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":449,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":450,"author":{"gitId":"jianoway"},"content":"`ClearCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to serve the aforementioned purpose and is Version Controllable.","lastModifiedDate":"2021-11-04"},{"lineNumber":451,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":452,"author":{"gitId":"jianoway"},"content":"{Add more details on implementation}","lastModifiedDate":"2021-11-04"},{"lineNumber":453,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":454,"author":{"gitId":"Amadeus-Winarto"},"content":"### HistoryCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":455,"author":{"gitId":"Amadeus-Winarto"},"content":"This command shows the commit history. Each commit will be shown with its five character hash, ","lastModifiedDate":"2021-11-04"},{"lineNumber":456,"author":{"gitId":"Amadeus-Winarto"},"content":"author, date, and commit message. Only commands that are _version controllable_ will result in a commit","lastModifiedDate":"2021-11-04"},{"lineNumber":457,"author":{"gitId":"Amadeus-Winarto"},"content":"being created and thus shown by `HistoryCommand`. Commands which can be undone are referred to as _version controllable_ (read [here](#glossary)","lastModifiedDate":"2021-11-04"},{"lineNumber":458,"author":{"gitId":"Amadeus-Winarto"},"content":"for details on what this means).","lastModifiedDate":"2021-11-04"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"Amadeus-Winarto"},"content":"This command is meant for:","lastModifiedDate":"2021-11-04"},{"lineNumber":461,"author":{"gitId":"Amadeus-Winarto"},"content":"* reminding users what changes were made to the underlying AcademyDirectory Data","lastModifiedDate":"2021-11-04"},{"lineNumber":462,"author":{"gitId":"Amadeus-Winarto"},"content":"* revealing (five character) hash of commits that can be used with `RevertCommand`.","lastModifiedDate":"2021-11-04"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Implementation","lastModifiedDate":"2021-11-04"},{"lineNumber":465,"author":{"gitId":"Amadeus-Winarto"},"content":"`HistoryCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to","lastModifiedDate":"2021-11-04"},{"lineNumber":466,"author":{"gitId":"Amadeus-Winarto"},"content":"serve the aforementioned purpose.","lastModifiedDate":"2021-11-04"},{"lineNumber":467,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":468,"author":{"gitId":"Amadeus-Winarto"},"content":"The `HistoryCommand` makes use of the following set of invariance:","lastModifiedDate":"2021-11-04"},{"lineNumber":469,"author":{"gitId":"Amadeus-Winarto"},"content":"- The most recent commit that belongs to the current branch is always labelled as `CURRENT`","lastModifiedDate":"2021-11-04"},{"lineNumber":470,"author":{"gitId":"Amadeus-Winarto"},"content":"- The most recent commit that belongs to the second-most-recent branch is always labelled","lastModifiedDate":"2021-11-04"},{"lineNumber":471,"author":{"gitId":"Amadeus-Winarto"},"content":"as `OLD`","lastModifiedDate":"2021-11-04"},{"lineNumber":472,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":473,"author":{"gitId":"Amadeus-Winarto"},"content":"These guarantees are assured by the `VersionedModel#commit` method. Note that `HEAD` and `CURRENT` need not","lastModifiedDate":"2021-11-04"},{"lineNumber":474,"author":{"gitId":"Amadeus-Winarto"},"content":"refer to the same commit e.g. if the user reverts to a previous commit then `CURRENT` and `HEAD` will refer to ","lastModifiedDate":"2021-11-04"},{"lineNumber":475,"author":{"gitId":"Amadeus-Winarto"},"content":"different commits. ","lastModifiedDate":"2021-11-04"},{"lineNumber":476,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":477,"author":{"gitId":"Amadeus-Winarto"},"content":"Because this set of invariance are respected, thus `HistoryCommand` can show commit history by doing the following: ","lastModifiedDate":"2021-11-04"},{"lineNumber":478,"author":{"gitId":"Amadeus-Winarto"},"content":"- fetch commit labelled as `CURRENT` and `OLD` from disk (methods to do this exposed by `VersionedModel`)","lastModifiedDate":"2021-11-04"},{"lineNumber":479,"author":{"gitId":"Amadeus-Winarto"},"content":"- find the lowest common ancestor between `CURRENT` and `OLD` (`Commit#LCA` method used here)","lastModifiedDate":"2021-11-04"},{"lineNumber":480,"author":{"gitId":"Amadeus-Winarto"},"content":"- show all commits from initial commit until the lowest common ancestor found above normally","lastModifiedDate":"2021-11-04"},{"lineNumber":481,"author":{"gitId":"Amadeus-Winarto"},"content":"- show all commits from the lowest common ancestor until `CURRENT` and `OLD` as per the desired","lastModifiedDate":"2021-11-04"},{"lineNumber":482,"author":{"gitId":"Amadeus-Winarto"},"content":"formatting","lastModifiedDate":"2021-11-04"},{"lineNumber":483,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":484,"author":{"gitId":"Amadeus-Winarto"},"content":"The following sequence diagram shows the above implementation:","lastModifiedDate":"2021-11-04"},{"lineNumber":485,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":486,"author":{"gitId":"Amadeus-Winarto"},"content":"{Add IMAGE}","lastModifiedDate":"2021-11-04"},{"lineNumber":487,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":488,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Limitation","lastModifiedDate":"2021-11-04"},{"lineNumber":489,"author":{"gitId":"Amadeus-Winarto"},"content":"The current implementation can only show two commit branches: `CURRENT` and `OLD`. While this is","lastModifiedDate":"2021-11-04"},{"lineNumber":490,"author":{"gitId":"Amadeus-Winarto"},"content":"sufficient in most cases, the ability to show arbitrary number of commit branches to give users","lastModifiedDate":"2021-11-04"},{"lineNumber":491,"author":{"gitId":"Amadeus-Winarto"},"content":"the ability to revert to any previous commits easily without having to look for the commit\u0027s hash","lastModifiedDate":"2021-11-04"},{"lineNumber":492,"author":{"gitId":"Amadeus-Winarto"},"content":"manually in disk. However, due to the implementer\u0027s inability to figure out how best to show","lastModifiedDate":"2021-11-04"},{"lineNumber":493,"author":{"gitId":"Amadeus-Winarto"},"content":"arbitrary number of commit branches, the current `HistoryCommand` thus can only show two branches. ","lastModifiedDate":"2021-11-04"},{"lineNumber":494,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":495,"author":{"gitId":"Amadeus-Winarto"},"content":"### RevertCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":496,"author":{"gitId":"Amadeus-Winarto"},"content":"This command reverts the underlying `AcademyDirectory` data to a previous commit, as identified by the commit\u0027s hash.","lastModifiedDate":"2021-11-04"},{"lineNumber":497,"author":{"gitId":"Amadeus-Winarto"},"content":"Commands which can be undone are referred to as _version controllable_ (read [here](#glossary) ","lastModifiedDate":"2021-11-04"},{"lineNumber":498,"author":{"gitId":"Amadeus-Winarto"},"content":"for details on what this means). The following is true regarding `RevertCommand`:","lastModifiedDate":"2021-11-04"},{"lineNumber":499,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":500,"author":{"gitId":"Amadeus-Winarto"},"content":"- If any of the following occurs which leads to a failure in parsing commit file in disk, no changes","lastModifiedDate":"2021-11-04"},{"lineNumber":501,"author":{"gitId":"Amadeus-Winarto"},"content":"are made to the underlying disk: ","lastModifiedDate":"2021-11-04"},{"lineNumber":502,"author":{"gitId":"Amadeus-Winarto"},"content":"  - provided hash cannot be found on disk","lastModifiedDate":"2021-11-04"},{"lineNumber":503,"author":{"gitId":"Amadeus-Winarto"},"content":"  - commit file with the given hash exists, but is corrupted","lastModifiedDate":"2021-11-04"},{"lineNumber":504,"author":{"gitId":"Amadeus-Winarto"},"content":"  - commit file with the given hash exists, but no read access is given to AcademyDirectory","lastModifiedDate":"2021-11-04"},{"lineNumber":505,"author":{"gitId":"Amadeus-Winarto"},"content":"  - other reasons which leads to failure in reading commmit file","lastModifiedDate":"2021-11-04"},{"lineNumber":506,"author":{"gitId":"Amadeus-Winarto"},"content":"- Otherwise, the `AcademyDirectory` storage data will be restored according to the target commit","lastModifiedDate":"2021-11-04"},{"lineNumber":507,"author":{"gitId":"Amadeus-Winarto"},"content":"to be reverted to. ","lastModifiedDate":"2021-11-04"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Implementation","lastModifiedDate":"2021-11-04"},{"lineNumber":510,"author":{"gitId":"Amadeus-Winarto"},"content":"`RevertCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to","lastModifiedDate":"2021-11-04"},{"lineNumber":511,"author":{"gitId":"Amadeus-Winarto"},"content":"serve the aforementioned purpose.","lastModifiedDate":"2021-11-04"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"Amadeus-Winarto"},"content":"`RevertCommand` reverts state of AcademyDirectory data by doing the following:","lastModifiedDate":"2021-11-04"},{"lineNumber":514,"author":{"gitId":"Amadeus-Winarto"},"content":"- fetch commit identified by the given hash","lastModifiedDate":"2021-11-04"},{"lineNumber":515,"author":{"gitId":"Amadeus-Winarto"},"content":"- shift `VersionedModel`\u0027s `HEAD` pointer to the commit","lastModifiedDate":"2021-11-04"},{"lineNumber":516,"author":{"gitId":"Amadeus-Winarto"},"content":"- restores the academy directory data according to the tree that the fetched commit points to","lastModifiedDate":"2021-11-04"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"Amadeus-Winarto"},"content":"The following sequence diagram shows the above implementation:","lastModifiedDate":"2021-11-04"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"Amadeus-Winarto"},"content":"{Add IMAGE}","lastModifiedDate":"2021-11-04"},{"lineNumber":521,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Limitation","lastModifiedDate":"2021-11-04"},{"lineNumber":522,"author":{"gitId":"Amadeus-Winarto"},"content":"Because `RevertCommand` has to restore academy directory data which is the responsibility of the","lastModifiedDate":"2021-11-04"},{"lineNumber":523,"author":{"gitId":"Amadeus-Winarto"},"content":"`Storage` component, `RevertCommand` reinitialize a `Storage` and `VersionedModel` and changes the ","lastModifiedDate":"2021-11-04"},{"lineNumber":524,"author":{"gitId":"Amadeus-Winarto"},"content":"current `VersionedModel` reference to the newly created `VersionedModel`. This is (highly) not ","lastModifiedDate":"2021-11-04"},{"lineNumber":525,"author":{"gitId":"Amadeus-Winarto"},"content":"ideal, but the implementer has no idea how to do this properly without the ungodly reinitialization","lastModifiedDate":"2021-11-04"},{"lineNumber":526,"author":{"gitId":"Amadeus-Winarto"},"content":"of `Storage` and `VersionedModel`...","lastModifiedDate":"2021-11-04"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"Amadeus-Winarto"},"content":"### UndoCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":529,"author":{"gitId":"Amadeus-Winarto"},"content":"This command undoes a change done to the underlying `AcademyDirectory` data. Note that this is","lastModifiedDate":"2021-11-04"},{"lineNumber":530,"author":{"gitId":"Amadeus-Winarto"},"content":"different from the _view_ of the data e.g. when the `ViewCommand` is used, the _view_ visible to ","lastModifiedDate":"2021-11-04"},{"lineNumber":531,"author":{"gitId":"Amadeus-Winarto"},"content":"the user changes, but the underlying data does not change. Commands which can be undone are referred to ","lastModifiedDate":"2021-11-04"},{"lineNumber":532,"author":{"gitId":"Amadeus-Winarto"},"content":"as _version controllable_ (read [here](#glossary) for details on what this means).","lastModifiedDate":"2021-11-04"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Implementation","lastModifiedDate":"2021-11-04"},{"lineNumber":535,"author":{"gitId":"Amadeus-Winarto"},"content":"`UndoCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to","lastModifiedDate":"2021-11-04"},{"lineNumber":536,"author":{"gitId":"Amadeus-Winarto"},"content":"serve the aforementioned purpose. Internally, the `UndoCommand` makes use of the `RevertCommand`. ","lastModifiedDate":"2021-11-04"},{"lineNumber":537,"author":{"gitId":"Amadeus-Winarto"},"content":"Hence `UndoCommand` serves as _syntactic sugar_ for the `RevertCommand`.","lastModifiedDate":"2021-11-04"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"cheweejia"},"content":"### RedoCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":540,"author":{"gitId":"Amadeus-Winarto"},"content":"This command redoes a change done to the underlying `AcademyDirectory` data. Note that this is","lastModifiedDate":"2021-11-04"},{"lineNumber":541,"author":{"gitId":"Amadeus-Winarto"},"content":"different from the _view_ of the data e.g. when the `ViewCommand` is used, the _view_ visible to","lastModifiedDate":"2021-11-04"},{"lineNumber":542,"author":{"gitId":"Amadeus-Winarto"},"content":"the user changes, but the underlying data does not change. Commands which can be redone are referred to","lastModifiedDate":"2021-11-04"},{"lineNumber":543,"author":{"gitId":"Amadeus-Winarto"},"content":"as _version controllable_ (read [here](#glossary) for details on what this means).","lastModifiedDate":"2021-11-04"},{"lineNumber":544,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":545,"author":{"gitId":"cheweejia"},"content":"#### Implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":546,"author":{"gitId":"Amadeus-Winarto"},"content":"`RedoCommand` will extend the `Command` class and will consequently `@Override` the `Command#execute()` method to","lastModifiedDate":"2021-11-04"},{"lineNumber":547,"author":{"gitId":"Amadeus-Winarto"},"content":"serve the aforementioned purpose. Internally, the `RedoCommand` makes use of the `RevertCommand`.","lastModifiedDate":"2021-11-04"},{"lineNumber":548,"author":{"gitId":"Amadeus-Winarto"},"content":"Hence `RedoCommand` serves as _syntactic sugar_ for the `RevertCommand`.","lastModifiedDate":"2021-11-04"},{"lineNumber":549,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":550,"author":{"gitId":"cheweejia"},"content":"### HelpCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":551,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":552,"author":{"gitId":"cheweejia"},"content":"This command serves to guide new users on using the application, which syntax to use and when to use them. Users can view a summary of all commands\u0027 syntax,","lastModifiedDate":"2021-11-03"},{"lineNumber":553,"author":{"gitId":"cheweejia"},"content":"or a specific guide on how to use a particular command.","lastModifiedDate":"2021-11-03"},{"lineNumber":554,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":555,"author":{"gitId":"cheweejia"},"content":"#### Implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":556,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":557,"author":{"gitId":"cheweejia"},"content":"`HelpCommand` will extend the `Command` class, and consequently `@Override` the `Command#execute()` method to serve its initial purposes.","lastModifiedDate":"2021-11-03"},{"lineNumber":558,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":559,"author":{"gitId":"cheweejia"},"content":"The mechanism of the command is done by retrieving a `HELP_MESSAGE` field in each of the other command classes (other than HelpCommand itself). This help command will","lastModifiedDate":"2021-11-03"},{"lineNumber":560,"author":{"gitId":"cheweejia"},"content":"be displayed to the user on a separate window later on.","lastModifiedDate":"2021-11-03"},{"lineNumber":561,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":562,"author":{"gitId":"Amadeus-Winarto"},"content":"![HelpCommandSequenceDiagram](images/dg/logic/commands/helpcommand/HelpCommandSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":563,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":564,"author":{"gitId":"cheweejia"},"content":"As seen from the diagram, the `HelpCommand` involves the use of conditional branches. If the optional condition is met, a `CommandException` is thrown to let","lastModifiedDate":"2021-11-03"},{"lineNumber":565,"author":{"gitId":"cheweejia"},"content":"users know that the input is invalid.","lastModifiedDate":"2021-11-03"},{"lineNumber":566,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":567,"author":{"gitId":"cheweejia"},"content":"Otherwise, the HelpCommand will use conditional branch to guide users to two different scenarios, as shown above. If it is a general help, a general help command","lastModifiedDate":"2021-11-03"},{"lineNumber":568,"author":{"gitId":"cheweejia"},"content":"will be created. If it is a specific help, then a specific help command associated with a command will be created.","lastModifiedDate":"2021-11-03"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":570,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"cheweejia"},"content":"## **Guides**","lastModifiedDate":"2021-10-21"},{"lineNumber":578,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":579,"author":{"gitId":"cheweejia"},"content":"The following links to guides on: Documentation, Logging, Testing, Configuration, Dev-Ops.","lastModifiedDate":"2021-10-21"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":582,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":583,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":584,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":585,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"cheweejia"},"content":"## Appendix: Requirements","lastModifiedDate":"2021-10-21"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":598,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"cheweejia"},"content":"* is an Avenger for CS1101S (a tutor in CS1101S is known as an Avenger)","lastModifiedDate":"2021-09-24"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"cheweejia"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-24"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"cheweejia"},"content":"Currently, Avengers are able to utilise Source Academy as a platform to aid in their students\u0027","lastModifiedDate":"2021-09-24"},{"lineNumber":604,"author":{"gitId":"cheweejia"},"content":"learning. However, there is no proper feature that allows Avengers to","lastModifiedDate":"2021-09-24"},{"lineNumber":605,"author":{"gitId":"cheweejia"},"content":"maintain a nominal roll for their class, or to track their students\u0027 performance.","lastModifiedDate":"2021-09-24"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":607,"author":{"gitId":"cheweejia"},"content":"Academy Directory is designed to fill that gap! It is specifically tailored to help Avengers","lastModifiedDate":"2021-09-24"},{"lineNumber":608,"author":{"gitId":"cheweejia"},"content":"better manage their students. The app provides ease of communication, and allows Avengers to","lastModifiedDate":"2021-09-24"},{"lineNumber":609,"author":{"gitId":"cheweejia"},"content":"track their students\u0027 performance, in terms of attendance, participation and assessments.","lastModifiedDate":"2021-09-24"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                | I want to â€¦â€‹                                                    | So that I canâ€¦â€‹                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"cheweejia"},"content":"| -------- | --------------------------| ------------------------------------------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-24"},{"lineNumber":617,"author":{"gitId":"cheweejia"},"content":"| `* * *`  | CS1101S Avenger           | add, delete and edit student\u0027s information                         | update my class list                                                   |","lastModifiedDate":"2021-09-24"},{"lineNumber":618,"author":{"gitId":"cheweejia"},"content":"| `* * *`  | CS1101S Avenger           | retrieve specific details of a student                             | view and analyse the data                                              |","lastModifiedDate":"2021-09-24"},{"lineNumber":619,"author":{"gitId":"cheweejia"},"content":"| `* * *`  | CS1101S Avenger           | keep track of my students\u0027 tutorial performance                    | accurately reward class participation marks                            |","lastModifiedDate":"2021-09-24"},{"lineNumber":620,"author":{"gitId":"cheweejia"},"content":"| `* * *`  | CS1101S Avenger           | record my students\u0027 assessment results                             | monitor my students\u0027 progress and provide timely assistance to them    |","lastModifiedDate":"2021-09-24"},{"lineNumber":621,"author":{"gitId":"cheweejia"},"content":"| `* * *`  | first time user           | access the relevant commands with a \"help\" command                 | learn how to use the app more easily                                   |","lastModifiedDate":"2021-09-24"},{"lineNumber":622,"author":{"gitId":"cheweejia"},"content":"| `* *`    | CS1101S Avenger           | view the average scores of my students for specific assessments    | focus on the aspects to improve on during tutorial                     |","lastModifiedDate":"2021-09-24"},{"lineNumber":623,"author":{"gitId":"phuccuongngo99"},"content":"| `* *`    | CS1101S Avenger           | visualize the class scores for specific assessments                | gauge how well my students are doing in assessments                    |","lastModifiedDate":"2021-10-22"},{"lineNumber":624,"author":{"gitId":"cheweejia"},"content":"| `* *`    | CS1101S Avenger           | add tags to certain students to take note of their weaker topics   | focus on topics that they are struggling with                          |","lastModifiedDate":"2021-09-24"},{"lineNumber":625,"author":{"gitId":"cheweejia"},"content":"| `* `     | experienced user          | make custom commands                                               | I can issue my commonly used commands faster                           |","lastModifiedDate":"2021-09-24"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"phuccuongngo99"},"content":"(For all use cases below, the **System** is the `AcademyDirectory` and the **Actor** is the `User`, unless specified otherwise)","lastModifiedDate":"2021-09-25"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"hmanhduc2k"},"content":"**Use case: Seeking help**","lastModifiedDate":"2021-09-27"},{"lineNumber":632,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":633,"author":{"gitId":"hmanhduc2k"},"content":"**MSS**","lastModifiedDate":"2021-09-27"},{"lineNumber":634,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":635,"author":{"gitId":"hmanhduc2k"},"content":"1. User requests for assistance","lastModifiedDate":"2021-09-27"},{"lineNumber":636,"author":{"gitId":"hmanhduc2k"},"content":"2. Academy Directory shows a list of all commands available","lastModifiedDate":"2021-09-27"},{"lineNumber":637,"author":{"gitId":"hmanhduc2k"},"content":"3. User requests for help in a specific command","lastModifiedDate":"2021-09-27"},{"lineNumber":638,"author":{"gitId":"hmanhduc2k"},"content":"4. Academy Directory shows the User Guide instructions for that command","lastModifiedDate":"2021-09-27"},{"lineNumber":639,"author":{"gitId":"hmanhduc2k"},"content":"   ","lastModifiedDate":"2021-09-27"},{"lineNumber":640,"author":{"gitId":"hmanhduc2k"},"content":"   Use case ends","lastModifiedDate":"2021-09-27"},{"lineNumber":641,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":642,"author":{"gitId":"hmanhduc2k"},"content":"**Extensions**","lastModifiedDate":"2021-09-27"},{"lineNumber":643,"author":{"gitId":"hmanhduc2k"},"content":"* 3a. User requests for the syntax of all commands","lastModifiedDate":"2021-09-27"},{"lineNumber":644,"author":{"gitId":"hmanhduc2k"},"content":"  *  3a1. Academy Directory shows a list of all the commands and their associated syntax.","lastModifiedDate":"2021-09-27"},{"lineNumber":645,"author":{"gitId":"hmanhduc2k"},"content":"    ","lastModifiedDate":"2021-09-27"},{"lineNumber":646,"author":{"gitId":"hmanhduc2k"},"content":"     Use case ends","lastModifiedDate":"2021-09-27"},{"lineNumber":647,"author":{"gitId":"hmanhduc2k"},"content":"* 3b. User requests for help in a command that does not exist","lastModifiedDate":"2021-09-27"},{"lineNumber":648,"author":{"gitId":"hmanhduc2k"},"content":"  * 3b1. Academy Directory shows an error message","lastModifiedDate":"2021-09-27"},{"lineNumber":649,"author":{"gitId":"hmanhduc2k"},"content":"    ","lastModifiedDate":"2021-09-27"},{"lineNumber":650,"author":{"gitId":"hmanhduc2k"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2021-09-27"},{"lineNumber":651,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":652,"author":{"gitId":"phuccuongngo99"},"content":"**Use case: Delete a student**","lastModifiedDate":"2021-09-25"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"phuccuongngo99"},"content":"1.  User requests to list students","lastModifiedDate":"2021-09-25"},{"lineNumber":657,"author":{"gitId":"phuccuongngo99"},"content":"2.  Academy Directory shows a list of students","lastModifiedDate":"2021-09-25"},{"lineNumber":658,"author":{"gitId":"phuccuongngo99"},"content":"3.  User requests to delete a specific student in the list","lastModifiedDate":"2021-09-25"},{"lineNumber":659,"author":{"gitId":"phuccuongngo99"},"content":"4.  Academy Directory deletes the student","lastModifiedDate":"2021-09-25"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"phuccuongngo99"},"content":"    * 3a1. Academy Directory shows an error message.","lastModifiedDate":"2021-09-25"},{"lineNumber":672,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":673,"author":{"gitId":"phuccuongngo99"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-25"},{"lineNumber":674,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":675,"author":{"gitId":"phuccuongngo99"},"content":"**Use case: Edit a student**","lastModifiedDate":"2021-09-25"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":677,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":679,"author":{"gitId":"phuccuongngo99"},"content":"1.  User requests to list students","lastModifiedDate":"2021-09-25"},{"lineNumber":680,"author":{"gitId":"phuccuongngo99"},"content":"2.  Academy Directory shows a list of students","lastModifiedDate":"2021-09-25"},{"lineNumber":681,"author":{"gitId":"phuccuongngo99"},"content":"3.  User requests to edit a specific student in the list","lastModifiedDate":"2021-09-25"},{"lineNumber":682,"author":{"gitId":"phuccuongngo99"},"content":"4.  Academy Directory edit the student","lastModifiedDate":"2021-09-25"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":686,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-25"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":688,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-25"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":690,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":692,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-25"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":694,"author":{"gitId":"phuccuongngo99"},"content":"    * 3a1. Academy Directory shows an error message.","lastModifiedDate":"2021-09-25"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"jianoway"},"content":"**Use case: Update Studio attendance of student**","lastModifiedDate":"2021-09-19"},{"lineNumber":699,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":700,"author":{"gitId":"jianoway"},"content":"**MSS**","lastModifiedDate":"2021-09-19"},{"lineNumber":701,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":702,"author":{"gitId":"jianoway"},"content":"1.  User requests to list students attending the relevant Studio session","lastModifiedDate":"2021-09-19"},{"lineNumber":703,"author":{"gitId":"jianoway"},"content":"2.  Academy Directory shows a list of students attending the relevant Studio session","lastModifiedDate":"2021-09-19"},{"lineNumber":704,"author":{"gitId":"jianoway"},"content":"3.  User requests to update the attendance of the student in the relevant Studio session","lastModifiedDate":"2021-09-19"},{"lineNumber":705,"author":{"gitId":"jianoway"},"content":"4.  Academy Directory updates the student\u0027s attendance for the relevant Studio session","lastModifiedDate":"2021-09-19"},{"lineNumber":706,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":707,"author":{"gitId":"jianoway"},"content":"    Use case ends.","lastModifiedDate":"2021-09-19"},{"lineNumber":708,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":709,"author":{"gitId":"jianoway"},"content":"**Extensions**","lastModifiedDate":"2021-09-19"},{"lineNumber":710,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":711,"author":{"gitId":"jianoway"},"content":"* 1a. The given index for the Studio group is invalid.","lastModifiedDate":"2021-09-19"},{"lineNumber":712,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":713,"author":{"gitId":"jianoway"},"content":"  * 1a1. Academy Directory shows an error message.","lastModifiedDate":"2021-09-19"},{"lineNumber":714,"author":{"gitId":"jianoway"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-19"},{"lineNumber":715,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":716,"author":{"gitId":"jianoway"},"content":"* 1b. The given index for the Studio group\u0027s Studio session is invalid.","lastModifiedDate":"2021-09-19"},{"lineNumber":717,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":718,"author":{"gitId":"jianoway"},"content":"  * 1b1. Academy Directory shows an error message.","lastModifiedDate":"2021-09-19"},{"lineNumber":719,"author":{"gitId":"jianoway"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-19"},{"lineNumber":720,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":721,"author":{"gitId":"jianoway"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-19"},{"lineNumber":722,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":723,"author":{"gitId":"jianoway"},"content":"  Use case ends.","lastModifiedDate":"2021-09-19"},{"lineNumber":724,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":725,"author":{"gitId":"jianoway"},"content":"* 3a. The given keyword to search for the student is gives no result.","lastModifiedDate":"2021-09-19"},{"lineNumber":726,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":727,"author":{"gitId":"jianoway"},"content":"    * 3a1. Academy Directory shows an error message.","lastModifiedDate":"2021-09-19"},{"lineNumber":728,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":729,"author":{"gitId":"jianoway"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-19"},{"lineNumber":730,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":731,"author":{"gitId":"jianoway"},"content":"**Use case: Update Studio participation of student**","lastModifiedDate":"2021-09-19"},{"lineNumber":732,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":733,"author":{"gitId":"jianoway"},"content":"**MSS**","lastModifiedDate":"2021-09-19"},{"lineNumber":734,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":735,"author":{"gitId":"jianoway"},"content":"1. User requests to list students attending the relevant Studio session","lastModifiedDate":"2021-09-19"},{"lineNumber":736,"author":{"gitId":"jianoway"},"content":"2. Academy Directory shows a list of students attending the relevant Studio session","lastModifiedDate":"2021-09-19"},{"lineNumber":737,"author":{"gitId":"jianoway"},"content":"3. User requests to update the Studio participation of the student in the relevant Studio session with the appropriate Studio participation score","lastModifiedDate":"2021-09-19"},{"lineNumber":738,"author":{"gitId":"jianoway"},"content":"4. Academy Directory updates the student\u0027s Studio participation for the relevant Studio session","lastModifiedDate":"2021-09-19"},{"lineNumber":739,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":740,"author":{"gitId":"jianoway"},"content":"    Use case ends.","lastModifiedDate":"2021-09-19"},{"lineNumber":741,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":742,"author":{"gitId":"jianoway"},"content":"**Extensions**","lastModifiedDate":"2021-09-19"},{"lineNumber":743,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":744,"author":{"gitId":"jianoway"},"content":"* 1a. The given index for the Studio group is invalid.","lastModifiedDate":"2021-09-19"},{"lineNumber":745,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":746,"author":{"gitId":"jianoway"},"content":"    * 1a1. Academy Directory shows an error message.","lastModifiedDate":"2021-09-19"},{"lineNumber":747,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":748,"author":{"gitId":"jianoway"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-19"},{"lineNumber":749,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":750,"author":{"gitId":"jianoway"},"content":"* 1b. The given index for the Studio group\u0027s Studio session is invalid.","lastModifiedDate":"2021-09-19"},{"lineNumber":751,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":752,"author":{"gitId":"jianoway"},"content":"    * 1b1. Academy Directory shows an error message.","lastModifiedDate":"2021-09-19"},{"lineNumber":753,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":754,"author":{"gitId":"jianoway"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-19"},{"lineNumber":755,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":756,"author":{"gitId":"jianoway"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-19"},{"lineNumber":757,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":758,"author":{"gitId":"jianoway"},"content":"  Use case ends.","lastModifiedDate":"2021-09-19"},{"lineNumber":759,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":760,"author":{"gitId":"jianoway"},"content":"* 3a. The given keyword to search for the student is gives no result.","lastModifiedDate":"2021-09-19"},{"lineNumber":761,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":762,"author":{"gitId":"jianoway"},"content":"    * 3a1. Academy Directory shows an error message.","lastModifiedDate":"2021-09-19"},{"lineNumber":763,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":764,"author":{"gitId":"jianoway"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-19"},{"lineNumber":765,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":766,"author":{"gitId":"jianoway"},"content":"* 3b. The given Studio participation score is invalid (non-integer).","lastModifiedDate":"2021-09-19"},{"lineNumber":767,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":768,"author":{"gitId":"jianoway"},"content":"    * 3b1. Academy Directory shows an error message.","lastModifiedDate":"2021-09-19"},{"lineNumber":769,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":770,"author":{"gitId":"jianoway"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-19"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"cheweejia"},"content":"**Use case: Add student\u0027s grade for an assessment**","lastModifiedDate":"2021-09-24"},{"lineNumber":773,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":774,"author":{"gitId":"cheweejia"},"content":"**MSS**","lastModifiedDate":"2021-09-24"},{"lineNumber":775,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":776,"author":{"gitId":"cheweejia"},"content":"1. User enters a command to add the grade for an assessment to a student.","lastModifiedDate":"2021-09-24"},{"lineNumber":777,"author":{"gitId":"cheweejia"},"content":"2. Academy Directory checks for existing instance of the assessment.","lastModifiedDate":"2021-09-24"},{"lineNumber":778,"author":{"gitId":"cheweejia"},"content":"3. Academy Directory records the input grade for the assessment.","lastModifiedDate":"2021-09-24"},{"lineNumber":779,"author":{"gitId":"cheweejia"},"content":"   ","lastModifiedDate":"2021-09-24"},{"lineNumber":780,"author":{"gitId":"cheweejia"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":781,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":782,"author":{"gitId":"cheweejia"},"content":"**Extensions**","lastModifiedDate":"2021-09-24"},{"lineNumber":783,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":784,"author":{"gitId":"cheweejia"},"content":"* 1a. The student\u0027s name does not match any of the names in the directory.","lastModifiedDate":"2021-09-24"},{"lineNumber":785,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":786,"author":{"gitId":"cheweejia"},"content":"    * 1a1. Academy Directory shows an error message.","lastModifiedDate":"2021-09-24"},{"lineNumber":787,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":788,"author":{"gitId":"cheweejia"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-24"},{"lineNumber":789,"author":{"gitId":"cheweejia"},"content":"    ","lastModifiedDate":"2021-09-24"},{"lineNumber":790,"author":{"gitId":"cheweejia"},"content":"* 1b. The input grade is not a positive integer.","lastModifiedDate":"2021-09-24"},{"lineNumber":791,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":792,"author":{"gitId":"cheweejia"},"content":"    * 1b1. Academy Directory requests for user to enter a positive integer.","lastModifiedDate":"2021-09-24"},{"lineNumber":793,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":794,"author":{"gitId":"cheweejia"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-24"},{"lineNumber":795,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":796,"author":{"gitId":"cheweejia"},"content":"* 2a. The assessment already exists.","lastModifiedDate":"2021-09-24"},{"lineNumber":797,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":798,"author":{"gitId":"cheweejia"},"content":"    * 2a1. Academy Directory edits the grade for the existing assessment.","lastModifiedDate":"2021-09-24"},{"lineNumber":799,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":800,"author":{"gitId":"cheweejia"},"content":"      Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":801,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":802,"author":{"gitId":"cheweejia"},"content":"* 2b. The assessment is new.","lastModifiedDate":"2021-09-24"},{"lineNumber":803,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":804,"author":{"gitId":"cheweejia"},"content":"    * 2b1. Academy Directory adds a new assessment with the input grade.","lastModifiedDate":"2021-09-24"},{"lineNumber":805,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":806,"author":{"gitId":"cheweejia"},"content":"      Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":807,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":808,"author":{"gitId":"cheweejia"},"content":"**Use case: Show grades for an assessment**","lastModifiedDate":"2021-10-21"},{"lineNumber":809,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":810,"author":{"gitId":"cheweejia"},"content":"**MSS**","lastModifiedDate":"2021-09-24"},{"lineNumber":811,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":812,"author":{"gitId":"cheweejia"},"content":"1. User enters a command to display the grades for an assessment.","lastModifiedDate":"2021-09-24"},{"lineNumber":813,"author":{"gitId":"cheweejia"},"content":"2. Academy Directory parses through the students to obtain the grades.","lastModifiedDate":"2021-09-24"},{"lineNumber":814,"author":{"gitId":"cheweejia"},"content":"3. Academy Directory displays a list of students with the grades.","lastModifiedDate":"2021-09-24"},{"lineNumber":815,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":816,"author":{"gitId":"cheweejia"},"content":"   Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":817,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":818,"author":{"gitId":"cheweejia"},"content":"**Extensions**","lastModifiedDate":"2021-09-24"},{"lineNumber":819,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":820,"author":{"gitId":"cheweejia"},"content":"* 1a. The assessment does not exist.","lastModifiedDate":"2021-09-24"},{"lineNumber":821,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":822,"author":{"gitId":"cheweejia"},"content":"    * 1a1. Academy Directory shows an error message.","lastModifiedDate":"2021-09-24"},{"lineNumber":823,"author":{"gitId":"cheweejia"},"content":"    * 1a2. Academy Directory requests for the user to try another assessment.","lastModifiedDate":"2021-09-24"},{"lineNumber":824,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":825,"author":{"gitId":"cheweejia"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-24"},{"lineNumber":826,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":827,"author":{"gitId":"Amadeus-Winarto"},"content":"**Use case: Retrieve information**","lastModifiedDate":"2021-10-01"},{"lineNumber":828,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":829,"author":{"gitId":"Amadeus-Winarto"},"content":"**MSS**","lastModifiedDate":"2021-10-01"},{"lineNumber":830,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":831,"author":{"gitId":"Amadeus-Winarto"},"content":"1. User enters a command to retrieve information","lastModifiedDate":"2021-10-01"},{"lineNumber":832,"author":{"gitId":"Amadeus-Winarto"},"content":"2. Academy Directory obtain the queried information from the students.","lastModifiedDate":"2021-10-01"},{"lineNumber":833,"author":{"gitId":"Amadeus-Winarto"},"content":"3. Academy Directory displays the list of information queried.","lastModifiedDate":"2021-10-01"},{"lineNumber":834,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":835,"author":{"gitId":"Amadeus-Winarto"},"content":"   Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":836,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":837,"author":{"gitId":"Amadeus-Winarto"},"content":"**Extensions**","lastModifiedDate":"2021-10-01"},{"lineNumber":838,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":839,"author":{"gitId":"Amadeus-Winarto"},"content":"* 1a. User specifies exact student name.","lastModifiedDate":"2021-10-01"},{"lineNumber":840,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":841,"author":{"gitId":"Amadeus-Winarto"},"content":"    * 1a1. Academy Directory displays the queried information associated with the queried student.","lastModifiedDate":"2021-10-01"},{"lineNumber":842,"author":{"gitId":"Amadeus-Winarto"},"content":"  ","lastModifiedDate":"2021-10-01"},{"lineNumber":843,"author":{"gitId":"Amadeus-Winarto"},"content":"         Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":844,"author":{"gitId":"Amadeus-Winarto"},"content":"  ","lastModifiedDate":"2021-10-01"},{"lineNumber":845,"author":{"gitId":"Amadeus-Winarto"},"content":"* 1a. User\u0027s queried information is not supported ","lastModifiedDate":"2021-10-01"},{"lineNumber":846,"author":{"gitId":"Amadeus-Winarto"},"content":"    * 1a1. Academy Directory shows an error message.","lastModifiedDate":"2021-10-01"},{"lineNumber":847,"author":{"gitId":"Amadeus-Winarto"},"content":"    * 1a2. Academy Directory requests for the user to try another information.","lastModifiedDate":"2021-10-01"},{"lineNumber":848,"author":{"gitId":"Amadeus-Winarto"},"content":"  ","lastModifiedDate":"2021-10-01"},{"lineNumber":849,"author":{"gitId":"Amadeus-Winarto"},"content":"        Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":851,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"phuccuongngo99"},"content":"2. Should be able to hold up to _3000_ student without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-25"},{"lineNumber":855,"author":{"gitId":"hmanhduc2k"},"content":"3. A user with above-average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-27"},{"lineNumber":856,"author":{"gitId":"phuccuongngo99"},"content":"4. Should work in computer with `32-bit` or `64-bit` processor.","lastModifiedDate":"2021-09-25"},{"lineNumber":857,"author":{"gitId":"phuccuongngo99"},"content":"5. Users data should be in human editable file and stored locally.","lastModifiedDate":"2021-11-04"},{"lineNumber":858,"author":{"gitId":"phuccuongngo99"},"content":"6. Should run on user computer with double-click - no installer or additional libraries required.","lastModifiedDate":"2021-11-04"},{"lineNumber":859,"author":{"gitId":"phuccuongngo99"},"content":"7. Should not require internet connection for any of its feature.","lastModifiedDate":"2021-11-04"},{"lineNumber":860,"author":{"gitId":"phuccuongngo99"},"content":"8. All user and app data should be stored locally, not through an online database solution.","lastModifiedDate":"2021-11-04"},{"lineNumber":861,"author":{"gitId":"phuccuongngo99"},"content":"9. Logs and previous commits stored should be based on the _Principle of Least-Privilege_.","lastModifiedDate":"2021-11-04"},{"lineNumber":862,"author":{"gitId":"phuccuongngo99"},"content":"10. Logs and previous commits should be recoverable even when `AcademyDirectory` itself is deleted.","lastModifiedDate":"2021-11-04"},{"lineNumber":863,"author":{"gitId":"phuccuongngo99"},"content":"11. Logs and previous commits should be transferable and functional after transfer onto other computers.","lastModifiedDate":"2021-11-04"},{"lineNumber":864,"author":{"gitId":"phuccuongngo99"},"content":"12. Users should be able to undo up to at least _100_ commands. ","lastModifiedDate":"2021-11-04"},{"lineNumber":865,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":869,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":871,"author":{"gitId":"Amadeus-Winarto"},"content":"* **Studios**: A tutorial held in CS1101S and is essential in aiding the students to improve their grasp on the concepts taught during the lecture.","lastModifiedDate":"2021-10-01"},{"lineNumber":872,"author":{"gitId":"Amadeus-Winarto"},"content":"* **Avenger**: a CS1101S tutor, responsible for building on concepts and recording attendance and grades.","lastModifiedDate":"2021-10-01"},{"lineNumber":873,"author":{"gitId":"jianoway"},"content":"* **Principle of Least-Privilege**: Minimum levels of access â€“ or permissions â€“ needed to perform function.","lastModifiedDate":"2021-11-03"},{"lineNumber":874,"author":{"gitId":"jianoway"},"content":"* **Version Controllable**: Refers to a `Command` that logs a `Commit` object upon execution with the logging relying on the `Optional` field in the `CommandResult` returned from `Command#execute()`.","lastModifiedDate":"2021-11-04"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":876,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":882,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"jianoway"},"content":"### Feature Testing","lastModifiedDate":"2021-11-05"},{"lineNumber":888,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":889,"author":{"gitId":"jianoway"},"content":"#### Launch and shutdown","lastModifiedDate":"2021-11-05"},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":891,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"cheweejia"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-10-21"},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"jianoway"},"content":"#### Add Student","lastModifiedDate":"2021-11-05"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":908,"author":{"gitId":"jianoway"},"content":"1. Adding a student while all students are being shown","lastModifiedDate":"2021-11-05"},{"lineNumber":909,"author":{"gitId":"jianoway"},"content":"2. Adding a student while only one student is being shown, with there being more than one student in the list","lastModifiedDate":"2021-11-05"},{"lineNumber":910,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":911,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":912,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":913,"author":{"gitId":"jianoway"},"content":"#### Delete Student","lastModifiedDate":"2021-11-05"},{"lineNumber":914,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"phuccuongngo99"},"content":"1. Deleting a student while all students are being shown","lastModifiedDate":"2021-10-05"},{"lineNumber":916,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":917,"author":{"gitId":"phuccuongngo99"},"content":"   1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":918,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"phuccuongngo99"},"content":"      Expected: No student is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-05"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"cheweejia"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-10-21"},{"lineNumber":929,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":930,"author":{"gitId":"jianoway"},"content":"#### Tag Student","lastModifiedDate":"2021-11-05"},{"lineNumber":931,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":932,"author":{"gitId":"jianoway"},"content":"1. Tag a student while all students are being shown","lastModifiedDate":"2021-11-05"},{"lineNumber":933,"author":{"gitId":"jianoway"},"content":"2. Tag a student while only one student is being shown, with there being more than one student in the list ","lastModifiedDate":"2021-11-05"},{"lineNumber":934,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":935,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":936,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":937,"author":{"gitId":"jianoway"},"content":"#### Get Personal Detail","lastModifiedDate":"2021-11-05"},{"lineNumber":938,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":939,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":940,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":941,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":942,"author":{"gitId":"jianoway"},"content":"#### Edit Personal Detail","lastModifiedDate":"2021-11-05"},{"lineNumber":943,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":944,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":945,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":946,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":947,"author":{"gitId":"jianoway"},"content":"#### Add Grade","lastModifiedDate":"2021-11-05"},{"lineNumber":948,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":949,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":950,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":951,"author":{"gitId":"jianoway"},"content":"#### Edit Attendance","lastModifiedDate":"2021-11-05"},{"lineNumber":952,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":953,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":954,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":955,"author":{"gitId":"jianoway"},"content":"#### Edit Participation","lastModifiedDate":"2021-11-05"},{"lineNumber":956,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":957,"author":{"gitId":"jianoway"},"content":"1_{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":958,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":959,"author":{"gitId":"jianoway"},"content":"#### View student information","lastModifiedDate":"2021-11-05"},{"lineNumber":960,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":961,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":962,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":963,"author":{"gitId":"jianoway"},"content":"#### Show Grade","lastModifiedDate":"2021-11-05"},{"lineNumber":964,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":965,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":966,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":967,"author":{"gitId":"jianoway"},"content":"#### Visualize all Grades","lastModifiedDate":"2021-11-05"},{"lineNumber":968,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":969,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":970,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":971,"author":{"gitId":"jianoway"},"content":"#### Filter Academy Directory","lastModifiedDate":"2021-11-05"},{"lineNumber":972,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":973,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":974,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":975,"author":{"gitId":"jianoway"},"content":"#### Sort Student List","lastModifiedDate":"2021-11-05"},{"lineNumber":976,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":977,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":978,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":979,"author":{"gitId":"jianoway"},"content":"#### List All Students","lastModifiedDate":"2021-11-05"},{"lineNumber":980,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":981,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":982,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":983,"author":{"gitId":"jianoway"},"content":"#### Clear Student List","lastModifiedDate":"2021-11-05"},{"lineNumber":984,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":985,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":986,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":987,"author":{"gitId":"jianoway"},"content":"#### Undo Changes","lastModifiedDate":"2021-11-05"},{"lineNumber":988,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":989,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":990,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":991,"author":{"gitId":"jianoway"},"content":"#### Redo Changes","lastModifiedDate":"2021-11-05"},{"lineNumber":992,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":993,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":994,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":995,"author":{"gitId":"jianoway"},"content":"#### Help","lastModifiedDate":"2021-11-05"},{"lineNumber":996,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":997,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":998,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":999,"author":{"gitId":"jianoway"},"content":"#### Saving data","lastModifiedDate":"2021-11-05"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1005,"author":{"gitId":"jianoway"},"content":"2. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":1006,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":1007,"author":{"gitId":"jianoway"},"content":"### UI Testing","lastModifiedDate":"2021-11-05"},{"lineNumber":1008,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":1009,"author":{"gitId":"jianoway"},"content":"#### Buttons","lastModifiedDate":"2021-11-05"},{"lineNumber":1010,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":1011,"author":{"gitId":"jianoway"},"content":"1. _{ more test cases to come â€¦â€‹ }_","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"phuccuongngo99":34,"Amadeus-Winarto":199,"-":288,"cheweejia":194,"hmanhduc2k":25,"jianoway":271}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"   1. Run the `seedu.academydirectory.Main` and try a few commands.","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBookâ€™s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":54,"jianoway":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"   e.g. `seedu.academydirectory.commons.StringUtilTest`","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"   e.g. `seedu.academydirectory.storage.StorageManagerTest`","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"   e.g. `seedu.academydirectory.logic.LogicManagerTest`","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"-":33,"jianoway":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"## Table of Contents","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"* [Overview](#overview)","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"* [Information About this User Guide](#information-about-this-user-guide)","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"  * [Purpose of User Guide](#purpose)","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"  * [Target Audience of User Guide](#target-audience)","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"* [Features](#features)","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"  * [Manage Students\u0027 Personal Details](#managing-students-personal-details)","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"    * [Add Student](#adding-a-student-add)","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"    * [Delete Student](#deleting-a-student-delete)","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"    * [Tag Student](#tagging-a-student--tag)","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [Get Personal Detail](#getting-personal-detail-of-students-get)","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [Edit Personal Detail](#editing-a-students-detail--edit)","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"  * [Track Students\u0027 Grades, Studio Attendance, and Participation](#tracking-students-grades-studio-attendance-and-participation)","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [Add Grade](#adding-grades-for-an-assessment--grade)","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [Edit Attendance](#editing-a-students-studio-attendance-attendance)","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [Edit Participation](#editing-a-students-studio-participation-participation)","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"  * [Visualizing Tools](#visualization-tools)","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"    * [View student information](#viewing-all-related-information-of-a-student-view)","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"    * [Show Grade](#displaying-the-grades-for-an-assessment--show)","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [Visualize all Grades](#visualizing-assessments-grades-of-the-entire-class-visualize)","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [Filter Academy Directory](#filtering-academy-directory-by-name-or-tag-filter)","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [Sort Student List](#sorting-student-list--sort)","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"  * [Others](#others)","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [List All Students](#listing-all-students--list)","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [Clear Student List](#clearing-all-students--clear)","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [Undo Changes](#undo-changes-to-academy-directory-undo)","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [Redo Changes](#redo-changes-to-academy-directory-redo)","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"    * [Help](#seeking-help--help)","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"      * [General Help](#viewing-general-help)","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"      * [Help with Specific Command](#viewing-specific-help)","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"    * [Exit Academy Directory](#exiting-the-program--exit)","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [(For Advanced Users): View Commit History](#for-advanced-users-viewing-commit-history-history)","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"    * [(For Advanced Users): Revert Commit](#for-advanced-users-reverting-commit-revert)","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"* [FAQ](#faq)","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"* [Summary](#summary)","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"  * [Command Summary](#command-summary)","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"  * [Prefix Summary](#prefix-summary)","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"* [Glossary](#glossary)","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"* [Links](#links)","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"  * [Academy Directory Resources](#academy-directory-resources)","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"  * [Other Resources](#other-sources)","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"## Overview","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"Are you a CS1101S Avenger? Are you tired of dealing with","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"so many platforms like Luminus, Source Academy, etc.? And none of these platforms are even remotely useful for you? ","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"Well, we have good news. Academy Directory is just the application for you!","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"Academy Directory (AD) is a **desktop application for CS1101S tutors to manage their students.** Its main features are as follows: ","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"- [Manage studentsâ€™ personal details](#managing-students-personal-details)","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"- [Track students\u0027 grades, Studio attendance, and participation](#tracking-students-grades-studio-attendance-and-participation)","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"- [Visualize data in Academy Directory](#visualizing-data-in-academy-directory) ","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"Academy Directory is written in _Java_ and thus can be run on all major operating systems!","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"It is optimized for use via a Command Line Interface (CLI), while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"Academy Directory is developed as an evolution of the Address Book 3 application, primarily for usage in teaching CS1101S - Programming Methodology I - at the National University of Singapore.","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"## Information about this User Guide","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"### Purpose","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"This user guide aims to: ","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"- Provide first-time users with information on how to use Academy Directory","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"- Show [details of all commands](#features) should users face any issues using any","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"cheweejia"},"content":"of the command in Academy Directory","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"- Answer some of the [frequently asked questions](#faq)","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"- Provide a [summary of all commands](#command-summary) supported by Academy Directory","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"### Target Audience","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"The current version of Academy Directory is specifically designed for ","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"**CS1101S Avengers**. Therefore, the main Target Audience of this user guide are CS1101S Avengers.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"As such, the following assumptions are made regarding the Target Audience:","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"- Can type fast and are comfortable using a CLI.","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"- Is comfortable downloading and installing software such as Java 11.","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"onto their system.","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"- Is familiar with the common terms relating to Computer Science.","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"hmanhduc2k"},"content":"- Is familiar with CS1101S module structure and teaching pedagogy.","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"While some technical background is assumed, we also provide the definitions for","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"cheweejia"},"content":"certain technical terms commonly used in this user guide [here](#glossary).","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"cheweejia"},"content":"## Quick Start","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"This section provides instructions to begin using Academy Directory.","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"jianoway"},"content":"1. Ensure you have Java `11` or above installed in your Computer. Academy Directory has been tested on Java `11` and running on other versions might result in **bugs**.","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"jianoway"},"content":"2. Download the latest release [here](https://github.com/AY2122S1-CS2103T-T15-3/tp/releases) to the folder you want to use as the _home folder_ for your Academy Directory.","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"jianoway"},"content":"3. From the CLI, navigate to the folder used as *home folder* for Academy Directory and run `java -jar academydirectory.jar`. Ensure that the `.jar` file is named `academydirectory.jar`, otherwise the command will not work. ","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"hmanhduc2k"},"content":"A GUI similar to the below image should appear in a few seconds. Note how the app already contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"4. Type a command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"hmanhduc2k"},"content":"   * **`list`** : Lists all contacts. For new users, the list will contain some sample data which users can delete.","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"hmanhduc2k"},"content":"   * **`visualize`** : Visualize grades of students. For new users, an empty whisker box plot diagram will be shown. Otherwise, the above image will be shown.","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"hmanhduc2k"},"content":"5. You may refer to the [Features](#features) below for the set of features supported by Academy Directory and the details for each command.","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"Notes:","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"- While it is possible to open `academydirectory.jar` by double-clicking it, this may cause Academy Directory","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"Amadeus-Winarto"},"content":"related files to be saved to an indeterminate location on the computer. As such, this method is _not recommended_, especially","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"Amadeus-Winarto"},"content":"for beginners. ","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"hmanhduc2k"},"content":"- The `clear` command can be used to remove the sample data in Academy Directory.","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"hmanhduc2k"},"content":"- Changes to Academy Directory are automatically saved into the database.","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"Amadeus-Winarto"},"content":"This section shows all the commands supported by Academy Directory.","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"Amadeus-Winarto"},"content":"The commands are categorized based on the main features of Academy Directory: ","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"Amadeus-Winarto"},"content":"- Manage studentsâ€™ personal details","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"Amadeus-Winarto"},"content":"- Track students\u0027 grades, Studio attendance, and participation","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"Amadeus-Winarto"},"content":"- Visualize data in Academy Directory","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"Amadeus-Winarto"},"content":"- Others","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"cheweejia"},"content":"For better reading experience, please be familiar with the command format (shown below) as well as [some terms used](#glossary).","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"Amadeus-Winarto"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/streams` or as `n/John Doe`.","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"Amadeus-Winarto"},"content":"  e.g. `[t/TAG]â€¦â€‹` can be used as `Â ` (i.e. 0 times), `t/streams`, `t/envmodel t/recursion` etc.","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"Amadeus-Winarto"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"jianoway"},"content":"***","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"Amadeus-Winarto"},"content":"### Managing students\u0027 personal details","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Adding a student: `add`","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"Amadeus-Winarto"},"content":"Adds a student to Academy Directory","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"Amadeus-Winarto"},"content":"Format: `add n/NAME e/EMAIL te/TELE_HANDLE [p/PHONE_NUMBER]`","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"phuccuongngo99"},"content":"A student can have no phone number due to privacy concern.","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"phuccuongngo99"},"content":"* `PHONE_NUMBER` is an optional field. The default value is `NA` which stands for \"Not Applicable\".","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"phuccuongngo99"},"content":"* If Avengers do not wish to enter a student\u0027s phone number, ","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"Amadeus-Winarto"},"content":"  * `p/` prefix can be omitted from the command.","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"jianoway"},"content":"  * Otherwise, Avengers can supply the value `NA` to `p/` prefix. Note that it must be `NA` not `N.A` or `na`","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"jianoway"},"content":"* If newly inputted students have `NAME` matching exactly (case-sensitive) with an already existing entry, the program will output a warning message and show the existing entry.\\","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"jianoway"},"content":"`This student already exists in the Academy Directory.`","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"Amadeus-Winarto"},"content":"* `add n/Aaron Tan te/@sausage e/e0123456@u.nus.edu p/90312311`","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"Amadeus-Winarto"},"content":"* `add n/Charles Ng te/@charles e/e0123434@u.nus.edu p/NA`","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"Amadeus-Winarto"},"content":"* `add n/Betsy Lim te/@unislave e/e0123456@u.nus.edu`","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Filtering Academy Directory by name or tag: `filter`","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"Amadeus-Winarto"},"content":"Finds all students whose names or tags contain any of the specified keywords (case-insensitive) and","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"Amadeus-Winarto"},"content":"displays them as a list with index numbers.","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"Amadeus-Winarto"},"content":"Format: `filter KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"Amadeus-Winarto"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"Amadeus-Winarto"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"Amadeus-Winarto"},"content":"* Only full words will be matched e.g. `stream` will not match `streams`","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"Amadeus-Winarto"},"content":"* Students matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"Amadeus-Winarto"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"Amadeus-Winarto"},"content":"* `filter John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"Amadeus-Winarto"},"content":"* `filter alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"Amadeus-Winarto"},"content":"* `filter stream` returns all students who are tagged with `stream`","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Deleting a student: `delete`","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"Amadeus-Winarto"},"content":"Deletes a student from Academy Directory by their index.","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"Amadeus-Winarto"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"Amadeus-Winarto"},"content":"* `INDEX` refers to the index number shown in the displayed student list.","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"Amadeus-Winarto"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"Amadeus-Winarto"},"content":"* Deletes the student at the specified `INDEX`","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"Amadeus-Winarto"},"content":"* `delete 2` deletes the 2nd student in the currently displayed list.","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Tagging a student : `tag`","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"Amadeus-Winarto"},"content":"Tags a student.","lastModifiedDate":"2021-10-28"},{"lineNumber":213,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"cheweejia"},"content":"Format: `tag INDEX t/TAG [t/TAG]...`","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"Amadeus-Winarto"},"content":"* `INDEX` refers to the index number shown in the displayed student list.","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"Amadeus-Winarto"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2021-10-28"},{"lineNumber":218,"author":{"gitId":"Amadeus-Winarto"},"content":"* Assigns a `Tag` to the student at the specified `INDEX`.","lastModifiedDate":"2021-10-28"},{"lineNumber":219,"author":{"gitId":"cheweejia"},"content":"* Entering the tag command with a single empty tag `t/` will remove all tags assigned to the student.","lastModifiedDate":"2021-11-02"},{"lineNumber":220,"author":{"gitId":"cheweejia"},"content":"* Tags names should be alphanumeric and consist of only one word.","lastModifiedDate":"2021-11-02"},{"lineNumber":221,"author":{"gitId":"cheweejia"},"content":"* For multiple tag entries, none of the tags should be empty.","lastModifiedDate":"2021-11-02"},{"lineNumber":222,"author":{"gitId":"cheweejia"},"content":"* All existing tags will be replaced by the new tags.","lastModifiedDate":"2021-11-02"},{"lineNumber":223,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"cheweejia"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"cheweejia"},"content":"* `tag 1 t/` removes all tags from the student specified at index 1.","lastModifiedDate":"2021-11-02"},{"lineNumber":226,"author":{"gitId":"Amadeus-Winarto"},"content":"* `tag 1 t/mission` sets `mission` tag to the student specified at index 1.","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"Amadeus-Winarto"},"content":"* `tag 2 t/streams t/envmodel` sets `streams` and `envmodel` tags to the student specified at index 2.","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Getting personal detail of students\u0027: `get`","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"Amadeus-Winarto"},"content":"Gets personal detail of student/s. Personal detail refers to:","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"Amadeus-Winarto"},"content":"- Telegram Handle","lastModifiedDate":"2021-10-01"},{"lineNumber":233,"author":{"gitId":"Amadeus-Winarto"},"content":"- Email address","lastModifiedDate":"2021-10-01"},{"lineNumber":234,"author":{"gitId":"Amadeus-Winarto"},"content":"- Telephone number, if any","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":236,"author":{"gitId":"Amadeus-Winarto"},"content":"Format: `get [p/] [e/] [te/] [n/NAME]`","lastModifiedDate":"2021-10-26"},{"lineNumber":237,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":238,"author":{"gitId":"Amadeus-Winarto"},"content":"* At least one of the supported prefix i.e. `p/`, `e/` or `te/` must be passed in.","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"Amadeus-Winarto"},"content":"* If `NAME` is provided, only personal detail of the student/s whose name contain the given `NAME` will be shown.","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"Amadeus-Winarto"},"content":"The behavior here is similar to the [filter command](#filtering-academy-directory-by-name-or-tag-filter)","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"Amadeus-Winarto"},"content":"* If `NAME` is not provided, the personal detail of all students in AcademyDirectory will be shown","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"Amadeus-Winarto"},"content":"* Multiple prefixes can be supplied at the same time, and personal detail corresponding to all the given prefixes will be shown","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"Amadeus-Winarto"},"content":"* The order in which personal details will be shown is as follows, regardless of the order of the","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"Amadeus-Winarto"},"content":"prefixes passed to `get` command:","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"Amadeus-Winarto"},"content":"  * Phone Number (p/)","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"Amadeus-Winarto"},"content":"  * Email (e/)","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"Amadeus-Winarto"},"content":"  * Telegram Handle (te/)","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":249,"author":{"gitId":"Amadeus-Winarto"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"Amadeus-Winarto"},"content":"* `get p/` shows the phone number of all students in Academy Directory","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"Amadeus-Winarto"},"content":"* `get p/ e/ te/` shows the phone number, email, and telegram handle of all students in Academy Directory","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"Amadeus-Winarto"},"content":"* `get p/ n/alex` shows the phone number of all students in Academy Directory whose name has `alex`","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"Amadeus-Winarto"},"content":"* `get p/ e/ te/ n/alex` show the phone number, email, and telegram handle of all students in Academy Directory","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"Amadeus-Winarto"},"content":"whose name contains `alex`","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":256,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Editing a student\u0027s detail : `edit`","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":258,"author":{"gitId":"jianoway"},"content":"Edits a student\u0027s personal details such as their `NAME`, `PHONE`, `TELEGRAM` and `EMAIL`.","lastModifiedDate":"2021-11-03"},{"lineNumber":259,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"Amadeus-Winarto"},"content":"Format: `edit INDEX [n/NAME] [e/EMAIL] [te/TELE_HANDLE] [p/PHONE_NUMBER]`","lastModifiedDate":"2021-10-26"},{"lineNumber":261,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"Amadeus-Winarto"},"content":"* Edits the student at the specified `INDEX`. The index refers to the index number shown in the displayed student list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2021-10-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"jianoway"},"content":"* If edited `NAME` exactly matches (case-sensitive) with an already existing entry that is not the entry being edited, the program will output a warning message and show the existing entry.\\","lastModifiedDate":"2021-11-03"},{"lineNumber":266,"author":{"gitId":"jianoway"},"content":"`This student already exists in the Academy Directory.`","lastModifiedDate":"2021-11-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"jianoway"},"content":"* `edit 1 p/91234567 e/e0425205@u.nus.edu`  Edits the phone number and email address of the 1st student to be `91234567` and `e0425205@u.nus.edu` respectively.","lastModifiedDate":"2021-11-03"},{"lineNumber":270,"author":{"gitId":"jianoway"},"content":"* `edit 2 n/Aaron Tan`  Edits the name of the 2nd student to be `Aaron Tan`.","lastModifiedDate":"2021-11-03"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"jianoway"},"content":"***","lastModifiedDate":"2021-11-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":274,"author":{"gitId":"Amadeus-Winarto"},"content":"### Tracking students\u0027 grades, Studio attendance, and participation","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Adding grades for an assessment:  `grade`","lastModifiedDate":"2021-10-28"},{"lineNumber":276,"author":{"gitId":"Amadeus-Winarto"},"content":"Adds a studentâ€™s grade for a particular assessment.","lastModifiedDate":"2021-10-28"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"Amadeus-Winarto"},"content":"Format: `grade INDEX as/ASSESSMENT g/GRADE`","lastModifiedDate":"2021-10-28"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"Amadeus-Winarto"},"content":"* Record the studentâ€™s `GRADE` for the `ASSESSMENT`.","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"cheweejia"},"content":"* The input `ASSESSMENT` must be one of the following: RA1, MIDTERM, RA2, PE, FINAL.","lastModifiedDate":"2021-11-01"},{"lineNumber":282,"author":{"gitId":"cheweejia"},"content":"* The input `GRADE` must be a non-negative integer from 0 to 100 inclusive.","lastModifiedDate":"2021-11-01"},{"lineNumber":283,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"Amadeus-Winarto"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"Amadeus-Winarto"},"content":"* `grade 1 as/RA1 g/15`","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":287,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Editing a student\u0027s Studio attendance: `attendance`","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"Amadeus-Winarto"},"content":"Edits the attendance status of their students.","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":290,"author":{"gitId":"jianoway"},"content":"Format: `attendance INDEX ses/STUDIO_SESSION att/ATTENDANCE_STATUS`","lastModifiedDate":"2021-10-11"},{"lineNumber":291,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":292,"author":{"gitId":"jianoway"},"content":"* Edits the attendance of a student or multiple students based on their `INDEX`.","lastModifiedDate":"2021-10-11"},{"lineNumber":293,"author":{"gitId":"jianoway"},"content":"* Modifies the student(s) at the specified `INDEX`. The index refers to the index number shown in the displayed student list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2021-10-11"},{"lineNumber":294,"author":{"gitId":"jianoway"},"content":"* Multiple `INDEX` can be parsed in at once as long as they are all valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":295,"author":{"gitId":"jianoway"},"content":"* The `STUDIO_SESSION` field is a positive integer from 1 to 12 inclusive which refers to the Studio Session to be modified.","lastModifiedDate":"2021-10-11"},{"lineNumber":296,"author":{"gitId":"jianoway"},"content":"* The `ATTENDANCE_STATUS` field can only be a 1 or 0 to indicate whether the student attended the session or not where 1 marks a student as having attended while 0 marks a student as unattended.","lastModifiedDate":"2021-10-11"},{"lineNumber":297,"author":{"gitId":"jianoway"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-09-19"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-19"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":301,"author":{"gitId":"Amadeus-Winarto"},"content":"* `attendance 1 ses/1 att/1` Marks the student with index number `1` as present for studio session 1","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"Amadeus-Winarto"},"content":"* `attendance 1, 2, 3 ses/12 att/0` Marks students with index numbers `1`, `2`, and `3` as absent for studio session 12","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"Amadeus-Winarto"},"content":"* `attendance 1, 2, 3 ses/7 att/1` Marks students with index numbers `1`, `2`, and `3` as present for studio session 7","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":305,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Editing a studentâ€™s Studio participation: `participation`","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":307,"author":{"gitId":"Amadeus-Winarto"},"content":"Tracks the participation of their students during the relevant studios. We will be keeping track of Studio participation with a counter system which starts at 0 by default.","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":309,"author":{"gitId":"jianoway"},"content":"Format: `participation INDEX ses/STUDIO_SESSION add/PARTICIPATION_TO_ADD`","lastModifiedDate":"2021-10-26"},{"lineNumber":310,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":311,"author":{"gitId":"jianoway"},"content":"* Edits the Studio participation of a student or multiple students based on their `INDEX`.","lastModifiedDate":"2021-10-11"},{"lineNumber":312,"author":{"gitId":"jianoway"},"content":"* Modifies the student(s) at the specified `INDEX`. The index refers to the index number shown in the displayed student list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2021-10-11"},{"lineNumber":313,"author":{"gitId":"jianoway"},"content":"* The `STUDIO_SESSION` field is a positive integer from 1 to 12 inclusive which refers to the Studio Session to be modified.","lastModifiedDate":"2021-10-11"},{"lineNumber":314,"author":{"gitId":"jianoway"},"content":"* The `PARTICIPATION_TO_ADD` field is an integer from -500 to 500 inclusive which indicates the Participation score of the student.","lastModifiedDate":"2021-10-11"},{"lineNumber":315,"author":{"gitId":"jianoway"},"content":"* `PARTICIPATION_TO_ADD` will be added to the student\u0027s current Participation score","lastModifiedDate":"2021-10-11"},{"lineNumber":316,"author":{"gitId":"jianoway"},"content":"* A studentâ€™s Studio Participation score cannot be reduced below 0.","lastModifiedDate":"2021-10-11"},{"lineNumber":317,"author":{"gitId":"jianoway"},"content":"* If a student\u0027s `Attendance` is `false` and the Participation score to be added is greater than 0, the student will also be marked as having attended the Studio.","lastModifiedDate":"2021-10-11"},{"lineNumber":318,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":319,"author":{"gitId":"jianoway"},"content":"Examples:","lastModifiedDate":"2021-09-19"},{"lineNumber":320,"author":{"gitId":"Amadeus-Winarto"},"content":"* `participation 4 ses/9 add/1` Adds `1` to the Participation score of student with index number `4` for Studio session `9`","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"jianoway"},"content":"* `participation 1, 2, 3 ses/12 add/500`","lastModifiedDate":"2021-10-26"},{"lineNumber":322,"author":{"gitId":"jianoway"},"content":"* `participation 4, 6 ses/2 add/-300`","lastModifiedDate":"2021-10-26"},{"lineNumber":323,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":324,"author":{"gitId":"jianoway"},"content":"***","lastModifiedDate":"2021-11-04"},{"lineNumber":325,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":326,"author":{"gitId":"jianoway"},"content":"### Visualization Tools","lastModifiedDate":"2021-11-04"},{"lineNumber":327,"author":{"gitId":"hmanhduc2k"},"content":"#### Viewing all related information of a student: `view`","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"hmanhduc2k"},"content":"Displays all information relating to a student, both personal and academic information. Information shown include the student\u0027s name, tag, participation data, examination score, and contact information.","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":330,"author":{"gitId":"hmanhduc2k"},"content":"Format: `view INDEX`","lastModifiedDate":"2021-10-28"},{"lineNumber":331,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":332,"author":{"gitId":"hmanhduc2k"},"content":"* View students\u0027 information, both personal and academic related, based on their `INDEX` number on the list.","lastModifiedDate":"2021-10-28"},{"lineNumber":333,"author":{"gitId":"hmanhduc2k"},"content":"* Information shown for the student will be in a drop-down menu listing participation and grades.","lastModifiedDate":"2021-10-28"},{"lineNumber":334,"author":{"gitId":"hmanhduc2k"},"content":"* Contact information like phone number, email address, and Telegram handle are also displayed.","lastModifiedDate":"2021-10-28"},{"lineNumber":335,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":336,"author":{"gitId":"hmanhduc2k"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":337,"author":{"gitId":"hmanhduc2k"},"content":"* `view 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":338,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":339,"author":{"gitId":"hmanhduc2k"},"content":"**Include an interactive GUI version where Avengers can click on the list to view student information as well.**","lastModifiedDate":"2021-10-28"},{"lineNumber":340,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":341,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Displaying the grades for an assessment:  `show`","lastModifiedDate":"2021-10-28"},{"lineNumber":342,"author":{"gitId":"Amadeus-Winarto"},"content":"Displays the grades and the average score of all the students for a particular assessment.","lastModifiedDate":"2021-10-28"},{"lineNumber":343,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":344,"author":{"gitId":"cheweejia"},"content":"Format: `show ASSESSMENT`","lastModifiedDate":"2021-10-13"},{"lineNumber":345,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":346,"author":{"gitId":"cheweejia"},"content":"* Display the list of grades that the students achieved for a particular `ASSESSMENT`, as well","lastModifiedDate":"2021-10-21"},{"lineNumber":347,"author":{"gitId":"cheweejia"},"content":"as the average score.","lastModifiedDate":"2021-10-13"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":349,"author":{"gitId":"cheweejia"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":350,"author":{"gitId":"cheweejia"},"content":"* `show RA1`","lastModifiedDate":"2021-10-13"},{"lineNumber":351,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":352,"author":{"gitId":"hmanhduc2k"},"content":"**Include an interactive GUI version where Avengers can click on the menu to show students\u0027 grades as well.**","lastModifiedDate":"2021-10-28"},{"lineNumber":353,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":354,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Visualizing assessments\u0027 grades of the entire class: `visualize`","lastModifiedDate":"2021-10-28"},{"lineNumber":355,"author":{"gitId":"Amadeus-Winarto"},"content":"Plots the grades and the average score of all the students for all assessments.","lastModifiedDate":"2021-10-28"},{"lineNumber":356,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":357,"author":{"gitId":"Amadeus-Winarto"},"content":"Format: `visualize`","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":359,"author":{"gitId":"Amadeus-Winarto"},"content":"* Visualize assessment grades of the class with Box \u0026 Whisker plot","lastModifiedDate":"2021-10-28"},{"lineNumber":360,"author":{"gitId":"Amadeus-Winarto"},"content":"* Any grade of any student that is not yet entered will be counted as `0`","lastModifiedDate":"2021-10-28"},{"lineNumber":361,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":362,"author":{"gitId":"hmanhduc2k"},"content":"**Include an interactive GUI version where Avengers can click on the list to view statistics as well.**","lastModifiedDate":"2021-10-28"},{"lineNumber":363,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":364,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Sorting student list : `sort`","lastModifiedDate":"2021-10-28"},{"lineNumber":365,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":366,"author":{"gitId":"Amadeus-Winarto"},"content":"Sorts the list of students in Academy Directory.","lastModifiedDate":"2021-10-28"},{"lineNumber":367,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":368,"author":{"gitId":"Amadeus-Winarto"},"content":"Format: `sort attr/ATTRIBUTE ord/ORDER`","lastModifiedDate":"2021-10-26"},{"lineNumber":369,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":370,"author":{"gitId":"Amadeus-Winarto"},"content":"* The sort can be done on some `ATTRIBUTE`  in either ascending order or descending order.","lastModifiedDate":"2021-10-28"},{"lineNumber":371,"author":{"gitId":"Amadeus-Winarto"},"content":"* `ATTRIBUTE` can only be `name`, `participation`, `RA1`, `Midterm`, `RA2`, `Final` and `Average`.","lastModifiedDate":"2021-10-28"},{"lineNumber":372,"author":{"gitId":"Amadeus-Winarto"},"content":"* `ATTRIBUTE` is case-insensitive. e.g. `name` and `NAME` will both sort the list by `Name`.","lastModifiedDate":"2021-10-28"},{"lineNumber":373,"author":{"gitId":"Amadeus-Winarto"},"content":"* `ORDER` can only be `asc` and `desc` which indicate either ascending or descending sort.","lastModifiedDate":"2021-10-28"},{"lineNumber":374,"author":{"gitId":"Amadeus-Winarto"},"content":"* `ORDER` is case-insensitive. e.g. `ASC` and `Asc` will both sort the list in ascending order","lastModifiedDate":"2021-10-28"},{"lineNumber":375,"author":{"gitId":"Amadeus-Winarto"},"content":"* Both `ATTRIBUTE` and `ORDER` are required for the sorting to work.","lastModifiedDate":"2021-10-28"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":378,"author":{"gitId":"Amadeus-Winarto"},"content":"* `sort attr/RA1 ord/desc` sorts the list in descending order based on their `RA1` grades.","lastModifiedDate":"2021-10-26"},{"lineNumber":379,"author":{"gitId":"Amadeus-Winarto"},"content":"* `sort attr/participation ord/asc` sorts the list in ascending order based on their participation score.","lastModifiedDate":"2021-10-26"},{"lineNumber":380,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":381,"author":{"gitId":"jianoway"},"content":"***","lastModifiedDate":"2021-11-04"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":383,"author":{"gitId":"Amadeus-Winarto"},"content":"### Others","lastModifiedDate":"2021-10-28"},{"lineNumber":384,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Listing all students : `list`","lastModifiedDate":"2021-10-28"},{"lineNumber":385,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":386,"author":{"gitId":"Amadeus-Winarto"},"content":"Shows a list of all students in Academy Directory.","lastModifiedDate":"2021-10-28"},{"lineNumber":387,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":388,"author":{"gitId":"Amadeus-Winarto"},"content":"Format: `list`","lastModifiedDate":"2021-10-28"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":390,"author":{"gitId":"Amadeus-Winarto"},"content":"* This command is very useful to escape from the focused list obtain after running certain commands","lastModifiedDate":"2021-10-28"},{"lineNumber":391,"author":{"gitId":"Amadeus-Winarto"},"content":"  such as `filter`","lastModifiedDate":"2021-10-28"},{"lineNumber":392,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":393,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Clearing all students : `clear`","lastModifiedDate":"2021-10-28"},{"lineNumber":394,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":395,"author":{"gitId":"jianoway"},"content":"Clears all students from Academy Directory. This will result in an empty Academy Directory","lastModifiedDate":"2021-11-04"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":397,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-10-28"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":399,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Undo changes to Academy Directory: `undo`","lastModifiedDate":"2021-10-28"},{"lineNumber":400,"author":{"gitId":"Amadeus-Winarto"},"content":"Undo changes made to Academy Directory data","lastModifiedDate":"2021-11-04"},{"lineNumber":401,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":402,"author":{"gitId":"Amadeus-Winarto"},"content":"Format: `undo`","lastModifiedDate":"2021-10-28"},{"lineNumber":403,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":404,"author":{"gitId":"Amadeus-Winarto"},"content":"* `undo` only reverts changes made ","lastModifiedDate":"2021-10-28"},{"lineNumber":405,"author":{"gitId":"Amadeus-Winarto"},"content":"* `undo` will display an error message if there are no changes to be undone","lastModifiedDate":"2021-10-28"},{"lineNumber":406,"author":{"gitId":"Amadeus-Winarto"},"content":"* To see the list of commands that can be undone using `undo`, read [here](#appendix-a-version-controlled-commands)","lastModifiedDate":"2021-11-04"},{"lineNumber":407,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":408,"author":{"gitId":"hmanhduc2k"},"content":"**Include an interactive GUI version where Avengers can click on the menu to undo the most recent changes as well.**","lastModifiedDate":"2021-10-28"},{"lineNumber":409,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":410,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Redo changes to Academy Directory: `redo`","lastModifiedDate":"2021-10-28"},{"lineNumber":411,"author":{"gitId":"Amadeus-Winarto"},"content":"Redo changes made to Academy Directory data","lastModifiedDate":"2021-11-04"},{"lineNumber":412,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":413,"author":{"gitId":"Amadeus-Winarto"},"content":"Format: `redo`","lastModifiedDate":"2021-10-28"},{"lineNumber":414,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":415,"author":{"gitId":"Amadeus-Winarto"},"content":"* `redo` only reverts changes made","lastModifiedDate":"2021-10-28"},{"lineNumber":416,"author":{"gitId":"Amadeus-Winarto"},"content":"* `redo` will display an error message if there are no changes to be redone","lastModifiedDate":"2021-10-28"},{"lineNumber":417,"author":{"gitId":"Amadeus-Winarto"},"content":"* To see the list of commands that can be redone using `redo`, read [here](#appendix-a-version-controlled-commands)","lastModifiedDate":"2021-11-04"},{"lineNumber":418,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":419,"author":{"gitId":"hmanhduc2k"},"content":"**Include an interactive GUI version where Avengers can click on the menu to redo the most recent changes as well.**","lastModifiedDate":"2021-10-28"},{"lineNumber":420,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":421,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Seeking help : `help`","lastModifiedDate":"2021-10-28"},{"lineNumber":422,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":423,"author":{"gitId":"Amadeus-Winarto"},"content":"![help message](images/ug/helpMessage.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":424,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":425,"author":{"gitId":"Amadeus-Winarto"},"content":"Provides in-depth assistance using AD with a `help` command, either generally or specifically.","lastModifiedDate":"2021-10-28"},{"lineNumber":426,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":427,"author":{"gitId":"Amadeus-Winarto"},"content":"##### Viewing general help","lastModifiedDate":"2021-10-28"},{"lineNumber":428,"author":{"gitId":"hmanhduc2k"},"content":"Format: `help`","lastModifiedDate":"2021-10-21"},{"lineNumber":429,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":430,"author":{"gitId":"cheweejia"},"content":"* The singular command `help` displays a menu of all commands available to use, as a list, and how","lastModifiedDate":"2021-10-21"},{"lineNumber":431,"author":{"gitId":"cheweejia"},"content":"  to navigate each command, alongside the syntax for each command.","lastModifiedDate":"2021-10-21"},{"lineNumber":432,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":433,"author":{"gitId":"Amadeus-Winarto"},"content":"##### Viewing specific help","lastModifiedDate":"2021-10-28"},{"lineNumber":434,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":435,"author":{"gitId":"cheweejia"},"content":"Format: `help COMMAND_NAME`","lastModifiedDate":"2021-10-21"},{"lineNumber":436,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":437,"author":{"gitId":"Amadeus-Winarto"},"content":"* Displays all information related to the command, which includes","lastModifiedDate":"2021-10-28"},{"lineNumber":438,"author":{"gitId":"cheweejia"},"content":"    * What the command is about.","lastModifiedDate":"2021-10-21"},{"lineNumber":439,"author":{"gitId":"cheweejia"},"content":"    * Why the command is needed.","lastModifiedDate":"2021-10-21"},{"lineNumber":440,"author":{"gitId":"cheweejia"},"content":"    * What the syntax for the command is.","lastModifiedDate":"2021-10-21"},{"lineNumber":441,"author":{"gitId":"cheweejia"},"content":"    * Example of usage and expected results.","lastModifiedDate":"2021-10-21"},{"lineNumber":442,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":443,"author":{"gitId":"cheweejia"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":444,"author":{"gitId":"Amadeus-Winarto"},"content":"* `help`","lastModifiedDate":"2021-10-28"},{"lineNumber":445,"author":{"gitId":"cheweejia"},"content":"* `help add`: Displays the exact same content as what is shown on this User Guide for the `add` command","lastModifiedDate":"2021-10-21"},{"lineNumber":446,"author":{"gitId":"cheweejia"},"content":"  or [here](https://github.com/nus-cs2103-AY2122S1/tp/blob/master/docs/UserGuide.md#adding-a-student-add).","lastModifiedDate":"2021-10-21"},{"lineNumber":447,"author":{"gitId":"cheweejia"},"content":"  ","lastModifiedDate":"2021-10-21"},{"lineNumber":448,"author":{"gitId":"hmanhduc2k"},"content":"**Include an interactive GUI version where Avengers can click on the menu to view help. Only available for general help**","lastModifiedDate":"2021-10-28"},{"lineNumber":449,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":450,"author":{"gitId":"Amadeus-Winarto"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2021-10-28"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":452,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-10-21"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":454,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-10-21"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":456,"author":{"gitId":"hmanhduc2k"},"content":"Alternatively, users can exit by clicking the `X` button on the top right corner of the application window.","lastModifiedDate":"2021-10-28"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":458,"author":{"gitId":"jianoway"},"content":"***","lastModifiedDate":"2021-11-04"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":460,"author":{"gitId":"Amadeus-Winarto"},"content":"#### [For Advanced Users] Viewing Commit History: `history`","lastModifiedDate":"2021-10-28"},{"lineNumber":461,"author":{"gitId":"Amadeus-Winarto"},"content":"Shows local commit history.","lastModifiedDate":"2021-10-28"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":463,"author":{"gitId":"Amadeus-Winarto"},"content":"Format: `history`","lastModifiedDate":"2021-10-26"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":465,"author":{"gitId":"Amadeus-Winarto"},"content":"- Only commands that result in a state change in Academy Directory will be committed. Such commands include","lastModifiedDate":"2021-10-26"},{"lineNumber":466,"author":{"gitId":"Amadeus-Winarto"},"content":"  `add`, `edit`, `delete`, `clear`, and more. For a full list, refer to the [appendix](#appendix-a-version-controlled-commands).","lastModifiedDate":"2021-11-04"},{"lineNumber":467,"author":{"gitId":"Amadeus-Winarto"},"content":"- Commits are sorted based on time, with the most recent commit shown at the top and the initial commit shown","lastModifiedDate":"2021-10-26"},{"lineNumber":468,"author":{"gitId":"Amadeus-Winarto"},"content":"  at the bottom","lastModifiedDate":"2021-10-26"},{"lineNumber":469,"author":{"gitId":"Amadeus-Winarto"},"content":"- The commit corresponding to current Academy Directory state is labelled with \"(HEAD)\"","lastModifiedDate":"2021-10-26"},{"lineNumber":470,"author":{"gitId":"Amadeus-Winarto"},"content":"- The commit corresponding to current branch is labelled with \"(CURRENT)\"","lastModifiedDate":"2021-11-04"},{"lineNumber":471,"author":{"gitId":"Amadeus-Winarto"},"content":"- The commit corresponding to old branch is labelled with \"(OLD)\"","lastModifiedDate":"2021-10-28"},{"lineNumber":472,"author":{"gitId":"Amadeus-Winarto"},"content":"- Old branch is shown at the left, current branch at the right","lastModifiedDate":"2021-10-26"},{"lineNumber":473,"author":{"gitId":"Amadeus-Winarto"},"content":"- The corresponding commit hash is the five character string displayed","lastModifiedDate":"2021-10-28"},{"lineNumber":474,"author":{"gitId":"Amadeus-Winarto"},"content":"- Note that current implementation of `history` command can only show 2 branches: \"OLD\" and ","lastModifiedDate":"2021-11-04"},{"lineNumber":475,"author":{"gitId":"Amadeus-Winarto"},"content":"\"CURRENT\". If there are already two branches and a third branch is going to be made, then the ","lastModifiedDate":"2021-11-04"},{"lineNumber":476,"author":{"gitId":"Amadeus-Winarto"},"content":"oldest branch will not be visible.","lastModifiedDate":"2021-11-04"},{"lineNumber":477,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":478,"author":{"gitId":"hmanhduc2k"},"content":"**Include an interactive GUI version where Avengers can click on the menu to see usage history as well.**","lastModifiedDate":"2021-10-28"},{"lineNumber":479,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":480,"author":{"gitId":"Amadeus-Winarto"},"content":"#### [For Advanced Users] Reverting Commit: `revert`","lastModifiedDate":"2021-10-28"},{"lineNumber":481,"author":{"gitId":"Amadeus-Winarto"},"content":"Reverts state of Academy Directory to a previous commit","lastModifiedDate":"2021-10-28"},{"lineNumber":482,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":483,"author":{"gitId":"Amadeus-Winarto"},"content":"Format: `revert HASH`","lastModifiedDate":"2021-10-26"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":485,"author":{"gitId":"Amadeus-Winarto"},"content":"- `HASH` refers to the commit hash of the commit to be reverted to","lastModifiedDate":"2021-10-28"},{"lineNumber":486,"author":{"gitId":"Amadeus-Winarto"},"content":"- `HASH` can be obtained using the `history` command","lastModifiedDate":"2021-10-28"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":488,"author":{"gitId":"Amadeus-Winarto"},"content":"Example:","lastModifiedDate":"2021-10-26"},{"lineNumber":489,"author":{"gitId":"Amadeus-Winarto"},"content":"* `revert 6fdfx` reverts state of Academy Directory to the commit with hash starting with `6fdfx`","lastModifiedDate":"2021-10-28"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":491,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":493,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-10-28"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":495,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":496,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":497,"author":{"gitId":"Amadeus-Winarto"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2021-10-28"},{"lineNumber":498,"author":{"gitId":"Amadeus-Winarto"},"content":"the data of your previous AcademyDirectory home folder. Overwrite the version control folder it creates with the version","lastModifiedDate":"2021-10-28"},{"lineNumber":499,"author":{"gitId":"Amadeus-Winarto"},"content":"control folder of your previous AcademyDirectory to retain commit history.","lastModifiedDate":"2021-10-28"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":501,"author":{"gitId":"Amadeus-Winarto"},"content":"**Q**: How do I save my data?\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":502,"author":{"gitId":"Amadeus-Winarto"},"content":"**A**: Academy Directory data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-28"},{"lineNumber":503,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":504,"author":{"gitId":"Amadeus-Winarto"},"content":"**Q**: Can I edit the data file?\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":505,"author":{"gitId":"Amadeus-Winarto"},"content":"**A**: Academy Directory data are saved as a JSON file `[JAR file location]/data/academydirectory.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-28"},{"lineNumber":506,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":507,"author":{"gitId":"cheweejia"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-21"},{"lineNumber":508,"author":{"gitId":"cheweejia"},"content":"If your changes to the data file makes its format invalid, Academy Directory will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-21"},{"lineNumber":509,"author":{"gitId":"cheweejia"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":510,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":511,"author":{"gitId":"Amadeus-Winarto"},"content":"**Q**: How do I commit changes made to Academy Directory?\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":512,"author":{"gitId":"Amadeus-Winarto"},"content":"**A**: Academy Directory implements an internal version control system (VCS) to keep track of state changes. Unlike some VCS, however, the internal VCS in Academy Directory will automatically stage and commit changes made","lastModifiedDate":"2021-10-28"},{"lineNumber":513,"author":{"gitId":"Amadeus-Winarto"},"content":"to Academy Directory, including commit message. Only commands that change the Academy Directory data will be staged and committed.","lastModifiedDate":"2021-10-28"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"Amadeus-Winarto"},"content":"**Q**: Can I edit the version control files?\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":516,"author":{"gitId":"Amadeus-Winarto"},"content":"**A**: Version control related files are saved as text files at `[JAR file location]/data/vc/`. Advanced users are welcome to","lastModifiedDate":"2021-10-28"},{"lineNumber":517,"author":{"gitId":"Amadeus-Winarto"},"content":"look at the files in this folder.","lastModifiedDate":"2021-10-28"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"hmanhduc2k"},"content":"**Q**: When I run Academy Directory via Command Prompt, a warning message appears that there are unsupported JavaFX configurations. Do I need to be concerned about this?\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":520,"author":{"gitId":"hmanhduc2k"},"content":"**A**: **No, both usability and functionality wise.** Academy Directory was not developed as a modular-based application, however, some features of our app do implement external modules not declared, and thus is the warning message. The problem has been addressed while our application was developed, but we have decided to left the warning as it is as addressing the warning is outside the scope of CS2103T and our project requirement itself.","lastModifiedDate":"2021-10-30"},{"lineNumber":521,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":522,"author":{"gitId":"Amadeus-Winarto"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-28"},{"lineNumber":523,"author":{"gitId":"Amadeus-Winarto"},"content":"Invalid changes to any of the version control files may result in undefined behavior as this is not an intended use case. Proceed at your own risk.","lastModifiedDate":"2021-10-28"},{"lineNumber":524,"author":{"gitId":"Amadeus-Winarto"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":525,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":526,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"Amadeus-Winarto"},"content":"## Summary","lastModifiedDate":"2021-10-28"},{"lineNumber":528,"author":{"gitId":"Amadeus-Winarto"},"content":"This section provides a summary of commands and prefixes in Academy Directory","lastModifiedDate":"2021-10-28"},{"lineNumber":529,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":530,"author":{"gitId":"Amadeus-Winarto"},"content":"### Command Summary","lastModifiedDate":"2021-10-28"},{"lineNumber":531,"author":{"gitId":"Amadeus-Winarto"},"content":"This subsection provides a summary for all the commands used in Academy Directory","lastModifiedDate":"2021-10-28"},{"lineNumber":532,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":533,"author":{"gitId":"Amadeus-Winarto"},"content":"Action | Format | Examples","lastModifiedDate":"2021-10-28"},{"lineNumber":534,"author":{"gitId":"Amadeus-Winarto"},"content":"--------|--------|----------","lastModifiedDate":"2021-10-28"},{"lineNumber":535,"author":{"gitId":"cheweejia"},"content":"[**Add Student**](#adding-a-student-add) | `add n/NAME e/EMAIL te/TELE_HANDLE [p/PHONE_NUMBER] [t/TAG]` | `add n/James Ho te/@TeleHandle p/22224444 e/jamesho@example.com t/Streams`","lastModifiedDate":"2021-10-28"},{"lineNumber":536,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Delete Student**](#deleting-a-student-delete) | `delete INDEX` | `delete 3`","lastModifiedDate":"2021-10-28"},{"lineNumber":537,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Tag Student**](#tagging-a-student--tag)| `tag INDEX t/TAG [t/TAG]...` | `tag 1 t/mission t/streams`","lastModifiedDate":"2021-10-28"},{"lineNumber":538,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Get Personal Detail**](#getting-personal-detail-of-students-get) | `get [p/] [e/] [te/] [n/NAME]` | `get p/ e/ te/ n/Alex Yeoh`","lastModifiedDate":"2021-10-28"},{"lineNumber":539,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Edit Personal Detail**](#editing-a-students-detail--edit) | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [te/TELE_HANDLE]` | `edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-10-28"},{"lineNumber":540,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Add Grade**](#adding-grades-for-an-assessment--grade) | `grade INDEX as/ASSESSMENT g/GRADE` | `grade INDEX as/RA1 g/15`","lastModifiedDate":"2021-10-28"},{"lineNumber":541,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Edit Attendance**](#editing-a-students-studio-attendance-attendance) | `attendance INDEX ses/STUDIO_SESSION att/ATTENDANCE_STATUS` | `attendance 1, 2 ses/1 att/1`","lastModifiedDate":"2021-10-28"},{"lineNumber":542,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Edit Participation**](#editing-a-students-studio-participation-participation) | `participation INDEX ses/STUDIO_SESSION add/PARTICIPATION_TO_ADD` | `participation 1 ses/12 att/0`","lastModifiedDate":"2021-10-28"},{"lineNumber":543,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Show Grades**](#displaying-the-grades-for-an-assessment--show) | `show ASSESSMENT` | `show RA1`","lastModifiedDate":"2021-10-28"},{"lineNumber":544,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Visualize all grades**](#visualizing-assessments-grades-of-the-entire-class-visualize) | `visualize` | `visualize`","lastModifiedDate":"2021-10-28"},{"lineNumber":545,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Filter Academy Directory**](#filtering-academy-directory-by-name-or-tag-filter) | `filter KEYWORD [MORE_KEYWORDS]` | `filter James Jake`","lastModifiedDate":"2021-10-28"},{"lineNumber":546,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Sort Student List**](#sorting-student-list--sort) | `sort attr/ATTRIBUTE ord/ORDER` | `sort attr/average ord/asc`","lastModifiedDate":"2021-10-28"},{"lineNumber":547,"author":{"gitId":"Amadeus-Winarto"},"content":"[**List All Students**](#listing-all-students--list) | `list` | `list`","lastModifiedDate":"2021-10-28"},{"lineNumber":548,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Clear Student List**](#clearing-all-students--clear) | `clear` | `clear`","lastModifiedDate":"2021-10-28"},{"lineNumber":549,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Undo**](#undo-changes-to-academy-directory-undo) | `undo` | `undo`","lastModifiedDate":"2021-10-28"},{"lineNumber":550,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Redo**](#redo-changes-to-academy-directory-redo) | `redo` | `redo`","lastModifiedDate":"2021-10-28"},{"lineNumber":551,"author":{"gitId":"hmanhduc2k"},"content":"[**Help**](#seeking-help--help) | `help [COMMAND_NAME]` | `help add`","lastModifiedDate":"2021-10-28"},{"lineNumber":552,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Exit**](#exiting-the-program--exit) | `exit` | `exit`","lastModifiedDate":"2021-10-28"},{"lineNumber":553,"author":{"gitId":"Amadeus-Winarto"},"content":"[**View Commit History**](#for-advanced-users-viewing-commit-history-history) | `history` | `history`","lastModifiedDate":"2021-10-28"},{"lineNumber":554,"author":{"gitId":"Amadeus-Winarto"},"content":"[**Revert Commit**](#for-advanced-users-reverting-commit-revert) | `revert HASH` | `revert df7x3`","lastModifiedDate":"2021-10-28"},{"lineNumber":555,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":556,"author":{"gitId":"Amadeus-Winarto"},"content":"### Prefix Summary","lastModifiedDate":"2021-10-28"},{"lineNumber":557,"author":{"gitId":"Amadeus-Winarto"},"content":"This subsection provides a summary for all the fields and their prefixes ","lastModifiedDate":"2021-10-28"},{"lineNumber":558,"author":{"gitId":"Amadeus-Winarto"},"content":"used in Academy Directory. Note that not all fields have a prefix; such fields","lastModifiedDate":"2021-10-28"},{"lineNumber":559,"author":{"gitId":"Amadeus-Winarto"},"content":"will have `N.A.` be written in their `Prefix` column","lastModifiedDate":"2021-10-28"},{"lineNumber":560,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":561,"author":{"gitId":"Amadeus-Winarto"},"content":"Field | Prefix","lastModifiedDate":"2021-10-28"},{"lineNumber":562,"author":{"gitId":"Amadeus-Winarto"},"content":"------|-------","lastModifiedDate":"2021-10-28"},{"lineNumber":563,"author":{"gitId":"Amadeus-Winarto"},"content":"INDEX | **N.A.**","lastModifiedDate":"2021-10-28"},{"lineNumber":564,"author":{"gitId":"Amadeus-Winarto"},"content":"NAME | **n/**","lastModifiedDate":"2021-10-28"},{"lineNumber":565,"author":{"gitId":"Amadeus-Winarto"},"content":"EMAIL | **e/**","lastModifiedDate":"2021-10-28"},{"lineNumber":566,"author":{"gitId":"Amadeus-Winarto"},"content":"TELE_HANDLE | **te/**","lastModifiedDate":"2021-10-28"},{"lineNumber":567,"author":{"gitId":"Amadeus-Winarto"},"content":"PHONE_NUMBER | **p/**","lastModifiedDate":"2021-10-28"},{"lineNumber":568,"author":{"gitId":"Amadeus-Winarto"},"content":"TAG | **t/**","lastModifiedDate":"2021-10-28"},{"lineNumber":569,"author":{"gitId":"Amadeus-Winarto"},"content":"STUDIO_SESSION   | **ses/**","lastModifiedDate":"2021-10-28"},{"lineNumber":570,"author":{"gitId":"Amadeus-Winarto"},"content":"ATTENDANCE_STATUS | **att/**","lastModifiedDate":"2021-10-28"},{"lineNumber":571,"author":{"gitId":"Amadeus-Winarto"},"content":"PARTICIPATION_TO_ADD | **add/**","lastModifiedDate":"2021-10-28"},{"lineNumber":572,"author":{"gitId":"Amadeus-Winarto"},"content":"ASSESSMENT | **as/**","lastModifiedDate":"2021-10-28"},{"lineNumber":573,"author":{"gitId":"Amadeus-Winarto"},"content":"GRADE | **g/**","lastModifiedDate":"2021-10-28"},{"lineNumber":574,"author":{"gitId":"Amadeus-Winarto"},"content":"ATTRIBUTE | **attr/**","lastModifiedDate":"2021-10-28"},{"lineNumber":575,"author":{"gitId":"Amadeus-Winarto"},"content":"ORDER | **ord/**","lastModifiedDate":"2021-10-28"},{"lineNumber":576,"author":{"gitId":"Amadeus-Winarto"},"content":"HASH| **N.A**","lastModifiedDate":"2021-10-28"},{"lineNumber":577,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":578,"author":{"gitId":"Amadeus-Winarto"},"content":"## Glossary","lastModifiedDate":"2021-10-28"},{"lineNumber":579,"author":{"gitId":"Amadeus-Winarto"},"content":"This section explains the commonly used terms in this user guide","lastModifiedDate":"2021-10-28"},{"lineNumber":580,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":581,"author":{"gitId":"Amadeus-Winarto"},"content":"Term | Definition | Comments","lastModifiedDate":"2021-10-28"},{"lineNumber":582,"author":{"gitId":"Amadeus-Winarto"},"content":"-----| ----------- | ---------- ","lastModifiedDate":"2021-10-28"},{"lineNumber":583,"author":{"gitId":"cheweejia"},"content":"CS1101S | An introductory Computer Science module for year 1 students in the the National University of Singapore. |","lastModifiedDate":"2021-10-28"},{"lineNumber":584,"author":{"gitId":"Amadeus-Winarto"},"content":"Studios | Tutorials held in CS1101S and are essential in aiding the students to improve their grasp on the concepts taught during the lecture. | ","lastModifiedDate":"2021-10-28"},{"lineNumber":585,"author":{"gitId":"Amadeus-Winarto"},"content":"Avengers | A special term to call a CS1101S tutor. An avenger organizes a Studio session to improve on CS1101S concepts taught in lecture, recording attendance and grades.","lastModifiedDate":"2021-10-28"},{"lineNumber":586,"author":{"gitId":"cheweejia"},"content":"Command Line Interface (CLI) | A text-based user interface, where users type commands to instruct the computer to do something.","lastModifiedDate":"2021-10-28"},{"lineNumber":587,"author":{"gitId":"cheweejia"},"content":"Graphical User Interface (GUI) | A graphics-based user interface, where users click buttons to instruct the computer to do something.","lastModifiedDate":"2021-10-28"},{"lineNumber":588,"author":{"gitId":"cheweejia"},"content":"Java | A program that allows running other programs written in Java programming language.","lastModifiedDate":"2021-10-28"},{"lineNumber":589,"author":{"gitId":"cheweejia"},"content":"Operating System | Software that manages computer hardware and other computer software. | ","lastModifiedDate":"2021-10-28"},{"lineNumber":590,"author":{"gitId":"cheweejia"},"content":"Command | An instruction typed by a user to Academy Directory.","lastModifiedDate":"2021-10-28"},{"lineNumber":591,"author":{"gitId":"cheweejia"},"content":"Command Box | A part of the Academy Directory\u0027s GUI which can be used by users to type commands.","lastModifiedDate":"2021-10-28"},{"lineNumber":592,"author":{"gitId":"cheweejia"},"content":"Field | Additional information that can be provided to a command for correct command execution. | May or may not have an associated prefix","lastModifiedDate":"2021-10-28"},{"lineNumber":593,"author":{"gitId":"cheweejia"},"content":"Parameter | Part of the command which provides additional information provided by the user. | Actual values for the fields","lastModifiedDate":"2021-10-28"},{"lineNumber":594,"author":{"gitId":"cheweejia"},"content":"Prefix | An abbreviation of a field. | Always ends with a backslash (\u0027/\u0027)","lastModifiedDate":"2021-10-28"},{"lineNumber":595,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":596,"author":{"gitId":"Amadeus-Winarto"},"content":"## Appendix","lastModifiedDate":"2021-11-04"},{"lineNumber":597,"author":{"gitId":"Amadeus-Winarto"},"content":"### Appendix A: Version Controlled Commands","lastModifiedDate":"2021-11-04"},{"lineNumber":598,"author":{"gitId":"Amadeus-Winarto"},"content":"The following list is a list of commands that are version controlled i.e. they can be undone and","lastModifiedDate":"2021-11-04"},{"lineNumber":599,"author":{"gitId":"Amadeus-Winarto"},"content":"redone using the `undo` command and the `redo` command. Furthermore, the use of these commands","lastModifiedDate":"2021-11-04"},{"lineNumber":600,"author":{"gitId":"Amadeus-Winarto"},"content":"will be reflected in the commit history, using the `history` command.","lastModifiedDate":"2021-11-04"},{"lineNumber":601,"author":{"gitId":"Amadeus-Winarto"},"content":"- [`add`](#adding-a-student-add)","lastModifiedDate":"2021-11-04"},{"lineNumber":602,"author":{"gitId":"Amadeus-Winarto"},"content":"- [`delete`](#deleting-a-student-delete)","lastModifiedDate":"2021-11-04"},{"lineNumber":603,"author":{"gitId":"Amadeus-Winarto"},"content":"- [`tag`](#tagging-a-student--tag)","lastModifiedDate":"2021-11-04"},{"lineNumber":604,"author":{"gitId":"Amadeus-Winarto"},"content":"- [`edit`](#editing-a-students-detail--edit)","lastModifiedDate":"2021-11-04"},{"lineNumber":605,"author":{"gitId":"Amadeus-Winarto"},"content":"- [`grade`](#adding-grades-for-an-assessment--grade)","lastModifiedDate":"2021-11-04"},{"lineNumber":606,"author":{"gitId":"Amadeus-Winarto"},"content":"- [`attendance`](#editing-a-students-studio-attendance-attendance)","lastModifiedDate":"2021-11-04"},{"lineNumber":607,"author":{"gitId":"Amadeus-Winarto"},"content":"- [`participation`](#editing-a-students-studio-participation-participation)","lastModifiedDate":"2021-11-04"},{"lineNumber":608,"author":{"gitId":"Amadeus-Winarto"},"content":"- [`sort`](#sorting-student-list--sort)","lastModifiedDate":"2021-11-04"},{"lineNumber":609,"author":{"gitId":"Amadeus-Winarto"},"content":"- [`clear`](#clearing-all-students--clear)","lastModifiedDate":"2021-11-04"},{"lineNumber":610,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":611,"author":{"gitId":"Amadeus-Winarto"},"content":"Commands not shown in the above list _will not_ appear in the commit history, and thus","lastModifiedDate":"2021-11-04"},{"lineNumber":612,"author":{"gitId":"Amadeus-Winarto"},"content":"cannot be reverted to and / or be undone or redone.","lastModifiedDate":"2021-11-04"},{"lineNumber":613,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":614,"author":{"gitId":"Amadeus-Winarto"},"content":"## Links","lastModifiedDate":"2021-10-28"},{"lineNumber":615,"author":{"gitId":"Amadeus-Winarto"},"content":"### Academy Directory Resources","lastModifiedDate":"2021-10-28"},{"lineNumber":616,"author":{"gitId":"cheweejia"},"content":"- [Developer Guide](https://ay2122s1-cs2103t-t15-3.github.io/tp/DeveloperGuide.html): If you\u0027re interested in developing Academy Directory further, or only wish to see the gory details","lastModifiedDate":"2021-10-28"},{"lineNumber":617,"author":{"gitId":"cheweejia"},"content":"- [About Us](https://ay2122s1-cs2103t-t15-3.github.io/tp/AboutUs.html): If you\u0027re interested to learn more about us","lastModifiedDate":"2021-10-28"},{"lineNumber":618,"author":{"gitId":"cheweejia"},"content":"- [Github](https://github.com/AY2122S1-CS2103T-t15-3/tp): If you want to see our code or report any issues","lastModifiedDate":"2021-10-28"},{"lineNumber":619,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":620,"author":{"gitId":"Amadeus-Winarto"},"content":"### Other Sources","lastModifiedDate":"2021-10-28"},{"lineNumber":621,"author":{"gitId":"Amadeus-Winarto"},"content":"- [Java SE Runtime Download](https://www.oracle.com/java/technologies/downloads/) to install the latest Java version","lastModifiedDate":"2021-10-28"},{"lineNumber":622,"author":{"gitId":"cheweejia"},"content":"- [AddressBook 3 (AB3)](https://github.com/se-edu/addressbook-level3) to see where we started this project from","lastModifiedDate":"2021-10-28"},{"lineNumber":623,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":624,"author":{"gitId":"Amadeus-Winarto"},"content":"## Acknowledgements","lastModifiedDate":"2021-10-28"},{"lineNumber":625,"author":{"gitId":"Amadeus-Winarto"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org/).","lastModifiedDate":"2021-10-28"},{"lineNumber":626,"author":{"gitId":"cheweejia"},"content":"- The formatting and content of this User Guide is referenced from [AY2122S1-CS2103T-w17-1/tp](https://ay2122s1-cs2103t-w17-1.github.io/tp/).","lastModifiedDate":"2021-10-28"},{"lineNumber":627,"author":{"gitId":"cheweejia"},"content":"- Design of the internal version control system is heavily inspired by [Git](https://github.com/git/git).","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"phuccuongngo99":6,"Amadeus-Winarto":326,"-":111,"cheweejia":70,"hmanhduc2k":49,"jianoway":65}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"if () then ([command commits AddressBook])","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"    :Save AcademyDirectory to","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"    academyDirectoryStateList;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":13,"jianoway":2}},{"path":"docs/diagrams/HelpCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"participant \":AcademyDirectoryParser\" as AcademyDirectoryParser LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"participant \":HelpCommandParser\" as HelpCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"participant \"h:HelpCommand\" as HelpCommand LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"participant \":CommandException\" as CommandException LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"[-\u003e LogicManager : execute(\"help add\")","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"activate LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"LogicManager -\u003e AcademyDirectoryParser : parseCommand(\"help add\")","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"activate AcademyDirectoryParser","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"create HelpCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"AcademyDirectoryParser -\u003e HelpCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"activate HelpCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"HelpCommandParser --\u003e AcademyDirectoryParser","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"deactivate HelpCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"AcademyDirectoryParser -\u003e HelpCommandParser : parse(\"add\")","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"activate HelpCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"create HelpCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"HelpCommandParser -\u003e HelpCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"activate HelpCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"HelpCommand --\u003e AcademyDirectoryParser : h","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"deactivate HelpCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"HelpCommandParser -[hidden]-\u003e AcademyDirectoryParser","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"destroy HelpCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"AcademyDirectoryParser --\u003e LogicManager : h","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"deactivate AcademyDirectoryParser","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"LogicManager -\u003e HelpCommand : execute(model)","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"activate HelpCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"opt if commandWord is null or helpMessage is null","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"    create CommandException","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"    HelpCommand -\u003e CommandException ++ : CommandException(MESSAGE_HELP_NOT_EXIST)","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"    CommandException --\u003e HelpCommand : exception created","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"    deactivate CommandException","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"    LogicManager \u003c-- HelpCommand : exception thrown","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"    deactivate HelpCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"end opt","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"alt if isGeneralHelp","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"    create CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"    HelpCommand -\u003e CommandResult ++ : CommandResult(MESSAGE_HELP_SUCCESS_GENERAL, helpMessage)","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"    CommandResult --\u003e HelpCommand : general help command result","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"    deactivate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"    [\u003c-- HelpCommand : command result","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"else","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"    create CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"    HelpCommand -\u003e CommandResult ++ : CommandResult(MESSAGE_HELP_SUCCESS_SPECIFIC, helpMessage)","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"    CommandResult --\u003e HelpCommand : specific help command result","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"    deactivate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"    [\u003c-- HelpCommand : command result","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"end alt","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"deactivate HelpCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"hmanhduc2k":72}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"    class State1 as \"__ad0:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"    class State2 as \"__ad1:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"    class State3 as \"__ad2:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"jianoway":4}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"    class State1 as \"__ad0:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"    class State2 as \"__ad1:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"    class State3 as \"__ad2:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":18,"jianoway":4}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"    class State1 as \"__ad0:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"    class State2 as \"__ad1:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"    class State3 as \"__ad2:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"jianoway":4}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"    class State1 as \"__ad0:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"    class State2 as \"__ad1:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"    class State3 as \"__ad2:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"jianoway":4}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"    class State1 as \"__ad0:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"    class State2 as \"__ad1:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"    class State3 as \"__ad2:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"jianoway":4}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"    class State1 as \"__ad0:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"    class State2 as \"__ad1:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"    class State3 as \"__ad3:AcademyDirectory__\"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"note right on link: State ad2 deleted.","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"jianoway":5}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"participant \":AcademyDirectoryParser\" as AcademyDirectoryParser LOGIC_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":VersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"LogicManager -\u003e AcademyDirectoryParser : parseCommand(undo)","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"activate AcademyDirectoryParser","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"AcademyDirectoryParser -\u003e UndoCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"UndoCommand --\u003e AcademyDirectoryParser","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"AcademyDirectoryParser --\u003e LogicManager : u","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"deactivate AcademyDirectoryParser","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UndoCommand -\u003e Model : undoAddressBook()","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model -\u003e VersionedAddressBook : undo()","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"activate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"VersionedAddressBook -\u003e VersionedAddressBook :resetData(ReadOnlyAddressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"VersionedAddressBook --\u003e Model :","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":46,"jianoway":7}},{"path":"docs/diagrams/architecture/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/globe_internet\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    Class UI UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Class Logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Class Storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    Class VersionedModel MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Class Main #grey","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Class Commons LOGIC_COLOR_T2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"    Class VersionControl VERSIONCONTROL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class \"\u003c$user\u003e\" as User MODEL_COLOR_T2","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c$documents\u003e\" as File UI_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"VersionedModel \u003d[#maroon]\u003e VersionControl","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"UI -[#green]\u003e Logic","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"UI -right[#green]-\u003e VersionedModel","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Logic -[#blue]-\u003e Storage","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"Logic -down[#blue]-\u003e VersionedModel","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Logic","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Storage","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"Main -up[#grey]-\u003e VersionedModel","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Main -down[hidden]-\u003e Commons","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"Main -down[#grey]-\u003e VersionControl","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"Storage -up[STORAGE_COLOR]-\u003e VersionControl","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"Storage -up[STORAGE_COLOR].\u003e VersionedModel","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage .right[STORAGE_COLOR].\u003eFile","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"User ..\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Amadeus-Winarto":12,"-":27}},{"path":"docs/diagrams/architecture/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteStudent(p)","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAcademyDirectory(academyDirectory)","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveStageArea(stageArea)","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to disk","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"deactivate storage","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"deactivate storage","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"phuccuongngo99":1,"Amadeus-Winarto":12,"-":35,"jianoway":1}},{"path":"docs/diagrams/architecture/ComponentManagers.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"Amadeus-Winarto":1,"-":30}},{"path":"docs/diagrams/architecture/logic/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../../style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"Class AcademyDirectoryParser","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"LogicManager -right-\u003e\"1\" AcademyDirectoryParser","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"AcademyDirectoryParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Amadeus-Winarto":1,"-":42,"jianoway":3}},{"path":"docs/diagrams/architecture/model/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../../style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"AcadenyDirectory *-right-\u003e \"1\" UniqueStudentList","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"AcadenyDirectory *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"UniqueTagList -[hidden]down- UniqueStudentList","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"UniqueTagList -[hidden]down- UniqueStudentList","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"UniqueStudentList -right-\u003e Student","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"Student -up-\u003e \"*\" Tag","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"Student *--\u003e Name","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"Student *--\u003e Phone","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"Student *--\u003e Email","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"Student *--\u003e Telegram","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"Student *--\u003e Assessment","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"Student *--\u003e StudioRecord","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"phuccuongngo99":8,"Amadeus-Winarto":1,"-":10,"jianoway":4}},{"path":"docs/diagrams/architecture/model/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../../style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"Package VersionedModel \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"Interface ReadOnlyAcademyDirectory \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"Interface Version \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"Interface VersionedModel \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"Class AcademyDirectory","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"Class ReadOnlyAcademyDirectory","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"Class VersionedModel","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"Class VersionedModelManager","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"Class VersionControlController","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"Class VersionControlReader","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"Class UniqueStudentList","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"Class Student","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"Class StudioRecord","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"Class Telegram","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"Class Assessment","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"Package VersionControl {","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"HiddenOutside ..\u003e VersionedModel","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"VersionedModel .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"VersionedModel .left.\u003e ReadOnlyAcademyDirectory","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"VersionedModel .up.|\u003e Version","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"AcademyDirectory .up.|\u003e ReadOnlyAcademyDirectory","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"VersionedModelManager .up.|\u003e VersionedModel","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"VersionControlController .up.|\u003e Version","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"VersionControlController -down-\u003e \"1\" VersionControlReader","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"VersionControlReader --\u003e VersionControl","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"VersionedModelManager -left-\u003e \"1\" AcademyDirectory","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"VersionedModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"VersionedModelManager -left-\u003e \"1\" VersionControlController","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"AcademyDirectory *--\u003e \"1\" UniqueStudentList","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"UniqueStudentList --\u003e \"~* all\" Student","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"Student *--\u003e Name","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"phuccuongngo99"},"content":"Student *--\u003e Phone","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"Student *--\u003e Email","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"Student *--\u003e Telegram","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"Student *--\u003e StudioRecord","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"Student *--\u003e Assessment","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"Student *--\u003e \"*\" Tag","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"Phone -[hidden]right-\u003e StudioRecord","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"StudioRecord -[hidden]right-\u003e Email","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"Email -[hidden]right-\u003e Telegram","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"VersionedModelManager --\u003e\"~* filtered\" Student","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"phuccuongngo99":10,"Amadeus-Winarto":26,"-":26,"jianoway":10}},{"path":"docs/diagrams/architecture/storage/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../../style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"    package \"AcademyDirectory Storage\" #F4F6F6 {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"        Interface AcademyDirectoryStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"        Class JsonAcademyDirectoryStorage","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"        Class JsonSerializableAcademyDirectory","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"        Class JsonAdaptedStudent","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    package \"VersionControl Storage\" #F4F6F6 {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        Class StageAreaStorage","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"package VersionControl {","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"StorageManager -up-\u003e \"1\" AcademyDirectoryStorage","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"StorageManager --\u003e \"1\" StageAreaStorage","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"Storage -right-|\u003e AcademyDirectoryStorage","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"JsonAcademyDirectoryStorage .up.|\u003e AcademyDirectoryStorage","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"JsonAcademyDirectoryStorage ..\u003e JsonSerializableAcademyDirectory","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"JsonSerializableAcademyDirectory --\u003e \"*\" JsonAdaptedStudent","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"JsonAdaptedStudent --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"StageAreaStorage --\u003e VersionControl","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"phuccuongngo99":2,"Amadeus-Winarto":9,"-":31,"jianoway":9}},{"path":"docs/diagrams/architecture/ui/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../../style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"Class StudentListPanel","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"Class StudentCard","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"MainWindow *-down-\u003e \"1\" StudentListPanel","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"StudentListPanel -down-\u003e \"*\" StudentCard","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"StudentListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"StudentCard --|\u003e UiPart","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"StudentCard ..\u003e Model","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"StudentListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"phuccuongngo99":8,"Amadeus-Winarto":1,"-":51}},{"path":"docs/diagrams/architecture/version/VcObjectClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../../style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"Interface VcObject \u003c\u003cinterface\u003e\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"Class Commit","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"Class Tree","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"Class Label","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"Commit .up.|\u003e VcObject","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"Tree .up.|\u003e VcObject","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"Label .up.|\u003e VcObject","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"Label \"*\" --\u003e \"1\" Commit :\u003e labels","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"Commit \"*\" --\u003e \"1\" Commit :\u003e child of","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"Commit \"*\" --\u003e \"1\" Tree","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":20}},{"path":"docs/diagrams/architecture/version/VersionControlArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/globe_internet\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../../style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    Class UI UI_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Class Logic LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Class Storage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    Class VersionedModel MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Class Main #grey","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Class Commons LOGIC_COLOR_T2","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class \"\u003c$user\u003e\" as User MODEL_COLOR_T2","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class \"\u003c$documents\u003e\" as File UI_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"UI -[#green]\u003e Logic","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"UI -right[#green]-\u003e VersionedModel","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Logic -[#blue]-\u003e Storage","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"Logic -down[#blue]-\u003e VersionedModel","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e UI","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Logic","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Storage","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"Main -up[#grey]-\u003e VersionedModel","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Main -down[hidden]-\u003e Commons","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"Storage -up[STORAGE_COLOR].\u003e VersionedModel","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Storage .right[STORAGE_COLOR].\u003eFile","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"User ..\u003e UI","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":6,"-":27}},{"path":"docs/diagrams/architecture/version/VersionControlClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../../style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"package VersionControl {","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"    package Reader {","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"        abstract Class VersionControlObjectReader","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"        Class VersionControlGeneralReader","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"        Class LabelReader","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"        Class TreeReader","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"        Class CommitReader","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"        LabelReader --|\u003e VersionControlObjectReader","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"        CommitReader --|\u003e VersionControlObjectReader","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        TreeReader --|\u003e VersionControlObjectReader","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlGeneralReader --\u003e LabelReader","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlGeneralReader --\u003e TreeReader","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlGeneralReader --\u003e CommitReader","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    package Writer {","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        abstract Class VersionControlObjectWriter","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        Class VersionControlGeneralWriter","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        Class LabelWriter","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        Class TreeWriter","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        Class CommitWriter","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        LabelWriter --|\u003e VersionControlObjectWriter","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        CommitWriter --|\u003e VersionControlObjectWriter","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        TreeWriter --|\u003e VersionControlObjectWriter","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlGeneralWriter --\u003e LabelWriter","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlGeneralWriter --\u003e TreeWriter","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlGeneralWriter --\u003e CommitWriter","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"    package Utils {","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        Class HashGenerator","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        Class HashComputer","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        HashComputer --\u003e HashGenerator","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"    HashComputer --\u003e VersionControlGeneralWriter","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"    package Objects {","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        Interface VcObject \u003c\u003cinterface\u003e\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        Class Commit","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        Class Tree","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"        Class Label","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit ..|\u003e VcObject","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree ..|\u003e VcObject","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label ..|\u003e VcObject","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"package Storage  {","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"    Class StorageManager STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"    Class StageAreaStorage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"    StorageManager --\u003e StageAreaStorage","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"package VersionedModel #F4F6F6 {","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"    Class VersionedModelManager","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"    Class VersionControlController","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"    Class VersionControlReader","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"    VersionedModelManager --\u003e VersionControlController","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"    VersionControlController --\u003e VersionControlReader","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"    VersionControlReader--\u003e VersionControlGeneralReader","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"    VersionControlReader --\u003e HashComputer","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"StageAreaStorage --\u003e VersionControlGeneralWriter","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"CommitWriter ..\u003e Commit","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"CommitReader ..\u003e Commit","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"TreeWriter ..\u003e Tree","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"TreeReader ..\u003e Tree","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"LabelWriter ..\u003e Label","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"LabelReader ..\u003e Label","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":86}},{"path":"docs/diagrams/logic/commands/attendancecommand/AttendanceCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"@startuml","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"!include ../../../style.puml","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"Participant \":AttendanceCommand\" as ac LOGIC_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"Participant \":Attendance\" as at LOGIC_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"Participant \":CommandResult\" as cr LOGIC_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"box VersionedModel MODEL_COLOR_T1","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"Participant \":VersionedModel\" as mm MODEL_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"Participant \":Student\" as st MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"Participant \":StudioRecord\" as sr MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"[-\u003e ac : execute(model)","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"activate ac","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"ac -\u003e mm ++: getFilteredStudentList","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"mm --\u003e ac --: lastShownList","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"loop for each Index in indexArrayList","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"    ac -\u003e st ++ : getAttendance","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"    st -\u003e sr ++ : getAttendance","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"    sr --\u003e st -- : attendanceToEdit","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"    st --\u003e ac -- : attendanceToEdit","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"    ac -\u003e at  : update(studioSession, attendanceStatus)","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"    ac -\u003e st ++ : getParticipation","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"    st -\u003e sr ++ : getParticipation","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"    sr --\u003e st -- : participation","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"    st --\u003e ac -- : participatiion","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"    ref over ac : UpdateModelAttendance","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"end loop","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"ac -\u003e mm  : updateFilteredStudentsList(PREDICATE_SHOW_ALL_STUDENTS)","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"create cr","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"ac -\u003e cr ++ : CommandResult(MESSAGE_UPDATE_ATTENDANCE_SUCCESS)","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"cr --\u003e ac -- : result","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"\u003c-- ac -- : result","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"@enduml","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"jianoway":44}},{"path":"docs/diagrams/logic/commands/attendancecommand/UpdateModelAttendanceSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"@startuml","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"!include ../../../style.puml","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"Participant \":AttendanceCommand\" as ac LOGIC_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"box VersionedModel MODEL_COLOR_T1","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"Participant \":StudioRecord\" as sr MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"Participant \":Student\" as est MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"Participant \":VersionedModel\" as mm MODEL_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"activate ac","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"-\u003e ac","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"create sr","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"ac -\u003e sr ++ : StudioRecord(attendanceToEdit, participation)","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"sr --\u003e ac -- : newStudioRecord","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"create est","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"ac -\u003e est ++ :  Student(name, phone, email, telegram, newStudioRecord, assessment, tags)","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"est --\u003e ac -- : editedStudent","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"ac -\u003e mm  : setStudent(studentToEdit, editedStudent)","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"\u003c-- ac --","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"@enduml","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"jianoway":27}},{"path":"docs/diagrams/logic/commands/deletecommand/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../../../style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"participant \":AcademyDirectoryParser\" as AcademyDirectoryParser LOGIC_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"box VersionedModel MODEL_COLOR_T1","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"participant \":VersionedModel\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"LogicManager -\u003e AcademyDirectoryParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"activate AcademyDirectoryParser","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"AcademyDirectoryParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"DeleteCommandParser --\u003e AcademyDirectoryParser","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"AcademyDirectoryParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"DeleteCommandParser --\u003e AcademyDirectoryParser : d","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"DeleteCommandParser -[hidden]-\u003e AcademyDirectoryParser","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"AcademyDirectoryParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"deactivate AcademyDirectoryParser","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"DeleteCommand -\u003e Model : deleteStudent(1)","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"phuccuongngo99":1,"Amadeus-Winarto":1,"-":55,"jianoway":12}},{"path":"docs/diagrams/logic/commands/getcommand/GetCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"@startuml","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../../../style.puml","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"show method","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"show fields","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"skinparam defaultFontColor #FFFFFF","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"skinparam genericDisplay old","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"class PersonalDetailRetriever {","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"+ {Static} List\u003cPrefix\u003e SUPPORTED_PREFIX","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"- NameContainsKeywordsPredicate","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"+ PersonalDetailRetriever(Prefix, NameContainsKeywordsPredicate)","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"+ apply()","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"class GetCommand {","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"+ GetCommand(VersionedModel, List\u003cPersonalDetailRetriever\u003e)","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"+ execute(VersionedModel)","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"- executeFilter(VersionedModel, PersonalDetailRetriever)","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"class Function\u003cStudent, Optional\u003cPersonalDetail\u003e\u003e \u003c\u003cInterface\u003e\u003e{","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"PersonalDetailRetriever ..|\u003e Function","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"GetCommand --\u003e \"*\" PersonalDetailRetriever","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"@enduml","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"Amadeus-Winarto":27,"jianoway":3}},{"path":"docs/diagrams/logic/commands/getcommand/GetCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../../../style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"Participant \":GetCommand\" as rc LOGIC_COLOR","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"Participant \":CommandResult\" as result LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"box VersionedModel MODEL_COLOR_T1","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"Participant \":VersionedModel\" as mm MODEL_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"-\u003e rc ++ :execute","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"loop for all Prefix","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    rc -\u003e rc ++ :executeFilter","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    rc -\u003e mm ++  :getFilteredStudentList(NameContainsKeywordsPredicate)","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"    mm --\u003e rc -- : FilteredList","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    deactivate","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"end","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"create result","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"rc -\u003e result ++ :CommandResult(feedbackMessage)","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"return commandResult","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"return commandResult","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Amadeus-Winarto":12,"jianoway":12}},{"path":"docs/diagrams/logic/commands/gradecommand/GradeCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"@startuml","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"!include ../../../style.puml","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"participant \":GradeCommand\" as GradeCommand LOGIC_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"box VersionedModelModel MODEL_COLOR_T1","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"participant \":VersionedModel\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"participant \":Student\" as Student MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"participant \":Student\" as EditedStudent MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"participant \":Assessment\" as Assessment MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"[-\u003e GradeCommand ++ : execute(model)","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"GradeCommand -\u003e ModelManager ++ : getFilteredStudentList","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"ModelManager --\u003e GradeCommand -- : student list","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"GradeCommand -\u003e Student ++ : get(index)","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"Student --\u003e GradeCommand : studentToEdit","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"GradeCommand -\u003e Student : getAssessment","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"Student -\u003e Assessment ++ : getCopy","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"Assessment --\u003e Student -- : copy of assessment","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"Student --\u003e GradeCommand -- : assessmentToEdit","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"GradeCommand -\u003e Assessment ++ : updateAssessmentGrade(assessment, grade)","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"Assessment --\u003e GradeCommand -- :","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"create EditedStudent","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"GradeCommand -\u003e EditedStudent ++ : Student(name, phone, email, telegram, studioRecord, editedAssessment, tags)","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"EditedStudent --\u003e GradeCommand -- : editedStudent","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"GradeCommand -\u003e ModelManager ++ : setStudent(studentToEdit, editedStudent)","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"ModelManager --\u003e GradeCommand -- :","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"[\u003c-- GradeCommand -- : command result","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"@enduml","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"cheweejia":35,"jianoway":2}},{"path":"docs/diagrams/logic/commands/helpcommand/HelpCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../../../style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"participant \":HelpCommand\" as hc LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"participant \":CommandResult\" as cr LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"box VersionedModel MODEL_COLOR_T1","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"participant \":VersionedModel\" as vm MODEL_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"end box","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"-\u003e hc ++ : execute","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"hc -\u003e vm : setAdditionalViewType(AdditionalViewType.HELP)","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"hc -\u003e vm : setAdditionalInfo(AdditionalInfo.of(helpMessage))","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"alt isGeneralHelp","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"create cr","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"hc -\u003e cr ++ : CommandResult(MESSAGE_HELP_SUCCESS_GENERAL, true, false)","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"cr --\u003e hc -- : commandResult","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"else else","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"create cr","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"hc -\u003e cr ++ : CommandResult(String.format(MESSAGE_HELP_SUCCESS_SPECIFIC, this.commandWord), true, false)","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"cr --\u003e hc -- : commandResult","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"end","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"\u003c-- hc -- : commandResult","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Amadeus-Winarto":1,"hmanhduc2k":15,"jianoway":18}},{"path":"docs/diagrams/logic/commands/participationcommand/ParticipationCommandMarkAttendanceSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"!include ../../../style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"Participant \":ParticipationCommand\" as pc LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"box VersionedModel MODEL_COLOR_T1","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"Participant \":Student\" as ste MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"Participant \":Attendance\" as natt MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"activate pc","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"-\u003e pc","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"opt  participationUpdate \u003e 0","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"loop for each Index in indexArrayList","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"create natt","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"pc -\u003e natt ++ : Attendance(sessionCount)","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"natt --\u003e pc -- : newAttendance","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"pc -\u003e natt ++ : setAttendance(newAttArr)","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"natt --\u003e pc --","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"pc -\u003e ste ++ : setAttendance(newAttendance)","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"ste --\u003e pc --","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"end","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"end","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"\u003c-- pc--","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jianoway":33}},{"path":"docs/diagrams/logic/commands/showcommand/ShowCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"@startuml","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"!include ../../../style.puml","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"participant \":ShowCommand\" as ShowCommand LOGIC_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"box VersionedModel MODEL_COLOR_T1","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"participant \":VersionedModel\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"participant \":Student\" as Student MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"participant \":Assessment\" as Assessment MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"[-\u003e ShowCommand ++ : execute(model)","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"ShowCommand -\u003e ModelManager ++ : getFilteredStudentList","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"ShowCommand \u003c-- ModelManager -- : student list","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"ShowCommand -\u003e ShowCommand ++ : displayResult","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"loop student in student list","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"\tShowCommand -\u003e Student ++ : getName","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"\tShowCommand \u003c-- Student -- : full name","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"\tShowCommand -\u003e Student ++ : getAssessment","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"\tStudent -\u003e Assessment ++ : getAssessmentGrade","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"\tStudent \u003c-- Assessment -- :","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"\tShowCommand \u003c-- Student -- : grade","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"end","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"deactivate ShowCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"[\u003c-- ShowCommand -- : command result","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"@enduml","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"cheweejia":31,"jianoway":2}},{"path":"docs/diagrams/logic/commands/sortcommand/GetComparatorSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"@startuml","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"!include ../../../style.puml","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"Participant \":SortCommand\" as sc LOGIC_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"box VersionedModel MODEL_COLOR_T1","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"Participant \"\u003c\u003cclass\u003e\u003e\\nName\" as name MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"Participant \"\u003c\u003cclass\u003e\u003e\\nParticipation\" as part MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"Participant \"\u003c\u003cclass\u003e\u003e\\nAssessment\" as assess MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"-\u003e sc ++","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"sc -\u003e sc ++ : getComparator","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"alt NAME","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"sc -\u003e name ++ : getComparator(isAscendingOrder)","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"name --\u003e sc -- : comparator","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"else PARTICIPATION","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"sc -\u003e part ++ : getComparator(isAscendingOrder)","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"part --\u003e sc -- : comparator","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"else AVERAGE","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"sc -\u003e assess ++ : getAverageComparator(isAscendingOrder)","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"assess --\u003e sc -- : comparator","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"else else","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"sc -\u003e assess ++ : getIndividualComparator(isAscendingOrder, attribute)","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"assess --\u003e sc -- : comparator","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"end","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"sc --\u003e sc -- : comparator","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"\u003c-- sc --","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"@enduml","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"jianoway":37}},{"path":"docs/diagrams/logic/commands/sortcommand/SortCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"@startuml","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"!include ../../../style.puml","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"Participant \":SortCommand\" as sc LOGIC_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"Participant \":CommandResult\" as cr LOGIC_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"box VersionedModel MODEL_COLOR_T1","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"Participant \":VersionedModel\" as mm MODEL_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"Participant \":AcademyDirectory\" as mad MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"Participant \":AcademyDirectory\" as ad MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"[-\u003e sc : execute(model)","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"activate sc","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"sc -\u003e mm ++: getAcademyDirectory","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"mm -\u003e mad ++ : getStudentList","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"mad --\u003e mm -- : students","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"mm --\u003e sc --: students","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"ref over sc : GetComparator","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"create ad","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"sc -\u003e ad ++ : AcademyDirectory","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"ad --\u003e sc -- : sortedAcademyDirectory","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"sc -\u003e ad : setStudents(sortedList)","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"sc -\u003e mm : setAcademyDirectory(sortedAcademyDirectory)","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"create cr","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"sc -\u003e cr ++ : CommandResult(MESSAGE_UPDATE_ATTENDANCE_SUCCESS)","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"cr --\u003e sc -- : commandResult","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"\u003c-- sc : commandResult","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"@enduml","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"jianoway":39}},{"path":"docs/diagrams/logic/parsers/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"!include ../../style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"Class AcademyDirectoryParser","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"HiddenOutside ..\u003e AcademyDirectoryParser","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"AcademyDirectoryParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"AcademyDirectoryParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"Amadeus-Winarto":1,"-":33,"jianoway":4}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"!define VERSIONCONTROL_COLOR #BA68C8","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"!define VERSIONCONTROL_COLOR_T1 #AB47BC","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"!define VERSIONCONTROL_COLOR_T2 #9C27B0","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"!define VERSIONCONTROL_COLOR_T3 #8E24AA","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"!define VERSIONCONTROL_COLOR_T2 #7B1FA2","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Amadeus-Winarto":6,"-":75}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"Participant \":AcademyDirectoryParser\" as adp LOGIC_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"logic -\u003e adp ++: parseCommand(commandText)","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"adp -\u003e ecp","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"adp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"ecp -\u003e ec ++: index, editStudentDescriptor","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"ecp --\u003e adp --: command","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"adp --\u003e logic --: command","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"phuccuongngo99":1,"-":14,"jianoway":6}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"title: AcademyDirectory","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T15-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T15-3/tp/actions)","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T15-3/tp/branch/master/graph/badge.svg?token\u003d998G82RFLB)](https://codecov.io/gh/AY2122S1-CS2103T-T15-3/tp)","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"**Academy Directory is a desktop app for CS1101S tutors to manage their students.** Its main features are as follows:","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"- Manage studentsâ€™ personal details","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"- Track students\u0027 grades, Studio attendance, and participation","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"- Visualize data in Academy Directory","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"Academy Directory runs on all major operating systems! It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"## Site Map","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"* If you are interested in using AcademyDirectory, head over to our [**User Guide**](UserGuide.html).","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"* If you are interested in developing Academy Directory further, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"## Acknowledgements","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org/).","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"- The formatting and content of the User Guide is referenced from [AY2122S1-CS2103T-w17-1/tp](https://ay2122s1-cs2103t-w17-1.github.io/tp/)","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"- Design of the internal version control system is heavily inspired by [Git](https://github.com/git/git)","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"- Libraries used: ","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"  - [JavaFX](https://openjfx.io/) for the amazing GUI","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"  - [Jackson](https://github.com/FasterXML/jackson) to save your data","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"  - [JUnit5](https://github.com/junit-team/junit5) so that we can deliver to you bug-free!","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"phuccuongngo99":2,"Amadeus-Winarto":16,"-":12}},{"path":"docs/team/hmanhduc2k.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"---","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"layout: page","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"title: Hoang Manh Duc\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"---","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"### Project: Academy Directory","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"Academy Directory is a desktop application that aims to assist CS1101S tutors in the process of teaching Programming Methodology I in NUS, with features of recording student personal contacts, recording student participation and grades, visualizing and analyzing student data","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"from the grades recorded","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"#### Major Contribution:","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"* **New Feature**: Add the ability to view general and specific help relating to each command","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"  * What it does: Allows user to view a general help page or a specific help page relating to each command.","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"  * Justification: This features allow users to see a quick table (in Markdown) that summarizes command format and usage for quick reference. In addition, viewing specific help for each command helps users to gain insight on each command better, for more efficient usage of Academy Directory","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"  * Highlights: This features require constant updating to match the progress of Academy Directory development - considering that we need to add a new specific help page each time a new command is created.","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"  * Credits: In process of implementing HelpCommand, I have used MDFX, a library that parses Markdown input and rendering it to the JavaFX GUI.","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"* **New Feature**: Add the ability to view details of each students","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"  * What it does: This features allow users to see all related details to one student - contact information, grades, participation, tags, and others...","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"  * Justification: This feature is necessary to reorganize UI into a more compact view, while allowing Avengers to see academic details of students better (by shortening focus to one student only)","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"  * Highlights: This features is a separate model-related command that also relies on the User Interface design.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"  * Credits: None.","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"* **New Feature**: Graphics User Interface","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"  * What it does: Refactor and implement almost everything related to Graphic User Interface of Academy Directory. Theme of our GUI is `everything space related and science fiction-ey feel`. This includes:","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"    * Changing the style and functionality of Menu Bar to add some equivalent commands in forms of a clickable menu item","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"    * Changing the background color and image of Academy Directory","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"    * Refactor style, opacity, border color, size, stretch, and other appearance-related minor attributes of the various components in Academy Directory to improve user experience and prevent cases when shrinking or expanding GUI will hamper usage","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"    * Changing how list and student cards look like, as well as how the detailed view of View Command will look like","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"    * Reorganize the structure of Academy Directory front-end for better usage","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"    * Implemented (with assitance of Cuong) a new layout called Additional Pane that visualizes data separately from the result display logger initially appeared in AB3","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"    * Changing the visual of how commands are entered in Academy Directory","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"    * Changing how message usage, error message, and logger message appear on the result display logger, and what the content should be for better usage","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"    * Adding animation effects and color effects on components and transition of UI for better aesthetics","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"    * Changing application logo","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"  * Justification: Refactoring and implementing a new Graphical User Interface is necessary as Academy Directory is an application that relies on User Interface to demonstrates the result of each command. By making the results more visible and better suited to user experience, the purpose of assisting tutors are achieved henceforth. In addition, refactoring style and front-end is important to make Academy Directory a separate product from Address Book 3.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"  * Highlights: This feature needs constant changes and improvement as GUI is needed to deliver a new command result and type.","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"  * Credits: In the process of implementing a new GUI, I have relied on StackOverflow to test GUI features and appearance. I have also used Source Academy\u0027s image (which are explicitly released for commercial use with proper acknowledgement, so it is allowed by the module guidelines), in the process of designing the new front-end for Academy Directory.","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dT15\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dhmanhduc2k\u0026tabRepo\u003dAY2122S1-CS2103T-T15-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"* **Project management**:","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"  * Created CS2103T G15-T3 organization on behalf of the team","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"  * Created and merge pull requests to the codebase throughout the process of the project","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"  * Releases `v1.3` to GitHub on behalf of the team.","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"  * User Guide:","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"    * Added documentation for the features `help` and `view`","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"    * Assisted with adding introduction and instruction","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"    * Added one Q\u0026A segment to the User Guide","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"    * Added anything GUI-related to the User Guide (how to use the menu or click on the student card)","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"    * Proofread other parts and review writing of my teammates","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"  * Developer Guide:","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"    * Added implementation details of the `view`, `help`, (proposed: `clear`, `exit`, `list`)","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"    * Added architectural implementation of UI","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"* **Community**:","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"  * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"  * Contributed to forum discussions","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"  * Reported bugs and suggestions for other teams in the class","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"  * Some parts of the history feature I added was adopted by several other class mates","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"  * Participated in all team meeting and discussion throughout the duration of the project.","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"hmanhduc2k":71}},{"path":"docs/team/jianoway.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"---","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"layout: page","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"title: Jian Wei\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"---","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"## Project: Academy Directory","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"Academy Directory is a desktop address book application used for CS1101S tutors to keep track of information related to their students. The user interacts with it using a CLI and mouse, and it has a GUI created with JavaFX. It is written in Java, and has about 14 kLoC.","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djianoway\u0026tabRepo\u003dAY2122S1-CS2103T-T15-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"### **Project management**:","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"  * Managed releases `v1.2` - `v1.4` (3 releases) on GitHub","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"### **Features**","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"**New Feature**: ","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"* Added the ability to keep track of a student\u0027s Studio Attendance (Pull requests [\\#49](https://github.com/AY2122S1-CS2103T-T15-3/tp/pull/49), [\\#60](https://github.com/AY2122S1-CS2103T-T15-3/tp/pull/60))","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"    * What it does: Keeps track of whether a student has attended a Studio.","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"    * Justification: This is a core feature for tutors to be able to keep track of their student\u0027s Attendance.","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"    * Highlights: Easy to use and intuitive since te information required for a tutor to key in is minimal. It is a standalone feature and would have no impact on most other existing features (e.g Add and Edit).","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"**New Feature**: ","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"* Added the ability to keep track of a student\u0027s Studio Participation Score (Pull request [\\#64](https://github.com/AY2122S1-CS2103T-T15-3/tp/pull/64))","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"  * What it does: Keeps track of a student\u0027s Participation Score in any Studio session.","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"  * Justification: This is a core feature for tutors to be able to keep track of their student\u0027s Participation.","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"  * Highlights: Currently set to a range of 0 to 500 inclusive to fit the needs of CS1101S, but is easily changeable with future iterations such as an admin console. It is a standalone feature and would have no impact on most other existing features (e.g Add and Edit).","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"**New Feature**: ","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"* Added the ability to sort AcademyDirectory\u0027s student list. (Pull request [\\#87](https://github.com/AY2122S1-CS2103T-T15-3/tp/pull/87))","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"  * What it does: Sorts the student list stored in the AcademyDirectory based on performance in specific assessments or on average, participation in tutorials as well as their name. Sorting can be done in either ascending or descending order.","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"  * Justification: This feature improves the product significantly as it allows tutors to sort the student list to suit their needs at any given time with a simple CLI input.","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"  * Highlights: Sorts with the optimized `List` sort with comparator method. It is a standalone feature and would have no impact on most other existing features (e.g Add and Edit).","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"**Enhancements to existing features**:","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"* Refactored the original code for Address Book 3 to suit Academy Directory. (Pull request [\\#47](https://github.com/AY2122S1-CS2103T-T15-3/tp/pull/47))","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"* Updated the `Student` class (was `Person`) to support additional field `StudioRecord`.","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"### **Documentation**:","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"  * **User Guide**:","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"    * Added documentation for the features `attendance` and `participation`. (Pull request [\\#69](https://github.com/AY2122S1-CS2103T-T15-3/tp/pull/69))","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"    * Fix typo from original Address Book 3 (Pull request [\\#201](https://github.com/AY2122S1-CS2103T-T15-3/tp/pull/201))","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"    * Improved Table of Contents. (Pull request [\\#128](https://github.com/AY2122S1-CS2103T-T15-3/tp/pull/128)) ","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"    ","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"  * **Developer Guide**:","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"      * Added implementation details of the existing `add` and `edit` features.","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"      * Added some Non-Functional Requirements (Pull request [\\#201](https://github.com/AY2122S1-CS2103T-T15-3/tp/pull/201))","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"      * Add implementation details of `participation`, `attendance` and `sort` features. (Pull requests [\\#91](https://github.com/AY2122S1-CS2103T-T15-3/tp/pull/91), [\\#92](https://github.com/AY2122S1-CS2103T-T15-3/tp/pull/92))","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"        * Designed the UML diagrams for all 3 features.","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"      * Refactored existing Address Book 3 diagrams to fit Academy Directory. (Pull request [\\#91](https://github.com/AY2122S1-CS2103T-T15-3/tp/pull/91))","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"  * **Community**:","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"      * PRs reviewed (with non-trivial review comments): [\\#148](https://github.com/AY2122S1-CS2103T-T15-3/tp/pull/148), [\\#198](https://github.com/AY2122S1-CS2103T-T15-3/tp/pull/198)","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"jianoway":60}},{"path":"docs/team/phuccuongngo99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"layout: page","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"title: Ngo Phuc Cuong\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"## Project: Academy Directory","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"Academy Directory is a desktop address book application used for CS1101S tutors to keep track of information related to their students. The user interacts with it using a CLI and mouse, and it has a GUI created with JavaFX. It is written in Java, and has about 14 kLoC.","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dphuccuongngo99\u0026tabRepo\u003dAY2122S1-CS2103T-T15-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"* **Project management**:","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"    * User Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"* **Community**:","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"* **Tools**:","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"phuccuongngo99":46}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new commandâ€‰â€”â€‰`remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Weâ€™ll assume that you have already set up the development environment as outlined in the Developerâ€™s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Letâ€™s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, letâ€™s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":" * Changes the remark of an existing student in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"![Output displayed](../images/tutorial/add-remark/RemarkHello.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Letâ€™s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"![The relationship between RemarkCommand and Command](../images/tutorial/add-remark/CommandInterface.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"            + \": Edits the remark of the student identified \"","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"            + \"by the index number used in the last student listing. \"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, letâ€™s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"phuccuongngo99"},"content":"     * @param index of the student in the filtered student list to edit the remark","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"phuccuongngo99"},"content":"     * @param remark of the student to be updated to","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now letâ€™s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"jianoway"},"content":"Create a `RemarkCommandParser` class in the `seedu.academydirectory.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"Amadeus-Winarto"},"content":"![The relationship between Parser and RemarkCommandParser](../images/tutorial/add-remark/ParserInterface.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Letâ€™s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now letâ€™s find out what we need to do in order to obtain the Index and String that we need. Letâ€™s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the userâ€™s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Donâ€™t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"phuccuongngo99"},"content":"Now that we have all the information that we need, letâ€™s lay the groundwork for propagating the remarks added into the in-memory storage of student data. We achieve that by working with the `Student` model. Each field in a Student is implemented as a separate class (e.g. a `Name` object represents the studentâ€™s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a student.","lastModifiedDate":"2021-10-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"phuccuongngo99"},"content":"Create a new `Remark` in `seedu.academydirectory.model.student`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-10-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"phuccuongngo99"},"content":"Without getting too deep into `fxml`, letâ€™s go on a 5 minute adventure to get some placeholder text to show up for each student.","lastModifiedDate":"2021-10-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"phuccuongngo99"},"content":"Simply add the following to [`seedu.academydirectory.ui.StudentCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"phuccuongngo99"},"content":"**`StudentCard.java`:**","lastModifiedDate":"2021-10-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, donâ€™t worryâ€‰â€”â€‰we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"phuccuongngo99"},"content":"Then insert the following into [`main/resources/view/StudentListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2021-10-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"phuccuongngo99"},"content":"**`StudentListCard.fxml`:**","lastModifiedDate":"2021-10-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"Thatâ€™s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"Amadeus-Winarto"},"content":"![$remark shows up in each entry](../images/tutorial/add-remark/$Remark.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"phuccuongngo99"},"content":"## Modify `Student` to support a `Remark` field","lastModifiedDate":"2021-10-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"phuccuongngo99"},"content":"Since `StudentCard` displays data from a `Student`, we need to update `Student` to get our `Remark` displayed!","lastModifiedDate":"2021-10-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"phuccuongngo99"},"content":"### Modify `Student`","lastModifiedDate":"2021-10-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"phuccuongngo99"},"content":"We change the constructor of `Student` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2021-10-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"phuccuongngo99"},"content":"### Update other usages of `Student`","lastModifiedDate":"2021-10-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"phuccuongngo99"},"content":"Unfortunately, a change to `Student` will cause other commands to break, you will have to modify these commands to use the updated `Student`!","lastModifiedDate":"2021-10-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"phuccuongngo99"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Student` class to find these commands.","lastModifiedDate":"2021-10-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"phuccuongngo99"},"content":"AddressBook stores data by serializing `JsonAdaptedStudent` into `json` with the help of an external libraryâ€‰â€”â€‰Jackson. Letâ€™s update `JsonAdaptedStudent` to work with our new `Student`!","lastModifiedDate":"2021-10-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBookâ€™s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"phuccuongngo99"},"content":"Now that we have finalized the `Student` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2021-10-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"phuccuongngo99"},"content":"**`StudentCard.java`:**","lastModifiedDate":"2021-10-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"phuccuongngo99"},"content":"public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2021-10-05"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"phuccuongngo99"},"content":"    remark.setText(student.getRemark().value);","lastModifiedDate":"2021-10-05"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"Amadeus-Winarto"},"content":"![The remark label is bound properly!](../images/tutorial/add-remark/RemarkBound.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regressionâ€‰â€”â€‰we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"phuccuongngo99"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Student`. Since all fields in a `Student` are immutable, we create a new instance of a `Student` with the values that we want and","lastModifiedDate":"2021-10-05"},{"lineNumber":329,"author":{"gitId":"phuccuongngo99"},"content":"save it with `Model#setStudent()`.","lastModifiedDate":"2021-10-05"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Student: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":336,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Student: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"phuccuongngo99"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"phuccuongngo99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"phuccuongngo99"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":347,"author":{"gitId":"phuccuongngo99"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2021-10-05"},{"lineNumber":348,"author":{"gitId":"phuccuongngo99"},"content":"                studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2021-10-05"},{"lineNumber":349,"author":{"gitId":"phuccuongngo99"},"content":"                studentToEdit.getAddress(), remark, studentToEdit.getTags());","lastModifiedDate":"2021-10-05"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"phuccuongngo99"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":352,"author":{"gitId":"phuccuongngo99"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"phuccuongngo99"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2021-10-05"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"phuccuongngo99"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2021-10-05"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"phuccuongngo99"},"content":"    private String generateSuccessMessage(Student studentToEdit) {","lastModifiedDate":"2021-10-05"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"phuccuongngo99"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2021-10-05"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"Amadeus-Winarto"},"content":"![Congratulations!](../images/tutorial/add-remark/RemarkComplete.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs donâ€™t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Letâ€™s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Letâ€™s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"Amadeus-Winarto"},"content":"![Using the context menu to jump to tests](../images/tutorial/add-remark/ContextMenu.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"Amadeus-Winarto"},"content":"![Creating a test for `execute`.](../images/tutorial/add-remark/CreateTest.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, letâ€™s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Letâ€™s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"phuccuongngo99":40,"Amadeus-Winarto":9,"-":349,"jianoway":3}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Student` class.","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Letâ€™s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"The `address` field in `Student` is actually an instance of the `seedu.academydirectory.model.student.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"![Usages detected](../images/tutorial/remove/UnsafeDelete.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"![List of conflicts](../images/tutorial/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditStudentDescriptor` may require more careful inspection.","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"Letâ€™s try removing references to `Address` in `EditStudentDescriptor`.","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"1. Safe delete the field `address` in `EditStudentDescriptor`.","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"   ![UnsafeDeleteOnField](../images/tutorial/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Student` class will require you to modify its constructor.","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"phuccuongngo99"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `StudentCard` that has not been removed nor identified.","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"![$address](../images/tutorial/remove/$address.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"A quick look at the `StudentCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"**`StudentCard.java`**","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"phuccuongngo99"},"content":"**`StudentCard.fxml`**","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. Whatâ€™s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"phuccuongngo99"},"content":"**`invalidStudentAddressBook.json`:**","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"phuccuongngo99"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"phuccuongngo99"},"content":"    \"name\": \"Student with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"phuccuongngo99":13,"Amadeus-Winarto":4,"-":95}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. â€¦â€‹\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEAâ€™s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"![ArchitectureDiagram](../images/dg/architecture/ArchitectureDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.academydirectory.logic.Logic`.","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"A quick look at the `seedu.academydirectory.logic.Logic` (an extract given below) confirms that this indeed might be what weâ€™re looking for.","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tutorial/tracing/FindUsages.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what weâ€™re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now letâ€™s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":" ![LeftGutter](../images/tutorial/tracing/LeftGutter.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"   ![DebuggerStep1](../images/tutorial/tracing/DebuggerStep1.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"   ![ShowExecutionPoint](../images/tutorial/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so letâ€™s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"    ![StepInto](../images/tutorial/tracing/StepInto.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Letâ€™s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Letâ€™s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"Amadeus-Winarto"},"content":"   ![StepOver](../images/tutorial/tracing/StepOver.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"Amadeus-Winarto"},"content":"    ![Variables](../images/tutorial/tracing/Variables.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Letâ€™s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"phuccuongngo99"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditStudentDescriptor`. Recall that we can verify the contents of `editStudentDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":175,"author":{"gitId":"Amadeus-Winarto"},"content":"   ![EditCommand](../images/tutorial/tracing/EditCommand.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Letâ€™s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"Amadeus-Winarto"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tutorial/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"phuccuongngo99"},"content":"       Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":193,"author":{"gitId":"phuccuongngo99"},"content":"       Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":194,"author":{"gitId":"phuccuongngo99"},"content":"       if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":195,"author":{"gitId":"phuccuongngo99"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"phuccuongngo99"},"content":"       model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":198,"author":{"gitId":"phuccuongngo99"},"content":"       model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":199,"author":{"gitId":"phuccuongngo99"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2021-10-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"phuccuongngo99"},"content":"   * it uses the `setStudent()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the student data.","lastModifiedDate":"2021-10-05"},{"lineNumber":205,"author":{"gitId":"phuccuongngo99"},"content":"   * it uses the `updateFilteredStudentList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ students.\u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":206,"author":{"gitId":"phuccuongngo99"},"content":"     FYI, The \u0027filtered list\u0027 is the list of students resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the students so that the user can see the edited student along with all other students. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":207,"author":{"gitId":"phuccuongngo99"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of students is being tracked.","lastModifiedDate":"2021-10-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"phuccuongngo99"},"content":"        students.addAll(","lastModifiedDate":"2021-10-05"},{"lineNumber":235,"author":{"gitId":"phuccuongngo99"},"content":"            source.getStudentList()","lastModifiedDate":"2021-10-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"phuccuongngo99"},"content":"                  .map(JsonAdaptedStudent::new)","lastModifiedDate":"2021-10-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"phuccuongngo99"},"content":"1. It appears that a `JsonAdaptedStudent` is created for each `Student` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2021-10-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/ã‚¢ãƒªã‚¹ ãƒ¦ãƒ¼`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"phuccuongngo99"},"content":"    5.  Add a new field to `Student`","lastModifiedDate":"2021-10-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"phuccuongngo99":17,"Amadeus-Winarto":10,"-":272,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.LogsCenter;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.util.FileUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":61,"jianoway":3}},{"path":"src/main/java/seedu/academydirectory/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":24,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.Config;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.LogsCenter;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.Version;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.util.StringUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.Logic;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.LogicManager;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyAcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.storage.AcademyDirectoryStorage;","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.storage.JsonAcademyDirectoryStorage;","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.storage.Storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.storage.StorageManager;","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.ui.Ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.ui.UiManager;","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"    protected VersionedModel model;","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AcademyDirectory ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"        AcademyDirectoryStorage academyDirectoryStorage \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"                new JsonAcademyDirectoryStorage(userPrefs.getAcademyDirectoryFilePath());","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"        storage \u003d new StorageManager(academyDirectoryStorage, userPrefsStorage, userPrefs.getVersionControlPath());","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Returns a {@code VersionedModelManager} with the data from {@code storage}\u0027s academy directory and","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"     * {@code userPrefs}. \u003cbr\u003e The data from the sample academy directory will be used instead if {@code storage}\u0027s","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"     * academy directory is not found, or an empty academy directory will be used instead if errors occur when reading","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"     * {@code storage}\u0027s academy directory.","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"    private VersionedModel initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"        Optional\u003cReadOnlyAcademyDirectory\u003e academyDirectoryOptional;","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"        ReadOnlyAcademyDirectory initialData;","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"            academyDirectoryOptional \u003d storage.readAcademyDirectory();","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"            if (academyDirectoryOptional.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AcademyDirectory\");","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"jianoway"},"content":"            initialData \u003d academyDirectoryOptional.orElseGet(SampleDataUtil::getSampleAcademyDirectory);","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AcademyDirectory\");","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"            initialData \u003d new AcademyDirectory();","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":91,"author":{"gitId":"jianoway"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AcademyDirectory\");","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"jianoway"},"content":"            initialData \u003d new AcademyDirectory();","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"            storage.saveAcademyDirectory(initialData);","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"            logger.warning(\"Unable to save data to disk. Changes done may not be saved\");","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel model \u003d new VersionedModelManager(initialData, userPrefs);","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"            if (!model.getStageArea().isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"                storage.saveStageArea(model.getStageArea());","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"            logger.warning(\"Unable to save to disk. Will not be able to revert properly..\");","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"        return model;","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"Amadeus-Winarto"},"content":"            logger.info(String.valueOf(initializedPrefs.getVersionControlPath()));","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"jianoway"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AcademyDirectory\");","lastModifiedDate":"2021-10-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"jianoway"},"content":"        logger.info(\"Starting AcademyDirectory \" + MainApp.VERSION);","lastModifiedDate":"2021-10-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"jianoway"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Academy Directory ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-01"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Amadeus-Winarto":26,"-":137,"cheweejia":1,"jianoway":37}},{"path":"src/main/java/seedu/academydirectory/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.core;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":62,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.core;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":78,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.core;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"    private static final String LOG_FILE \u003d \"academydirectory.log\";","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":110,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.core;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String MESSAGE_HELP_NOT_EXIST \u003d \"Error: No instruction exist for the command %1$s\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Please type in `help` for more assistance.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String GENERAL_HELP_MESSAGE \u003d \"### Command Summary\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"            + \"This subsection provides a summary for all the commands used in Academy Directory\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\nAction | Format\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"            + \"--------|--------\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Add Student**](#adding-a-student-add) | `add n/NAME e/EMAIL te/TELE_HANDLE \"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[p/PHONE_NUMBER] [t/TAG]`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Delete Student**](#deleting-a-student-delete) | `delete INDEX`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Tag Student**](#tagging-a-student--tag)| `tag INDEX t/TAG [t/TAG]...`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Get Personal Detail**](#getting-personal-detail-of-students-get) | `get [p/] [e/] [te/] [n/NAME]`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Edit Personal Detail**](#editing-a-students-detail--edit) | `edit INDEX [n/NAME] \"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[p/PHONE_NUMBER] [e/EMAIL] [te/TELE_HANDLE]`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Add Grade**](#adding-grades-for-an-assessment--grade) | `grade INDEX as/ASSESSMENT g/GRADE`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Edit Attendance**](#editing-a-students-studio-attendance-attendance) | `attendance INDEX \"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"            + \"ses/STUDIO_SESSION att/ATTENDANCE_STATUS`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Edit Participation**](#editing-a-students-studio-participation-participation) | \"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"            + \"`participation INDEX ses/STUDIO_SESSION add/PARTICIPATION_TO_ADD`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Show Grades**](#displaying-the-grades-for-an-assessment--show) | `show ASSESSMENT`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Visualize all grades**](#visualizing-assessments-grades-of-the-entire-class-visualize) \"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"            + \"| `visualize`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Filter Academy Directory**](#filtering-academy-directory-by-name-or-tag-filter) | `filter KEYWORD \"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[MORE_KEYWORDS]`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Sort Student List**](#sorting-student-list--sort) | `sort attr/ATTRIBUTE ord/ORDER`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**List All Students**](#listing-all-students--list) | `list`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Clear Student List**](#clearing-all-students--clear) | `clear`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Undo**](#undo-changes-to-academy-directory-undo) | `undo`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Redo**](#redo-changes-to-academy-directory-redo) | `redo`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Help**](#seeking-help--help) | `help [COMMAND_NAME]`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Exit**](#exiting-the-program--exit) | `exit`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**View Commit History**](#for-advanced-users-viewing-commit-history-history) | `history`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"            + \"[**Revert Commit**](#for-advanced-users-reverting-commit-revert) | `revert HASH`\";","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"phuccuongngo99":2,"-":8,"hmanhduc2k":33,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.core;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":115,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.core.index;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.exceptions;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":10,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.exceptions;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.util;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.MainApp;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":40,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.util;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":34,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.util;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.Config;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":20,"jianoway":3}},{"path":"src/main/java/seedu/academydirectory/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.util;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":82,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.util;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.LogsCenter;","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":140,"jianoway":3}},{"path":"src/main/java/seedu/academydirectory/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.util;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":66,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/logic/AdditionalViewType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.logic;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.Command;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.GetCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.HistoryCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.VisualizeCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"public enum AdditionalViewType {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"    DEFAULT, HELP, VIEW, VISUALIZE, TEXT;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Returns the appropriate AdditionalViewType according to the given Command","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param command Command whose view type is to be determined","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return AdditionalViewType of the corresponding command","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"    public static AdditionalViewType parse(Command command) {","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"        if (command instanceof HelpCommand) {","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"            return AdditionalViewType.HELP;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"        } else if (command instanceof ViewCommand) {","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"            return AdditionalViewType.VIEW;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"        } else if (command instanceof VisualizeCommand) {","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"            return AdditionalViewType.VISUALIZE;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else if (command instanceof HistoryCommand || command instanceof GetCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"               || command instanceof ShowCommand) {","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"            return AdditionalViewType.TEXT;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"            return AdditionalViewType.DEFAULT;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"phuccuongngo99":4,"Amadeus-Winarto":8,"hmanhduc2k":21}},{"path":"src/main/java/seedu/academydirectory/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.GuiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.CommandResult;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.AdditionalViewModel;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyAcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"     * Returns the AcademyDirectory.","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @see seedu.academydirectory.model.VersionedModel#getAcademyDirectory()","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"    ReadOnlyAcademyDirectory getAcademyDirectory();","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"    /** Returns an unmodifiable view of the filtered list of students */","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"     * Returns the user prefs\u0027 academy directory file path.","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"    Path getAcademyDirectoryFilePath();","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"    AdditionalViewModel getAdditionalViewModel();","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"phuccuongngo99":7,"Amadeus-Winarto":1,"-":35,"jianoway":10}},{"path":"src/main/java/seedu/academydirectory/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.GuiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.LogsCenter;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.Command;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.CommandResult;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.AcademyDirectoryParser;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.AdditionalViewModel;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyAcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.storage.Storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionedModel model;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"    private final AcademyDirectoryParser academyDirectoryParser;","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Constructs a {@code LogicManager} with the given {@code VersionedModel} and {@code StorageManager}.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"    public LogicManager(VersionedModel model, Storage storage) {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"        academyDirectoryParser \u003d new AcademyDirectoryParser();","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        Command command \u003d academyDirectoryParser.parseCommand(commandText);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        CommandResult commandResult \u003d command.execute(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"            storage.saveAcademyDirectory(model.getAcademyDirectory());","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"            if (commandResult.getCommitMessage().isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"                String commitMessage \u003d commandResult.getCommitMessage().get();","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"                model.commit(commitMessage);","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"                storage.saveStageArea(model.getStageArea());","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"    public ReadOnlyAcademyDirectory getAcademyDirectory() {","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"        return model.getAcademyDirectory();","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"phuccuongngo99"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"phuccuongngo99"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"    public Path getAcademyDirectoryFilePath() {","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"        return model.getAcademyDirectoryFilePath();","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"phuccuongngo99"},"content":"    public AdditionalViewModel getAdditionalViewModel() {","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"phuccuongngo99"},"content":"        return model.getAdditionalViewModel();","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"phuccuongngo99":9,"Amadeus-Winarto":18,"-":53,"jianoway":17}},{"path":"src/main/java/seedu/academydirectory/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":" * Adds a student to the academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String HELP_MESSAGE \u003d \"### Adding a student: `add`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Tutors will be able to add their tutees.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Format: `add n/NAME e/EMAIL t/TELE_HANDLE [p/PHONE_NUMBER]`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\u003cdiv markdown\u003d\\\"span\\\" class\u003d\\\"alert alert-primary\\\"\u003e:bulb: **Tip:**\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"            + \"A student can have no phone number due to privacy concern.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\u003c/div\u003e\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* `PHONE_NUMBER` is an optional field.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* `EMAIL` entry **must end with @u.nus.edu**. Else, a warning message will be shown.\\\\\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"            + \"`Students outside of NUS cannot be added`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* If newly inputted students have `NAME`, `EMAIL`, `TELE_HANDLE` matching exactly\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"            + \"with an already existing entry, the program will output a warning message and \"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"            + \"show the existing entry.\\\\\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"            + \"`This student already exists and thus cannot be added again`\\\\\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"            + \"`Existing student: Name: NAME, Email: EMAIL , Telegram: TELE_HANDLE`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* `add n/Aaron Tan t/@sausage e/e0123456@u.nus.edu p/90312311`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* `add n/Betsy Lim t/@unislave e/e0123456@u.nus.edu`\";","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the Academy Directory. \"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"            + PREFIX_TELEGRAM + \"TELEGRAM \"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"            + PREFIX_TELEGRAM + \"@johnd \"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"            + PREFIX_TAG + \"recursion \"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"            + PREFIX_TAG + \"streams\";","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String INVALID_FORMAT \u003d \"To know how to use `add`, type in `help add` for information\";","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the Academy Directory\";","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"phuccuongngo99"},"content":"    private final Student toAdd;","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"        toAdd \u003d student;","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"phuccuongngo99"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"phuccuongngo99"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"phuccuongngo99"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd),","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"                Optional.of(String.format(MESSAGE_SUCCESS, toAdd.getName())));","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"phuccuongngo99":14,"Amadeus-Winarto":7,"-":40,"hmanhduc2k":25,"jianoway":10}},{"path":"src/main/java/seedu/academydirectory/logic/commands/AttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import java.util.List;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Attendance;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.StudioRecord;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"public class AttendanceCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"    public static final String COMMAND_WORD \u003d \"attendance\";","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String HELP_MESSAGE \u003d \"### Editing a student\u0027s Studio attendance: `attendance`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Avengers will be able to edit the attendance status of their students.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Format: `attendance s/STUDIO_GROUP k/KEYWORD a/ATTENDANCE_STATUS [i/INDEX]`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* Edits the attendance of a student or multiple students who have the matching \"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"            + \"`KEYWORD` in their names and in Studio group as defined by `STUDIO_GROUP`.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* Only full words will be matched e.g. `Han` will not match `Hans`.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* The search is case-insensitive. e.g `hans` will match `Hans`.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* If `INDEX` is not supplied, the command will edit the attendance of the student is in the \"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"            + \"last created Studio session. Otherwise, it will execute the edit in the specified Studio \"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"            + \"session if `INDEX` is valid.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* The `ATTENDANCE_STATUS` field can only be a 1 or 0 to indicate whether the student \"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"            + \"attended the session or not.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* Existing values will be updated to the input values.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* `attendance s/1 k/Aaron a/0`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* `attendance s/33 k/Chan a/1 i/7`\";","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"            + \": Edits the attendance status of the student(s) identified \"","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"            + \"by the index number used in the last person listing as well \"","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"            + \"as the index of the Studio session. Existing attendance will \"","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"            + \"be overwritten by the input.\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"            + \"Parameters: INDEX(ES) (positive integer) \"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"            + \"ses/ STUDIO_SESSION_INDEX (positive integer within range) \"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"            + \"att/ ATTENDANCE_STATUS (0 or 1)\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 ses/ 7 att/ 1\";","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_UPDATE_ATTENDANCE_SUCCESS \u003d \"Attendance updated!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"    private final ArrayList\u003cIndex\u003e indexArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"    private final boolean attendanceStatus;","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"    private final Integer studioSession;","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"     * @param attendanceStatus true if attended, false otherwise","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"     * @param studioSession The studio session number","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"     * @param indexArrayList The ArrayList of students that are involved in the AttendanceCommand","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"    public AttendanceCommand(boolean attendanceStatus, Integer studioSession, ArrayList\u003cIndex\u003e indexArrayList) {","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"        requireAllNonNull(indexArrayList, attendanceStatus, studioSession);","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"        this.indexArrayList \u003d indexArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"        this.attendanceStatus \u003d attendanceStatus;","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"        this.studioSession \u003d studioSession;","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"        for (Index index : indexArrayList) {","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"        for (Index index : indexArrayList) {","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"            Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"            Attendance attendanceToEdit \u003d studentToEdit.getAttendance();","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"            attendanceToEdit \u003d attendanceToEdit.update(studioSession, attendanceStatus);","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"            StudioRecord newStudioRecord \u003d new StudioRecord(attendanceToEdit, studentToEdit.getParticipation());","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"jianoway"},"content":"            Student editedStudent \u003d new Student(studentToEdit.getName(), studentToEdit.getPhone(),","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"phuccuongngo99"},"content":"                    studentToEdit.getEmail(), studentToEdit.getTelegram(), newStudioRecord,","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"                    studentToEdit.getAssessment(), studentToEdit.getTags());","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"            model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new CommandResult(MESSAGE_UPDATE_ATTENDANCE_SUCCESS, Optional.of(MESSAGE_UPDATE_ATTENDANCE_SUCCESS));","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":94,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"jianoway"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"jianoway"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-03"},{"lineNumber":97,"author":{"gitId":"jianoway"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-03"},{"lineNumber":98,"author":{"gitId":"jianoway"},"content":"            return true;","lastModifiedDate":"2021-10-03"},{"lineNumber":99,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"        if (!(other instanceof AttendanceCommand)) {","lastModifiedDate":"2021-10-03"},{"lineNumber":102,"author":{"gitId":"jianoway"},"content":"            return false;","lastModifiedDate":"2021-10-03"},{"lineNumber":103,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":104,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":105,"author":{"gitId":"jianoway"},"content":"        AttendanceCommand e \u003d (AttendanceCommand) other;","lastModifiedDate":"2021-10-03"},{"lineNumber":106,"author":{"gitId":"jianoway"},"content":"        return indexArrayList.equals(e.indexArrayList)","lastModifiedDate":"2021-10-03"},{"lineNumber":107,"author":{"gitId":"jianoway"},"content":"                \u0026\u0026 attendanceStatus \u003d\u003d e.attendanceStatus","lastModifiedDate":"2021-10-03"},{"lineNumber":108,"author":{"gitId":"jianoway"},"content":"                \u0026\u0026 studioSession.equals(e.studioSession);","lastModifiedDate":"2021-10-03"},{"lineNumber":109,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":110,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":111,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"phuccuongngo99":1,"Amadeus-Winarto":4,"hmanhduc2k":21,"jianoway":85}},{"path":"src/main/java/seedu/academydirectory/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":" * Clears the academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String HELP_MESSAGE \u003d \"### Clearing all entries : `clear`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"            + \"Clears all entries from the academy directory.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Format: `clear`\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Academy Directory has been cleared!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"        model.setAcademyDirectory(new AcademyDirectory());","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Optional.of(MESSAGE_SUCCESS));","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"phuccuongngo99":2,"Amadeus-Winarto":5,"-":15,"hmanhduc2k":5,"jianoway":4}},{"path":"src/main/java/seedu/academydirectory/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param model {@code VersionedModel} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    public abstract CommandResult execute(VersionedModel model) throws CommandException;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Amadeus-Winarto":3,"-":15,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    /** What commit message should be used, if any */","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final Optional\u003cString\u003e commitMessage;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.commitMessage \u003d Optional.empty();","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, Optional\u003cString\u003e commitMessage) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.commitMessage \u003d commitMessage;","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult(String feedbackToUser, Optional\u003cString\u003e commitMessage) {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        this(feedbackToUser, false, false, commitMessage);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Optional\u003cString\u003e getCommitMessage() {","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"        return commitMessage;","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Amadeus-Winarto":25,"-":69,"hmanhduc2k":2,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":" * Deletes a student identified using it\u0027s displayed index from the Academy Directory.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String HELP_MESSAGE \u003d \"### Deleting a student: `delete`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Tutors will be able to delete their tutees.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Format: `delete INDEX`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* `INDEX` is an unique id assigned to each student in the system.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* Deletes the student at the specified `INDEX`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* The index refers to the index number shown in the displayed student list.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* The index **must be a positive integer** 1, 2, 3, â€¦\\u200B\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* `delete 2` deletes the 2nd student in the list.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"        model.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete),","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"                Optional.of(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete.getName())));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"phuccuongngo99":7,"Amadeus-Winarto":5,"-":38,"hmanhduc2k":14,"jianoway":5}},{"path":"src/main/java/seedu/academydirectory/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":" * Edits the details of an existing student in the Academy Directory.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String HELP_MESSAGE \u003d \"### Editing a student : `edit`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Tutors will be able to edit their tutees.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"Format: `edit INDEX \"","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELE_HANDLE] \"","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE_NUMBER] \\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"* Edits the student at the specified `INDEX`. The index refers to the index number shown \"","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"            + \"in the displayed student list. The index **must be a positive integer** 1, 2, 3, â€¦\\u200B\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* At least one of the optional fields must be provided.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* Existing values will be updated to the input values.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"* `edit 1 \" + PREFIX_PHONE + \"91234567 \" + PREFIX_EMAIL + \"e0425205@u.nus.edu`  Edits the phone number \"","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"            + \"of the 1st student to be `91234567` and `e0425205@u.nus.edu` respectively.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"* `edit 2 \" + PREFIX_NAME + \"Aaron Tan`  Edits the name of the 2nd student to be Aaron Tan.\\n\";","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"            + PREFIX_TELEGRAM + \"@johndoe\";","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the Academy Directory.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"     * @param index of the student in the filtered student list to edit","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"     * @param editStudentDescriptor details to edit the student with","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"phuccuongngo99"},"content":"    public EditCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"phuccuongngo99"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":78,"author":{"gitId":"phuccuongngo99"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"phuccuongngo99"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"phuccuongngo99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"phuccuongngo99"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"phuccuongngo99"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"phuccuongngo99"},"content":"        if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"phuccuongngo99"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"phuccuongngo99"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent),","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"                Optional.of(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent.getName())));","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"phuccuongngo99"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"phuccuongngo99"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"phuccuongngo99"},"content":"    private static Student createEditedStudent(Student studentToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"phuccuongngo99"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"phuccuongngo99"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"phuccuongngo99"},"content":"        Phone updatedPhone \u003d editStudentDescriptor.getPhone().orElse(studentToEdit.getPhone());","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"phuccuongngo99"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"phuccuongngo99"},"content":"        Telegram updatedTelegram \u003d editStudentDescriptor.getTelegram().orElse(studentToEdit.getTelegram());","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"jianoway"},"content":"        return new Student(","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"jianoway"},"content":"                updatedName,","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"jianoway"},"content":"                updatedPhone,","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"jianoway"},"content":"                updatedEmail,","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"jianoway"},"content":"                updatedTelegram,","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"Amadeus-Winarto"},"content":"                studentToEdit.getStudioRecord(),","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"Amadeus-Winarto"},"content":"                studentToEdit.getAssessment(),","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"Amadeus-Winarto"},"content":"                studentToEdit.getTags());","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"phuccuongngo99"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"phuccuongngo99"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"phuccuongngo99"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"phuccuongngo99"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"phuccuongngo99"},"content":"        private Telegram telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"phuccuongngo99"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"phuccuongngo99"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":163,"author":{"gitId":"phuccuongngo99"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"Amadeus-Winarto"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, telegram);","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"phuccuongngo99"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"phuccuongngo99"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"phuccuongngo99"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"phuccuongngo99"},"content":"            return Optional.ofNullable(telegram);","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"phuccuongngo99"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"phuccuongngo99"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"Amadeus-Winarto"},"content":"                    \u0026\u0026 getTelegram().equals(e.getTelegram());","lastModifiedDate":"2021-11-03"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"phuccuongngo99":51,"Amadeus-Winarto":17,"-":130,"hmanhduc2k":12,"jianoway":16}},{"path":"src/main/java/seedu/academydirectory/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String HELP_MESSAGE \u003d \"### Exiting the program : `exit`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Exits the program.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Format: `exit`\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Academy Directory as requested ...\";","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Amadeus-Winarto":2,"-":14,"hmanhduc2k":5,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.InformationContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":" * Filters and lists all students in Academy Directory whose name or tag(s) contains any of the argument keywords.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"    public static final String HELP_MESSAGE \u003d \"### Locating students by name: `filter`\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"            + \"Filters and displays students whose names or tags contain any of the given keywords.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"            + \"Format: `filter KEYWORD [MORE_KEYWORDS]`\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"            + \"* The search is case-insensitive. e.g `stream` will match `Stream`\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"            + \"* Name and tag(s) will searched.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* Only full words will be matched e.g. `Han` will not match `Hans`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* Students matching at least one keyword will be returned (i.e. `OR` search).\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"            + \"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.\"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"            + \" `stream mission` will return students with `stream` or `mission` tag.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"            + \"* `filter John` returns `john` and `John Doe`\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"            + \"* `filter alex mission` returns `Alex Yeoh` and students with `mission` tag\u003cbr\u003e\";","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names or tags contain any of \"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob mission\";","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"    private final InformationContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"    public FilterCommand(InformationContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) {","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"cheweejia"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"cheweejia"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"phuccuongngo99":2,"Amadeus-Winarto":2,"-":25,"cheweejia":19,"hmanhduc2k":9,"jianoway":3}},{"path":"src/main/java/seedu/academydirectory/logic/commands/GetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.AdditionalViewType;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.parser.Prefix;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.student.PersonalDetail;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":" * Get personal detail of a student or students.","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"public class GetCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String COMMAND_WORD \u003d \"get\";","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String HELP_MESSAGE \u003d \"### Get personal detail of students\u0027: `get`\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"Gets personal details of all students if no name is specified, or gets \"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"personal details of all students whose name contain the specified name.\"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \" Currently supported personal details includes: \\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"- Email\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"            + \"- Telegram Handle\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"- Phone Number\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"Format: `get INFORMATION [MORE INFORMATION] [STUDENT_NAME]`\";","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Get personal details of students \"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"and displays them as a list\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"            + \"Parameters: \" + PREFIX_EMAIL + \" | \"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"            + PREFIX_TELEGRAM + \" | \" + PREFIX_PHONE + \"\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_PHONE + \" \" + PREFIX_NAME + \"Alex\";","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Personal details retrieval is successful\";","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String MESSAGE_FAILED \u003d \"Failed to receive one or more personal details. Showing what I can...\";","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String MESSAGE_NOTHING_TO_SHOW \u003d \"Nothing to show...\";","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final List\u003cPrefix\u003e SUPPORTED_PREFIX \u003d List.of(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM);","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final List\u003cPersonalDetailRetriever\u003e functionList;","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final NameContainsKeywordsPredicate nameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Constructs a GetCommand to retrieve PersonalDetail of students or a student. For GetCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"     * to operate on all students, pass an empty list to keywordList. Otherwise, GetCommand will operate only on","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Student objects whose Name contains the keyword in keywordList. This behavior is similar to {@code FilterCommand}","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param prefixList list of Prefixes for the PersonalDetail to be retrieved","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param keywordList list of keywords to match with names of students in the model","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"    public GetCommand(List\u003cPrefix\u003e prefixList, List\u003cString\u003e keywordList) {","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(prefixList);","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(keywordList);","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Checks done at GetCommandParser","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"        assert !prefixList.isEmpty();","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.nameContainsKeywordsPredicate \u003d keywordList.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"                || (keywordList.size() \u003d\u003d 1 \u0026\u0026 keywordList.contains(\"\"))","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"                ? null","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"                : new NameContainsKeywordsPredicate(keywordList);","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.functionList \u003d prefixList","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"                .stream()","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"                .filter(SUPPORTED_PREFIX::contains) // only accepts prefixes that are supported","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"                .map(PersonalDetailRetriever::new)","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"    private String executeFilter(VersionedModel model, PersonalDetailRetriever personalDetailRetriever) {","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"        ObservableList\u003cPersonalDetail\u003e view \u003d model.getFilteredStudentList()","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"                .stream().map(personalDetailRetriever)","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"                .filter(Optional::isPresent)","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"                .map(Optional::get)","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"                .collect(Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"        return view.size() \u003d\u003d 0","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"                ? null","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"                : view.stream().map(Object::toString).collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) {","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"        model.updateFilteredStudentList(nameContainsKeywordsPredicate \u003d\u003d null","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"                ? VersionedModel.PREDICATE_SHOW_ALL_STUDENTS","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"                : nameContainsKeywordsPredicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cString\u003e result \u003d functionList.stream().map(x -\u003e executeFilter(model, x))","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"        String feedbackMessage \u003d result.contains(null) ? MESSAGE_FAILED : MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"        String resultString \u003d result.stream().allMatch(Objects::isNull)","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"                ? MESSAGE_NOTHING_TO_SHOW","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"                : result.stream().filter(x -\u003e !Objects.isNull(x)).collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"        model.updateFilteredStudentList(VersionedModel.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"        model.setAdditionalViewType(AdditionalViewType.TEXT);","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"        model.setAdditionalInfo(AdditionalInfo.of(resultString));","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new CommandResult(feedbackMessage);","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"Amadeus-Winarto"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"Amadeus-Winarto"},"content":"            return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else if (other instanceof GetCommand) {","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"Amadeus-Winarto"},"content":"            List\u003cPersonalDetailRetriever\u003e otherList \u003d ((GetCommand) other).functionList;","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"Amadeus-Winarto"},"content":"            List\u003cPersonalDetailRetriever\u003e thisList \u003d this.functionList;","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"Amadeus-Winarto"},"content":"            return thisList.stream().map(otherList::contains).reduce(true, (x, y) -\u003e x \u0026\u0026 y)","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"Amadeus-Winarto"},"content":"                    \u0026\u0026","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"Amadeus-Winarto"},"content":"                    otherList.stream().map(thisList::contains).reduce(true, (x, y) -\u003e x \u0026\u0026 y);","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"Amadeus-Winarto"},"content":"        return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Obtains desired PersonalDetail among a list of Students","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final class PersonalDetailRetriever implements Function\u003cStudent, Optional\u003cPersonalDetail\u003e\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"Amadeus-Winarto"},"content":"        private final Prefix prefix;","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"Amadeus-Winarto"},"content":"        /**","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"Amadeus-Winarto"},"content":"         * Returns a Function that can be used to obtain the desired {@code PersonalDetail} among a list of Students.","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"Amadeus-Winarto"},"content":"         * @param prefix Prefix of the PersonalDetail that is desired","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"Amadeus-Winarto"},"content":"         */","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"Amadeus-Winarto"},"content":"        public PersonalDetailRetriever(Prefix prefix) {","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"Amadeus-Winarto"},"content":"            requireNonNull(prefix);","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"Amadeus-Winarto"},"content":"            // Guaranteed since PersonalDetailRetriever is only used by GetCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"Amadeus-Winarto"},"content":"            assert SUPPORTED_PREFIX.contains(prefix);","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"Amadeus-Winarto"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"Amadeus-Winarto"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"Amadeus-Winarto"},"content":"        public Optional\u003cPersonalDetail\u003e apply(Student student) {","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"Amadeus-Winarto"},"content":"            if (PREFIX_EMAIL.equals(prefix)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"Amadeus-Winarto"},"content":"                return Optional.of(student.getEmail());","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"Amadeus-Winarto"},"content":"            } else if (PREFIX_TELEGRAM.equals(prefix)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"Amadeus-Winarto"},"content":"                return Optional.of(student.getTelegram());","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"Amadeus-Winarto"},"content":"            } else if (PREFIX_PHONE.equals(prefix)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"Amadeus-Winarto"},"content":"                return student.getPhone().value.isEmpty() ? Optional.empty() : Optional.of(student.getPhone());","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"Amadeus-Winarto"},"content":"            } else {","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"Amadeus-Winarto"},"content":"                return Optional.empty();","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"Amadeus-Winarto"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"Amadeus-Winarto"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"Amadeus-Winarto"},"content":"            return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"Amadeus-Winarto"},"content":"                    || (other instanceof PersonalDetailRetriever // instanceof handles nulls","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"Amadeus-Winarto"},"content":"                    \u0026\u0026 prefix.equals(((PersonalDetailRetriever) other).prefix)); // state check","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"phuccuongngo99":3,"Amadeus-Winarto":156,"hmanhduc2k":7}},{"path":"src/main/java/seedu/academydirectory/logic/commands/GradeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_ASSESSMENT;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.Assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":" * A class that implements the command to record the Student\u0027s grade for an assessment.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"public class GradeCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"    public static final String COMMAND_WORD \u003d \"grade\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String HELP_MESSAGE \u003d \"### Adding grades for an assessment:  `grade`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Avengers will be able to add a studentâ€™s grade for a particular assessment.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"            + \"Format: `grade INDEX as/ASSESSMENT g/GRADE`\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"            + \"The input `ASSESSMENT` must be one of the following: RA1, MIDTERM, RA2, PE, FINAL.\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"            + \"The input `GRADE` must be a non-negative integer from 0 to 100 inclusive.\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"            + \"* `grade 1 as/RA1 g/15`\";","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Record the Student\u0027s grade for an assessment. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"            + \"INDEX \"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"            + PREFIX_ASSESSMENT + \"ASSESSMENT \"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"            + PREFIX_GRADE + \"GRADE \\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"            + \"1 \"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"            + PREFIX_ASSESSMENT + \"RA1 \"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"            + PREFIX_GRADE + \"16\";","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"cheweejia"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s\u0027s %2$s grade updated!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"cheweejia"},"content":"    private final Index index;","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"cheweejia"},"content":"    private final String assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"cheweejia"},"content":"    private final Integer grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"cheweejia"},"content":"     * Constructor for GradeCommand.","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"cheweejia"},"content":"     * @param index The student whose grade is to be recorded.","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"cheweejia"},"content":"     * @param assessment The assessment.","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"cheweejia"},"content":"     * @param grade The grade.","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"cheweejia"},"content":"    public GradeCommand(Index index, String assessment, Integer grade) {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"cheweejia"},"content":"        requireAllNonNull(index, assessment, grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"cheweejia"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"cheweejia"},"content":"        this.assessment \u003d assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"cheweejia"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"cheweejia"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"cheweejia"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"cheweejia"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"cheweejia"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"cheweejia"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"        Assessment assessmentToEdit \u003d studentToEdit.getAssessment().getCopy();","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"cheweejia"},"content":"        assessmentToEdit.updateAssessmentGrade(assessment, grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"cheweejia"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"cheweejia"},"content":"                studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"phuccuongngo99"},"content":"                studentToEdit.getTelegram(), studentToEdit.getStudioRecord(),","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"cheweejia"},"content":"                assessmentToEdit, studentToEdit.getTags());","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"cheweejia"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedStudent.getName(), assessment),","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"                Optional.of(String.format(MESSAGE_SUCCESS, editedStudent.getName(), assessment)));","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"cheweejia"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"cheweejia"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"cheweejia"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"cheweejia"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"cheweejia"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"cheweejia"},"content":"        if (!(other instanceof GradeCommand)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"cheweejia"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"cheweejia"},"content":"        // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"cheweejia"},"content":"        GradeCommand e \u003d (GradeCommand) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"cheweejia"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"cheweejia"},"content":"                \u0026\u0026 assessment.equals(e.assessment)","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"cheweejia"},"content":"                \u0026\u0026 grade.equals(e.grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"phuccuongngo99":1,"Amadeus-Winarto":5,"cheweejia":90,"hmanhduc2k":7,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.AdditionalViewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String DEFAULT_MESSAGE \u003d Messages.GENERAL_HELP_MESSAGE;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"            + \": Shows program usage instructions for the command in query\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Example: \" + COMMAND_WORD + \"add\";","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String MESSAGE_HELP_SUCCESS_GENERAL \u003d \"Showing summary help.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String MESSAGE_HELP_SUCCESS_SPECIFIC \u003d \"Show help for command: %1$s.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"    private final String commandWord;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"    private final String helpMessage;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"    private final boolean isGeneralHelp;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"     * Default constructor of help, resulting in a summary table on the help window.","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"        this.commandWord \u003d COMMAND_WORD;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"        this.helpMessage \u003d DEFAULT_MESSAGE;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"        this.isGeneralHelp \u003d true;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor for the Help command","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"     * @param helpMessage of the command needed to be clarified by the users","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"    public HelpCommand(String commandWord, String helpMessage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"        requireAllNonNull(helpMessage, commandWord);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"        this.commandWord \u003d commandWord;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"        this.helpMessage \u003d helpMessage;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"        this.isGeneralHelp \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"        if (this.commandWord \u003d\u003d null || this.helpMessage \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"            throw new CommandException(Messages.MESSAGE_HELP_NOT_EXIST);","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"        model.setAdditionalViewType(AdditionalViewType.HELP);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"        model.setAdditionalInfo(AdditionalInfo.of(helpMessage));","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"        CommandResult commandResult;","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"        if (isGeneralHelp) {","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"            commandResult \u003d new CommandResult(MESSAGE_HELP_SUCCESS_GENERAL, true, false);","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"            commandResult \u003d new CommandResult(String.format(MESSAGE_HELP_SUCCESS_SPECIFIC, this.commandWord),","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"                    true, false);","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"        return commandResult;","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"        if (!(obj instanceof HelpCommand)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"        HelpCommand curr \u003d (HelpCommand) obj;","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"        return curr.helpMessage.equals(this.helpMessage)","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"                \u0026\u0026 curr.commandWord.equals(this.commandWord);","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Amadeus-Winarto":2,"-":12,"hmanhduc2k":64,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/logic/commands/HistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.AdditionalViewType;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionControlController;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":" * Lists all commands used in the Academy Directory to the user.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"public class HistoryCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String COMMAND_WORD \u003d \"history\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Commit history shown\";","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String HELP_MESSAGE \u003d \"### Listing all history : `history`\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"            + \"Shows a list of all command history in the Academy Directory.\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"Format: `history`\";","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final SimpleDateFormat DF \u003d new SimpleDateFormat(\"EEE, d MMM yyyy HH:mm:ss Z\");","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        String result \u003d String.join(\"\\n\", retrieveHistory(model));","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        model.setAdditionalViewType(AdditionalViewType.TEXT);","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        model.setAdditionalInfo(AdditionalInfo.of(result));","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"    private List\u003cString\u003e retrieveHistory(VersionedModel model) {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit headCommit \u003d model.getHeadCommit();","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit currLatestCommit \u003d model.fetchCommitByLabel(VersionControlController.CURRENT_LABEL_STRING);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit oldLatestCommit \u003d model.fetchCommitByLabel(VersionControlController.OLD_LABEL_STRING);","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit lca \u003d currLatestCommit.findLca(oldLatestCommit);","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit currLatestAncestor \u003d currLatestCommit.getHighestAncestor(lca);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit oldLatestAncestor \u003d oldLatestCommit.getHighestAncestor(lca);","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"        assert !currLatestAncestor.equals(oldLatestAncestor); // Violates LCA definition","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cCommit\u003e earlyHistory \u003d lca.getHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cCommit\u003e currLatestToEarly \u003d currLatestCommit.getHistory(lca);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cCommit\u003e oldLatestToEarly \u003d oldLatestCommit.getHistory(lca);","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cCommit\u003e sortedBranch \u003d Stream.concat(oldLatestToEarly.stream(), currLatestToEarly.stream())","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"                .sorted(Comparator.comparing(Commit::getDate)).collect(Collectors.toList());","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cCommit\u003e sortedEarlyHistory \u003d earlyHistory.stream().sorted(Comparator.comparing(Commit::getDate))","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"        for (Commit commit : sortedEarlyHistory) {","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"            String label \u003d getLabel(commit, currLatestCommit, oldLatestCommit, headCommit);","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"            result.add(\"| \" + getPresentableHistory(commit, 1, label));","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"            result.add(\"* \" + getPresentableHistory(commit, 0, label));","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (sortedBranch.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"            Collections.reverse(result);","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"            return result;","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"        result.add(\"|/\"); // Separates early history from branch","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Latest on left lane","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"        for (Commit commit : sortedBranch) {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"            String label \u003d getLabel(commit, currLatestCommit, oldLatestCommit, headCommit);","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"            if (oldLatestToEarly.contains(commit)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"                result.add(\"| | \" + getPresentableHistory(commit, 1, label));","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"                result.add(\"* | \" + getPresentableHistory(commit, 0, label));","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"                result.add(\"| | \" + getPresentableHistory(commit, 1, label));","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"                result.add(\"| * \" + getPresentableHistory(commit, 0, label));","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"        Collections.reverse(result);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"        return result;","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"    private String getPresentableHistory(Commit commit, int idx, String label) {","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"        assert idx \u003d\u003d 0 || idx \u003d\u003d 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (idx \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"            return commit.getHash().substring(0, 5) + \" - \" + DF.format(commit.getDate()) + \" \" + label;","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"            return \"\\t\\t\" + commit.getMessage();","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"    private String getLabel(Commit commit, Commit currLatestCommit, Commit oldLatestCommit, Commit headCommit) {","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (commit.equals(headCommit)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"            result.add(\"(HEAD)\");","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (commit.equals(currLatestCommit)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"            result.add(\"(MAIN)\");","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (commit.equals(oldLatestCommit)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"            result.add(\"(OLD)\");","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"Amadeus-Winarto"},"content":"        return String.join(\" \", result);","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Amadeus-Winarto":113,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.model.VersionedModel.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":" * Lists all students in the academy directory to the user.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String HELP_MESSAGE \u003d \"### Listing all students : `list`\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"            + \"Shows a list of all students in the academy directory.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Format: `list`\";","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"phuccuongngo99":4,"Amadeus-Winarto":3,"-":17,"hmanhduc2k":4,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/logic/commands/ParticipationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Attendance;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Participation;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"public class ParticipationCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"    public static final String COMMAND_WORD \u003d \"participation\";","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"    public static final String HELP_MESSAGE \u003d \"### Editing a studentâ€™s Studio participation: `participation`\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"            + \"Avengers will be able to track the participation of their students during the relevant studios. \"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"            + \"We will be keeping track of Studio participation with a counter system which starts at 0 by default.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"            + \"Format: `participation INDEX... ses/STUDIO_SESSION add/PARTICIPATION_TO_ADD`\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"            + \"* Edits the Studio participation of a student or multiple students based on their `INDEX`.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"            + \"* Modifies the student(s) at the specified `INDEX`. The index refers to the index number shown \"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"            + \"in the displayed student list. The index **must be a positive integer** 1, 2, 3, â€¦\\u200B\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"            + \"* The `STUDIO_SESSION` field is a positive integer from 1 to 12 inclusive which refers to the \"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"            + \"Studio Session to be modified.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"            + \"* The `PARTICIPATION_TO_ADD` field is an integer from -500 to 500 inclusive which indicates \"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"            + \"the Participation score of the student.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"            + \"* `PARTICIPATION_TO_ADD` will be added to the student\u0027s current Participation score\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"            + \"* A studentâ€™s Studio Participation score cannot be reduced below 0.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"            + \"* If a student\u0027s `Attendance` is `false` and the Participation score to be added is greater than 0, \"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"            + \"the student will also be marked as having attended the Studio.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"            + \"* `participation 1, 2, 3 ses/12 add/500`\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"            + \"* `participation 4, 6 ses/2 add/-300`\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"            + \"* `participation 4 ses/9 add/1`\";","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"            + \": Edits the participation count of the student(s) identified \"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"            + \"by the index number used in the last person listing as well \"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"            + \"as the index of the Studio session. Existing participation will \"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"            + \"be overwritten by the input or incremented/decremented depending on the flag.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"            + \"Parameters: INDEX(ES) (positive integer) \"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"            + \"ses/ STUDIO_SESSION_INDEX (positive integer within range) \"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"            + \"add/ PARTICIPATION_TO_ADD\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 ses/ 7 add/ 1\";","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_UPDATE_PARTICIPATION_SUCCESS \u003d \"Participation updated!\";","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"    private final ArrayList\u003cIndex\u003e indexArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"    private final Integer studioSession;","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"    private final Integer participationUpdate;","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"     * @param participationUpdate The new updated participation count","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"     * @param studioSession The studio session number","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"     * @param indexArrayList The ArrayList of students that are involved in the ParticipationCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"    public ParticipationCommand(Integer participationUpdate, Integer studioSession,","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"                                ArrayList\u003cIndex\u003e indexArrayList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"        requireAllNonNull(indexArrayList, participationUpdate, studioSession);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"        this.indexArrayList \u003d indexArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"        this.participationUpdate \u003d participationUpdate;","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"        this.studioSession \u003d studioSession;","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"        for (Index index : indexArrayList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"        if (participationUpdate \u003e 0) {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"jianoway"},"content":"            int sessionCount \u003d model.getFilteredStudentList().get(0).getParticipation().getSessionCount();","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"jianoway"},"content":"            for (Index index : indexArrayList) {","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"                Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"                boolean[] newAttArr \u003d studentToEdit.getAttendance().getAttendanceArray();","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"                newAttArr[studioSession - 1] \u003d true;","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"jianoway"},"content":"                Attendance newAttendance \u003d new Attendance(sessionCount);","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"jianoway"},"content":"                newAttendance.setAttendance(newAttArr);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"jianoway"},"content":"                studentToEdit.setAttendance(newAttendance);","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"jianoway"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"jianoway"},"content":"        for (Index index : indexArrayList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"jianoway"},"content":"            Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"jianoway"},"content":"            Participation participationToEdit \u003d studentToEdit.getParticipation();","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"jianoway"},"content":"            participationToEdit \u003d participationToEdit.add(studioSession, participationUpdate);","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"            Student editedStudent \u003d new Student(","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"jianoway"},"content":"                    studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"phuccuongngo99"},"content":"                    studentToEdit.getTelegram(), studentToEdit.getStudioRecord(),","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"jianoway"},"content":"                    studentToEdit.getAssessment(), studentToEdit.getTags());","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"jianoway"},"content":"            editedStudent.setParticipation(participationToEdit);","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"jianoway"},"content":"            model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new CommandResult(MESSAGE_UPDATE_PARTICIPATION_SUCCESS,","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"                Optional.of(MESSAGE_UPDATE_PARTICIPATION_SUCCESS));","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"jianoway"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"jianoway"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"jianoway"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"jianoway"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"jianoway"},"content":"        if (!(other instanceof ParticipationCommand)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"jianoway"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"jianoway"},"content":"        ParticipationCommand e \u003d (ParticipationCommand) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"jianoway"},"content":"        return indexArrayList.equals(e.indexArrayList)","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"jianoway"},"content":"                \u0026\u0026 participationUpdate \u003d\u003d e.participationUpdate","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"jianoway"},"content":"                \u0026\u0026 studioSession.equals(e.studioSession);","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"phuccuongngo99":1,"Amadeus-Winarto":5,"jianoway":124}},{"path":"src/main/java/seedu/academydirectory/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.model.VersionControlController.CURRENT_LABEL_STRING;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String HELP_MESSAGE \u003d \"### Redo changes : `redo`\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"            + \"Redo changes done to Academy Directory. Use the history command to preview what redo will do\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"Format: `redo`\";","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully redo changes to Academy\"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \" Directory as requested!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String REDO_REQUEST_REJECTED \u003d \"Unable to redo Academy Directory as requested ...\";","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Redo changes to Academy Directory \"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param model {@code VersionedModel} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit currLatest \u003d model.fetchCommitByLabel(CURRENT_LABEL_STRING);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit nextCommit \u003d currLatest.getHighestAncestor(model.getHeadCommit());","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (nextCommit.equals(Commit.emptyCommit())) {","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new CommandException(REDO_REQUEST_REJECTED + \" Is there anything to redo?\");","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        new RevertCommand(nextCommit.getHash()).execute(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Amadeus-Winarto":42,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/logic/commands/RevertCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.ReadOnlyAcademyDirectory;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.storage.AcademyDirectoryStorage;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.storage.JsonAcademyDirectoryStorage;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.storage.StorageManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"public class RevertCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String COMMAND_WORD \u003d \"revert\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String HELP_MESSAGE \u003d \"### Revert to a history : `revert`\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"            + \"Reverts storage to an old history in the Academy Directory.\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"Format: `revert KEYWORD`\";","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully reverted Academy\"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \" Directory as requested!\";","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String REVERT_REQUEST_REJECTED \u003d \"Unable to revert Academy Directory as requested ...\";","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Reverts Academy Directory to the stage given by \"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"the five character hash\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"Parameters: KEYWORD ...\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"Example: \" + COMMAND_WORD + \" 6dfdx\";","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final String fiveDigitHash;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"    public RevertCommand(String hash) {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.fiveDigitHash \u003d hash;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"            Commit relevantCommit \u003d model.revert(this.fiveDigitHash);","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"            if (relevantCommit.isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"                throw new CommandException(REVERT_REQUEST_REJECTED + \"Hash value correct (and not current state) ?\");","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new CommandException(REVERT_REQUEST_REJECTED, e);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"        AcademyDirectoryStorage academyDirectoryStorage \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"                new JsonAcademyDirectoryStorage(model.getAcademyDirectoryFilePath());","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        StorageManager storage \u003d new StorageManager(academyDirectoryStorage,","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"                null,","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"                model.getUserPrefs().getVersionControlPath());","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"        Optional\u003cReadOnlyAcademyDirectory\u003e academyDirectoryOptional;","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"        ReadOnlyAcademyDirectory initialData;","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"            academyDirectoryOptional \u003d storage.readAcademyDirectory();","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"            initialData \u003d academyDirectoryOptional.orElseGet(SampleDataUtil::getSampleAcademyDirectory);","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (DataConversionException | IOException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"            initialData \u003d new AcademyDirectory();","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"        model.setAcademyDirectory(initialData);","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Amadeus-Winarto":71,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/logic/commands/ShowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.AdditionalViewType;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":" * A class that implements the command to show all the students\u0027 grades for an assessment.","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"    public static final String HELP_MESSAGE \u003d \"### Show grades for an assessment:  `show`\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"            + \"Avengers will be able to view all students\u0027 grades for a particular assessment.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"            + \"Format: `show ASSESSMENT`\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"            + \"Record students\u0027 `GRADE` for the `ASSESSMENT`.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"            + \"The input `ASSESSMENT` must be a valid assessment: RA1, MIDTERM, RA2, PE, FINAL.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"            + \"* `show RA1`\";","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Show students\u0027 grades for an assessment. \"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\nParameters: \"","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"            + \"ASSESSMENT \"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"            + \"RA1\";","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Grades for %1$s displayed.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"    private final String assessment;","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"     * Constructor for ShowCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"     * @param assessment The assessment\u0027s grades that will be displayed.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"    public ShowCommand(String assessment) {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"        requireNonNull(assessment);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"cheweejia"},"content":"        this.assessment \u003d assessment.toUpperCase();","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"cheweejia"},"content":"     * Return a String representation of the collated grades for a particular Assessment.","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"cheweejia"},"content":"     * @param students The students in the AcademyDirectory.","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"cheweejia"},"content":"     * @param assessment The specified Assessment.","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"cheweejia"},"content":"     * @return A String representation of the grades for a particular Assessment.","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"cheweejia"},"content":"    public static String displayResult(ObservableList\u003cStudent\u003e students, String assessment) {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"cheweejia"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"cheweejia"},"content":"        result.append(\"Results for \").append(assessment).append(\"\\n\");","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"cheweejia"},"content":"        double totalMarks \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"cheweejia"},"content":"        int numOfValidGrades \u003d 0;","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"cheweejia"},"content":"        for (Student student : students) {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"cheweejia"},"content":"            String name \u003d student.getName().fullName;","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"cheweejia"},"content":"            String grade \u003d student.getAssessment().getAssessmentGrade(assessment);","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"cheweejia"},"content":"            totalMarks +\u003d grade.equals(\"NA\") ? 0 : Integer.parseInt(grade);","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"cheweejia"},"content":"            numOfValidGrades +\u003d grade.equals(\"NA\") ? 0 : 1;","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"cheweejia"},"content":"            result.append(name).append(\": \").append(grade).append(\"\\n\");","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"cheweejia"},"content":"        String average \u003d String.format(\"%.2f\", totalMarks / numOfValidGrades);","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"cheweejia"},"content":"        result.append(\"\\n\").append(\"Number of students recorded: \").append(numOfValidGrades)","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"cheweejia"},"content":"                .append(\"\\n\").append(\"Average: \").append(average);","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"cheweejia"},"content":"        return result.toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) {","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"cheweejia"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"cheweejia"},"content":"        ObservableList\u003cStudent\u003e students \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"cheweejia"},"content":"        String result \u003d displayResult(students, this.assessment);","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"        model.setAdditionalViewType(AdditionalViewType.TEXT);","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"        model.setAdditionalInfo(AdditionalInfo.of(result));","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, assessment));","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"cheweejia"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"cheweejia"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"cheweejia"},"content":"            return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"cheweejia"},"content":"        if (!(other instanceof ShowCommand)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"cheweejia"},"content":"            return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"cheweejia"},"content":"        ShowCommand e \u003d (ShowCommand) other;","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"cheweejia"},"content":"        return assessment.equals(e.assessment);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Amadeus-Winarto":3,"cheweejia":87,"hmanhduc2k":5}},{"path":"src/main/java/seedu/academydirectory/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_ATTRIBUTE;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_ORDER;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.model.VersionedModel.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Assessment;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Participation;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":" * A class that implements the command to sort the student list.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"    public static final String HELP_MESSAGE \u003d \"### Sorts students by specific attribute:  `sort`\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"            + \"Avengers will be able to sort their AcademyDirectory by the specified attribute.\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"            + \"Format: `sort attr/ATTRIBUTE ord/ORDER`\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"            + \"Sorts AcademyDirectory in `ORDER` order by their `ATTRIBUTE`.\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"            + \"The input `ATTRIBUTE` must be a valid attribute: name, participation,\"","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"            + \" RA1, MIDTERM, RA2, PE, FINAL, AVERAGE.\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"            + \"The input `ORDER` must be a valid order: asc, desc\"","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"            + \"* `sort attr/name ord/asc`\"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"            + \"* `sort attr/RA1 ord/desc`\";","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts student by the specified attribute. \"","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"            + \"\\nParameters: \"","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"            + PREFIX_ATTRIBUTE + \"ATTRIBUTE \"","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"            + PREFIX_ORDER + \" ORDER \"","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"            + PREFIX_ATTRIBUTE + \"name \"","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"            + PREFIX_ORDER + \"asc\";","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"    private final String attribute;","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"    private final boolean isAscendingOrder;","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"     * Constructor for SortCommand.","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"     * @param attribute The attribute to be sorted by.","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"     * @param isAscendingOrder The order in which to sort.","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"    public SortCommand(String attribute, boolean isAscendingOrder) {","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"        requireNonNull(attribute);","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"        requireNonNull(isAscendingOrder);","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"        this.attribute \u003d attribute.toUpperCase();","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"        this.isAscendingOrder \u003d isAscendingOrder;","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"     * Return a String representation of the respective sort executed.","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"     * @return A String representation of the sort executed.","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"    public String getResultString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"        String result \u003d \"AcademyDirectory is now sorted by \";","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"        String orderString \u003d isAscendingOrder ? \"ascending\" : \"descending\";","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"        return result + attribute + \" in \" + orderString + \" order!\";","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e students \u003d model.getAcademyDirectory().getStudentList();","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"        Comparator\u003cStudent\u003e comparator \u003d getComparator();","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e sortedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"        sortedList.addAll(students);","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"        sortedList.sort(comparator);","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"jianoway"},"content":"        String result \u003d getResultString();","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"jianoway"},"content":"        AcademyDirectory sortedAcademyDirectory \u003d new AcademyDirectory();","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"        sortedAcademyDirectory.setStudents(sortedList);","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"        model.setAcademyDirectory(sortedAcademyDirectory);","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"jianoway"},"content":"        return new CommandResult(result, Optional.of(result));","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"jianoway"},"content":"    public Comparator\u003cStudent\u003e getComparator() {","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"jianoway"},"content":"        switch(attribute) {","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"jianoway"},"content":"        case \"NAME\":","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"jianoway"},"content":"            return Name.getComparator(isAscendingOrder);","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"jianoway"},"content":"        case \"PARTICIPATION\":","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"jianoway"},"content":"            return Participation.getComparator(isAscendingOrder);","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"jianoway"},"content":"        case \"AVERAGE\":","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"            return Assessment.getAverageComparator(isAscendingOrder);","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"jianoway"},"content":"        default:","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"jianoway"},"content":"            return Assessment.getIndividualComparator(isAscendingOrder, attribute);","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"jianoway"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"jianoway"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"jianoway"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"jianoway"},"content":"            return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"jianoway"},"content":"        if (!(other instanceof SortCommand)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"jianoway"},"content":"            return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"jianoway"},"content":"        SortCommand e \u003d (SortCommand) other;","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"jianoway"},"content":"        return attribute.equals(e.attribute)","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"jianoway"},"content":"                \u0026\u0026 isAscendingOrder \u003d\u003d e.isAscendingOrder;","lastModifiedDate":"2021-10-15"},{"lineNumber":121,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"Amadeus-Winarto":3,"jianoway":120}},{"path":"src/main/java/seedu/academydirectory/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":" * Represents a command that tags a student.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"    public static final String HELP_MESSAGE \u003d \"### Assigns tag(s) to a student: `tag`\\\\\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"            + \"Tutors will be able to tag a student with relevant information.\\\\\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"            + \"Format: `tag INDEX t/tag [t/tag] . . . `\\\\\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"            + \"Recommended use of tags:\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"            + \"- Set a reminder to mark the student\u0027s mission with a `mission` tag\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"            + \"- Note down the topics that the student needs help with\\\\\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"            + \"Entering the tag command with a single empty tag `t/` will remove all tags assigned to the student.\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"            + \"Tags names should be alphanumeric and consist of only one word.\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"            + \"For multiple tag entries, none of the tags should be empty.\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"            + \"All existing tags will be replaced by the new tags.\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"            + \"tag 1 t/\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"            + \"tag 1 t/mission\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"            + \"tag 1 t/streams t/envModel\";","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Assigns tag(s) to a student.\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"            + \"INDEX \"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"            + PREFIX_TAG + \"TAG...\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"cheweejia"},"content":"            + \"1 \"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"cheweejia"},"content":"            + PREFIX_TAG + \"mission \"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"cheweejia"},"content":"            + PREFIX_TAG + \"streams\";","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"cheweejia"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s\u0027s tag(s) updated!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"cheweejia"},"content":"    private final Index index;","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"cheweejia"},"content":"    private final Set\u003cTag\u003e tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"cheweejia"},"content":"     * Creates a TagCommand to add the specified {@code Tag}","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"cheweejia"},"content":"     * @param tag The tag to be assigned.","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"cheweejia"},"content":"    public TagCommand(Index index, Set\u003cTag\u003e tag) {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"cheweejia"},"content":"        requireAllNonNull(index, tag);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"cheweejia"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"cheweejia"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"cheweejia"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"cheweejia"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"cheweejia"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"cheweejia"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"cheweejia"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"cheweejia"},"content":"        Set\u003cTag\u003e editedTagSet \u003d new HashSet\u003c\u003e(tag);","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"cheweejia"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"cheweejia"},"content":"                studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"cheweejia"},"content":"                studentToEdit.getTelegram(), studentToEdit.getStudioRecord(),","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"cheweejia"},"content":"                studentToEdit.getAssessment(), editedTagSet);","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"cheweejia"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"        model.updateFilteredStudentList(VersionedModel.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, studentToEdit.getName()),","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"                Optional.of(String.format(MESSAGE_SUCCESS, studentToEdit.getName())));","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"cheweejia"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"cheweejia"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"cheweejia"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"cheweejia"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"cheweejia"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"cheweejia"},"content":"        if (!(other instanceof TagCommand)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"cheweejia"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"cheweejia"},"content":"        // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"cheweejia"},"content":"        TagCommand e \u003d (TagCommand) other;","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"cheweejia"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"cheweejia"},"content":"                \u0026\u0026 tag.equals(e.tag);","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Amadeus-Winarto":6,"cheweejia":97}},{"path":"src/main/java/seedu/academydirectory/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String HELP_MESSAGE \u003d \"### Undo changes : `undo`\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"            + \"Undo changes done to Academy Directory. Use the history command to preview what undo will do\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"Format: `undo`\";","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully undone changes to Academy\"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \" Directory as requested!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String UNDO_REQUEST_REJECTED \u003d \"Unable to undo Academy Directory as requested ...\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Undo changes to Academy Directory \"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param model {@code VersionedModel} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandResult execute(VersionedModel model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit prevCommit \u003d model.getHeadCommit().getParentSupplier().get();","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (prevCommit.isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new CommandException(UNDO_REQUEST_REJECTED + \" Is there anything to undo?\");","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        new RevertCommand(prevCommit.getHash()).execute(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Amadeus-Winarto":39,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.AdditionalViewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String HELP_MESSAGE \u003d \"#### Viewing all related information of a student: `view`\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Displays all information relating to a student, both personal and academic information. \"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Information shown include the student\u0027s name, tag, participation data, examination score, \"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"            + \"and contact information.\\n\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Format: `view INDEX`\\n\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* View students\u0027 information, both personal and academic related, \"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"            + \"based on their `INDEX` number on the list.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* Information shown for the student will be in a drop-down menu listing participation and grades.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* Contact information like phone number, email address, and Telegram handle are also displayed.\\n\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"            + \"* `view 1`\\n\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"            + \"**Include an interactive GUI version where Avengers can click\"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"            + \" on the list to view student information as well.**\";","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": View full information about the student.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"View information related to %1$s\";","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"    private final Index index;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor for the View Command","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"     * @param index index student need to retrieve from","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"    public ViewCommand(Index index) {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"     * Execute the command View","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param model {@code VersionedModel} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"     * @return Command result that contains the student","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"     * @throws CommandException when index is not valid","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"phuccuongngo99"},"content":"    public CommandResult execute(VersionedModel model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"        if (index.getZeroBased() \u003e\u003d studentList.size()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"        Student studentToView \u003d studentList.get(index.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"        model.setAdditionalViewType(AdditionalViewType.VIEW);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"        model.setAdditionalInfo(AdditionalInfo.of(studentToView));","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, studentToView.getName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"            return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"        ViewCommand otherViewCommand \u003d (ViewCommand) other;","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"        return this.index.equals(otherViewCommand.index);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"phuccuongngo99":15,"Amadeus-Winarto":1,"hmanhduc2k":64}},{"path":"src/main/java/seedu/academydirectory/logic/commands/VisualizeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.model.VersionedModel.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.logic.AdditionalViewType;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Assessment;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"public class VisualizeCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String COMMAND_WORD \u003d \"visualize\";","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String HELP_MESSAGE \u003d \"### Visualize class assessment statistic : `visualize`\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"Tutors will be able to visualize class performance in assessment with box and whisker plot.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"Format: `visualize`\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"* `visualize`\";","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"            + \"visualize class performance in assessment with box and whisker plot. \";","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String MESSAGE_VISUALIZE_SUCCESS \u003d \"Class Performance in Assessment shown\";","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param model {@code VersionedModel} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"    public CommandResult execute(VersionedModel model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"        //Always go back to the full list of students","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"        Map\u003cString, List\u003cInteger\u003e\u003e classAssessmentResults \u003d studentList","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"                                .stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"                                .map(Student::getAssessment)","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"                                .map(Assessment::getAssessmentHashMap)","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"                                .flatMap(hashMap -\u003e hashMap.entrySet().stream())","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"                                .collect(Collectors.groupingBy(","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"                                        Map.Entry::getKey,","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"                                        Collectors.mapping(Map.Entry::getValue, Collectors.toList())));","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"        model.setAdditionalViewType(AdditionalViewType.VISUALIZE);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"        model.setAdditionalInfo(AdditionalInfo.of(classAssessmentResults));","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new CommandResult(MESSAGE_VISUALIZE_SUCCESS);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"phuccuongngo99":49,"Amadeus-Winarto":12}},{"path":"src/main/java/seedu/academydirectory/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands.exceptions;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/logic/parser/AcademyDirectoryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.AddCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.AttendanceCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.Command;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.EditCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.GetCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.GradeCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.HistoryCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.ListCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.ParticipationCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.RedoCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.RevertCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.SortCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.TagCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.UndoCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.VisualizeCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"public class AcademyDirectoryParser {","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"cheweejia"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"cheweejia"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"        case GetCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"            return new GetCommandParser().parse(arguments);","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"        case AttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"            return new AttendanceCommandParser().parse(arguments);","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"        case ParticipationCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"            return new ParticipationCommandParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"cheweejia"},"content":"        case GradeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"cheweejia"},"content":"            return new GradeCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"cheweejia"},"content":"        case ShowCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"cheweejia"},"content":"            return new ShowCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"cheweejia"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"cheweejia"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":94,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"        case RevertCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"            return new RevertCommandParser().parse(arguments);","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"hmanhduc2k"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"hmanhduc2k"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"hmanhduc2k"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"hmanhduc2k"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"hmanhduc2k"},"content":"        case HistoryCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"hmanhduc2k"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"hmanhduc2k"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"hmanhduc2k"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"        case VisualizeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"hmanhduc2k"},"content":"            return new SingularCommandParser(commandWord).parse(arguments);","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"phuccuongngo99":1,"Amadeus-Winarto":13,"-":49,"cheweejia":15,"hmanhduc2k":12,"jianoway":25}},{"path":"src/main/java/seedu/academydirectory/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.logic.commands.AddCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.AddCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM,","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EMAIL, PREFIX_TELEGRAM)","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"        // Required field","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"        Telegram telegram \u003d ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get());","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"        // Non required field","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).orElse(\"NA\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"        Student student \u003d new Student(name, phone, email, telegram, tagList);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"        return new AddCommand(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"phuccuongngo99":15,"-":39,"hmanhduc2k":2,"jianoway":9}},{"path":"src/main/java/seedu/academydirectory/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":59,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":147,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/logic/parser/AttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_STUDIO_ATTENDANCE;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_STUDIO_SESSION;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.AttendanceCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"public class AttendanceCommandParser implements Parser\u003cAttendanceCommand\u003e {","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"     * Parses the given {@code String} of arguments in the context of the AttendanceCommand","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"     * and returns an AttendanceCommand object for execution.","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"    public AttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"                .tokenize(args, PREFIX_STUDIO_SESSION, PREFIX_STUDIO_ATTENDANCE);","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STUDIO_SESSION, PREFIX_STUDIO_ATTENDANCE)","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"        ArrayList\u003cIndex\u003e indexArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"        String indexString \u003d argMultimap.getPreamble();","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"        String[] indexArray \u003d indexString.split(\",\");","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"        for (String str : indexArray) {","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"            String strippedStr \u003d str.trim();","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"            indexArrayList.add(ParserUtil.parseIndex(strippedStr));","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"        boolean attendanceStatus \u003d ParserUtil.parseAttendance(argMultimap.getValue(PREFIX_STUDIO_ATTENDANCE).get());","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"        Integer studioSession \u003d ParserUtil.parseStudioRecord(argMultimap.getValue(PREFIX_STUDIO_SESSION).get());","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"        return new AttendanceCommand(attendanceStatus, studioSession, indexArrayList);","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"cheweejia"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"cheweejia"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"cheweejia"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"cheweejia"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"cheweejia":17,"jianoway":34}},{"path":"src/main/java/seedu/academydirectory/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"te/\");","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"    public static final Prefix PREFIX_STUDIO_SESSION \u003d new Prefix(\"ses/\");","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"    public static final Prefix PREFIX_STUDIO_ATTENDANCE \u003d new Prefix(\"att/\");","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"    public static final Prefix PREFIX_ASSESSMENT \u003d new Prefix(\"as/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"    public static final Prefix PREFIX_GRADE \u003d new Prefix(\"g/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"    public static final Prefix PREFIX_ADD_PARTICIPATON \u003d new Prefix(\"add/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"    public static final Prefix PREFIX_ORDER \u003d new Prefix(\"ord/\");","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"    public static final Prefix PREFIX_ATTRIBUTE \u003d new Prefix(\"attr/\");","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"phuccuongngo99":1,"-":12,"cheweejia":2,"jianoway":6}},{"path":"src/main/java/seedu/academydirectory/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":24,"jianoway":5}},{"path":"src/main/java/seedu/academydirectory/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.EditCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"            editStudentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"            editStudentDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"            editStudentDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"            editStudentDescriptor.setTelegram(ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"phuccuongngo99"},"content":"        return new EditCommand(index, editStudentDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"phuccuongngo99":11,"-":38,"cheweejia":1,"jianoway":8}},{"path":"src/main/java/seedu/academydirectory/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.InformationContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"        return new FilterCommand(new InformationContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"cheweejia":32}},{"path":"src/main/java/seedu/academydirectory/logic/parser/GetCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.GetCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":" * Parses input arguments and creates a new GetCommand object","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"public class GetCommandParser implements Parser\u003cGetCommand\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Supplier\u003cStream\u003cPrefix\u003e\u003e RELEVANT_PREFIXES_SUPPLIER \u003d () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"            Stream.of(GetCommand.SUPPORTED_PREFIX.toArray(Prefix[]::new));","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Parses the given {@code String} of arguments in the context of the GetCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"     * and returns a GetCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    public GetCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"                        Stream.concat(Stream.of(PREFIX_NAME), RELEVANT_PREFIXES_SUPPLIER.get())","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"                                .toArray(Prefix[]::new));","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cString\u003e keywordList \u003d argMultimap.getValue(PREFIX_NAME)","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"                .stream()","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"                .flatMap(name -\u003e Stream.of(name.split(\"\\\\s\")))","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cPrefix\u003e prefixList \u003d RELEVANT_PREFIXES_SUPPLIER.get()","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"                .filter(x -\u003e !argMultimap.getAllValues(x).isEmpty())","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Check at least one relevant prefix is provided","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        boolean noPrefix \u003d prefixList.size() \u003d\u003d 0;","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (noPrefix || (keywordList.size() \u003d\u003d 1 \u0026\u0026 keywordList.contains(\"\"))) {","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new GetCommand(prefixList, keywordList);","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Amadeus-Winarto":53}},{"path":"src/main/java/seedu/academydirectory/logic/parser/GradeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_ASSESSMENT;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.GradeCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"public class GradeCommandParser implements Parser\u003cGradeCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"     * Parses the given {@code String} of arguments in the context of the GradeCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"     * and returns an GradeCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"    public GradeCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ASSESSMENT, PREFIX_GRADE);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ASSESSMENT, PREFIX_GRADE)","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GradeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"        String assessment \u003d ParserUtil.parseAssessment(argMultimap.getValue(PREFIX_ASSESSMENT).get()).toUpperCase();","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"        Integer grade \u003d ParserUtil.parseGrade(argMultimap.getValue(PREFIX_GRADE).get());","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"        return new GradeCommand(index, assessment, grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"cheweejia":44}},{"path":"src/main/java/seedu/academydirectory/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_HELP_NOT_EXIST;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.AddCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.AttendanceCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.EditCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.GetCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.GradeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.HistoryCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ListCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.ParticipationCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.RedoCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.RevertCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.SortCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.TagCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.UndoCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.VisualizeCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"     * Parses the given {@code String} of arguments in the context of the HelpCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"     * and returns an HelpCom object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"    public HelpCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"        userInput \u003d userInput.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"        switch (userInput) {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, AddCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, EditCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, DeleteCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, ClearCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"cheweejia"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"cheweejia"},"content":"            return new HelpCommand(userInput, FilterCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"        case GetCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"            return new HelpCommand(userInput, GetCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, ListCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"        case AttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, AttendanceCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"        case GradeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, GradeCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, ExitCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"        case ParticipationCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"            return new HelpCommand(userInput, ParticipationCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"        case ShowCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, ShowCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, SortCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"hmanhduc2k"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, TagCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"        case HistoryCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, HistoryCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"hmanhduc2k"},"content":"        case RevertCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, RevertCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"hmanhduc2k"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, UndoCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"hmanhduc2k"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, RedoCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"hmanhduc2k"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, ViewCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"hmanhduc2k"},"content":"        case VisualizeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand(userInput, VisualizeCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"hmanhduc2k"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"hmanhduc2k"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"hmanhduc2k"},"content":"        default:","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"hmanhduc2k"},"content":"            throw new ParseException(String.format(MESSAGE_HELP_NOT_EXIST, userInput));","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Amadeus-Winarto":3,"hmanhduc2k":101,"cheweejia":3,"jianoway":4}},{"path":"src/main/java/seedu/academydirectory/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.Command;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":12,"jianoway":3}},{"path":"src/main/java/seedu/academydirectory/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.util.StringUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.Assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Attendance;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.Grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Participation;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.SortableInformation;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.StudioRecord;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_INVALID_ATTENDANCE_STATUS \u003d \"Attendance status should only be 0 or 1, \"","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"            + \"with 0 indicating absence while 1 indicates the student was present.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_INVALID_PARTICIPATION_STATUS \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"            \"Change in Participation must be between -100 and 100.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"     * Parses {@code attendance} into an {@code boolean} and returns it.","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"     * @throws ParseException if the specified input is invalid (not one or zero).","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"    public static boolean parseAttendance(String attendance) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"        requireNonNull(attendance);","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"        String trimmedAttendance \u003d attendance.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"        if (Attendance.isValidAttendance(trimmedAttendance)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"            return trimmedAttendance.equals(\"1\");","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"            throw new ParseException(MESSAGE_INVALID_ATTENDANCE_STATUS);","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"     * Parses a {@code String participation} into a {@code Integer}.","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"     * @throws ParseException if the given {@code Integer} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"    public static Integer parseParticipation(String participation) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"        requireNonNull(participation);","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"        String trimmedParticipation \u003d participation.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"        if (Participation.isValidParticipation(trimmedParticipation)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"            return Integer.parseInt(trimmedParticipation);","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"            throw new ParseException(MESSAGE_INVALID_PARTICIPATION_STATUS);","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"phuccuongngo99"},"content":"     * Parses a {@code String telegram} into an {@code Telegram}.","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"phuccuongngo99"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"phuccuongngo99"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"phuccuongngo99"},"content":"     * @throws ParseException if the given {@code telegram} is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"phuccuongngo99"},"content":"    public static Telegram parseTelegram(String telegram) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"phuccuongngo99"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"phuccuongngo99"},"content":"        String trimmedTelegram \u003d telegram.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"phuccuongngo99"},"content":"        if (!Telegram.isValidTelegram(trimmedTelegram)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"phuccuongngo99"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"phuccuongngo99"},"content":"        return new Telegram(trimmedTelegram);","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":164,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"cheweejia"},"content":"     * Parses a {@code String assessment} into a {@code String}.","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"cheweejia"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"cheweejia"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"cheweejia"},"content":"     * @throws ParseException if the given {@code String} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"cheweejia"},"content":"    public static String parseAssessment(String assessment) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"cheweejia"},"content":"        requireNonNull(assessment);","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"cheweejia"},"content":"        String trimmedAssessment \u003d assessment.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"cheweejia"},"content":"        if (!Assessment.isValidAssessment(trimmedAssessment)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"cheweejia"},"content":"            throw new ParseException(Assessment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"cheweejia"},"content":"        return trimmedAssessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"cheweejia"},"content":"     * Parses a {@code String grade} into a {@code Integer}.","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"cheweejia"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"cheweejia"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"cheweejia"},"content":"     * @throws ParseException if the given {@code Integer} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"cheweejia"},"content":"    public static Integer parseGrade(String grade) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"cheweejia"},"content":"        requireNonNull(grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"cheweejia"},"content":"        String trimmedGrade \u003d grade.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"cheweejia"},"content":"        if (!Grade.isValidGrade(trimmedGrade)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"cheweejia"},"content":"            throw new ParseException(Grade.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"cheweejia"},"content":"        return Integer.parseInt(trimmedGrade);","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"jianoway"},"content":"     * Parses a {@code String studioRecord} into a {@code Integer}.","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"jianoway"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"jianoway"},"content":"     * @throws ParseException if the given {@code studioRecord} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"jianoway"},"content":"    public static Integer parseStudioRecord(String studioRecord) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"jianoway"},"content":"        requireNonNull(studioRecord);","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"jianoway"},"content":"        String trimmedStudioRecord \u003d studioRecord.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"jianoway"},"content":"        if (!StudioRecord.isValidStudioRecord(trimmedStudioRecord)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"jianoway"},"content":"            throw new ParseException(StudioRecord.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"jianoway"},"content":"        return Integer.parseInt(trimmedStudioRecord);","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":209,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":210,"author":{"gitId":"jianoway"},"content":"     * Parses a {@code String attribute} into a {@code String}.","lastModifiedDate":"2021-10-16"},{"lineNumber":211,"author":{"gitId":"jianoway"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-16"},{"lineNumber":212,"author":{"gitId":"jianoway"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":213,"author":{"gitId":"jianoway"},"content":"     * @throws ParseException if the given {@code attribute} is invalid.","lastModifiedDate":"2021-10-16"},{"lineNumber":214,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":215,"author":{"gitId":"jianoway"},"content":"    public static String parseAttribute(String attribute) throws ParseException {","lastModifiedDate":"2021-10-15"},{"lineNumber":216,"author":{"gitId":"jianoway"},"content":"        requireNonNull(attribute);","lastModifiedDate":"2021-10-15"},{"lineNumber":217,"author":{"gitId":"jianoway"},"content":"        String trimmedAttribute \u003d attribute.trim();","lastModifiedDate":"2021-10-15"},{"lineNumber":218,"author":{"gitId":"jianoway"},"content":"        if (!SortableInformation.isValidSortable(attribute)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":219,"author":{"gitId":"jianoway"},"content":"            throw new ParseException(SortableInformation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":220,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":221,"author":{"gitId":"jianoway"},"content":"        return trimmedAttribute.toUpperCase();","lastModifiedDate":"2021-10-15"},{"lineNumber":222,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":223,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":224,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":225,"author":{"gitId":"jianoway"},"content":"     * Parses a {@code String order} into a {@code boolean}.","lastModifiedDate":"2021-10-16"},{"lineNumber":226,"author":{"gitId":"jianoway"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":227,"author":{"gitId":"jianoway"},"content":"     * @throws ParseException if the given {@code order} is invalid.","lastModifiedDate":"2021-10-16"},{"lineNumber":228,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":229,"author":{"gitId":"jianoway"},"content":"    public static boolean parseOrder(String order) throws ParseException {","lastModifiedDate":"2021-10-15"},{"lineNumber":230,"author":{"gitId":"jianoway"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-10-15"},{"lineNumber":231,"author":{"gitId":"jianoway"},"content":"        String trimmedOrder \u003d order.trim();","lastModifiedDate":"2021-10-15"},{"lineNumber":232,"author":{"gitId":"jianoway"},"content":"        if (!SortableInformation.Order.isValidOrder(order)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":233,"author":{"gitId":"jianoway"},"content":"            throw new ParseException(SortableInformation.Order.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":234,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":235,"author":{"gitId":"jianoway"},"content":"        if (trimmedOrder.toUpperCase().equals(\"ASC\")) {","lastModifiedDate":"2021-10-15"},{"lineNumber":236,"author":{"gitId":"jianoway"},"content":"            return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":237,"author":{"gitId":"jianoway"},"content":"        } else {","lastModifiedDate":"2021-10-15"},{"lineNumber":238,"author":{"gitId":"jianoway"},"content":"            return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":239,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":240,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"phuccuongngo99":19,"-":99,"cheweejia":32,"hmanhduc2k":1,"jianoway":90}},{"path":"src/main/java/seedu/academydirectory/logic/parser/ParticipationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_ADD_PARTICIPATON;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_STUDIO_SESSION;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.ParticipationCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"public class ParticipationCommandParser implements Parser\u003cParticipationCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"     * Parses the given {@code String} of arguments in the context of the AttendanceCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"     * and returns an AttendanceCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"    public ParticipationCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"                .tokenize(args, PREFIX_STUDIO_SESSION, PREFIX_ADD_PARTICIPATON);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"        ArrayList\u003cIndex\u003e indexArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STUDIO_SESSION, PREFIX_ADD_PARTICIPATON)","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ParticipationCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"        Integer participationUpdate;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"        Integer studioSession;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"            String indexString \u003d argMultimap.getPreamble();","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"            String[] indexArray \u003d indexString.split(\",\");","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"            for (String str : indexArray) {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"                String strippedStr \u003d str.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"                indexArrayList.add(ParserUtil.parseIndex(strippedStr));","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ParticipationCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"                    pe","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"            );","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"        participationUpdate \u003d ParserUtil.parseParticipation(argMultimap.getValue(PREFIX_ADD_PARTICIPATON).get());","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"        studioSession \u003d ParserUtil.parseStudioRecord(argMultimap.getValue(PREFIX_STUDIO_SESSION).get());","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"        return new ParticipationCommand(participationUpdate, studioSession, indexArrayList);","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"jianoway":60}},{"path":"src/main/java/seedu/academydirectory/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":38,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/logic/parser/RevertCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.RevertCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":" * Parses input arguments and creates a new RevertCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"public class RevertCommandParser implements Parser\u003cRevertCommand\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Parses the given {@code String} of arguments in the context of the RevertCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"     * and returns a RevertCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    public RevertCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RevertCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new RevertCommand(trimmedArgs);","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Amadeus-Winarto":27}},{"path":"src/main/java/seedu/academydirectory/logic/parser/ShowCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"public class ShowCommandParser implements Parser\u003cShowCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"     * Parses the given {@code String} of arguments in the context of the ShowCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"     * and returns an ShowCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"    public ShowCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"        String assessment;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"            assessment \u003d ParserUtil.parseAssessment(args).toUpperCase();","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"        return new ShowCommand(assessment);","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"cheweejia":28}},{"path":"src/main/java/seedu/academydirectory/logic/parser/SingularCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ClearCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.Command;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ExitCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.HistoryCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ListCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.RedoCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.UndoCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.VisualizeCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"public class SingularCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String MESSAGE_NO_ARGUMENT_SHOULD_FOLLOW \u003d \"Invalid usage detected. No other keyword \"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"            + \"should follow the command %1$s\";","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"    private final String commandWord;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor for a Singular Command parser","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"     * @param commandWord singular command","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"    public SingularCommandParser(String commandWord) {","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"        this.commandWord \u003d commandWord;","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"     * parse user command based on the user input created","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"     * @param userInput inputs","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"     * @return corresponding command","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"     * @throws ParseException if command is not valid","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"    public Command parse(String userInput) throws ParseException {","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"        assertSingularCommand(userInput);","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"        case HistoryCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"            return new HistoryCommand();","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"            return new ListCommand();","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"            return new RedoCommand();","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"            return new UndoCommand();","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"        case VisualizeCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"            return new VisualizeCommand();","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"        default:","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"     * assert that there is no other argument in the keywords","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"     * @param arguments arguments","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"     * @throws ParseException if the arguments are non-empty","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"    private void assertSingularCommand(String arguments) throws ParseException {","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"        if (!arguments.isEmpty()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"            throw new ParseException(String.format(MESSAGE_NO_ARGUMENT_SHOULD_FOLLOW, commandWord));","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"hmanhduc2k":68}},{"path":"src/main/java/seedu/academydirectory/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_ATTRIBUTE;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_ORDER;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.SortCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"     * and returns an SortCommand object for execution.","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ATTRIBUTE, PREFIX_ORDER);","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ATTRIBUTE, PREFIX_ORDER)","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"        String attribute \u003d ParserUtil.parseAttribute(argMultimap.getValue(PREFIX_ATTRIBUTE).get());","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"        boolean isAscending \u003d ParserUtil.parseOrder(argMultimap.getValue(PREFIX_ORDER).get());","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"        return new SortCommand(attribute, isAscending);","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"jianoway":44}},{"path":"src/main/java/seedu/academydirectory/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import java.util.Collection;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.TagCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"public class TagCommandParser implements Parser\u003cTagCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"     * Parses the given {@code String} of arguments in the context of the TagCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"     * and returns an TagCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"    public TagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG)","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"        Collection\u003cString\u003e tags \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(tagSet);","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"        return new TagCommand(index, tagList);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"cheweejia"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"cheweejia"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"cheweejia":48}},{"path":"src/main/java/seedu/academydirectory/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"    public ViewCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"        Index index;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"            index \u003d ParserUtil.parseIndex(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"        return new ViewCommand(index);","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"hmanhduc2k":26}},{"path":"src/main/java/seedu/academydirectory/logic/parser/VisualizeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.VisualizeCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"public class VisualizeCommandParser implements Parser\u003cVisualizeCommand\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"     * @param userInput","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    public VisualizeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new VisualizeCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"phuccuongngo99":14,"Amadeus-Winarto":3,"hmanhduc2k":1}},{"path":"src/main/java/seedu/academydirectory/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser.exceptions;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":15,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/model/AcademyDirectory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.UniqueStudentList;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":" * Wraps all data at the academy-directory level","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"public class AcademyDirectory implements ReadOnlyAcademyDirectory {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"    public AcademyDirectory() {}","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"     * Creates an AcademyDirectory using the Students in the {@code toBeCopied}","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"    public AcademyDirectory(ReadOnlyAcademyDirectory toBeCopied) {","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"     * Resets the existing data of this {@code AcademyDirectory} with {@code newData}.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"    public void resetData(ReadOnlyAcademyDirectory newData) {","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"phuccuongngo99"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"phuccuongngo99"},"content":"    //// student-level operations","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"phuccuongngo99"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"phuccuongngo99"},"content":"        return students.contains(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"     * Adds a student to the academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"     * The student must not already exist in the academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"phuccuongngo99"},"content":"        students.add(p);","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"phuccuongngo99"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"phuccuongngo99"},"content":"     * {@code target} must exist in the academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"phuccuongngo99"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"phuccuongngo99"},"content":"     * academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"phuccuongngo99"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"phuccuongngo99"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"phuccuongngo99"},"content":"     * Removes {@code key} from this {@code AcademyDirectory}.","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"phuccuongngo99"},"content":"     * {@code key} must exist in the academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"phuccuongngo99"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"phuccuongngo99"},"content":"        students.remove(key);","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"phuccuongngo99"},"content":"        return students.asUnmodifiableObservableList().size() + \" students\";","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"phuccuongngo99"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"phuccuongngo99"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"jianoway"},"content":"                || (other instanceof AcademyDirectory // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"phuccuongngo99"},"content":"                \u0026\u0026 students.equals(((AcademyDirectory) other).students));","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"phuccuongngo99"},"content":"        return students.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"phuccuongngo99":38,"-":76,"jianoway":6}},{"path":"src/main/java/seedu/academydirectory/model/AdditionalInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"public final class AdditionalInfo\u003cT\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"    private static final AdditionalInfo\u003c?\u003e EMPTY \u003d new AdditionalInfo\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"    private final T value;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"    private AdditionalInfo() {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"        this.value \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"     * Constructs an instance with the described value.","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"     * @param value the non-{@code null} value to describe","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"     * @throws NullPointerException if value is {@code null}","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"    private AdditionalInfo(T value) {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"        this.value \u003d Objects.requireNonNull(value);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns an empty {@code AdditionalInfo} instance.  No value is present for this","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"     * {@code AdditionalInfo}.","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"     * @param \u003cT\u003e The type of the non-existent value","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"     * @return an empty {@code AdditionalInfo}","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"    public static\u003cT\u003e AdditionalInfo\u003cT\u003e empty() {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"        AdditionalInfo\u003cT\u003e t \u003d (AdditionalInfo\u003cT\u003e) EMPTY;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"        return t;","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns an {@code AdditionalInfo} describing the given non-{@code null}","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"     * value.","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"     * @param value the value to describe, which must be non-{@code null}","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"     * @param \u003cT\u003e the type of the value","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"     * @return an {@code AdditionalInfo} with the value present","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"     * @throws NullPointerException if value is {@code null}","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"    public static \u003cT\u003e AdditionalInfo\u003cT\u003e of(T value) {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"        return new AdditionalInfo\u003c\u003e(value);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns an {@code AdditionalInfo} describing the given value, if","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"     * non-{@code null}, otherwise returns an empty {@code AdditionalInfo}.","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"phuccuongngo99"},"content":"     * @param value the possibly-{@code null} value to describe","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"     * @param \u003cT\u003e the type of the value","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"     * @return an {@code AdditionalInfo} with a present value if the specified value","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"phuccuongngo99"},"content":"     *         is non-{@code null}, otherwise an empty {@code AdditionalInfo}","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"    public static \u003cT\u003e AdditionalInfo\u003cT\u003e ofNullable(T value) {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"        return value \u003d\u003d null ? empty() : of(value);","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"phuccuongngo99"},"content":"     * If a value is present, returns the value, otherwise throws","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"phuccuongngo99"},"content":"     * {@code NoSuchElementException}.","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"     * @apiNote","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"     * The preferred alternative to this method is {@link #orElseThrow()}.","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"     * @return the non-{@code null} value described by this {@code AdditionalInfo}","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"     * @throws NoSuchElementException if no value is present","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"phuccuongngo99"},"content":"    public T get() {","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"phuccuongngo99"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"phuccuongngo99"},"content":"            throw new NoSuchElementException(\"No value present\");","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"phuccuongngo99"},"content":"        return value;","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"phuccuongngo99"},"content":"     * If a value is present, returns {@code true}, otherwise {@code false}.","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"phuccuongngo99"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"phuccuongngo99"},"content":"     * @return {@code true} if a value is present, otherwise {@code false}","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"phuccuongngo99"},"content":"    public boolean isPresent() {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"phuccuongngo99"},"content":"        return value !\u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"phuccuongngo99"},"content":"     * If a value is  not present, returns {@code true}, otherwise","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"phuccuongngo99"},"content":"     * {@code false}.","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"phuccuongngo99"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"phuccuongngo99"},"content":"     * @return  {@code true} if a value is not present, otherwise {@code false}","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"phuccuongngo99"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"phuccuongngo99"},"content":"        return value \u003d\u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"phuccuongngo99"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"phuccuongngo99"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"phuccuongngo99"},"content":"            return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"phuccuongngo99"},"content":"        if (!(obj instanceof AdditionalInfo)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"phuccuongngo99"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"phuccuongngo99"},"content":"        AdditionalInfo\u003c?\u003e other \u003d (AdditionalInfo\u003c?\u003e) obj;","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"phuccuongngo99"},"content":"        return Objects.equals(value, other.value);","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"phuccuongngo99":114}},{"path":"src/main/java/seedu/academydirectory/model/AdditionalViewModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.logic.AdditionalViewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"public class AdditionalViewModel {","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"    private AdditionalViewType additionalViewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"    private AdditionalInfo\u003c? extends Object\u003e additionalInfo;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"     * @param additionalViewType the AdditionalViewType of the last command","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"     * @param additionalInfo the Additional Information that the last command presents","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"    public AdditionalViewModel(AdditionalViewType additionalViewType, AdditionalInfo\u003c? extends Object\u003e additionalInfo) {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"        this.additionalViewType \u003d additionalViewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"        this.additionalInfo \u003d additionalInfo;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"    public void setAdditionalViewType(AdditionalViewType additionalViewType) {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"        this.additionalViewType \u003d additionalViewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"        //Reset AdditionalViewType if it\u0027s default command","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"        if (this.additionalViewType.equals(AdditionalViewType.DEFAULT)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"            this.additionalInfo \u003d AdditionalInfo.empty();","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"    public void setAdditionalInfo(AdditionalInfo\u003c? extends Object\u003e additionalInfo) {","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"        this.additionalInfo \u003d additionalInfo;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"    public AdditionalInfo\u003c? extends Object\u003e getAdditionalInfo() {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"        return additionalInfo;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"    public AdditionalViewType getAdditionalViewType() {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"        return additionalViewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"            return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"        if (!(obj instanceof AdditionalViewModel)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"            return false;","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalViewModel otherAdditionalViewModel \u003d (AdditionalViewModel) obj;","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"        return additionalInfo.equals(otherAdditionalViewModel.additionalInfo)","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"                \u0026\u0026 additionalViewType.equals(otherAdditionalViewModel.additionalViewType);","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"phuccuongngo99":39,"hmanhduc2k":15}},{"path":"src/main/java/seedu/academydirectory/model/ReadOnlyAcademyDirectory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":" * Unmodifiable view of an academy directory","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"public interface ReadOnlyAcademyDirectory {","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"phuccuongngo99":4,"-":10,"jianoway":3}},{"path":"src/main/java/seedu/academydirectory/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.GuiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"    Path getAcademyDirectoryFilePath();","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    Path getVersionControlPath();","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Amadeus-Winarto":2,"-":13,"jianoway":3}},{"path":"src/main/java/seedu/academydirectory/model/StageArea.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.VcObject;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"public class StageArea {","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"    private List\u003cVcObject\u003e stageArea;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Construct a StageArea for version control purposes. Objects staged onto stageArea can be saved to disk","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param vcObjects Version Control objects to be saved to disk","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    public StageArea(VcObject... vcObjects) {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"        resetStage();","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        stageArea.addAll(List.of(vcObjects));","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void stage(VcObject vcObject) {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"        stageArea.add(vcObject);","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void resetStage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        stageArea \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    public List\u003cVcObject\u003e getVcObjectList() {","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        return stageArea;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        return stageArea.isEmpty();","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Amadeus-Winarto":35}},{"path":"src/main/java/seedu/academydirectory/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.GuiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"    private Path academyDirectoryFilePath \u003d Paths.get(\"data\" , \"academydirectory.json\");","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Path versionControlPath \u003d Paths.get(\"data\", \"vc\");","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"        setAcademyDirectoryFilePath(newUserPrefs.getAcademyDirectoryFilePath());","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"    public Path getAcademyDirectoryFilePath() {","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"        return academyDirectoryFilePath;","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"    public void setAcademyDirectoryFilePath(Path academyDirectoryFilePath) {","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"        requireNonNull(academyDirectoryFilePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"        this.academyDirectoryFilePath \u003d academyDirectoryFilePath;","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Path getVersionControlPath() {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"        return versionControlPath;","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void setVersionControlPath(Path versionControlPath) {","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(versionControlPath);","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.versionControlPath \u003d versionControlPath;","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"                \u0026\u0026 academyDirectoryFilePath.equals(o.academyDirectoryFilePath)","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"                \u0026\u0026 versionControlPath.equals(o.versionControlPath);","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"        return Objects.hash(guiSettings, academyDirectoryFilePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"jianoway"},"content":"        sb.append(\"\\nLocal data file location : \" + academyDirectoryFilePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"        sb.append(\"\\nVersion Control location : \" + versionControlPath);","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Amadeus-Winarto":12,"-":77,"jianoway":11}},{"path":"src/main/java/seedu/academydirectory/model/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":" * Wraps all version control related data","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"public interface Version {","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Commits a model data change and tie the change with a given message","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param message Message attached to the Commit for a readable explanation","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    void commit(String message);","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Reverts model data state to a previous state stored in disk and identifiable by its hash","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param fiveCharHash The five character hash of the previous state to be reverted to","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return {@code Commit} object representing the reverted state","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @throws IOException if unable to revert underlying data to previous state","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    Commit revert(String fiveCharHash) throws IOException;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    StageArea getStageArea();","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    Commit getHeadCommit();","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    Commit fetchCommitByLabel(String labelName);","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":30}},{"path":"src/main/java/seedu/academydirectory/model/VersionControlController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.commons.util.FileUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.utils.HashMethod;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"public class VersionControlController implements Version {","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String HEAD_LABEL_STRING \u003d \"HEAD\";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String OLD_LABEL_STRING \u003d \"OLD\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String CURRENT_LABEL_STRING \u003d \"CURRENT\";","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Commit headCommit \u003d Commit.emptyCommit();","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final Path storagePath;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionControlReader versionControlReader;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final StageArea stageArea \u003d new StageArea();","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Models the internal version control system in memory","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param hashMethod Which hash function to use","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param vcPath Path to save version control related files","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param storagePath Path to file to be version controlled","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    public VersionControlController(HashMethod hashMethod, Path vcPath, Path storagePath) {","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.versionControlReader \u003d new VersionControlReader(hashMethod, vcPath);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.storagePath \u003d storagePath;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Make versionControlled path if not exist","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"            Path headPath \u003d vcPath.resolve(Paths.get(HEAD_LABEL_STRING));","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"            FileUtil.createParentDirsOfFile(headPath);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"            if (FileUtil.isFileExists(headPath)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"                this.headCommit \u003d this.fetchCommitByLabel(HEAD_LABEL_STRING);","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"                // Create initial commit","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"                this.headCommit \u003d Commit.emptyCommit();","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"                this.commit(\"Initial Commit\");","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Commits current state to memory to be version controlled","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param message Commit message to be used","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void commit(String message) {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(message);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit parentCommit \u003d this.headCommit;","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Fetching current memory state","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree blobTree \u003d versionControlReader.createNewTree(storagePath);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.headCommit \u003d versionControlReader.createNewCommit(message, () -\u003e blobTree, () -\u003e parentCommit);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label headLabel \u003d versionControlReader.createNewLabel(HEAD_LABEL_STRING, headCommit);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label oldLabel \u003d versionControlReader.fetchLabelByName(OLD_LABEL_STRING);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label currLabel \u003d versionControlReader.fetchLabelByName(CURRENT_LABEL_STRING);","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"        oldLabel \u003d handleCommitBranch(oldLabel, currLabel);","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"        currLabel \u003d versionControlReader.createNewLabel(CURRENT_LABEL_STRING, this.headCommit);","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"        stageArea.resetStage();","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!headLabel.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"            stageArea.stage(headLabel);","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!oldLabel.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"            stageArea.stage(oldLabel);","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!currLabel.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"            stageArea.stage(currLabel);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!this.headCommit.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"            stageArea.stage(this.headCommit);","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!blobTree.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"            stageArea.stage(blobTree);","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Label handleCommitBranch(Label oldLabel, Label currLabel) {","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit currCommit \u003d currLabel.getCommitSupplier().get();","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!currCommit.isEmpty() \u0026\u0026 !currCommit.equals(this.headCommit)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"            // Branching occurs \u003d\u003e label currCommit as \"old\"","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"            return versionControlReader.createNewLabel(OLD_LABEL_STRING, currCommit);","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"        return oldLabel;","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Reverts state according to the given hash","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param fiveCharHash Hash of the commit to be reverted to","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return Commit whose hash is equal to the hash given","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @throws IOException Unable to restore state correctly","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Commit revert(String fiveCharHash) throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit relevantCommit \u003d versionControlReader.fetchCommitByHash(fiveCharHash);","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (relevantCommit.equals(Commit.emptyCommit())) { // Error in commit fetching \u003d\u003e return null","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Commit.emptyCommit();","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else if (relevantCommit.equals(headCommit)) { // Disallowed operation \u003d\u003e return null","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Commit.emptyCommit();","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Regenerate files","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree relevantTree \u003d relevantCommit.getTreeSupplier().get();","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"Amadeus-Winarto"},"content":"        relevantTree.regenerateBlobs();","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.headCommit \u003d relevantCommit;","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label headLabel \u003d versionControlReader.createNewLabel(HEAD_LABEL_STRING, headCommit);","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"Amadeus-Winarto"},"content":"        stageArea.resetStage();","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"Amadeus-Winarto"},"content":"        stageArea.stage(headLabel);","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"Amadeus-Winarto"},"content":"        return relevantCommit;","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"Amadeus-Winarto"},"content":"    public StageArea getStageArea() {","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"Amadeus-Winarto"},"content":"        return stageArea;","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Commit getHeadCommit() {","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"Amadeus-Winarto"},"content":"        return headCommit;","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Commit fetchCommitByLabel(String labelName) {","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"Amadeus-Winarto"},"content":"        return versionControlReader.fetchLabelByName(labelName).getCommitSupplier().get();","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Amadeus-Winarto":134}},{"path":"src/main/java/seedu/academydirectory/model/VersionControlReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.reader.VersionControlGeneralReader;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.utils.HashComputer;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.utils.HashMethod;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"public class VersionControlReader {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionControlGeneralReader versionControlGeneralReader;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final HashComputer hashComputer;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final Path vcPath;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Constructs a VersionControlReader which can load version control files in disk for use programmatically","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param hashMethod Hash function to be used to construct version control objects","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param vcPath Path to load version control files from","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    public VersionControlReader(HashMethod hashMethod, Path vcPath) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.vcPath \u003d vcPath;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.versionControlGeneralReader \u003d new VersionControlGeneralReader(vcPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.hashComputer \u003d new HashComputer(hashMethod);","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Constructs a new Commit object to be saved to disk.","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param message Commit message for a human-readable format of the commit","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param treeSupplier Supplier to the tree object that this Commit points to","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param parentCommitSupplier Supplier to the parent Commit that this Commit points to","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return a Commit object which represents the change. Returns a null commit if unable to write","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Commit createNewCommit(String message, Supplier\u003cTree\u003e treeSupplier, Supplier\u003cCommit\u003e parentCommitSupplier) {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(message);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(treeSupplier);","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(parentCommitSupplier);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        String commitFileName \u003d \"temp\";","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"        String author \u003d System.getProperty(\"user.name\");","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"        Date date \u003d new Date();","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit temp \u003d Commit.of(commitFileName, author, date, message, parentCommitSupplier, treeSupplier);","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"        String commitHash \u003d hashComputer.generateHashForObject(temp);","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (commitHash \u003d\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Commit.emptyCommit();","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"        return Commit.of(commitHash, author, date, message, parentCommitSupplier, treeSupplier);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Constructs a Label object to be saved to disk.","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param name Label name","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param commit Commit to be labelled","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return a Label object which represents a label of the given commit. Returns a null label if unable to write","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Label createNewLabel(String name, Commit commit) {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(commit);","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"        String labelFileName \u003d \"temp\";","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label temp \u003d Label.of(labelFileName, name, () -\u003e commit);","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"        String labelHash \u003d hashComputer.generateHashForObject(temp);","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (labelHash \u003d\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Label.emptyLabel();","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"        return Label.of(labelHash, name, () -\u003e commit);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Constructs a Tree object to be saved to disk","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param blobPaths Path to blobs to be duplicated","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return a Tree object which represents mapping between actual filename and version-controlled filename","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Tree createNewTree(List\u003cPath\u003e blobPaths) {","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Make a blob snapshot","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"        ArrayList\u003cPath\u003e blobTargetPaths \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"        for (Path blobPath: blobPaths) {","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"            String blobHash \u003d hashComputer.generateHashFromFile(blobPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"            if (blobHash \u003d\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"                return Tree.emptyTree();","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"            Path blobTargetPath \u003d this.vcPath.resolve(Path.of(blobHash));","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"            try {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"                Files.copy(blobPath, blobTargetPath, REPLACE_EXISTING);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"                return Tree.emptyTree();","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"            blobTargetPaths.add(blobTargetPath);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Write a temporary tree to disk","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"        String treeFileName \u003d \"temp\";","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree temp \u003d Tree.of(treeFileName,","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"                blobPaths.stream().map(String::valueOf).collect(Collectors.toList()),","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"                blobTargetPaths.stream().map(String::valueOf).collect(Collectors.toList()));","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"Amadeus-Winarto"},"content":"        String treeHash \u003d hashComputer.generateHashForObject(temp);","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (treeHash \u003d\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Tree.emptyTree();","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"Amadeus-Winarto"},"content":"        return Tree.of(treeHash,","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"Amadeus-Winarto"},"content":"                blobPaths.stream().map(String::valueOf).collect(Collectors.toList()),","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"Amadeus-Winarto"},"content":"                blobTargetPaths.stream().map(String::valueOf).collect(Collectors.toList()));","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Tree createNewTree(Path path) {","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"Amadeus-Winarto"},"content":"        return createNewTree(List.of(path));","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Constructs a commit based on hash. Will find the commit object with the same hash in disk","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param hash Hash of the commit saved in disk","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return Commit object of the given hash","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Commit fetchCommitByHash(String hash) {","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"Amadeus-Winarto"},"content":"        return versionControlGeneralReader.readCommit(hash);","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Find a label on disk based on name.","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param labelName Hash of the commit saved in disk","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return Label object of the given hash","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Label fetchLabelByName(String labelName) {","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"Amadeus-Winarto"},"content":"        return versionControlGeneralReader.readLabel(labelName);","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Constructs a tree based on hash. Will find the tree object with the same hash in disk","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param hash Hash of the tree saved in disk","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return Commit object of the given hash","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Tree fetchTreeByHash(String hash) {","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"Amadeus-Winarto"},"content":"        return versionControlGeneralReader.readTree(hash);","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Amadeus-Winarto":152}},{"path":"src/main/java/seedu/academydirectory/model/VersionedModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.commons.core.GuiSettings;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.AdditionalViewType;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":" * The API of the VersionedModel component.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"public interface VersionedModel extends Version {","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Returns the user prefs.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Returns the user prefs\u0027 academy directory file path.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"    Path getAcademyDirectoryFilePath();","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Sets the user prefs\u0027 academy directory file path.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"    void setAcademyDirectoryFilePath(Path academyDirectoryFilePath);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Replaces academy directory data with the data in {@code academyDirectory}.","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"    void setAcademyDirectory(ReadOnlyAcademyDirectory academyDirectory);","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"    /** Returns the AcademyDirectory */","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"    ReadOnlyAcademyDirectory getAcademyDirectory();","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the academy directory.","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Deletes the given student.","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"     * The student must exist in the academy directory.","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Adds the given student.","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"     * {@code student} must not already exist in the academy directory.","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"    void addStudent(Student student);","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"     * {@code target} must exist in the academy directory.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"     * The student identity of {@code editedStudent} must not be the same","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"     * as another existing student in the academy directory.","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"    AdditionalViewModel getAdditionalViewModel();","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"    void setAdditionalViewType(AdditionalViewType additionalViewType);","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"    void setAdditionalInfo(AdditionalInfo\u003c? extends Object\u003e additionalInfo);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Amadeus-Winarto":95}},{"path":"src/main/java/seedu/academydirectory/model/VersionedModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.GuiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.LogsCenter;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.logic.AdditionalViewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.utils.HashMethod;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":" * Represents the in-memory model of the academy directory data.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"public class VersionedModelManager implements VersionedModel {","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(VersionedModelManager.class);","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"    private final AcademyDirectory academyDirectory;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionControlController versionControlController;","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"    private final AdditionalViewModel additionalViewModel;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Initializes a VersionedModelManager with the given academyDirectory and userPrefs.","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"    public VersionedModelManager(ReadOnlyAcademyDirectory academyDirectory, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"        requireAllNonNull(academyDirectory, userPrefs);","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"        logger.fine(\"Initializing with academy directory: \" + academyDirectory + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"        this.academyDirectory \u003d new AcademyDirectory(academyDirectory);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.academyDirectory.getStudentList());","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.versionControlController \u003d new VersionControlController(HashMethod.SHA1,","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"                userPrefs.getVersionControlPath(),","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"                userPrefs.getAcademyDirectoryFilePath());","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"        this.additionalViewModel \u003d new AdditionalViewModel(AdditionalViewType.DEFAULT, AdditionalInfo.empty());","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"    public VersionedModelManager() {","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"        this(new AcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"    public Path getAcademyDirectoryFilePath() {","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"        return userPrefs.getAcademyDirectoryFilePath();","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"    public void setAcademyDirectoryFilePath(Path academyDirectoryFilePath) {","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"        requireNonNull(academyDirectoryFilePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"jianoway"},"content":"        userPrefs.setAcademyDirectoryFilePath(academyDirectoryFilePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"phuccuongngo99"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AcademyDirectory \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"phuccuongngo99"},"content":"    public void setAcademyDirectory(ReadOnlyAcademyDirectory academyDirectory) {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"phuccuongngo99"},"content":"        this.academyDirectory.resetData(academyDirectory);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"    public ReadOnlyAcademyDirectory getAcademyDirectory() {","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"phuccuongngo99"},"content":"        return academyDirectory;","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"phuccuongngo99"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"phuccuongngo99"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"phuccuongngo99"},"content":"        return academyDirectory.hasStudent(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"phuccuongngo99"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"phuccuongngo99"},"content":"        academyDirectory.removeStudent(target);","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"phuccuongngo99"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"phuccuongngo99"},"content":"        academyDirectory.addStudent(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"phuccuongngo99"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"phuccuongngo99"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"phuccuongngo99"},"content":"        academyDirectory.setStudent(target, editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"phuccuongngo99"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"phuccuongngo99"},"content":"     * {@code versionedAcademyDirectory}","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"phuccuongngo99"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"phuccuongngo99"},"content":"        return filteredStudents;","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"phuccuongngo99"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"phuccuongngo99"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!(obj instanceof VersionedModelManager)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModelManager other \u003d (VersionedModelManager) obj;","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"phuccuongngo99"},"content":"        return academyDirectory.equals(other.academyDirectory)","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"phuccuongngo99"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"Amadeus-Winarto"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Version Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Commits a particular command","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param message Message attached to the Commit for a readable explanation","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void commit(String message) {","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"Amadeus-Winarto"},"content":"        versionControlController.commit(message);","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Commit revert(String fiveCharHash) throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"Amadeus-Winarto"},"content":"        return versionControlController.revert(fiveCharHash);","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"Amadeus-Winarto"},"content":"    public StageArea getStageArea() {","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"Amadeus-Winarto"},"content":"        return versionControlController.getStageArea();","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Commit getHeadCommit() {","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"Amadeus-Winarto"},"content":"        return versionControlController.getHeadCommit();","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Commit fetchCommitByLabel(String labelName) {","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"Amadeus-Winarto"},"content":"        return versionControlController.fetchCommitByLabel(labelName);","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"phuccuongngo99"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Additional Information View \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"hmanhduc2k"},"content":"     * Set additional view type for shown in visualizer","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"hmanhduc2k"},"content":"     * @param additionalViewType additional view","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"phuccuongngo99"},"content":"    public void setAdditionalViewType(AdditionalViewType additionalViewType) {","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"phuccuongngo99"},"content":"        this.additionalViewModel.setAdditionalViewType(additionalViewType);","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"hmanhduc2k"},"content":"     * Set Additional Info for visualizer","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"hmanhduc2k"},"content":"     * @param additionalInfo additional info","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"hmanhduc2k"},"content":"    public void setAdditionalInfo(AdditionalInfo\u003c? extends Object\u003e additionalInfo) {","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"hmanhduc2k"},"content":"        this.additionalViewModel.setAdditionalInfo(additionalInfo);","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"hmanhduc2k"},"content":"     * Get Additional View Model","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"hmanhduc2k"},"content":"     * @return view model","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":219,"author":{"gitId":"phuccuongngo99"},"content":"    public AdditionalViewModel getAdditionalViewModel() {","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"phuccuongngo99"},"content":"        return this.additionalViewModel;","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"phuccuongngo99":48,"Amadeus-Winarto":45,"-":100,"hmanhduc2k":18,"jianoway":11}},{"path":"src/main/java/seedu/academydirectory/model/student/Assessment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import java.util.List;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":" * Represents a Student\u0027s assessment in the academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"public class Assessment extends SortableInformation {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"    public static final List\u003cString\u003e ASSESSMENT_LIST \u003d Arrays.asList(","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"            \"RA1\",","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"            \"MIDTERM\",","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"            \"RA2\",","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"            \"PE\",","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"            \"FINAL\"","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"    );","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"            \"Grades can only be recorded for the following assessments: RA1, MIDTERM, RA2, PE, FINAL.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"    private final HashMap\u003cString, Integer\u003e assessment;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"     * Constructs a HashMap containing the Assessment and NA for grades.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"    public Assessment() {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"        assessment \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"        assessment.put(\"RA1\", -1);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"        assessment.put(\"MIDTERM\", -1);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"        assessment.put(\"RA2\", -1);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"        assessment.put(\"PE\", -1);","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"        assessment.put(\"FINAL\", -1);","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"     * Constructs a HashMap containing the existing Assessments and respective grades.","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"    public Assessment(HashMap\u003cString, Integer\u003e assessment) {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"        this.assessment \u003d assessment;","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"    @SuppressWarnings(\"unchecked\") // guarantee assessment.clone() returns same type since it is final","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"    public Assessment getCopy() {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"        return new Assessment((HashMap\u003cString, Integer\u003e) assessment.clone());","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"cheweejia"},"content":"     * Returns true if a given string is a valid assessment.","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"cheweejia"},"content":"    public static boolean isValidAssessment(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"cheweejia"},"content":"        return test.equalsIgnoreCase(\"RA1\") || test.equalsIgnoreCase(\"MIDTERM\")","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"cheweejia"},"content":"                || test.equalsIgnoreCase(\"RA2\") || test.equalsIgnoreCase(\"PE\")","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"cheweejia"},"content":"                || test.equalsIgnoreCase(\"FINAL\");","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"cheweejia"},"content":"    public HashMap\u003cString, Integer\u003e getAssessmentHashMap() {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"cheweejia"},"content":"        return assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"cheweejia"},"content":"    public void updateAssessmentGrade(String assessmentName, Integer grade) {","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"cheweejia"},"content":"        this.assessment.replace(assessmentName, grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"cheweejia"},"content":"    public String getAssessmentGrade(String assessmentName) {","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"cheweejia"},"content":"        Integer grade \u003d this.assessment.get(assessmentName);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"cheweejia"},"content":"        return grade \u003d\u003d -1 ? \"NA\" : grade.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"cheweejia"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"cheweejia"},"content":"        return \"RA1: \" + getAssessmentGrade(\"RA1\") + \", \"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"cheweejia"},"content":"                + \"MIDTERM: \" + getAssessmentGrade(\"MIDTERM\") + \", \"","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"cheweejia"},"content":"                + \"RA2: \" + getAssessmentGrade(\"RA2\") + \", \"","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"cheweejia"},"content":"                + \"PE: \" + getAssessmentGrade(\"PE\") + \", \"","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"cheweejia"},"content":"                + \"FINAL: \" + getAssessmentGrade(\"FINAL\");","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"    public int getTotalGrade() {","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"        int total \u003d 0;","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"        for (String assessmentStr : ASSESSMENT_LIST) {","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"cheweejia"},"content":"            total +\u003d assessment.get(assessmentStr) \u003c 0 ? 0 : assessment.get(assessmentStr);","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"        return total;","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"    public String getVisualizerDisplay() {","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"hmanhduc2k"},"content":"        StringBuilder displayedInfo \u003d new StringBuilder();","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"cheweejia"},"content":"        displayedInfo.append(\"- Reading Assessment 1: \")","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"hmanhduc2k"},"content":"                .append(getAssessmentGrade(\"RA1\")).append(\"\\n\")","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"cheweejia"},"content":"                .append(\"- Midterm Examination: \")","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"hmanhduc2k"},"content":"                .append(getAssessmentGrade(\"MIDTERM\")).append(\"\\n\")","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"cheweejia"},"content":"                .append(\"- Reading Assessment 2: \")","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"hmanhduc2k"},"content":"                .append(getAssessmentGrade(\"RA2\")).append(\"\\n\")","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"cheweejia"},"content":"                .append(\"- Practical Examination: \")","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"hmanhduc2k"},"content":"                .append(getAssessmentGrade(\"PE\")).append(\"\\n\")","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"cheweejia"},"content":"                .append(\"- Final Examination: \")","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"hmanhduc2k"},"content":"                .append(getAssessmentGrade(\"FINAL\")).append(\"\\n\")","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"cheweejia"},"content":"                .append(\"Total score: \").append(getTotalGrade());","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"hmanhduc2k"},"content":"        return displayedInfo.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"cheweejia"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"cheweejia"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"cheweejia"},"content":"                || (other instanceof Assessment // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"cheweejia"},"content":"                \u0026\u0026 assessment.equals(((Assessment) other).assessment)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"cheweejia"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"cheweejia"},"content":"        return assessment.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"jianoway"},"content":"    public static Comparator\u003cStudent\u003e getIndividualComparator(boolean isAscending, String assessmentStr) {","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"jianoway"},"content":"        return new Comparator\u003cStudent\u003e() {","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"jianoway"},"content":"            @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":121,"author":{"gitId":"jianoway"},"content":"            public int compare(Student s1, Student s2) {","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"jianoway"},"content":"                int grade1 \u003d s1.getAssessment().getAssessmentHashMap().get(assessmentStr);","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"jianoway"},"content":"                int grade2 \u003d s2.getAssessment().getAssessmentHashMap().get(assessmentStr);","lastModifiedDate":"2021-10-15"},{"lineNumber":124,"author":{"gitId":"jianoway"},"content":"                return isAscending","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"jianoway"},"content":"                        ? Integer.compare(grade1, grade2)","lastModifiedDate":"2021-10-15"},{"lineNumber":126,"author":{"gitId":"jianoway"},"content":"                        : Integer.compare(grade2, grade1);","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"jianoway"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"jianoway"},"content":"        };","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"jianoway"},"content":"    public static Comparator\u003cStudent\u003e getAverageComparator(boolean isAscending) {","lastModifiedDate":"2021-10-15"},{"lineNumber":132,"author":{"gitId":"jianoway"},"content":"        return new Comparator\u003cStudent\u003e() {","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"jianoway"},"content":"            @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":134,"author":{"gitId":"jianoway"},"content":"            public int compare(Student s1, Student s2) {","lastModifiedDate":"2021-10-15"},{"lineNumber":135,"author":{"gitId":"jianoway"},"content":"                int total1 \u003d s1.getAssessment().getTotalGrade();","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"jianoway"},"content":"                int total2 \u003d s2.getAssessment().getTotalGrade();","lastModifiedDate":"2021-10-15"},{"lineNumber":137,"author":{"gitId":"jianoway"},"content":"                return isAscending","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"jianoway"},"content":"                        ? Integer.compare(total1, total2)","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"jianoway"},"content":"                        : Integer.compare(total2, total1);","lastModifiedDate":"2021-10-15"},{"lineNumber":140,"author":{"gitId":"jianoway"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":141,"author":{"gitId":"jianoway"},"content":"        };","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":143,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"phuccuongngo99":1,"cheweejia":81,"hmanhduc2k":10,"jianoway":51}},{"path":"src/main/java/seedu/academydirectory/model/student/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"public class Attendance implements Information {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"    private boolean[] attendanceArray;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"     * The constructor for an Attendance object.","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"     * @param numberOfSessions The number of Studios scheduled","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"     *                         for the semester that the student has to attend","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"    public Attendance(Integer numberOfSessions) {","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"        requireNonNull(numberOfSessions);","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"        attendanceArray \u003d new boolean[numberOfSessions];","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"     * Edits the attendance of a student in the specified Studio session.","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"     * @param index The session number","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"     * @param attendanceStatus true if attended, false otherwise","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"    public Attendance update(Integer index, boolean attendanceStatus) {","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"        attendanceArray[index - 1] \u003d attendanceStatus;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"        return this;","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"     * Replace this Attendance\u0027s boolean array with the given boolean array","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"     * @param boolArr The new boolean array","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"    public void setAttendance(boolean[] boolArr) {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"        this.attendanceArray \u003d boolArr;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"     * Gets the number of sessions in total","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"    public Integer getSessionCount() {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"        return attendanceArray.length;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"     * Gets the boolean array representation of the Attendance object","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"    public boolean[] getAttendanceArray() {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"        return this.attendanceArray;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"     * Convert the boolean to the formatted String representation of a single session\u0027s attendance.","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"     * @param attendanceStatus Boolean of attendance","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"     * @param session The session index","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"    private String attendanceStatusToString(boolean attendanceStatus, int session) {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"        if (attendanceStatus) {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"            String sessionToPrint \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"            if (session + 1 \u003c 10) {","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"                sessionToPrint \u003d \"  \" + (session + 1) + \"  \";","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"            } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"                sessionToPrint +\u003d \"  \" + (session + 1) + \" \";","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"            return \"[\" + sessionToPrint + \"]\"; // session index displayed if attended","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"        } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"            return \"[       ]\"; // session index omitted if unattended","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"     * Get attendance status of a specific session number","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"     * @param sessionNumber to be retrieve from","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"     * @return attendance status","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"    public boolean getAttendanceFromSession(Integer sessionNumber) {","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"        if (sessionNumber \u003c 0 || sessionNumber \u003e\u003d attendanceArray.length) {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"hmanhduc2k"},"content":"        return attendanceArray[sessionNumber];","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"    public static boolean isValidAttendance(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"jianoway"},"content":"        return test.equals(\"1\") || test.equals(\"0\");","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"    public String toString() {","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"jianoway"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"jianoway"},"content":"        for (int i \u003d 0; i \u003c attendanceArray.length; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"jianoway"},"content":"            boolean attendanceStatus \u003d attendanceArray[i];","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"jianoway"},"content":"            str +\u003d attendanceStatusToString(attendanceStatus, i);","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"jianoway"},"content":"        return str;","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":97,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":98,"author":{"gitId":"jianoway"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":99,"author":{"gitId":"jianoway"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"jianoway"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-03"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"            return true;","lastModifiedDate":"2021-10-03"},{"lineNumber":102,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":103,"author":{"gitId":"jianoway"},"content":"        if (!(other instanceof Attendance)) {","lastModifiedDate":"2021-10-03"},{"lineNumber":104,"author":{"gitId":"jianoway"},"content":"            return false;","lastModifiedDate":"2021-10-03"},{"lineNumber":105,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":106,"author":{"gitId":"jianoway"},"content":"        Attendance a \u003d (Attendance) other;","lastModifiedDate":"2021-10-03"},{"lineNumber":107,"author":{"gitId":"jianoway"},"content":"        boolean[] e \u003d a.attendanceArray;","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"jianoway"},"content":"        if (e.length !\u003d attendanceArray.length) {","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"jianoway"},"content":"            return false;","lastModifiedDate":"2021-10-03"},{"lineNumber":110,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":111,"author":{"gitId":"jianoway"},"content":"        for (int i \u003d 0; i \u003c attendanceArray.length; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"jianoway"},"content":"            if (e[i] !\u003d attendanceArray[i]) {","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"jianoway"},"content":"                return false;","lastModifiedDate":"2021-10-03"},{"lineNumber":114,"author":{"gitId":"jianoway"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":115,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":116,"author":{"gitId":"jianoway"},"content":"        return true;","lastModifiedDate":"2021-10-03"},{"lineNumber":117,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":118,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":119,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":120,"author":{"gitId":"jianoway"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":121,"author":{"gitId":"jianoway"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-03"},{"lineNumber":122,"author":{"gitId":"jianoway"},"content":"        return Arrays.hashCode(attendanceArray);","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":124,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"hmanhduc2k":12,"jianoway":112}},{"path":"src/main/java/seedu/academydirectory/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":" * Represents a Student\u0027s email in the academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"public class Email implements PersonalDetail {","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"phuccuongngo99":2,"Amadeus-Winarto":1,"-":67,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/model/student/Grade.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":" * Represents a Student\u0027s grade for an assessment in the Academy Directory.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGrade(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"public class Grade implements Information {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"            \"Grade should only contain non-negative integers, and it should range from 0 to 100.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(100|[1-9]?[0-9])$\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"    private final String value;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"     * Constructs a {@code Grade}.","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"     * @param grade A valid grade.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"    public Grade(String grade) {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"        requireNonNull(grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"        checkArgument(isValidGrade(grade), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"        value \u003d grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"    public static boolean isValidGrade(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"        requireNonNull(test);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"        return value;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"                || (other instanceof Grade // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"cheweejia"},"content":"                \u0026\u0026 value.equals(((Grade) other).value)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"cheweejia"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"cheweejia"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"cheweejia":53}},{"path":"src/main/java/seedu/academydirectory/model/student/Information.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"public interface Information {","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Amadeus-Winarto":5}},{"path":"src/main/java/seedu/academydirectory/model/student/InformationContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"public class InformationContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"    public InformationContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"    public List\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"        return keywords;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"        return new NameContainsKeywordsPredicate(keywords).test(student)","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"                || new TagContainsKeywordsPredicate(keywords).test(student);","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"                || (other instanceof InformationContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"                \u0026\u0026 this.getKeywords().equals(((InformationContainsKeywordsPredicate) other)","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"                .getKeywords())); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"cheweejia":30}},{"path":"src/main/java/seedu/academydirectory/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":" * Represents a Student\u0027s name in the academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"public class Name extends SortableInformation implements PersonalDetail {","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"    public static Comparator\u003cStudent\u003e getComparator(boolean isAscending) {","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"        return new Comparator\u003cStudent\u003e() {","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"            @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"            public int compare(Student s1, Student s2) {","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"                Name name1 \u003d s1.getName();","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"                Name name2 \u003d s2.getName();","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"                return isAscending","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"                        ? name1.toString().compareTo(name2.toString())","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"                        : name2.toString().compareTo(name1.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"        };","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"phuccuongngo99":3,"Amadeus-Winarto":1,"-":55,"jianoway":14}},{"path":"src/main/java/seedu/academydirectory/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.util.StringUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"public class NameContainsKeywordsPredicate extends InformationContainsKeywordsPredicate {","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"        super(keywords);","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"        return this.getKeywords().stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName, keyword));","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"                \u0026\u0026 this.getKeywords().equals(((NameContainsKeywordsPredicate) other).getKeywords())); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"phuccuongngo99":4,"-":20,"cheweejia":4,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/model/student/Participation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"public class Participation extends SortableInformation {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"    private static final String VALIDATION_REGEX \u003d \"^-?[0-9]\\\\d*$\";","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"    private int[] participationArray;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"    private int totalParticipation \u003d 0;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"     * The constructor for an Participation object.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"     * @param numberOfSessions The number of Studios scheduled","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"     *                         for the semester that the student has to attend","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"    public Participation(Integer numberOfSessions) {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"        requireNonNull(numberOfSessions);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"        participationArray \u003d new int[numberOfSessions];","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"     * Increments or decrements the participation count of the","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"     * given index in the participation array.","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"     * @param index","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"     * @param participationAdd","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"     * @return","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"    public Participation add(Integer index, int participationAdd) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"        int participationResult \u003d participationArray[index - 1] + participationAdd;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"        totalParticipation +\u003d participationAdd;","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"        if (participationResult \u003c 0) {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"            participationArray[index - 1] \u003d 0;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"        } else if (participationResult \u003e 500) {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"            participationArray[index - 1] \u003d 500;","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"            participationArray[index - 1] +\u003d participationAdd;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"     * Replace this Attendance\u0027s boolean array with the given boolean array","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"     * @param intArr The new boolean array","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"    public void setParticipation(int[] intArr) {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"        this.participationArray \u003d intArr;","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"        totalParticipation \u003d 0;","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"        for (int i : intArr) {","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"            totalParticipation +\u003d i;","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"    public int getTotalParticipation() {","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"        return totalParticipation;","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"     * Gets the number of sessions in total","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"    public Integer getSessionCount() {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"        return participationArray.length;","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"     * Gets the boolean array representation of the Attendance object","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"    public int[] getParticipationArray() {","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"        return this.participationArray;","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"     * Convert the boolean to the formatted String representation of a single session\u0027s attendance.","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"     * @param participationCount","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"    public String participationCountToString(int participationCount) {","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"        String participationCountString \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"        if (participationCount \u003c 10) {","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"jianoway"},"content":"            participationCountString +\u003d \"  \" + participationCount + \"  \";","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"jianoway"},"content":"        } else if (participationCount \u003c 100) {","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"            participationCountString +\u003d \"  \" + participationCount + \" \";","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"            participationCountString +\u003d \" \" + participationCount + \" \";","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"jianoway"},"content":"        return \"[\" + participationCountString + \"]\"; // participation score of a student","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"jianoway"},"content":"     * Checks if the given participation change is valid","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"jianoway"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"jianoway"},"content":"     * @param test The participation modifier being tested","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"jianoway"},"content":"    public static boolean isValidParticipation(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"jianoway"},"content":"        requireNonNull(test);","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"        if (!test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"jianoway"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"jianoway"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"jianoway"},"content":"            Integer testInt \u003d Integer.parseInt(test);","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"jianoway"},"content":"            return -500 \u003c\u003d testInt \u0026\u0026 testInt \u003c\u003d 500; // arbitrary max number first","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"hmanhduc2k"},"content":"     * Get participation Score of student","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"hmanhduc2k"},"content":"     * @param sessionNumber session number in need to retrieve information","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"hmanhduc2k"},"content":"     * @return participation mark","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"hmanhduc2k"},"content":"    public Integer getParticipationScoreFrom(Integer sessionNumber) {","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"hmanhduc2k"},"content":"        if (sessionNumber \u003c 0 || sessionNumber \u003e\u003d participationArray.length) {","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"hmanhduc2k"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"hmanhduc2k"},"content":"        return participationArray[sessionNumber];","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"jianoway"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"jianoway"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"jianoway"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"jianoway"},"content":"        for (int i \u003d 0; i \u003c participationArray.length; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"jianoway"},"content":"            int participationCount \u003d participationArray[i];","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"jianoway"},"content":"            str +\u003d participationCountToString(participationCount);","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"jianoway"},"content":"        return str;","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"jianoway"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"jianoway"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"jianoway"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"jianoway"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"jianoway"},"content":"        if (!(other instanceof Participation)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"jianoway"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"jianoway"},"content":"        Participation p \u003d (Participation) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"jianoway"},"content":"        int[] e \u003d p.participationArray;","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"jianoway"},"content":"        if (e.length !\u003d participationArray.length) {","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"jianoway"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"jianoway"},"content":"        for (int i \u003d 0; i \u003c participationArray.length; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"jianoway"},"content":"            if (e[i] !\u003d participationArray[i]) {","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"jianoway"},"content":"                return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"jianoway"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"jianoway"},"content":"        return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"jianoway"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"jianoway"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"jianoway"},"content":"        return Arrays.hashCode(participationArray);","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":157,"author":{"gitId":"jianoway"},"content":"    public static Comparator\u003cStudent\u003e getComparator(boolean isAscending) {","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"jianoway"},"content":"        return new Comparator\u003cStudent\u003e() {","lastModifiedDate":"2021-10-15"},{"lineNumber":159,"author":{"gitId":"jianoway"},"content":"            @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":160,"author":{"gitId":"jianoway"},"content":"            public int compare(Student s1, Student s2) {","lastModifiedDate":"2021-10-15"},{"lineNumber":161,"author":{"gitId":"jianoway"},"content":"                int participation1 \u003d s1.getParticipation().getTotalParticipation();","lastModifiedDate":"2021-10-15"},{"lineNumber":162,"author":{"gitId":"jianoway"},"content":"                int participation2 \u003d s2.getParticipation().getTotalParticipation();","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"jianoway"},"content":"                return isAscending","lastModifiedDate":"2021-10-15"},{"lineNumber":164,"author":{"gitId":"jianoway"},"content":"                        ? Integer.compare(participation1, participation2)","lastModifiedDate":"2021-10-15"},{"lineNumber":165,"author":{"gitId":"jianoway"},"content":"                        : Integer.compare(participation2, participation1);","lastModifiedDate":"2021-10-15"},{"lineNumber":166,"author":{"gitId":"jianoway"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":167,"author":{"gitId":"jianoway"},"content":"        };","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":169,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"hmanhduc2k":12,"jianoway":157}},{"path":"src/main/java/seedu/academydirectory/model/student/PersonalDetail.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"public interface PersonalDetail extends Information {","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"Amadeus-Winarto":4}},{"path":"src/main/java/seedu/academydirectory/model/student/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":" * Represents a Student\u0027s phone number in the academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"public class Phone implements PersonalDetail {","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"            + \" or \u0027NA\u0027 if you don\u0027t want to specify phone number\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String PHONE_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String NA_REGEX \u003d \"^NA$\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String VALIDATION_REGEX \u003d PHONE_REGEX + \"|\" + NA_REGEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    public final Optional\u003cString\u003e value;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (isEmpty(phone)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"            value \u003d Optional.empty();","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"            value \u003d Optional.of(phone);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static boolean isEmpty(String test) {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        return test.matches(NA_REGEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        return value.orElse(\"NA\");","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"                \u0026\u0026 this.toString().equals(other.toString())); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"phuccuongngo99":7,"Amadeus-Winarto":14,"-":44,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/model/student/SortableInformation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"public abstract class SortableInformation implements Information {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Please use a valid sort attribute as follows: \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"            + \"RA1, \"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"            + \"MIDTERM, \"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"            + \"RA2, \"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"            + \"FINAL, \"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"            + \"AVERAGE, \"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"            + \"PE, \"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"            + \"name, \"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"            + \"participation\";","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"    public static final List\u003cString\u003e VALID_SORTABLE \u003d Arrays.asList(","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"            \"RA1\",","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"            \"MIDTERM\",","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"            \"RA2\",","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"            \"PE\",","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"            \"FINAL\",","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"            \"AVERAGE\",","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"            \"PARTICIPATION\",","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"            \"NAME\"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"    );","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"     * Returns true if a given string is a valid SortableInformation by checking if it is contained in","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"     * the VALID_SORTABLE list.","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"    public static boolean isValidSortable(String test) {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"        requireNonNull(test);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"        String uppercaseTest \u003d test.toUpperCase();","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"        return VALID_SORTABLE.contains(uppercaseTest);","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"     * This nested class is to be used for the SortableInformation class to determine the order in which to sort.","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"    public static class Order {","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"        public static final String MESSAGE_CONSTRAINTS \u003d \"Please use a valid order as follows: \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"                + \"\u0027asc\u0027\"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"                + \"\u0027desc\";","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"        public static final List\u003cString\u003e VALID_ORDER \u003d Arrays.asList(\"ASC\", \"DESC\");","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"        /**","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"         * Returns true if a given string is a valid Order by checking if it is contained in","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"         * the VALID_ORDER list.","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"         */","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"        public static boolean isValidOrder(String test) {","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"            requireNonNull(test);","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"            String uppercaseTest \u003d test.toUpperCase();","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"            return VALID_ORDER.contains(uppercaseTest);","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"jianoway":62}},{"path":"src/main/java/seedu/academydirectory/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":" * Represents a Student in the academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"public class Student {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"    private final Telegram telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"    private StudioRecord studioRecord;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"    private Assessment assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"    public Student(Name name, Phone phone, Email email, Telegram telegram, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"        requireAllNonNull(name, phone, email, telegram, tags);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"        this.studioRecord \u003d new StudioRecord(12);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"        this.assessment \u003d new Assessment();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"     * Constructor for Student with Attendance and Assessment.","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"    public Student(Name name, Phone phone, Email email, Telegram telegram, StudioRecord studioRecord,","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"                   Assessment assessment, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"        requireAllNonNull(name, phone, email, telegram, tags);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"        this.studioRecord \u003d studioRecord;","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"cheweejia"},"content":"        this.assessment \u003d assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"phuccuongngo99"},"content":"     * Constructor for Student with Assessment.","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"    public Student(Name name, Phone phone, Email email, Telegram telegram,","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"                   Assessment assessment, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"        requireAllNonNull(name, phone, email, telegram, tags);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"phuccuongngo99"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"phuccuongngo99"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"phuccuongngo99"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"        this.studioRecord \u003d new StudioRecord(12);","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"        this.assessment \u003d assessment;","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"    public void setAttendance(Attendance attendance) {","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"        this.studioRecord \u003d new StudioRecord(attendance, studioRecord.getParticipation());","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"    public void setParticipation(Participation participation) {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"        this.studioRecord \u003d new StudioRecord(studioRecord.getAttendance(), participation);","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"    public void setAssessment(Assessment assessment) {","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"        this.assessment \u003d assessment;","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"phuccuongngo99"},"content":"    public Telegram getTelegram() {","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"phuccuongngo99"},"content":"        return telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"    public Attendance getAttendance() {","lastModifiedDate":"2021-10-03"},{"lineNumber":102,"author":{"gitId":"jianoway"},"content":"        return studioRecord.getAttendance();","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"jianoway"},"content":"    public Participation getParticipation() {","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"jianoway"},"content":"        return studioRecord.getParticipation();","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"jianoway"},"content":"    public StudioRecord getStudioRecord() {","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"jianoway"},"content":"        return studioRecord;","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":112,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":113,"author":{"gitId":"cheweejia"},"content":"    public Assessment getAssessment() {","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"cheweejia"},"content":"        return assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns true if both students have the same name.","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"phuccuongngo99"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"phuccuongngo99"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"phuccuongngo99"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"phuccuongngo99"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"phuccuongngo99"},"content":"                \u0026\u0026 otherStudent.getName().equals(getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns true if both students have the same identity and data fields.","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"phuccuongngo99"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"phuccuongngo99"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"phuccuongngo99"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"phuccuongngo99"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"phuccuongngo99"},"content":"                \u0026\u0026 otherStudent.getPhone().equals(getPhone())","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"phuccuongngo99"},"content":"                \u0026\u0026 otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"phuccuongngo99"},"content":"                \u0026\u0026 otherStudent.getTelegram().equals(getTelegram())","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"jianoway"},"content":"                \u0026\u0026 otherStudent.getTags().equals(getTags())","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"jianoway"},"content":"                \u0026\u0026 otherStudent.getStudioRecord().equals(getStudioRecord())","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"jianoway"},"content":"                \u0026\u0026 otherStudent.getAssessment().equals(getAssessment());","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"phuccuongngo99"},"content":"        return Objects.hash(name, phone, email, telegram, tags, studioRecord);","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"phuccuongngo99"},"content":"                .append(\"; Telegram: \")","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"phuccuongngo99"},"content":"                .append(getTelegram());","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"phuccuongngo99":47,"-":90,"cheweejia":8,"jianoway":40}},{"path":"src/main/java/seedu/academydirectory/model/student/StudioRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"public class StudioRecord implements Information {","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"            \"Studio Session should only be an integer from 1 to 12 inclusive.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"    private static final String VALIDATION_REGEX \u003d \"^-?\\\\d+$\";","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"    private final Integer numberOfSessions;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"    private final Attendance attendance;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"    private final Participation participation;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"     * Default constructor for StudioRecord using number of sessions","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"     * @param numberOfSessions The number of Studio Sessions","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"    public StudioRecord(Integer numberOfSessions) {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"        this.numberOfSessions \u003d numberOfSessions;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"        this.attendance \u003d new Attendance(numberOfSessions);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"        this.participation \u003d new Participation(numberOfSessions);","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"     * Alternative constructor to build with known Attendance and Participation","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"     * @param attendance StudioRecord\u0027s Attendance object","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"     * @param participation StudioRecord\u0027s Attendance object","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"    public StudioRecord(Attendance attendance, Participation participation) {","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"        requireAllNonNull(attendance, participation);","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"        assert (attendance.getSessionCount().equals(participation.getSessionCount()));","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"        this.numberOfSessions \u003d attendance.getSessionCount();","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"        this.participation \u003d participation;","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"        return studioRecordStringHelper();","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"    private String studioRecordStringHelper() {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"        int[] participationArr \u003d getParticipation().getParticipationArray();","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"        boolean[] attendanceArr \u003d getAttendance().getAttendanceArray();","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"        if (participationArr.length !\u003d attendanceArr.length) {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"            return \"STUDIO RECORD FORMAT INVALID\"; // shouldn\u0027t happen as we\u0027re controlling the studio record","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"        for (int i \u003d 0; i \u003c participationArr.length; i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"            boolean attendanceStatus \u003d attendanceArr[i];","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"            if (attendanceStatus) {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"                result +\u003d \"[\" + (i + 1) + \":  \" + participationArr[i] + \"]  \";","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"            } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"                result +\u003d \"[   ]  \";","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"        return result;","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"     * Checks if the given session specified is valid.","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"     * @param test The session being tested","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"    public static boolean isValidStudioRecord(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"        requireNonNull(test);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"        if (!test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"        Integer studioRecord \u003d Integer.parseInt(test);","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"        return 0 \u003c studioRecord \u0026\u0026 studioRecord \u003c 13;","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"    public Attendance getAttendance() {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"        return this.attendance;","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"    public Participation getParticipation() {","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"        return this.participation;","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":"    public String getExtendedStudioRecords() {","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"        String displayedInfo \u003d \"\";","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"hmanhduc2k"},"content":"        for (int sessionNumber \u003d 0; sessionNumber \u003c numberOfSessions; sessionNumber++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"hmanhduc2k"},"content":"            boolean hasAttendedSession \u003d attendance.getAttendanceFromSession(sessionNumber);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"hmanhduc2k"},"content":"            int participationScore \u003d participation.getParticipationScoreFrom(sessionNumber);","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"hmanhduc2k"},"content":"            if (hasAttendedSession) {","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"                displayedInfo +\u003d \"- Session \" + (sessionNumber + 1) + \" attended. \";","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"hmanhduc2k"},"content":"                displayedInfo +\u003d \"Participation mark is \" + participationScore + \"\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"hmanhduc2k"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"hmanhduc2k"},"content":"                displayedInfo +\u003d \"- Session \" + (sessionNumber + 1) + \" not attended.\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"hmanhduc2k"},"content":"        return displayedInfo;","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"jianoway"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"jianoway"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"jianoway"},"content":"                || (other instanceof StudioRecord // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"jianoway"},"content":"                \u0026\u0026 attendance.equals(((StudioRecord) other).attendance)","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"jianoway"},"content":"                \u0026\u0026 participation.equals((((StudioRecord) other).participation)));","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"hmanhduc2k":19,"jianoway":88}},{"path":"src/main/java/seedu/academydirectory/model/student/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.commons.util.StringUtil;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":" * Tests that a {@code Student}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"public class TagContainsKeywordsPredicate extends InformationContainsKeywordsPredicate {","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"        super(keywords);","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"        return this.getKeywords().stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"                .anyMatch(keyword -\u003e student.getTags().stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"                        .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword)));","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"                \u0026\u0026 this.getKeywords().equals(((TagContainsKeywordsPredicate) other).getKeywords())); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"cheweejia":29}},{"path":"src/main/java/seedu/academydirectory/model/student/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":" * Represents a Student\u0027s Telegram handle in the academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegram(String)}","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"public class Telegram implements PersonalDetail {","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram handles should be of the format @handle \"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"            + \"and adhere to the following constraint:\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"            + \"The handle should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The handle may not start or end with any special \"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"            + \"characters.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"    private static final String HANDLE_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\" + \"@\" + HANDLE_REGEX;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"    public final String value;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"     * Constructs an {@code Telegram}.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"     * @param telegram A valid telegram handle.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"    public Telegram(String telegram) {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"        checkArgument(isValidTelegram(telegram), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"        value \u003d telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns if a given string is a valid telegram.","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"    public static boolean isValidTelegram(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"        return value;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"                || (other instanceof Telegram // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"                \u0026\u0026 value.equals(((Telegram) other).value)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"phuccuongngo99":60,"Amadeus-Winarto":1}},{"path":"src/main/java/seedu/academydirectory/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}. As such, adding and","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":" * updating of students uses Student#isSameStudent(Student) for equality so as to ensure that the student being added","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":" * or updated is unique in terms of identity in the UniqueStudentList. However, the removal of a student uses","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":" * Student#equals(Object) so as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"     * Adds a student to the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"phuccuongngo99"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"phuccuongngo99"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"     * The student must exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"phuccuongngo99"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"phuccuongngo99"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"phuccuongngo99"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"phuccuongngo99"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"phuccuongngo99"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"phuccuongngo99"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"phuccuongngo99"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"phuccuongngo99"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"phuccuongngo99"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"phuccuongngo99"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"phuccuongngo99"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"phuccuongngo99"},"content":"        internalList.setAll(students);","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"phuccuongngo99"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"phuccuongngo99"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"phuccuongngo99"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"phuccuongngo99"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"phuccuongngo99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"phuccuongngo99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"phuccuongngo99"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"phuccuongngo99"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"phuccuongngo99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"phuccuongngo99"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"phuccuongngo99"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"phuccuongngo99"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"phuccuongngo99"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"phuccuongngo99"},"content":"                if (students.get(i).isSameStudent(students.get(j))) {","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"phuccuongngo99"},"content":"                    return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"phuccuongngo99"},"content":"                }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"phuccuongngo99"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"phuccuongngo99"},"content":"        return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"phuccuongngo99":137}},{"path":"src/main/java/seedu/academydirectory/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":" * Signals that the operation will result in duplicate Students (Students are considered duplicates if they","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":" * have the same identity).","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"        super(\"Operation would result in duplicate students\");","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"phuccuongngo99":11}},{"path":"src/main/java/seedu/academydirectory/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"phuccuongngo99":6}},{"path":"src/main/java/seedu/academydirectory/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model.tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":" * Represents a Tag in the academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric and consist of one word only. \"","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"            + \"When entering multiple tags, all the tags names should not be empty.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"phuccuongngo99":1,"-":50,"cheweejia":2,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model.util;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyAcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Assessment;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":" * Contains utility methods for populating {@code AcademyDirectory} with sample data.","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"        return new Student[] {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"            new Student(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"                    new Telegram(\"@alexyeoh\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"                    getAssessment(35, 26, 60, 47, 33),","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"                    getTagSet(\"streams\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"            new Student(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"                    new Telegram(\"@berniceyu\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"                    getAssessment(34, 13, 4, 59, 50),","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"                    getTagSet(\"recursion\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"                    new Telegram(\"@charlotte\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"                    getAssessment(30, 24, 5, 12, 48),","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"                    getTagSet(\"wishfulThinking\", \"recursion\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"            new Student(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"                    new Telegram(\"@lidavid\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"                    getAssessment(47, 5, 54, 57, 44),","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"                    getTagSet(\"higherOrderFunctions\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"                    new Telegram(\"@irfan\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"                    getTagSet(\"genius\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"                    new Telegram(\"@royb\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"                    getTagSet(\"abstractions\"))","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"    public static ReadOnlyAcademyDirectory getSampleAcademyDirectory() {","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"        AcademyDirectory sampleAb \u003d new AcademyDirectory();","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"phuccuongngo99"},"content":"    public static Assessment getAssessment(Integer... gradeArray) {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"phuccuongngo99"},"content":"        assert gradeArray.length \u003d\u003d Assessment.ASSESSMENT_LIST.size()","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"phuccuongngo99"},"content":"                : \"Provided list of grade has different length from list of supported Assessment\";","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"        Assessment assessment \u003d new Assessment();","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"        for (int i \u003d 0; i \u003c gradeArray.length; i +\u003d 1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"            assessment.updateAssessmentGrade(Assessment.ASSESSMENT_LIST.get(i),","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"                                                gradeArray[i]);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"phuccuongngo99"},"content":"        return assessment.getCopy();","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"phuccuongngo99":38,"-":26,"jianoway":13}},{"path":"src/main/java/seedu/academydirectory/storage/AcademyDirectoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyAcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":" * Represents a storage for {@link AcademyDirectory}.","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"public interface AcademyDirectoryStorage {","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"    Path getAcademyDirectoryFilePath();","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns AcademyDirectory data as a {@link ReadOnlyAcademyDirectory}.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"    Optional\u003cReadOnlyAcademyDirectory\u003e readAcademyDirectory() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"     * @see #getAcademyDirectoryFilePath()","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"    Optional\u003cReadOnlyAcademyDirectory\u003e readAcademyDirectory(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"     * Saves the given {@link ReadOnlyAcademyDirectory} to the storage.","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"     * @param academyDirectory cannot be null.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"    void saveAcademyDirectory(ReadOnlyAcademyDirectory academyDirectory) throws IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"     * @see #saveAcademyDirectory(ReadOnlyAcademyDirectory)","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"    void saveAcademyDirectory(ReadOnlyAcademyDirectory academyDirectory, Path filePath) throws IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"phuccuongngo99":4,"jianoway":42}},{"path":"src/main/java/seedu/academydirectory/storage/JsonAcademyDirectoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.LogsCenter;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.util.FileUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.util.JsonUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyAcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":" * A class to access AcademyDirectory data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"public class JsonAcademyDirectoryStorage implements AcademyDirectoryStorage {","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAcademyDirectoryStorage.class);","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"    public JsonAcademyDirectoryStorage(Path filePath) {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"    public Path getAcademyDirectoryFilePath() {","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"    public Optional\u003cReadOnlyAcademyDirectory\u003e readAcademyDirectory() throws DataConversionException {","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"        return readAcademyDirectory(filePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"     * Similar to {@link #readAcademyDirectory()}.","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"    public Optional\u003cReadOnlyAcademyDirectory\u003e readAcademyDirectory(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"        Optional\u003cJsonSerializableAcademyDirectory\u003e jsonAcademyDirectory \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"                filePath, JsonSerializableAcademyDirectory.class);","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"        if (!jsonAcademyDirectory.isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"            return Optional.of(jsonAcademyDirectory.get().toModelType());","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"    public void saveAcademyDirectory(ReadOnlyAcademyDirectory academyDirectory) throws IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"        saveAcademyDirectory(academyDirectory, filePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"     * Similar to {@link #saveAcademyDirectory(ReadOnlyAcademyDirectory)}.","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"    public void saveAcademyDirectory(ReadOnlyAcademyDirectory academyDirectory, Path filePath) throws IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"        requireNonNull(academyDirectory);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"phuccuongngo99"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAcademyDirectory(academyDirectory), filePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"phuccuongngo99":9,"-":54,"jianoway":17}},{"path":"src/main/java/seedu/academydirectory/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.Assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Attendance;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Participation;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.StudioRecord;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"    private final String telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"    private final boolean[] attendance;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"    private final int[] participation;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"    private final HashMap\u003cString, Integer\u003e assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"telegram\") String telegram,","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"                              @JsonProperty(\"attendance\") boolean[] attendance,","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"                              @JsonProperty(\"participation\") int[] participation,","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"cheweejia"},"content":"                              @JsonProperty(\"assessment\") HashMap\u003cString, Integer\u003e assessment,","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"        this.participation \u003d participation;","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"cheweejia"},"content":"        this.assessment \u003d assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"        phone \u003d source.getPhone().toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"phuccuongngo99"},"content":"        telegram \u003d source.getTelegram().value;","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"        attendance \u003d source.getAttendance().getAttendanceArray();","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"        participation \u003d source.getParticipation().getParticipationArray();","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"cheweejia"},"content":"        assessment \u003d source.getAssessment().getAssessmentHashMap();","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"phuccuongngo99"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"phuccuongngo99"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"phuccuongngo99"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"phuccuongngo99"},"content":"        final List\u003cTag\u003e studentTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"phuccuongngo99"},"content":"            studentTags.add(tag.toModelType());","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"phuccuongngo99"},"content":"        if (telegram \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"phuccuongngo99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"phuccuongngo99"},"content":"                    Telegram.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"phuccuongngo99"},"content":"        if (!Telegram.isValidTelegram(telegram)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"phuccuongngo99"},"content":"            throw new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"phuccuongngo99"},"content":"        final Telegram modelTelegram \u003d new Telegram(telegram);","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"jianoway"},"content":"        Attendance tempAttendance \u003d new Attendance(attendance.length);","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"jianoway"},"content":"        tempAttendance.setAttendance(attendance);","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"jianoway"},"content":"        Participation tempParticipation \u003d new Participation(participation.length); // should be same length as attend","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"jianoway"},"content":"        tempParticipation.setParticipation(participation);","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"jianoway"},"content":"        StudioRecord tempStudioRecord \u003d new StudioRecord(tempAttendance, tempParticipation);","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"jianoway"},"content":"        final StudioRecord modelStudioRecord \u003d tempStudioRecord;","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"cheweejia"},"content":"        final Assessment modelAssessment \u003d new Assessment(assessment);","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"phuccuongngo99"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(studentTags);","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"phuccuongngo99"},"content":"        return new Student(modelName, modelPhone, modelEmail, modelTelegram, modelStudioRecord,","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"phuccuongngo99"},"content":"                modelAssessment, modelTags);","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"phuccuongngo99":32,"Amadeus-Winarto":1,"-":71,"cheweejia":8,"jianoway":25}},{"path":"src/main/java/seedu/academydirectory/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":45,"jianoway":3}},{"path":"src/main/java/seedu/academydirectory/storage/JsonSerializableAcademyDirectory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyAcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":" * An Immutable AcademyDirectory that is serializable to JSON format.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"@JsonRootName(value \u003d \"academy directory\")","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"class JsonSerializableAcademyDirectory {","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Students list contains duplicate student(s).\";","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"     * Constructs a {@code JsonSerializableAcademyDirectory} with the given students.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"    public JsonSerializableAcademyDirectory(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students) {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"        this.students.addAll(students);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"     * Converts a given {@code ReadOnlyAcademyDirectory} into this class for Jackson use.","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAcademyDirectory}.","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"    public JsonSerializableAcademyDirectory(ReadOnlyAcademyDirectory source) {","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"     * Converts this academy directory into the model\u0027s {@code AcademyDirectory} object.","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"    public AcademyDirectory toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"        AcademyDirectory academyDirectory \u003d new AcademyDirectory();","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"            if (academyDirectory.hasStudent(student)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"            academyDirectory.addStudent(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"        return academyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"phuccuongngo99":13,"-":34,"jianoway":13}},{"path":"src/main/java/seedu/academydirectory/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.util.JsonUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":42,"jianoway":5}},{"path":"src/main/java/seedu/academydirectory/storage/StageAreaStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.StageArea;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.VcObject;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.writer.VersionControlGeneralWriter;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"public class StageAreaStorage {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionControlGeneralWriter versionControlGeneralWriter;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Creates a storage for {@code StageArea}. This class defines how StageArea should be stored in disk e.g.","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"     * in which folder, in what format etc.","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param vcPath Path to save VcObject to","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    public StageAreaStorage(Path vcPath) {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.versionControlGeneralWriter \u003d new VersionControlGeneralWriter(vcPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Writes a given StageArea to disk","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param stageArea The StageArea to be written to disk","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @throws IOException Unable to write to disk","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void saveStageArea(StageArea stageArea) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        boolean nothingWrong \u003d true;","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (stageArea.getVcObjectList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"            return;","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        for (VcObject vcObject : stageArea.getVcObjectList()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"                write(vcObject);","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"            } catch (NullPointerException | IOException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"                nothingWrong \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        stageArea.resetStage();","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!nothingWrong) {","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new IOException(\"Unable to save one or more VcObject\");","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"    private void write(VcObject vcObject) throws NullPointerException, IOException {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (vcObject instanceof Commit \u0026\u0026 !((Commit) vcObject).isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"            Commit commit \u003d (Commit) vcObject;","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"            versionControlGeneralWriter.writeCommit(commit);","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else if (vcObject instanceof Tree \u0026\u0026 !((Tree) vcObject).isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"            Tree tree \u003d (Tree) vcObject;","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"            versionControlGeneralWriter.writeTree(tree);","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else if (vcObject instanceof Label \u0026\u0026 !((Label) vcObject).isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"            Label label \u003d (Label) vcObject;","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"            versionControlGeneralWriter.writeLabel(label);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new NullPointerException(\"NULL vcObject encountered\");","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Amadeus-Winarto":64}},{"path":"src/main/java/seedu/academydirectory/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyAcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.StageArea;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":" * API of the StorageManager component","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"public interface Storage extends AcademyDirectoryStorage, UserPrefsStorage {","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"    Path getAcademyDirectoryFilePath();","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"    Optional\u003cReadOnlyAcademyDirectory\u003e readAcademyDirectory() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"    void saveAcademyDirectory(ReadOnlyAcademyDirectory academyDirectory) throws IOException;","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    void saveStageArea(StageArea stageArea) throws IOException;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Amadeus-Winarto":3,"-":22,"jianoway":9}},{"path":"src/main/java/seedu/academydirectory/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.LogsCenter;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyAcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.StageArea;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":" * Manages storage of AcademyDirectory data in local storage.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final AcademyDirectoryStorage academyDirectoryStorage;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final StageAreaStorage stageAreaStorage;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"     * Creates a {@code StorageManager} with the given {@code AcademyDirectoryStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    public StorageManager(AcademyDirectoryStorage academyDirectoryStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"                          Path versionControlPath) {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"        this.academyDirectoryStorage \u003d academyDirectoryStorage;","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.stageAreaStorage \u003d new StageAreaStorage(versionControlPath);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AcademyDirectory methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"    public Path getAcademyDirectoryFilePath() {","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"        return academyDirectoryStorage.getAcademyDirectoryFilePath();","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"    public Optional\u003cReadOnlyAcademyDirectory\u003e readAcademyDirectory() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"        return readAcademyDirectory(academyDirectoryStorage.getAcademyDirectoryFilePath());","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"    public Optional\u003cReadOnlyAcademyDirectory\u003e readAcademyDirectory(Path filePath)","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"        return academyDirectoryStorage.readAcademyDirectory(filePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"    public void saveAcademyDirectory(ReadOnlyAcademyDirectory academyDirectory) throws IOException {","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"        saveAcademyDirectory(academyDirectory, academyDirectoryStorage.getAcademyDirectoryFilePath());","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"    public void saveAcademyDirectory(ReadOnlyAcademyDirectory academyDirectory, Path filePath) throws IOException {","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"        academyDirectoryStorage.saveAcademyDirectory(academyDirectory, filePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void saveStageArea(StageArea stageArea) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"        logger.fine(\"Attempt to write stage area to file: \");","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"        stageAreaStorage.saveStageArea(stageArea);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"phuccuongngo99":1,"Amadeus-Winarto":12,"-":56,"jianoway":20}},{"path":"src/main/java/seedu/academydirectory/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":" * Represents a storage for {@link seedu.academydirectory.model.UserPrefs}.","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"     * Saves the given {@link seedu.academydirectory.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":30,"jianoway":6}},{"path":"src/main/java/seedu/academydirectory/ui/AppMenu.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.commons.core.LogsCenter;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.HistoryCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.RedoCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.UndoCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.VisualizeCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"public class AppMenu extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String FXML \u003d \"Menu.fxml\";","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppMenu.class);","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"     * Create an application Menu for Academy Directory","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"     * @param commandExecutor command executor","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"    public AppMenu(CommandExecutor commandExecutor) {","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"        super(FXML);","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"    private void handleButtons(String equivalentCommandText) {","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"            commandExecutor.execute(equivalentCommandText);","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (ParseException | CommandException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"            logger.info(\"Button does not do anything\");","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"     * A menu item that quickly executes the equivalent command `show RA1`","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"    public void showRA1() {","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"        logger.info(\"Menu for Show RA1 clicked\");","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"        handleButtons(ShowCommand.COMMAND_WORD + \" RA1\");","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"     * A menu item that quickly executes the equivalent command `show RA2`","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"    public void showRA2() {","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"        logger.info(\"Menu for Show RA2 clicked\");","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"        handleButtons(ShowCommand.COMMAND_WORD + \" RA2\");","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"     * A menu item that quickly executes the equivalent command `show MIDTERM`","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"    public void showMidterm() {","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"        logger.info(\"Menu for Show Midterm clicked\");","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"        handleButtons(ShowCommand.COMMAND_WORD + \" MIDTERM\");","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"     * A menu item that quickly executes the equivalent command `show PE`","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"    public void showPE() {","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"        logger.info(\"Menu for Show PE clicked\");","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"        handleButtons(ShowCommand.COMMAND_WORD + \" PE\");","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"hmanhduc2k"},"content":"     * A menu item that quickly executes the equivalent command `show FINAL`","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"hmanhduc2k"},"content":"    public void showFinal() {","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":"        logger.info(\"Menu for Show Final clicked\");","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"        handleButtons(ShowCommand.COMMAND_WORD + \" FINAL\");","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"hmanhduc2k"},"content":"     * A menu item that quickly executes the equivalent command `visualize`","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"hmanhduc2k"},"content":"    public void showStatistics() {","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"hmanhduc2k"},"content":"        logger.info(\"Menu for Show statistics clicked\");","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"hmanhduc2k"},"content":"        handleButtons(VisualizeCommand.COMMAND_WORD);","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"hmanhduc2k"},"content":"     * A menu item that quickly executes the equivalent command `history`","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"hmanhduc2k"},"content":"    public void showHistory() {","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"hmanhduc2k"},"content":"        logger.info(\"Menu for Show history clicked\");","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"hmanhduc2k"},"content":"        handleButtons(HistoryCommand.COMMAND_WORD);","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"hmanhduc2k"},"content":"     * A menu item that quickly executes the equivalent command `undo`","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"hmanhduc2k"},"content":"    public void undo() {","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"hmanhduc2k"},"content":"        logger.info(\"Menu for undo changes clicked\");","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"hmanhduc2k"},"content":"        handleButtons(UndoCommand.COMMAND_WORD);","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"hmanhduc2k"},"content":"     * A menu item that quickly executes the equivalent command `redo`","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"hmanhduc2k"},"content":"    public void redo() {","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"hmanhduc2k"},"content":"        logger.info(\"Menu for redo clicked\");","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"hmanhduc2k"},"content":"        handleButtons(RedoCommand.COMMAND_WORD);","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"hmanhduc2k"},"content":"     * A menu item that quickly executes the equivalent command `help`","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"hmanhduc2k"},"content":"    public void showHelp() {","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"hmanhduc2k"},"content":"        logger.info(\"Menu for Show help clicked\");","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"hmanhduc2k"},"content":"        handleButtons(HelpCommand.COMMAND_WORD);","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"hmanhduc2k"},"content":"     * A menu item that clears all entries","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"hmanhduc2k"},"content":"    public void clear() {","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"hmanhduc2k"},"content":"        logger.info(\"Cleared\");","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"hmanhduc2k"},"content":"        handleButtons(ClearCommand.COMMAND_WORD);","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"hmanhduc2k"},"content":"     * A menu item that quickly executes the equivalent command `exit`","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"hmanhduc2k"},"content":"    public void exit() {","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"hmanhduc2k"},"content":"        handleButtons(ExitCommand.COMMAND_WORD);","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"hmanhduc2k":149}},{"path":"src/main/java/seedu/academydirectory/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"     * Execute a command by action, through using the equivalent GUI","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"     * @param commandText execute the command","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"    public void execute(String commandText) {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":71,"hmanhduc2k":8,"jianoway":3}},{"path":"src/main/java/seedu/academydirectory/ui/CommandExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.CommandResult;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"/**","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":" * Represents a function that can execute commands.","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":" */","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"@FunctionalInterface","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"public interface CommandExecutor {","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"     * @see seedu.academydirectory.logic.Logic#execute(String)","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"hmanhduc2k":18}},{"path":"src/main/java/seedu/academydirectory/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import com.sandec.mdfx.MarkdownView;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.LogsCenter;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-t15-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"    public static final String HELP_MESSAGE \u003d \"#### Copy user guide:\\n##### \" + USERGUIDE_URL","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"            + \"\\n##### Type in \u0027help\u0027 + COMMAND_NAME for more info of each command.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"            + \"##### Press ESC to exit window otherwise\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"    private static final String MARKDOWN_CSS \u003d \"/view/markdown.css\";","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"    private static final int DEFAULT_WIDTH \u003d 750;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"    private static final int DEFAULT_HEIGHT \u003d 400;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"    private final Stage root;","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"    private final MarkdownView markdownView;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"        this.root \u003d root;","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"        root.addEventHandler(KeyEvent.KEY_RELEASED, event -\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"            if (event.getCode().equals(KeyCode.ESCAPE)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"                hide();","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"        });","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"        this.markdownView \u003d new MarkdownView();","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"        markdownView.getStylesheets().clear();","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"        markdownView.getStylesheets().add(MARKDOWN_CSS);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"        setHelpMessage(Messages.GENERAL_HELP_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"    public HelpWindow() {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"        this(new Stage());","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"     * Set the help message to be put on the Help Window","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"     * @param helpMessage of a command","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"    public void setHelpMessage(String helpMessage) {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"        wrapInMarkdown(helpMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"        wrapInContainer(markdownView);","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"hmanhduc2k"},"content":"     * Wrap the given Help Message in a Markdown-supported view","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"hmanhduc2k"},"content":"     * @param helpMessage of a command","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"    private void wrapInMarkdown(String helpMessage) {","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"hmanhduc2k"},"content":"        Label label \u003d new Label(HELP_MESSAGE + helpMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"hmanhduc2k"},"content":"        markdownView.mdStringProperty().bind(label.textProperty());","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"hmanhduc2k"},"content":"     * Wrap the given Help Message Markdown view in a container","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"hmanhduc2k"},"content":"     * @param markdownView wrapper of help message","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"hmanhduc2k"},"content":"    private void wrapInContainer(MarkdownView markdownView) {","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"hmanhduc2k"},"content":"        ScrollPane content \u003d new ScrollPane(markdownView);","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"hmanhduc2k"},"content":"        content.setFitToWidth(true);","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"hmanhduc2k"},"content":"        HBox container \u003d new HBox(content, copyButton);","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"hmanhduc2k"},"content":"        HBox.setHgrow(content, Priority.ALWAYS);","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"hmanhduc2k"},"content":"        root.setScene(new Scene(container, DEFAULT_WIDTH, DEFAULT_HEIGHT));","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":152,"author":{"gitId":"hmanhduc2k"},"content":"        logger.info(\"Link copied\");","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":86,"hmanhduc2k":70,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.GuiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.LogsCenter;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.Logic;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.CommandResult;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.AdditionalViewModel;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"    private AppMenu appMenu;","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"    private VisualizerDisplay visualizerDisplay;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"    private VBox container;","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"    private HBox contentHolder;","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"    private ImageView image;","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"    private StackPane visualiserDisplayPlaceholder;","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"    private StackPane separator;","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"hmanhduc2k"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"hmanhduc2k"},"content":"        appMenu \u003d new AppMenu(this::executeCommand);","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"hmanhduc2k"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList(), this::executeCommand);","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"phuccuongngo99"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"        visualizerDisplay \u003d new VisualizerDisplay();","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"hmanhduc2k"},"content":"        visualiserDisplayPlaceholder.getChildren().add(visualizerDisplay.getRoot());","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"jianoway"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAcademyDirectoryFilePath());","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"hmanhduc2k"},"content":"        container.getChildren().clear();","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"hmanhduc2k"},"content":"        container.getChildren().addAll(appMenu.getRoot(), contentHolder,","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"hmanhduc2k"},"content":"                commandBoxPlaceholder, statusbarPlaceholder);","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"hmanhduc2k"},"content":"    public void showHelpFrom(AdditionalViewModel additionalViewModel) {","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalInfo\u003c?\u003e additionalInfo \u003d additionalViewModel.getAdditionalInfo();","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"hmanhduc2k"},"content":"        String helpMessage \u003d (String) additionalInfo.get();","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"hmanhduc2k"},"content":"        this.helpWindow.setHelpMessage(helpMessage);","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"hmanhduc2k"},"content":"     * Show the main window of the application","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":164,"author":{"gitId":"phuccuongngo99"},"content":"    public StudentListPanel getStudentListPanel() {","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"phuccuongngo99"},"content":"        return studentListPanel;","lastModifiedDate":"2021-10-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"jianoway"},"content":"     * @see seedu.academydirectory.logic.Logic#execute(String)","lastModifiedDate":"2021-10-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"hmanhduc2k"},"content":"            AdditionalViewModel additionalViewModel \u003d logic.getAdditionalViewModel();","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"hmanhduc2k"},"content":"            visualizerDisplay.handleAdditionalInfo(additionalViewModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"hmanhduc2k"},"content":"                showHelpFrom(additionalViewModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"phuccuongngo99":9,"Amadeus-Winarto":2,"-":138,"hmanhduc2k":39,"jianoway":9}},{"path":"src/main/java/seedu/academydirectory/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"     * Set feedback to user on display, as a logger of the command just executed","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"     * @param feedbackToUser feedback to be sent","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":27,"hmanhduc2k":5,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":27,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.commons.core.LogsCenter;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":" * An UI component that displays information of a {@code Student}.","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AcademyDirectory level 4\u003c/a\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"     * TODO: Change view layout of student card later","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"    private final Student student;","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"    private VBox container;","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"    private Label telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"    private Label studioRecord;","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"    @FXML","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"cheweejia"},"content":"    private Label assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"cheweejia"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"    private ImageView image;","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"    private int displayedIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"    private CommandExecutor commandExecutor;","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"     * Creates a {@code StudentCode} with the given {@code Student} and index to display.","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"     * @param student student to be displayed","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"     * @param displayedIndex index of the student","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"    public StudentCard(Student student, int displayedIndex, CommandExecutor commandExecutor) {","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"        this.student \u003d student;","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"        this.displayedIndex \u003d displayedIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"        phone.setText(student.getPhone().toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"phuccuongngo99"},"content":"        email.setText(student.getEmail().value);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"        studioRecord.setText(student.getStudioRecord().toString());","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"phuccuongngo99"},"content":"        telegram.setText(student.getTelegram().value);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"cheweejia"},"content":"        assessment.setText(student.getAssessment().toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"phuccuongngo99"},"content":"        student.getTags().stream()","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":82,"author":{"gitId":"phuccuongngo99"},"content":"        // Studio Record and Assessment will be removed for better aesthetics","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"phuccuongngo99"},"content":"        container.getChildren().removeAll(studioRecord, assessment);","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":"        image.setImage(new Image(\"/images/student.png\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"phuccuongngo99"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"phuccuongngo99"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"phuccuongngo99"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"hmanhduc2k"},"content":"     * Execute the equivalent command of `view INDEX` by clicking on the student","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"hmanhduc2k"},"content":"    public void viewFullInformation() {","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"hmanhduc2k"},"content":"        logger.info(\"Item selected\");","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"hmanhduc2k"},"content":"        String commandEquivalent \u003d \"view \" + this.displayedIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"hmanhduc2k"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"hmanhduc2k"},"content":"            commandExecutor.execute(commandEquivalent);","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (ParseException | CommandException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"hmanhduc2k"},"content":"            logger.info(\"This should not be reached\");","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"phuccuongngo99":18,"Amadeus-Winarto":1,"-":56,"hmanhduc2k":37,"cheweejia":3,"jianoway":4}},{"path":"src/main/java/seedu/academydirectory/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":" * Panel containing the list of students.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList, CommandExecutor commandExecutor) {","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"        super(FXML);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"                setText(null);","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"            } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1, commandExecutor).getRoot());","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"phuccuongngo99":47,"hmanhduc2k":5}},{"path":"src/main/java/seedu/academydirectory/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":12,"jianoway":1}},{"path":"src/main/java/seedu/academydirectory/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.MainApp;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.LogsCenter;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.util.StringUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.Logic;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/logo_size.jpg\";","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":83,"hmanhduc2k":1,"jianoway":5}},{"path":"src/main/java/seedu/academydirectory/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.MainApp;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":86,"jianoway":2}},{"path":"src/main/java/seedu/academydirectory/ui/VisualizerDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.AdditionalViewType;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.AdditionalViewModel;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.ui.creator.Creator;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.ui.creator.DefaultCreator;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.ui.creator.GraphCreator;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.ui.creator.TextAreaCreator;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.ui.creator.ViewCreator;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":" * A ui for the visualizer bar that is displayed at bottom right of the app.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"public class VisualizerDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"    private static final String FXML \u003d \"VisualizeDisplay.fxml\";","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"    private StackPane placeHolder;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor for a Visualizer Display","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    public VisualizerDisplay() {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"        super(FXML);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"        handleAdditionalInfo(new AdditionalViewModel(AdditionalViewType.DEFAULT, AdditionalInfo.empty()));","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"     * Set visualizer by adding creator inside the container.","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"     * @param creator creator","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"    private void setVisualizer(Creator creator) {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"        placeHolder.getChildren().clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"        placeHolder.getChildren().add(creator.create());","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"     * Handle type of AdditionalView being passed inside AD","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"     * @param additionalViewModel additional View model","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"    public void handleAdditionalInfo(AdditionalViewModel additionalViewModel) {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"        switch (additionalViewModel.getAdditionalViewType()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"        case VIEW:","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"            setVisualizer(new ViewCreator(additionalViewModel.getAdditionalInfo()));","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        case VISUALIZE:","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"            setVisualizer(new GraphCreator(additionalViewModel.getAdditionalInfo()));","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"        case TEXT:","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"            setVisualizer(new TextAreaCreator(additionalViewModel.getAdditionalInfo()));","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"            break;","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"        default:","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"            setVisualizer(new DefaultCreator(additionalViewModel.getAdditionalInfo()));","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"phuccuongngo99":22,"Amadeus-Winarto":6,"hmanhduc2k":33}},{"path":"src/main/java/seedu/academydirectory/ui/creator/Creator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.ui.creator;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.ui.UiPart;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":" * Special sub-abstract-class of UIRegion that takes in an","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":" * Additional Info object and create a new Scene from it.","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"public abstract class Creator extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"    private AdditionalInfo\u003c?\u003e additionalInfo;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor of an Additional View creator","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"     * @param additionalInfo information to be passed in","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"     * @param fxml file","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"    public Creator(AdditionalInfo\u003c?\u003e additionalInfo, String fxml) {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"        super(fxml);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"        this.additionalInfo \u003d additionalInfo;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"     * Create a new Scene/Node with the specified information","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"     * @return new Scene with additional information","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"    public abstract Node create();","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"phuccuongngo99":5,"hmanhduc2k":27}},{"path":"src/main/java/seedu/academydirectory/ui/creator/DefaultCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.ui.creator;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"public class DefaultCreator extends Creator {","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"    private static final String FXML \u003d \"creator/DefaultCreator.fxml\";","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    private final AdditionalInfo\u003c?\u003e additionalInfo;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"    private StackPane placeHolder;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor of Default Creator","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"     * @param additionalInfo information","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"    public DefaultCreator(AdditionalInfo\u003c?\u003e additionalInfo) {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"        super(additionalInfo, FXML);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"        this.additionalInfo \u003d additionalInfo;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"    public Node create() {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"        return getRoot();","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"phuccuongngo99":14,"hmanhduc2k":16}},{"path":"src/main/java/seedu/academydirectory/ui/creator/GraphCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.ui.creator;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"import java.awt.Color;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import org.jfree.chart.JFreeChart;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import org.jfree.chart.StandardChartTheme;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"import org.jfree.chart.axis.CategoryAxis;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"import org.jfree.chart.axis.NumberAxis;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"import org.jfree.chart.fx.ChartViewer;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"import org.jfree.chart.plot.CategoryPlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"import org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"public class GraphCreator extends Creator {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"    private static final String FXML \u003d \"creator/GraphCreator.fxml\";","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"    private final Map\u003cString, List\u003cInteger\u003e\u003e studentAssessmentResults;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"    private StackPane placeHolder;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor of Graph Creator","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"     * @param additionalInfo info to be passed in","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"    public GraphCreator(AdditionalInfo\u003c?\u003e additionalInfo) {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"        super(additionalInfo, FXML);","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"        Map\u003cString, List\u003cInteger\u003e\u003e rawResults \u003d (HashMap\u003cString, List\u003cInteger\u003e\u003e) additionalInfo.get();","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"        this.studentAssessmentResults \u003d this.cleanAssessmentResults(rawResults);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"        BoxAndWhiskerCategoryDataset dataset \u003d this.createDataset();","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"        ChartViewer chartViewer \u003d new ChartViewer(createChart(dataset));","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"        placeHolder.getChildren().add(chartViewer);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"    private List\u003cInteger\u003e filterNegative(List\u003cInteger\u003e list) {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"        return list.stream().filter(num -\u003e num \u003e\u003d 0).collect(Collectors.toList());","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"    private Map\u003cString, List\u003cInteger\u003e\u003e cleanAssessmentResults(Map\u003cString, List\u003cInteger\u003e\u003e assessmentResults) {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"        return assessmentResults","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"phuccuongngo99"},"content":"            .entrySet()","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"            .stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"            .collect(Collectors.toMap(","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"phuccuongngo99"},"content":"                Map.Entry::getKey,","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"                entrySet -\u003e filterNegative(entrySet.getValue())));","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"    private BoxAndWhiskerCategoryDataset createDataset() {","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"phuccuongngo99"},"content":"        DefaultBoxAndWhiskerCategoryDataset dataset \u003d new","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"phuccuongngo99"},"content":"                DefaultBoxAndWhiskerCategoryDataset();","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"        this.studentAssessmentResults.entrySet()","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"                .stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"                .forEachOrdered(entrySet -\u003e dataset.add(entrySet.getValue(), \"Assessments\", entrySet.getKey()));","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"        return dataset;","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"phuccuongngo99"},"content":"    private JFreeChart createChart(","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"phuccuongngo99"},"content":"            final BoxAndWhiskerCategoryDataset dataset) {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"phuccuongngo99"},"content":"        BoxAndWhiskerRenderer boxRenderer \u003d new BoxAndWhiskerRenderer();","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"phuccuongngo99"},"content":"        boxRenderer.setFillBox(true);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"phuccuongngo99"},"content":"        boxRenderer.setSeriesFillPaint(0, Color.BLUE);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"phuccuongngo99"},"content":"        boxRenderer.setSeriesPaint(1, Color.RED);","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"phuccuongngo99"},"content":"        boxRenderer.setSeriesPaint(100, Color.BLUE);","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"phuccuongngo99"},"content":"        boxRenderer.setMaximumBarWidth(0.1);","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"phuccuongngo99"},"content":"        boxRenderer.setMedianVisible(true);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"phuccuongngo99"},"content":"        boxRenderer.setMeanVisible(false);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"phuccuongngo99"},"content":"        CategoryAxis xAxis \u003d new CategoryAxis(\"Assessments\");","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"phuccuongngo99"},"content":"        NumberAxis yAxis \u003d new NumberAxis(\"Grade\");","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"phuccuongngo99"},"content":"        yAxis.setAutoRangeIncludesZero(false);","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"phuccuongngo99"},"content":"        CategoryPlot plot \u003d new CategoryPlot(dataset, xAxis, yAxis, boxRenderer);","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"phuccuongngo99"},"content":"        JFreeChart chart \u003d new JFreeChart(\"\", JFreeChart.DEFAULT_TITLE_FONT, plot, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"phuccuongngo99"},"content":"        StandardChartTheme theme \u003d (StandardChartTheme) StandardChartTheme.createDarknessTheme();","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"phuccuongngo99"},"content":"        theme.apply(chart);","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"phuccuongngo99"},"content":"        boxRenderer.setSeriesPaint(0, new Color(0, 255, 0, 150));","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"phuccuongngo99"},"content":"        return chart;","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"hmanhduc2k"},"content":"     * Create the view","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"hmanhduc2k"},"content":"     * @return new View","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"phuccuongngo99"},"content":"    public Node create() {","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"phuccuongngo99"},"content":"        return this.getRoot();","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"phuccuongngo99":95,"hmanhduc2k":16}},{"path":"src/main/java/seedu/academydirectory/ui/creator/TextAreaCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.ui.creator;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"public class TextAreaCreator extends Creator {","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final String FXML \u003d \"creator/HistoryCreator.fxml\";","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Constructor of a History creator","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param additionalInfo information to be passed in","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"    public TextAreaCreator(AdditionalInfo\u003c?\u003e additionalInfo) {","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(additionalInfo, FXML);","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"        String history \u003d (String) additionalInfo.get();","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        resultDisplay.setText(history);","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Node create() {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        return getRoot();","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Amadeus-Winarto":30,"hmanhduc2k":2}},{"path":"src/main/java/seedu/academydirectory/ui/creator/TextCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.ui.creator;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"public class TextCreator extends Creator {","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final String FXML \u003d \"creator/HistoryCreator.fxml\";","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"    @FXML","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Constructor of a History creator","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param additionalInfo information to be passed in","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    public TextCreator(AdditionalInfo\u003c?\u003e additionalInfo) {","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(additionalInfo, FXML);","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"        String history \u003d (String) additionalInfo.get();","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        resultDisplay.setText(history);","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Node create() {","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        return getRoot();","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"Amadeus-Winarto":32}},{"path":"src/main/java/seedu/academydirectory/ui/creator/ViewCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.ui.creator;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.student.StudioRecord;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.tag.Tag;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"public class ViewCreator extends Creator {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"    private static final String FXML \u003d \"creator/ViewCreator.fxml\";","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"    private final Student student;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"    private StackPane placeHolder;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"    private Label fullName;","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"    private ScrollPane participation;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"    private ScrollPane testScores;","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"    private Label phone;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"    private Label email;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"    private Label telegram;","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"     * View Creator for Student Detailed Information","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"     * @param additionalInfo information to be passed in","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"    public ViewCreator(AdditionalInfo\u003c?\u003e additionalInfo) {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"        super(additionalInfo, FXML);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"        this.student \u003d (Student) additionalInfo.get();","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"        fullName.setText(student.getName().fullName);","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"        phone.setText(\"- Phone number: \" + student.getPhone().toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"        email.setText(\"- Email address: \" + student.getEmail().value);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"        telegram.setText(\"- Telegram handle: \" + student.getTelegram().value);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"        Set\u003cTag\u003e tagsList \u003d student.getTags();","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"        for (Tag tag : tagsList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"            Label tagWrapper \u003d new Label(tag.tagName + \" \");","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"            tags.getChildren().add(tagWrapper);","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"        StudioRecord studioRecord \u003d student.getStudioRecord();","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"        Label displayInfoPlaceHolder \u003d new Label(studioRecord.getExtendedStudioRecords());","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"        participation.setContent(displayInfoPlaceHolder);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"        String assessments \u003d student.getAssessment().getVisualizerDisplay();","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"        testScores.setContent(new Label(assessments));","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"    public Node create() {","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"        return this.getRoot();","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"phuccuongngo99":8,"Amadeus-Winarto":1,"hmanhduc2k":64}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/objects/Commit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.objects;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"public class Commit extends VcObject {","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Commit NULL \u003d new Commit(null, null, null,","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"            \"\", Commit::emptyCommit, Tree::emptyTree);","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    // Commit specific objects","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final String author;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final Date date;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final String message;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    // References","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final Supplier\u003cCommit\u003e parentSupplier;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final Supplier\u003cTree\u003e treeSupplier;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Commit(String hash, String author, Date date, String message, Supplier\u003cCommit\u003e parentSupplier,","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"                  Supplier\u003cTree\u003e treeSupplier) {","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(hash);","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.author \u003d author;","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.message \u003d message.substring(0, Math.min(message.length(), 128));","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.parentSupplier \u003d parentSupplier;","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.treeSupplier \u003d treeSupplier;","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Creates a Commit object to work with programmatically. A Commit object SHOULD NOT be instantiated directly.","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Instead, use a CommitController object to ensure all Commit objects follow the established contract","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param message commit message. May be omitted","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param date date and time when Commit object is created","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param hash commit hash","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param parentSupplier  supplier to parent Commit that current Commit object is pointing to","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param treeSupplier supplier to Tree referenced by current Commit object","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static Commit of(String hash, String author, Date date, String message, Supplier\u003cCommit\u003e parentSupplier,","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"                            Supplier\u003cTree\u003e treeSupplier) {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(hash);","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(author);","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(message);","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(parentSupplier);","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(treeSupplier);","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new Commit(hash, author, date, message, parentSupplier, treeSupplier);","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Commit copy() {","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"            return emptyCommit();","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new Commit(this.getHash(), this.getAuthor(), this.getDate(), this.getMessage(),","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"                this.parentSupplier, this.treeSupplier);","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static Commit emptyCommit() {","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"        return NULL;","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this \u003d\u003d Commit.NULL;","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String toString() {","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"            return \"NULL\";","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"        return Arrays.toString(new String[]{getHash(), author, date.toString(), message});","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String getAuthor() {","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"        return author;","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Date getDate() {","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"        return date;","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"        return message;","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Supplier\u003cCommit\u003e getParentSupplier() {","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"        return parentSupplier;","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Supplier\u003cTree\u003e getTreeSupplier() {","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"        return treeSupplier;","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Retrieve all the ancestors of the current Commit object","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return ancestors of current commit object, including the current given Commit object","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"    public List\u003cCommit\u003e getHistory() {","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"        return getHistory(Commit.NULL);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Retrieve all the ancestors of the current Commit object, up to an end Commit object. If end Commit object is an","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"     * ancestor, then all Commit objects up to but excluding the end Commit object will be included. Otherwise,","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"     * all ancestor Commit objects are returned.","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param endExclusive end Commit object","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return ancestors of the current commit object, including current Commit object but excluding the end Commit","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"Amadeus-Winarto"},"content":"    public List\u003cCommit\u003e getHistory(Commit endExclusive) {","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"Amadeus-Winarto"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this.copy().getHistoryNoCopy(endExclusive);","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"Amadeus-Winarto"},"content":"    private List\u003cCommit\u003e getHistoryNoCopy(Commit endExclusive) {","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit commit \u003d this;","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cCommit\u003e history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (commit.isEmpty() || commit.equals(endExclusive)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"Amadeus-Winarto"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"Amadeus-Winarto"},"content":"        history.add(commit);","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"Amadeus-Winarto"},"content":"        Supplier\u003cCommit\u003e parentCommitSupplier \u003d commit.getParentSupplier();","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"Amadeus-Winarto"},"content":"        while (!parentCommitSupplier.get().equals(endExclusive)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"Amadeus-Winarto"},"content":"            commit \u003d parentCommitSupplier.get();","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"Amadeus-Winarto"},"content":"            history.add(commit);","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"Amadeus-Winarto"},"content":"            parentCommitSupplier \u003d commit.getParentSupplier();","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"Amadeus-Winarto"},"content":"        return history;","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Return the lowest common ancestor","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param otherCommit Other Commit object","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return Lowest common ancestor of both commit objects.","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Commit findLca(Commit otherCommit) {","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this.copy().findLcaNoCopy(otherCommit.copy());","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Commit findLcaNoCopy(Commit otherCommit) {","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(otherCommit);","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (this.isEmpty() || otherCommit.isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":150,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Commit.NULL;","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cCommit\u003e fromA \u003d this.getHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cCommit\u003e fromB \u003d otherCommit.getHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"Amadeus-Winarto"},"content":"        int shiftDepth \u003d Math.abs(fromA.size() - fromB.size());","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit toMove \u003d fromA.size() \u003e fromB.size() ? this : otherCommit;","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit notMoved \u003d fromA.size() \u003e fromB.size() ? otherCommit : this;","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit afterMove \u003d toMove.move(shiftDepth);","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"Amadeus-Winarto"},"content":"        while (!notMoved.equals(afterMove)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"Amadeus-Winarto"},"content":"            notMoved \u003d notMoved.move(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"Amadeus-Winarto"},"content":"            afterMove \u003d afterMove.move(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"Amadeus-Winarto"},"content":"        assert notMoved.equals(afterMove);","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"Amadeus-Winarto"},"content":"        return notMoved;","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Return the ancestor that is the furthest away, limited by the given end Commit.","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param endExclusive Commit object which limits the search","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return furthest ancestor of queriedCommit but is child of endExclusive","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Commit getHighestAncestor(Commit endExclusive) {","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this.copy().getHighestAncestorNoCopy(endExclusive);","lastModifiedDate":"2021-11-01"},{"lineNumber":176,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Commit getHighestAncestorNoCopy(Commit endExclusive) {","lastModifiedDate":"2021-11-01"},{"lineNumber":179,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (this.isEmpty() || this.getParentSupplier().get().equals(endExclusive)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":180,"author":{"gitId":"Amadeus-Winarto"},"content":"            return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this.getParentSupplier().get().getHighestAncestorNoCopy(endExclusive);","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Commit move(int numStep) {","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this.copy().moveNoCopy(numStep);","lastModifiedDate":"2021-11-01"},{"lineNumber":187,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Commit moveNoCopy(int numStep) {","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (this.isEmpty() || numStep \u003d\u003d 0) {","lastModifiedDate":"2021-11-01"},{"lineNumber":191,"author":{"gitId":"Amadeus-Winarto"},"content":"            return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this.getParentSupplier().get().moveNoCopy(numStep - 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Amadeus-Winarto":195}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/objects/Label.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.objects;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"public class Label extends VcObject {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Label NULL \u003d new Label(null, null, Commit::emptyCommit);","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final String name;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final Supplier\u003cCommit\u003e commitSupplier;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Label(String hash, String name, Supplier\u003cCommit\u003e commitSupplier) {","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(hash);","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.commitSupplier \u003d commitSupplier;","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Creates a Label object to work with programmatically. A Label object has a reference to a Commit object","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param hash hash of the current Label object","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param commitSupplier Supplier of Commit referenced by current Label object","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static Label of(String hash, String name, Supplier\u003cCommit\u003e commitSupplier) {","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(hash);","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(commitSupplier);","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new Label(hash, name, commitSupplier);","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Supplier\u003cCommit\u003e getCommitSupplier() {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        return commitSupplier;","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String getName() {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        return name;","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this \u003d\u003d NULL;","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static Label emptyLabel() {","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        return NULL;","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"            return \"NULL\";","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"        return Arrays.toString(new String[]{getHash(), name});","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"Amadeus-Winarto":54}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/objects/Tree.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.objects;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"public class Tree extends VcObject {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Tree NULL \u003d new Tree(null);","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final HashMap\u003cString, String\u003e hashMap;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Tree(String hash) {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(hash);","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"        hashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Tree(String hash, List\u003cString\u003e fileNames, List\u003cString\u003e vcNames) {","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        this(hash);","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        for (int i \u003d 0; i \u003c fileNames.size(); i++) {","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"            hashMap.putIfAbsent(vcNames.get(i), fileNames.get(i));","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Tree(String hash, String fileName, String vcName) {","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        this(hash, List.of(fileName), List.of(vcName));","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Creates a Tree object to work with programmatically. A Tree object SHOULD NOT be instantiated directly.","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Instead, use a BlobFactory object to ensure all Tree objects follow the established contract","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param fileName name of file to be version controlled","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param vcName version controlled name of the file","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static Tree of(String hash, String fileName, String vcName) {","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(hash);","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(fileName);","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(vcName);","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new Tree(hash, fileName, vcName);","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Creates a Tree object to work with programmatically. A Tree object SHOULD NOT be instantiated directly.","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Instead, use a BlobFactory object to ensure all Tree objects follow the established contract","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param hash hash of the resultant tree object","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static Tree of(String hash, List\u003cString\u003e fileNames, List\u003cString\u003e vcNames) {","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(hash);","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(fileNames);","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(vcNames);","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (fileNames.size() !\u003d vcNames.size()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new IllegalArgumentException(\"Different list sizes\");","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new Tree(hash, fileNames, vcNames);","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"    public HashMap\u003cString, String\u003e getHashMap() {","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"        return hashMap;","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static Tree emptyTree() {","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"        return NULL;","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this \u003d\u003d NULL;","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String toString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"        return getHash();","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Regenerate the files following the mapping defined in the current Tree object. Will overwrite destination file","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"     * if it exists.","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @throws IOException if unable to regenerate files","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void regenerateBlobs() throws IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"        HashMap\u003cString, String\u003e hashMap \u003d this.getHashMap();","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"        for (String vcFilename : hashMap.keySet()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"            String actualFilename \u003d hashMap.get(vcFilename);","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"            Path actualFilepath \u003d Paths.get(actualFilename);","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"            Path vcFilepath \u003d Paths.get(vcFilename);","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"            Files.copy(vcFilepath, actualFilepath, REPLACE_EXISTING);","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Amadeus-Winarto":93}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/objects/VcObject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.objects;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"public abstract class VcObject {","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final String hash;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"    protected VcObject(String hash) {","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.hash \u003d hash;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String getHash() {","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"        return hash;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    public abstract boolean isEmpty();","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    public int hashCode() {","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"        return Objects.hash(hash);","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        VcObject vcObject \u003d (VcObject) o;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (this.isEmpty() || vcObject.isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"            return false;","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else {","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"            return getHash().equals(vcObject.getHash());","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Amadeus-Winarto":40}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/reader/CommitReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.reader;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"public class CommitReader extends VersionControlObjectReader\u003cCommit\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final TreeReader treeReader;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Creates a CommitReader to read Commit objects from disk","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param vcPath Path to read Commit objects from","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param treeReader TreeReader to build Tree objects to initialize Commit","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommitReader(Path vcPath, TreeReader treeReader) {","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(vcPath);","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.treeReader \u003d treeReader;","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    protected Commit getProgrammableFormat(List\u003cString\u003e responseArr) {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        assert responseArr.size() \u003e\u003d 1; // Will contain at least filename","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        String hash \u003d responseArr.get(0);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        Iterator\u003cString\u003e args \u003d responseArr.listIterator(1);","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cString\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        while (args.hasNext()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"            String[] arg \u003d args.next().split(\":\", 2);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"            fields.add(arg.length \u003d\u003d 2 ? arg[1].trim() : \"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (fields.size() !\u003d 5) {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Commit.emptyCommit();","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        Date date;","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"            date \u003d df.parse(fields.get(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Commit.emptyCommit();","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"        return Commit.of(hash, fields.get(0), date,","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"                fields.get(2), () -\u003e this.read(fields.get(3)), () -\u003e treeReader.read(fields.get(4)));","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"    public DateFormat getDateFormat() {","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        return df;","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"Amadeus-Winarto":59}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/reader/LabelReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.reader;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"public class LabelReader extends VersionControlObjectReader\u003cLabel\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final CommitReader commitReader;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Creates a Reader which reads {@code Label} from disk","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param vcPath Path to where labels to be read are located","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param commitReader a CommitReader instance","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    public LabelReader(Path vcPath, CommitReader commitReader) {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(vcPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(commitReader);","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.commitReader \u003d commitReader;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    protected Label getProgrammableFormat(List\u003cString\u003e responseArr) {","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        assert responseArr.size() \u003e\u003d 1; // Will contain at least filename","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        String name \u003d responseArr.get(0);","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        Iterator\u003cString\u003e args \u003d responseArr.listIterator(1);","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cString\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        while (args.hasNext()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"            String[] arg \u003d args.next().split(\": \");","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"            if (arg.length \u003d\u003d 2) {","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"                fields.add(arg[1]);","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (fields.size() !\u003d 1) {","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Label.emptyLabel();","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        return Label.of(name, name, () -\u003e commitReader.read(fields.get(0)));","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":46}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/reader/TreeReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.reader;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"public class TreeReader extends VersionControlObjectReader\u003cTree\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    public TreeReader(Path vcPath) {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(vcPath);","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    protected Tree getProgrammableFormat(List\u003cString\u003e responseArr) {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        assert responseArr.size() \u003e\u003d 1; // Guaranteed by write() function","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (responseArr.size() \u003d\u003d 1) {","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Tree.emptyTree(); // Corrupted read \u003d\u003e return null tree","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"        String hash \u003d responseArr.get(0);","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"        Iterator\u003cString\u003e args \u003d responseArr.listIterator(1);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cString\u003e vcNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cString\u003e realNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        while (args.hasNext()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"            String[] arg \u003d args.next().split(\" \");","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"            if (arg.length !\u003d 2) {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"                return Tree.emptyTree();","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"            vcNames.add(arg[0]);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"            realNames.add(arg[1]);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        return Tree.of(hash, realNames, vcNames);","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"Amadeus-Winarto":37}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/reader/VersionControlGeneralReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.reader;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.File;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"public class VersionControlGeneralReader {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final TreeReader treeReader;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final CommitReader commitReader;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final LabelReader labelReader;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final Path vcPath;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Provides a facade layer for reading {@code Tree}, {@code Commit}, and {@code Label}","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param vcPath Path to read files from","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    public VersionControlGeneralReader(Path vcPath) {","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.treeReader \u003d new TreeReader(vcPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.commitReader \u003d new CommitReader(vcPath, treeReader);","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.labelReader \u003d new LabelReader(vcPath, commitReader);","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.vcPath \u003d vcPath;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Reads a Tree whose hash matches the given hash. If there are multiple matches, the first matching file will","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"     * be returned","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param hash hash to be matched against","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return Tree whose hash matches the given hash, or an empty Tree if no matches found or if any issues","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"     * encountered","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Tree readTree(String hash) {","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(hash);","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Allow for 5 digit hash to be used","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        File[] matchingFiles \u003d getMatchFile(hash);","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (matchingFiles.length \u003d\u003d 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Tree.emptyTree();","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Pick first match","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filePath \u003d matchingFiles[0].toPath();","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        return treeReader.read(String.valueOf(filePath.getFileName()));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Reads a Commit whose hash matches the given hash. If there are multiple matches, the first matching file will","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"     * be returned","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param hash hash to be matched against","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return Commit whose hash matches the given hash, or an empty Commit if no matches found or if any issues","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"     * encountered","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Commit readCommit(String hash) {","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(hash);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Allow for 5 digit hash to be used","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"        File[] matchingFiles \u003d getMatchFile(hash);","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (matchingFiles.length \u003d\u003d 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Commit.emptyCommit();","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Pick first match","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filePath \u003d matchingFiles[0].toPath();","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"        return commitReader.read(String.valueOf(filePath.getFileName()));","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Reads a Label whose name matches the given name. If there are multiple matches, the first matching file will","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"     * be returned","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param name name to be matched against","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return Label whose name matches the given name, or an empty Label if no matches found or if any issues","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"     * encountered","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Label readLabel(String name) {","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"        File[] matchingFiles;","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"            matchingFiles \u003d getExactMatchFile(name);","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"            if (matchingFiles.length \u003d\u003d 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"                return Label.emptyLabel();","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Label.emptyLabel();","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Pick first match","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filePath \u003d matchingFiles[0].toPath();","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"        return labelReader.read(String.valueOf(filePath.getFileName()));","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"    private File[] getMatchFile(String string) {","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(string);","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"        File f \u003d new File(String.valueOf(vcPath));","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"        return requireNonNull(f.listFiles((x, name) -\u003e name.startsWith(string)));","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"    private File[] getExactMatchFile(String string) {","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(string);","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"        File f \u003d new File(String.valueOf(vcPath));","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"        return requireNonNull(f.listFiles((x, name) -\u003e name.equals(string)));","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":111}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/reader/VersionControlObjectReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.reader;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.File;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.VcObject;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"public abstract class VersionControlObjectReader\u003cT extends VcObject\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    protected final Path vcPath;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Creates a VersionControlObjectReader to build","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param vcPath path to load and save files to","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    protected VersionControlObjectReader(Path vcPath) {","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.vcPath \u003d vcPath;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Reads a given VcObject from file, with filename being the given name","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    public T read(String name) {","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filePath \u003d this.vcPath.resolve(Path.of(name));","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        Optional\u003cString[]\u003e responseArr \u003d loadFile(filePath).map(s -\u003e s.split(System.lineSeparator()));","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        return getProgrammableFormat(Stream.concat(Stream.of(name), Stream.of(responseArr.orElse(new String[]{})))","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Optional\u003cString\u003e loadFile(Path filepath) {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        File file \u003d new File(String.valueOf(filepath));","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        String result;","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"            result \u003d new String(new FileInputStream(file).readAllBytes(), StandardCharsets.UTF_8);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        return Optional.of(result);","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"    protected abstract T getProgrammableFormat(List\u003cString\u003e vcObject);","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"Amadeus-Winarto":48}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/utils/HashComputer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.utils;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.VcObject;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.writer.VersionControlGeneralWriter;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"public class HashComputer {","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final String tmpFilename \u003d \"temp\";","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final Path tmpPath;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionControlGeneralWriter versionControlGeneralWriter;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final HashGenerator hashGenerator;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Creates a HashComputer which computes hash of a given VcObject, or a file in disk","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param hashMethod Hash function to use","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    public HashComputer(HashMethod hashMethod) {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlGeneralWriter versionControlGeneralWriter1;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path tmpPath1;","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"            tmpPath1 \u003d Files.createTempDirectory(\"ADVC\");","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"            versionControlGeneralWriter1 \u003d new VersionControlGeneralWriter(tmpPath1);","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"            tmpPath1 \u003d null;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"            versionControlGeneralWriter1 \u003d null;","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.hashGenerator \u003d new HashGenerator(hashMethod);","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.versionControlGeneralWriter \u003d versionControlGeneralWriter1;","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.tmpPath \u003d tmpPath1;","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Generates the hash of a given VcObject","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param vcObject VcObject for which the correct hash is to be computed","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return Hash of VcObject if nothing goes wrong, null otherwise.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String generateHashForObject(VcObject vcObject) {","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (tmpPath \u003d\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"            return null;","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"            Path filePath \u003d tmpPath.resolve(tmpFilename);","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"            write(vcObject);","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"            String hash \u003d hashGenerator.generateHashFromFile(filePath);","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"            boolean deletedSuccessfully \u003d filePath.toFile().delete();","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"            return hash;","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"            return null;","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Generates the hash of the file located at filePath","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param filePath path to the file whose hash is to be computed","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return hash of the file if everything works correctly, null otherwise.","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String generateHashFromFile(Path filePath) {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (tmpPath \u003d\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"            return null;","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"            return hashGenerator.generateHashFromFile(filePath);","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"            return null;","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"    private void write(VcObject vcObject) throws NullPointerException, IOException {","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (vcObject instanceof Commit \u0026\u0026 !((Commit) vcObject).isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"            Commit commit \u003d (Commit) vcObject;","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"            versionControlGeneralWriter.writeCommit(Commit.of(tmpFilename, commit.getAuthor(), commit.getDate(),","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"                    commit.getMessage(), commit.getParentSupplier(), commit.getTreeSupplier()));","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else if (vcObject instanceof Tree \u0026\u0026 !((Tree) vcObject).isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"            Tree tree \u003d (Tree) vcObject;","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"            versionControlGeneralWriter.writeTree(Tree.of(","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"                    tmpFilename,","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"                    tree.getHashMap().keySet().stream().map(x -\u003e tree.getHashMap().get(x))","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"                            .collect(Collectors.toList()),","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"                    Arrays.stream(tree.getHashMap().keySet().toArray(String[]::new))","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"                            .collect(Collectors.toList())));","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else if (vcObject instanceof Label \u0026\u0026 !((Label) vcObject).isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"            Label label \u003d (Label) vcObject;","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"            versionControlGeneralWriter.writeLabel(Label.of(tmpFilename, tmpFilename, label.getCommitSupplier()));","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new NullPointerException(\"NULL vcObject encountered\");","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":101}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/utils/HashGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.utils;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.math.BigInteger;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.security.MessageDigest;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.security.NoSuchAlgorithmException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"public class HashGenerator {","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final int numHex;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final MessageDigest digest;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Constructs a HashGenerator which can generate hash for a given file","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param method Hash algorithms supported: MD1, SHA1 and SHA256","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    public HashGenerator(HashMethod method) {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"        int numHex1;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"        MessageDigest digest1;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"            MessageDigest digest \u003d MessageDigest.getInstance(method.getValue());","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"            digest.reset();","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"            digest1 \u003d digest;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"            numHex1 \u003d method.getNumHex();","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (NoSuchAlgorithmException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"            // Will not happen since HashMethod only includes supported algorithms","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"            digest1 \u003d null;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"            numHex1 \u003d 0;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        numHex \u003d numHex1;","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.digest \u003d digest1;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Generates a hash for a given file","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param path Path to the given file","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @return String which represents hash of the given file","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @throws IOException Path not found","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String generateHashFromFile(Path path) throws IOException {","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        digest.reset();","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        digest.update(Files.readAllBytes(path));","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        byte[] hash \u003d digest.digest();","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        return String.format(\"%0\" + numHex + \"x\", new BigInteger(1, hash));","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Amadeus-Winarto":48}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/utils/HashMethod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.utils;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"public enum HashMethod {","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"    SHA1 (\"SHA-1\", 40),","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"    SHA256 (\"SHA-256\", 64),","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"    MD5 (\"MD5\", 32);","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final String value;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final int numHex;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    HashMethod(String s, int numHex) {","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.value \u003d s;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.numHex \u003d numHex;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String getValue() {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        return value;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    public int getNumHex() {","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"        return numHex;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Amadeus-Winarto":23}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/writer/CommitWriter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.writer;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"public class CommitWriter extends VersionControlObjectWriter\u003cCommit\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Creates a StorageManager for Commit that is responsible for reading and writing Commit objects from and to disk","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param vcPath Path to read and write objects","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommitWriter(Path vcPath) {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(vcPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    protected List\u003cString\u003e getWriteableFormat(Commit commit) {","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (commit.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new IllegalArgumentException(\"Cannot get writeable format of NULL!\");","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        String author \u003d \"Author: \" + System.getProperty(\"user.name\");","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        String date \u003d \"Date: \" + df.format(commit.getDate());","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        String message \u003d \"Message: \" + commit.getMessage();","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        String parent \u003d \"Parent: \" + commit.getParentSupplier().get().getHash();","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        String treeRef \u003d \"TreeRef: \" + commit.getTreeSupplier().get().getHash();","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        return List.of(author, date, message, parent, treeRef);","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":35}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/writer/LabelWriter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.writer;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"public class LabelWriter extends VersionControlObjectWriter\u003cLabel\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"    public LabelWriter(Path vcPath) {","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(vcPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    public List\u003cString\u003e getWriteableFormat(Label label) throws IllegalArgumentException {","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (label.equals(Label.emptyLabel())) {","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new IllegalArgumentException(\"Cannot get writeable format of NULL!\");","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"        return List.of(\"ref: \" + label.getCommitSupplier().get().getHash());","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":21}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/writer/TreeWriter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.writer;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"public class TreeWriter extends VersionControlObjectWriter\u003cTree\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    public TreeWriter(Path vcPath) {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(vcPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    public List\u003cString\u003e getWriteableFormat(Tree tree) {","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (tree.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new IllegalArgumentException(\"Cannot get writeable format of NULL!\");","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"        HashMap\u003cString, String\u003e hashMap \u003d tree.getHashMap();","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"        return hashMap.keySet().stream()","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"                .map(key -\u003e key + \" \" + hashMap.get(key))","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":26}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/writer/VersionControlGeneralWriter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.writer;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"public class VersionControlGeneralWriter {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final TreeWriter treeWriter;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final CommitWriter commitWriter;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final LabelWriter labelWriter;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Provides a facade layer for writing {@code Tree}, {@code Commit}, and {@code Label}","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param vcPath Path to write files to","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    public VersionControlGeneralWriter(Path vcPath) {","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"        requireNonNull(vcPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.treeWriter \u003d new TreeWriter(vcPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.commitWriter \u003d new CommitWriter(vcPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.labelWriter \u003d new LabelWriter(vcPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Writes a non-empty Tree","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param tree Tree to be written","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void writeTree(Tree tree) throws IOException {","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (tree.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new IllegalArgumentException(\"Cannot write an empty tree!\");","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        treeWriter.write(tree.getHash(), tree);","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Writes a non-empty Commit","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param commit Commit to be written","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void writeCommit(Commit commit) throws IOException {","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (commit.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new IllegalArgumentException(\"Cannot write an empty commit!\");","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        commitWriter.write(commit.getHash(), commit);","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Writes a non-empty Label","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param label Label to be written","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void writeLabel(Label label) throws IOException {","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (label.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new IllegalArgumentException(\"Cannot write an empty label!\");","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        labelWriter.write(label.getName(), label);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":61}},{"path":"src/main/java/seedu/academydirectory/versioncontrol/writer/VersionControlObjectWriter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.writer;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.commons.util.FileUtil;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.VcObject;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"public abstract class VersionControlObjectWriter\u003cT extends VcObject\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    protected final Path vcPath;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Creates a VersionControlObjectWriter to build","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param vcPath path to load and save files to","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"    protected VersionControlObjectWriter(Path vcPath) {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.vcPath \u003d vcPath;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Writes a given VcObject to file, with filename being the given name","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param name Filename","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @param vcObject to be written to file","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @throws IOException Unable to write to file","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void write(String name, T vcObject) throws IOException {","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path commitPath \u003d this.vcPath.resolve(Path.of(name));","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        FileUtil.writeToFile(commitPath, String.join(System.lineSeparator(), this.getWriteableFormat(vcObject)));","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    protected abstract List\u003cString\u003e getWriteableFormat(T vcObject) throws IllegalArgumentException;","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":33}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter something\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":8,"hmanhduc2k":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"/* List of students */","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"hmanhduc2k"},"content":"/* Each cell containing students */","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"hmanhduc2k"},"content":"/* Even cells */","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"hmanhduc2k"},"content":"    -fx-background-color: linear-gradient(from 0% 0% to 100% 100%, #818192, #303035);","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"hmanhduc2k"},"content":"/* Odd cells */","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"hmanhduc2k"},"content":"    -fx-background-color: linear-gradient(from 0% 0% to 100% 100%, #4A48A9 , #202049);","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"hmanhduc2k"},"content":"/*","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"hmanhduc2k"},"content":"Acknowledgement: Taken from StackOverflow,","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"hmanhduc2k"},"content":"https://stackoverflow.com/questions/65929630/after-adding-a-drop-shadow-to-a-list-cell-hovering-and-selection-events-are-bugg","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"hmanhduc2k"},"content":"*/","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"hmanhduc2k"},"content":".list-cell:filled:hover {","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"hmanhduc2k"},"content":"  -fx-view-order: -1;","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"hmanhduc2k"},"content":"  -fx-effect: dropshadow(gaussian, #67676D, 12, 0.05, 0.0, 2);","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"hmanhduc2k"},"content":"/* When the cells are selected */","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"hmanhduc2k"},"content":"    -fx-text-fill: #CED1DC;","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"hmanhduc2k"},"content":".cell_full_name {","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"hmanhduc2k"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"hmanhduc2k"},"content":"    -fx-font-size: 25px;","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"hmanhduc2k"},"content":"    -fx-text-fill: #CED1DC;","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"hmanhduc2k"},"content":"    -fx-text-fill: #CED1DC;","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":162,"author":{"gitId":"hmanhduc2k"},"content":"     -fx-border-top-width: 4px;","lastModifiedDate":"2021-10-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"hmanhduc2k"},"content":"    -fx-background-color: #cfb4b4;","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"hmanhduc2k"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"phuccuongngo99"},"content":"#filterField, #studentListPanel, #studentWebpage {","lastModifiedDate":"2021-10-05"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":374,"author":{"gitId":"hmanhduc2k"},"content":"#fullName .label {","lastModifiedDate":"2021-10-30"},{"lineNumber":375,"author":{"gitId":"hmanhduc2k"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-30"},{"lineNumber":376,"author":{"gitId":"hmanhduc2k"},"content":"    -fx-font-size: 40pt;","lastModifiedDate":"2021-10-30"},{"lineNumber":377,"author":{"gitId":"hmanhduc2k"},"content":"    -fx-font-family: \"Open-Sans\";","lastModifiedDate":"2021-10-30"},{"lineNumber":378,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"phuccuongngo99":1,"-":348,"hmanhduc2k":29}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"\u003cfx:root title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" minWidth\u003d\"700\" minHeight\u003d\"400\"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"      \u003cVBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" minWidth\u003d\"100\"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"                  onAction\u003d\"#copyUrl\" text\u003d\"Copy UG link\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"-":34,"hmanhduc2k":10}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"         title\u003d\"Academy Directory\" minWidth\u003d\"800\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"    \u003cImage url\u003d\"@/images/logo_size.jpg\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"      \u003cVBox fx:id\u003d\"container\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cHBox fx:id\u003d\"contentHolder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"              style\u003d\"-fx-background-image: url(/images/background.png); -fx-background-repeat: stretch;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"              -fx-background-size: 100% 100%; -fx-background-position: center center;\"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"              minWidth\u003d\"800\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"          \u003cVBox minHeight\u003d\"400\" HBox.hgrow\u003d\"ALWAYS\" maxWidth\u003d\"600\"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"                prefWidth\u003d\"200\" style\u003d\"-fx-background-color: transparent;\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cImageView VBox.vgrow\u003d\"SOMETIMES\" fx:id\u003d\"image\" fitHeight\u003d\"150\" fitWidth\u003d\"350\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"              \u003cImage url\u003d\"@/images/app_logo.png\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"              \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"200\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"          \u003cVBox HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"200\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"resultDisplayPlaceholder\"","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"                       style\u003d\"-fx-background-color: transparent; -fx-border-color: transparent;","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"                            -fx-background-radius: 20; -fx-border-radius: 20; -fx-opacity: 0.9;\"","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"                       styleClass\u003d\"pane-with-border\" maxHeight\u003d\"150\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"visualiserDisplayPlaceholder\"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"                       styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"                       style\u003d\"-fx-background-color: transparent; -fx-opacity: 0.95;","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"                       -fx-border-color: transparent;\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"phuccuongngo99"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"phuccuongngo99"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cStackPane fx:id\u003d\"separator\" VBox.vgrow\u003d\"NEVER\" styleClass\u003d\"pane-with-border\" prefHeight\u003d\"20\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"phuccuongngo99":5,"-":40,"hmanhduc2k":33}},{"path":"src/main/resources/view/Menu.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"\u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"         style\u003d\"-fx-background-image: url(/images/space1.png);","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"         -fx-background-repeat: stretch;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"              -fx-background-size: 100% 100%; -fx-background-position: center center;\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"    \u003cMenu mnemonicParsing\u003d\"false\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cgraphic\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cImageView pickOnBounds\u003d\"true\" fitWidth\u003d\"30\" fitHeight\u003d\"30\"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"                       preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"                \u003cImage url\u003d\"@/images/file.png\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"        \u003c/graphic\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Clear all entries\" onAction\u003d\"#clear\"/\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Exit\" onAction\u003d\"#exit\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"    \u003c/Menu\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"    \u003cMenu mnemonicParsing\u003d\"false\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cgraphic\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cImageView pickOnBounds\u003d\"true\" fitWidth\u003d\"30\" fitHeight\u003d\"30\"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"                       preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"                \u003cImage url\u003d\"@/images/grade.png\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"        \u003c/graphic\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cMenuItem fx:id\u003d\"showRA1\" mnemonicParsing\u003d\"false\" text\u003d\"Show RA1\" onAction\u003d\"#showRA1\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cMenuItem fx:id\u003d\"showMidterm\" mnemonicParsing\u003d\"false\" text\u003d\"Show Midterm\" onAction\u003d\"#showMidterm\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cMenuItem fx:id\u003d\"showRA2\" mnemonicParsing\u003d\"false\" text\u003d\"Show RA2\" onAction\u003d\"#showRA2\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cMenuItem fx:id\u003d\"showPE\" mnemonicParsing\u003d\"false\" text\u003d\"Show PE\" onAction\u003d\"#showPE\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cMenuItem fx:id\u003d\"showFinal\" mnemonicParsing\u003d\"false\" text\u003d\"Show Final\" onAction\u003d\"#showFinal\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"    \u003c/Menu\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"    \u003cMenu mnemonicParsing\u003d\"false\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cgraphic\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cImageView pickOnBounds\u003d\"true\" fitWidth\u003d\"30\" fitHeight\u003d\"30\"","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"                       preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"                \u003cImage url\u003d\"@/images/statistics.png\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"        \u003c/graphic\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cMenuItem fx:id\u003d\"visualize\" mnemonicParsing\u003d\"false\" text\u003d\"Show statistics\" onAction\u003d\"#showStatistics\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"    \u003c/Menu\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"    \u003cMenu mnemonicParsing\u003d\"false\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cgraphic\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cImageView pickOnBounds\u003d\"true\" fitWidth\u003d\"30\" fitHeight\u003d\"30\"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"                       preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"                \u003cImage url\u003d\"@/images/clock.png\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"        \u003c/graphic\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cMenuItem fx:id\u003d\"history\" mnemonicParsing\u003d\"false\" text\u003d\"Usage history\" onAction\u003d\"#showHistory\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cMenuItem fx:id\u003d\"undo\" mnemonicParsing\u003d\"false\" text\u003d\"Undo recent changes\" onAction\u003d\"#undo\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cMenuItem fx:id\u003d\"redo\" mnemonicParsing\u003d\"false\" text\u003d\"Redo\" onAction\u003d\"#redo\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"    \u003c/Menu\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"    \u003cMenu mnemonicParsing\u003d\"false\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cgraphic\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cImageView fx:id\u003d\"help\" pickOnBounds\u003d\"true\" fitWidth\u003d\"30\" fitHeight\u003d\"30\"","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"                       preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"                \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"        \u003c/graphic\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" text\u003d\"Help\" onAction\u003d\"#showHelp\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"    \u003c/Menu\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"\u003c/MenuBar\u003e","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"hmanhduc2k":66}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"           style\u003d\"-fx-opacity: 0.9;\"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"           xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"            editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":7,"hmanhduc2k":5}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"\u003cGridPane styleClass\u003d\"status-bar\"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"          style\u003d\"-fx-background-image: url(/images/space1.png);","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"                -fx-background-repeat: stretch;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"              -fx-background-size: 100% 100%; -fx-background-position: center center;\"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"          xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"-":11,"hmanhduc2k":5}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"      onMousePressed\u003d\"#viewFullInformation\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"    \u003cVBox fx:id\u003d\"container\" alignment\u003d\"CENTER_LEFT\"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"          minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cImageView fx:id\u003d\"image\" fitHeight\u003d\"40\" fitWidth\u003d\"40\"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"                   pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"      \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegram\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"      \u003cLabel fx:id\u003d\"studioRecord\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studioRecord\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"      \u003cLabel fx:id\u003d\"assessment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$assessment\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"phuccuongngo99":1,"-":33,"hmanhduc2k":11,"cheweejia":1,"jianoway":1}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"phuccuongngo99":1,"-":7}},{"path":"src/main/resources/view/VisualizeDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"           style\u003d\"-fx-border-color: transparent; -fx-background-color: transparent; -fx-opacity: 0.95;\"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"           xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"phuccuongngo99":5,"hmanhduc2k":3}},{"path":"src/main/resources/view/creator/DefaultCreator.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"           styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"           xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"hmanhduc2k":10}},{"path":"src/main/resources/view/creator/GraphCreator.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"phuccuongngo99":8}},{"path":"src/main/resources/view/creator/HistoryCreator.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Amadeus-Winarto":9}},{"path":"src/main/resources/view/creator/ViewCreator.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"           style\u003d\"-fx-opaque: 0.9;\"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"           xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"    \u003cVBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cstylesheets\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cURL value\u003d\"@../Fonts.css\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cURL value\u003d\"@../DarkTheme.css\" /\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cURL value\u003d\"@../Extensions.css\" /\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"        \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cHBox alignment\u003d\"CENTER\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"          \u003cLabel fx:id\u003d\"fullName\" styleClass\u003d\"cell_full_name\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cLabel text\u003d\"--------------------------------\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"      \u003cAccordion\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cpanes\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"          \u003cTitledPane fx:id\u003d\"container1\" animated\u003d\"false\" text\u003d\"View Participation\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"              \u003cScrollPane fx:id\u003d\"participation\"  minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"          \u003c/TitledPane\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"          \u003cTitledPane fx:id\u003d\"container2\" animated\u003d\"false\" text\u003d\"View Test Score\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"              \u003cScrollPane fx:id\u003d\"testScores\"  minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"          \u003c/TitledPane\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"        \u003c/panes\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"      \u003c/Accordion\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"        \u003cVBox alignment\u003d\"BOTTOM_LEFT\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cLabel /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"                \u003cLabel styleClass\u003d\"cell_small_label\" style\u003d\"-fx-color: white\"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"                       text\u003d\"Contact information:\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"                        \u003cFont size\u003d\"14.5\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"- Phone number: \\$phone\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\"  text\u003d\"- Email: \\$email\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"            \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"- Telegram handle: \\$telegram\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"hmanhduc2k":55}},{"path":"src/main/resources/view/markdown.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-text {","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-font-size: 12;","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-normal-flow {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-line-spacing: 5;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-heading .markdown-text {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-heading-1 { -fx-padding: 14;}","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-heading-2 { -fx-padding: 10;}","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-heading-3 { -fx-padding: 8; }","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-heading-4 { -fx-padding: 6; }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-heading-5 { -fx-padding: 4; }","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-heading-1 .markdown-text {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-font-size: 40;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-heading-2 .markdown-text {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-font-size: 30;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-heading-3 .markdown-text {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-font-size: 24;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-heading-4 .markdown-text {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-font-size: 18;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-heading-5 .markdown-text {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-font-size: 15;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-link {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-link-hover {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-underline: true;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-paragraph-list {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-spacing: 15;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-listitem-dot {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-font-size: 16;","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-min-width: 20;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-codeblock-box,","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-code {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-padding: 0 8 0 8;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-code {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-code,","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-codeblock {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-wrap-text: true;","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-font-size: 12;","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-codeblock-box,","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-code-background {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-padding: 8;","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-border-radius: 8;","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-border-width: 0.5;","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-background-radius: 8;","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-background-color: #00000009;","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-code-background {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-border-width: 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-background-color: #0000AA10;","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-code-anti-padding {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-border-color: red;","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-border-width: 1;","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-table-table {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-vgap: -1;","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-hgap: 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-table-cell {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-padding: 8;","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-border-width: 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-table-even {","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-table-odd {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-table-cell-top {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-table-cell-top .markdown-normal-flow {","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-alignment: center;","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-text-alignment: center;","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-hbox1 {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-spacing: 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-padding: 8;","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"hmanhduc2k"},"content":" .markdown-normal-block-quote {","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-background-insets: 10;","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-border-width: 0 0 0 3;","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-border-insets: 10 10 10 10;","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"hmanhduc2k"},"content":"   -fx-padding: 10 10 10 10;","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"hmanhduc2k"},"content":" }","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"hmanhduc2k":112}},{"path":"src/test/java/seedu/academydirectory/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":57,"jianoway":1}},{"path":"src/test/java/seedu/academydirectory/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.core;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":26,"jianoway":1}},{"path":"src/test/java/seedu/academydirectory/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.core;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":133,"jianoway":2}},{"path":"src/test/java/seedu/academydirectory/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.core.index;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"        final Index fifthStudentIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(fifthStudentIndex.equals(fifthStudentIndex));","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(fifthStudentIndex.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(fifthStudentIndex.equals(5.0f));","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(fifthStudentIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"phuccuongngo99":7,"-":51,"jianoway":2}},{"path":"src/test/java/seedu/academydirectory/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.util;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotNull(AppUtil.getImage(\"/images/logo_size.jpg\"));","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":33,"hmanhduc2k":1,"jianoway":2}},{"path":"src/test/java/seedu/academydirectory/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.util;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"-":105,"jianoway":3}},{"path":"src/test/java/seedu/academydirectory/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.util;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.Config;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":112,"jianoway":4}},{"path":"src/test/java/seedu/academydirectory/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.util;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":21,"jianoway":2}},{"path":"src/test/java/seedu/academydirectory/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.util;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.testutil.TestUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":42,"jianoway":3}},{"path":"src/test/java/seedu/academydirectory/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.commons.util;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":141,"jianoway":2}},{"path":"src/test/java/seedu/academydirectory/logic/AdditionalViewTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package seedu.academydirectory.logic;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.Command;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.GetCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.HistoryCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ListCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.RedoCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.VisualizeCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"public class AdditionalViewTypeTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"    public void parse_additionalViewType() {","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"        Command viewCommand \u003d new ViewCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"        Command visualizeCommand \u003d new VisualizeCommand();","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"        Command historyCommand \u003d new HistoryCommand();","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"        Command helpCommand \u003d new HelpCommand();","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        Command getCommand \u003d new GetCommand(List.of(PREFIX_EMAIL), List.of());","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"        Command showCommand \u003d new ShowCommand(\"RA1\");","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"        Command redoCommand \u003d new RedoCommand();","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"        Command addCommand \u003d new ListCommand();","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"        // Additional View Type works for View","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(AdditionalViewType.parse(viewCommand), AdditionalViewType.VIEW);","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"        // Additional View Type works for Visualize","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(AdditionalViewType.parse(visualizeCommand), AdditionalViewType.VISUALIZE);","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"        // Additional View Type works for History","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(AdditionalViewType.parse(historyCommand), AdditionalViewType.TEXT);","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"        // Additional View Type works for Help","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(AdditionalViewType.parse(helpCommand), AdditionalViewType.HELP);","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"        // Additional View Type works for Get","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(AdditionalViewType.parse(getCommand), AdditionalViewType.TEXT);","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"        // Additional View Type works for Show","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(AdditionalViewType.parse(showCommand), AdditionalViewType.TEXT);","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"        // Additional View Type returns default for anything else","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(AdditionalViewType.parse(redoCommand), AdditionalViewType.DEFAULT);","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(AdditionalViewType.parse(addCommand), AdditionalViewType.DEFAULT);","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(AdditionalViewType.parse(viewCommand), AdditionalViewType.DEFAULT);","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"Amadeus-Winarto":3,"hmanhduc2k":54}},{"path":"src/test/java/seedu/academydirectory/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.AddCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.CommandResult;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.ListCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyAcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.storage.JsonAcademyDirectoryStorage;","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.storage.StorageManager;","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionedModel model \u003d new VersionedModelManager();","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"        JsonAcademyDirectoryStorage academyDirectoryStorage \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"                new JsonAcademyDirectoryStorage(temporaryFolder.resolve(\"academyDirectory.json\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        StorageManager storage \u003d new StorageManager(academyDirectoryStorage, userPrefsStorage,","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"                temporaryFolder.resolve(\"vc\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"        // Setup LogicManager with JsonAcademyDirectoryIoExceptionThrowingStub","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"        JsonAcademyDirectoryStorage academyDirectoryStorage \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"                new JsonAcademyDirectoryIoExceptionThrowingStub(","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"                        temporaryFolder.resolve(\"ioExceptionAcademyDirectory.json\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"        StorageManager storage \u003d new StorageManager(academyDirectoryStorage, userPrefsStorage,","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"                temporaryFolder.resolve(\"vc\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"phuccuongngo99"},"content":"                + TELEGRAM_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"phuccuongngo99"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModelManager expectedModel \u003d new VersionedModelManager();","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"phuccuongngo99"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"phuccuongngo99"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @see #assertCommandFailure(String, Class, String, VersionedModel)","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"                                      VersionedModel expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @see #assertCommandFailure(String, Class, String, VersionedModel)","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @see #assertCommandFailure(String, Class, String, VersionedModel)","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"Amadeus-Winarto"},"content":"     * @see #assertCommandFailure(String, Class, String, VersionedModel)","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager(model.getAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"Amadeus-Winarto"},"content":"            String expectedMessage, VersionedModel expectedModel) {","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"jianoway"},"content":"    private static class JsonAcademyDirectoryIoExceptionThrowingStub extends JsonAcademyDirectoryStorage {","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"jianoway"},"content":"        private JsonAcademyDirectoryIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"jianoway"},"content":"        public void saveAcademyDirectory(ReadOnlyAcademyDirectory academyDirectory, Path filePath) throws IOException {","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"phuccuongngo99":11,"Amadeus-Winarto":15,"-":114,"jianoway":25}},{"path":"src/test/java/seedu/academydirectory/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":" * Contains integration tests (interaction with the VersionedModel) for {@code AddCommand}.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    private VersionedModel model;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        model \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager(model.getAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"        Student studentInList \u003d model.getAcademyDirectory().getStudentList().get(0);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"        assertCommandFailure(new AddCommand(studentInList), model, AddCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"phuccuongngo99":11,"Amadeus-Winarto":6,"-":24,"jianoway":4}},{"path":"src/test/java/seedu/academydirectory/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.GuiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.logic.AdditionalViewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.AdditionalInfo;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.AdditionalViewModel;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyAcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.StageArea;","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"        ModelStubAcceptingStudentAdded modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"        CommandResult commandResult \u003d new AddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"        ModelStub modelStub \u003d new ModelStubWithStudent(validStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"phuccuongngo99"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"    private class ModelStub implements VersionedModel {","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"hmanhduc2k"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"hmanhduc2k"},"content":"        public void setAdditionalInfo(AdditionalInfo\u003c?\u003e additionalInfo) {","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"hmanhduc2k"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"jianoway"},"content":"        public Path getAcademyDirectoryFilePath() {","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"jianoway"},"content":"        public void setAcademyDirectoryFilePath(Path academyDirectoryFilePath) {","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"phuccuongngo99"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"jianoway"},"content":"        public void setAcademyDirectory(ReadOnlyAcademyDirectory newData) {","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"jianoway"},"content":"        public ReadOnlyAcademyDirectory getAcademyDirectory() {","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"phuccuongngo99"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"phuccuongngo99"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"phuccuongngo99"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"phuccuongngo99"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"phuccuongngo99"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"Amadeus-Winarto"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"Amadeus-Winarto"},"content":"        public void commit(String message) {","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"Amadeus-Winarto"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"Amadeus-Winarto"},"content":"        public Commit revert(String fiveCharHash) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"Amadeus-Winarto"},"content":"            return Commit.emptyCommit();","lastModifiedDate":"2021-11-01"},{"lineNumber":169,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"Amadeus-Winarto"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"Amadeus-Winarto"},"content":"        public StageArea getStageArea() {","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"Amadeus-Winarto"},"content":"            return new StageArea();","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"Amadeus-Winarto"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"Amadeus-Winarto"},"content":"        public Commit getHeadCommit() {","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"Amadeus-Winarto"},"content":"            return null;","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"Amadeus-Winarto"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"Amadeus-Winarto"},"content":"        public Commit fetchCommitByLabel(String labelName) {","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"Amadeus-Winarto"},"content":"            return null;","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"phuccuongngo99"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"phuccuongngo99"},"content":"        public AdditionalViewModel getAdditionalViewModel() {","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"phuccuongngo99"},"content":"            return null;","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"phuccuongngo99"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"phuccuongngo99"},"content":"        public void setAdditionalViewType(AdditionalViewType additionalViewType) {","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"phuccuongngo99"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"Amadeus-Winarto"},"content":"     * A VersionedModel stub that contains a single student.","lastModifiedDate":"2021-11-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"phuccuongngo99"},"content":"    private class ModelStubWithStudent extends ModelStub {","lastModifiedDate":"2021-10-05"},{"lineNumber":201,"author":{"gitId":"phuccuongngo99"},"content":"        private final Student student;","lastModifiedDate":"2021-10-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"phuccuongngo99"},"content":"        ModelStubWithStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":204,"author":{"gitId":"phuccuongngo99"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":205,"author":{"gitId":"phuccuongngo99"},"content":"            this.student \u003d student;","lastModifiedDate":"2021-10-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"phuccuongngo99"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":210,"author":{"gitId":"phuccuongngo99"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":211,"author":{"gitId":"phuccuongngo99"},"content":"            return this.student.isSameStudent(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"Amadeus-Winarto"},"content":"     * A VersionedModel stub that always accept the student being added.","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"phuccuongngo99"},"content":"    private class ModelStubAcceptingStudentAdded extends ModelStub {","lastModifiedDate":"2021-10-05"},{"lineNumber":219,"author":{"gitId":"phuccuongngo99"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"phuccuongngo99"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":223,"author":{"gitId":"phuccuongngo99"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":224,"author":{"gitId":"phuccuongngo99"},"content":"            return studentsAdded.stream().anyMatch(student::isSameStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"phuccuongngo99"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":229,"author":{"gitId":"phuccuongngo99"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":230,"author":{"gitId":"phuccuongngo99"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"jianoway"},"content":"        public ReadOnlyAcademyDirectory getAcademyDirectory() {","lastModifiedDate":"2021-10-01"},{"lineNumber":235,"author":{"gitId":"jianoway"},"content":"            return new AcademyDirectory();","lastModifiedDate":"2021-10-01"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"phuccuongngo99":50,"Amadeus-Winarto":32,"-":138,"hmanhduc2k":6,"jianoway":13}},{"path":"src/test/java/seedu/academydirectory/logic/commands/AttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":" * Contains integration tests (interaction with the VersionedModel) and unit tests for AttendanceCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"public class AttendanceCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"    private static final boolean STUDIO_ATTENDANCE_STUB \u003d true;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"    private static final Integer STUDIO_SESSION_STUB \u003d 1;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"    private static final Index INDEX_STUB \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"    private static final ArrayList\u003cIndex\u003e INDEX_ARRAYLIST_STUB \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"    private static final ArrayList\u003cIndex\u003e INDEX_ARRAYLIST_STUB_2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"    private static final boolean[] BOOLEAN_ARRAY_STUB \u003d new boolean[12];","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"    private VersionedModel model \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"    public void execute_updateAttendance_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"        INDEX_ARRAYLIST_STUB.add(INDEX_STUB);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"        BOOLEAN_ARRAY_STUB[0] \u003d true;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"        Student editedStudent \u003d new StudentBuilder(firstStudent).withAttendance(BOOLEAN_ARRAY_STUB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"        AttendanceCommand addAttendanceCommand \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"                new AttendanceCommand(STUDIO_ATTENDANCE_STUB, STUDIO_SESSION_STUB, INDEX_ARRAYLIST_STUB);","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"        String expectedMessage \u003d AttendanceCommand.MESSAGE_UPDATE_ATTENDANCE_SUCCESS;","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager(","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"                new AcademyDirectory(model.getAcademyDirectory()), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"        expectedModel.setStudent(firstStudent, editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"        assertCommandSuccess(addAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"        BOOLEAN_ARRAY_STUB[0] \u003d false;","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"        Student otherEditedStudent \u003d new StudentBuilder(firstStudent).withAttendance(BOOLEAN_ARRAY_STUB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"        expectedModel.setStudent(editedStudent, otherEditedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"        AttendanceCommand removeAttendanceCommand \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"                new AttendanceCommand(false, STUDIO_SESSION_STUB, INDEX_ARRAYLIST_STUB);","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"        assertCommandSuccess(removeAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"        ArrayList\u003cIndex\u003e indexArrayListOutOfBounds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"        indexArrayListOutOfBounds.add(outOfBoundIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"        AttendanceCommand attendanceCommand \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"                new AttendanceCommand(STUDIO_ATTENDANCE_STUB, STUDIO_SESSION_STUB, indexArrayListOutOfBounds);","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"        assertCommandFailure(attendanceCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"phuccuongngo99"},"content":"     * but smaller than size of academy directory","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"phuccuongngo99"},"content":"        // ensures that outOfBoundIndex is still in bounds of academy directory list","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAcademyDirectory().getStudentList().size());","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"        ArrayList\u003cIndex\u003e indexArrayListOutOfBounds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"jianoway"},"content":"        indexArrayListOutOfBounds.add(outOfBoundIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"jianoway"},"content":"        AttendanceCommand attendanceCommand \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"                new AttendanceCommand(STUDIO_ATTENDANCE_STUB, STUDIO_SESSION_STUB, indexArrayListOutOfBounds);","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"        assertCommandFailure(attendanceCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"jianoway"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"jianoway"},"content":"        INDEX_ARRAYLIST_STUB.add(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"jianoway"},"content":"        INDEX_ARRAYLIST_STUB_2.add(INDEX_SECOND_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"jianoway"},"content":"        final AttendanceCommand standardCommand \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"jianoway"},"content":"                new AttendanceCommand(STUDIO_ATTENDANCE_STUB, STUDIO_SESSION_STUB, INDEX_ARRAYLIST_STUB);","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"jianoway"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"jianoway"},"content":"        AttendanceCommand commandWithSameValues \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"                new AttendanceCommand(STUDIO_ATTENDANCE_STUB, STUDIO_SESSION_STUB, INDEX_ARRAYLIST_STUB);","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"jianoway"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"jianoway"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"jianoway"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"jianoway"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"jianoway"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"jianoway"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"jianoway"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"jianoway"},"content":"        // different indexArrayList","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"jianoway"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"jianoway"},"content":"                new AttendanceCommand(STUDIO_ATTENDANCE_STUB, STUDIO_SESSION_STUB, INDEX_ARRAYLIST_STUB_2)));","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"jianoway"},"content":"        // different attendance","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"jianoway"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"jianoway"},"content":"                new AttendanceCommand(false, STUDIO_SESSION_STUB, INDEX_ARRAYLIST_STUB)));","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"jianoway"},"content":"        // different session","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"jianoway"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"jianoway"},"content":"                new AttendanceCommand(STUDIO_ATTENDANCE_STUB, 2, INDEX_ARRAYLIST_STUB)));","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"phuccuongngo99":2,"Amadeus-Winarto":6,"jianoway":117}},{"path":"src/test/java/seedu/academydirectory/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"    public void execute_emptyAcademyDirectory_success() {","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel model \u003d new VersionedModelManager();","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager();","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"    public void execute_nonEmptyAcademyDirectory_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel model \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"        expectedModel.setAcademyDirectory(new AcademyDirectory());","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"phuccuongngo99":2,"Amadeus-Winarto":6,"-":18,"jianoway":6}},{"path":"src/test/java/seedu/academydirectory/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":53,"jianoway":1}},{"path":"src/test/java/seedu/academydirectory/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String VALID_TELEGRAM_AMY \u003d \"@amy\";","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String VALID_TELEGRAM_BOB \u003d \"@bob\";","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"    public static final String VALID_TAG_STREAMS \u003d \"streams\";","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"    public static final String VALID_TAG_RECURSION \u003d \"recursion\";","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String TELEGRAM_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String TELEGRAM_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_RECURSION;","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_STREAMS;","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String INVALID_TELEGRAM_DESC \u003d \" \" + PREFIX_TELEGRAM + \"!bob\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"recusion*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"phuccuongngo99"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"                .build();","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"phuccuongngo99"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"                .withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"                .build();","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static void assertCommandSuccess(Command command, VersionedModel actualModel,","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"                                            CommandResult expectedCommandResult, VersionedModel expectedModel) {","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, VersionedModel, CommandResult, VersionedModel)}","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static void assertCommandSuccess(Command command, VersionedModel actualModel, String expectedMessage,","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"                                            VersionedModel expectedModel) {","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"phuccuongngo99"},"content":"     * - the academy directory, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static void assertCommandFailure(Command command, VersionedModel actualModel, String expectedMessage) {","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"phuccuongngo99"},"content":"        AcademyDirectory expectedAcademyDirectory \u003d new AcademyDirectory(actualModel.getAcademyDirectory());","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"phuccuongngo99"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":111,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(expectedAcademyDirectory, actualModel.getAcademyDirectory());","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":115,"author":{"gitId":"phuccuongngo99"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"phuccuongngo99"},"content":"     * {@code model}\u0027s academy directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static void showStudentAtIndex(VersionedModel model, Index targetIndex) {","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"phuccuongngo99"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"phuccuongngo99"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"phuccuongngo99"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"phuccuongngo99":27,"Amadeus-Winarto":10,"-":77,"jianoway":14}},{"path":"src/test/java/seedu/academydirectory/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":" * Contains integration tests (interaction with the VersionedModel) and unit tests for","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    private VersionedModel model \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModelManager expectedModel \u003d new VersionedModelManager(model.getAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager(model.getAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"        showNoStudent(expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"        // ensures that outOfBoundIndex is still in bounds of academy directory list","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAcademyDirectory().getStudentList().size());","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"phuccuongngo99"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"phuccuongngo99"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"phuccuongngo99"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"phuccuongngo99"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"phuccuongngo99"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"    private void showNoStudent(VersionedModel model) {","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"phuccuongngo99"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"phuccuongngo99":28,"Amadeus-Winarto":7,"-":68,"jianoway":6}},{"path":"src/test/java/seedu/academydirectory/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":" * Contains integration tests (interaction with the VersionedModel) and unit tests for EditCommand.","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionedModel model \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        Student originalStudent \u003d model.getFilteredStudentList().get(0);","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        Student defaultStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        Student editedStudent \u003d new StudentBuilder(originalStudent)","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"                .withName(defaultStudent.getName().fullName)","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"                .withPhone(defaultStudent.getPhone().toString())","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"                .withEmail(defaultStudent.getEmail().toString())","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"                .withTelegram(defaultStudent.getTelegram().toString()).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager(","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"                new AcademyDirectory(model.getAcademyDirectory()), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"phuccuongngo99"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"        Student editedStudent \u003d studentInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"cheweejia"},"content":"                .withTags().build();","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"phuccuongngo99"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"cheweejia"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"                .build();","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastStudent, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager(","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"                new AcademyDirectory(model.getAcademyDirectory()), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"phuccuongngo99"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"phuccuongngo99"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, new EditStudentDescriptor());","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"phuccuongngo99"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"phuccuongngo99"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager(","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"                new AcademyDirectory(model.getAcademyDirectory()), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"phuccuongngo99"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"phuccuongngo99"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"phuccuongngo99"},"content":"        Student editedStudent \u003d new StudentBuilder(studentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"phuccuongngo99"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"phuccuongngo99"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"phuccuongngo99"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager(","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"                new AcademyDirectory(model.getAcademyDirectory()), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"jianoway"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"phuccuongngo99"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"phuccuongngo99"},"content":"    public void execute_duplicateStudentUnfilteredList_failure() {","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"phuccuongngo99"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"phuccuongngo99"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"phuccuongngo99"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_STUDENT, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"phuccuongngo99"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"phuccuongngo99"},"content":"    public void execute_duplicateStudentFilteredList_failure() {","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"phuccuongngo99"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"phuccuongngo99"},"content":"        // edit student in filtered list into a duplicate in academy directory","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"phuccuongngo99"},"content":"        Student studentInList \u003d model.getAcademyDirectory().getStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"phuccuongngo99"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"phuccuongngo99"},"content":"                new EditStudentDescriptorBuilder(studentInList).build());","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"phuccuongngo99"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"phuccuongngo99"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"phuccuongngo99"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"phuccuongngo99"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"phuccuongngo99"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"phuccuongngo99"},"content":"     * but smaller than size of academy directory","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"phuccuongngo99"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"phuccuongngo99"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"phuccuongngo99"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"phuccuongngo99"},"content":"        // ensures that outOfBoundIndex is still in bounds of academy directory list","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAcademyDirectory().getStudentList().size());","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"phuccuongngo99"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"phuccuongngo99"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"phuccuongngo99"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, DESC_AMY);","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"phuccuongngo99"},"content":"        EditStudentDescriptor copyDescriptor \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-05"},{"lineNumber":163,"author":{"gitId":"phuccuongngo99"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_STUDENT, copyDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_STUDENT, DESC_AMY)));","lastModifiedDate":"2021-10-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_STUDENT, DESC_BOB)));","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"phuccuongngo99":58,"Amadeus-Winarto":21,"-":89,"cheweejia":2,"jianoway":12}},{"path":"src/test/java/seedu/academydirectory/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"        EditStudentDescriptor descriptorWithSameValues \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"        EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"        // different telegram -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"phuccuongngo99":11,"-":36,"jianoway":6}},{"path":"src/test/java/seedu/academydirectory/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"    private VersionedModel model \u003d new VersionedModelManager();","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    private VersionedModel expectedModel \u003d new VersionedModelManager();","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Amadeus-Winarto":4,"-":13,"jianoway":3}},{"path":"src/test/java/seedu/academydirectory/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.CARL;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.InformationContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":" * Contains integration tests (interaction with the VersionedModel) for {@code FilterCommand}.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"public class FilterCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    private VersionedModel model \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    private VersionedModel expectedModel \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"        InformationContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"                new InformationContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"        InformationContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"                new InformationContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"        FilterCommand findFirstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"cheweejia"},"content":"        assertTrue(filterFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"cheweejia"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"cheweejia"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"cheweejia"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"phuccuongngo99"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"cheweejia"},"content":"        InformationContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"cheweejia"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"cheweejia"},"content":"        InformationContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"cheweejia"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"cheweejia"},"content":"    private InformationContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"cheweejia"},"content":"        return new InformationContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"phuccuongngo99":14,"Amadeus-Winarto":5,"-":41,"cheweejia":20,"jianoway":3}},{"path":"src/test/java/seedu/academydirectory/logic/commands/GetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.logic.commands.GetCommand.MESSAGE_NOTHING_TO_SHOW;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalStudents;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.parser.Prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.student.PersonalDetail;","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":" * Contains integration tests (interaction with the VersionedModel) for {@code FindCommand}.","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"public class GetCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionedModel model \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionedModel expectedModel \u003d new VersionedModelManager(getTypicalAcademyDirectory(),","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"            new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        GetCommand emailGetCommand \u003d new GetCommand(List.of(PREFIX_EMAIL), List.of());","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        GetCommand telegramGetCommand \u003d new GetCommand(List.of(PREFIX_TELEGRAM), List.of());","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(emailGetCommand, emailGetCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(telegramGetCommand, telegramGetCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        GetCommand emailGetCommandCopy \u003d new GetCommand(List.of(PREFIX_EMAIL), List.of());","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(emailGetCommand, emailGetCommandCopy);","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(1, emailGetCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(0, telegramGetCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(emailGetCommand.equals(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(telegramGetCommand.equals(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(emailGetCommand, telegramGetCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void execute_singlePrefixNoNameNonEmptyModel() {","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"        GetCommand.SUPPORTED_PREFIX.forEach(prefix -\u003e execute_singlePrefix(prefix, model, null));","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void execute_singlePrefixWithNameNonEmptyModel() {","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"        getTypicalStudents()","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"                .forEach(student -\u003e GetCommand.SUPPORTED_PREFIX","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"                        .forEach(prefix -\u003e execute_singlePrefix(prefix, model, student.getName())));","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"        ;","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"    private void execute_singlePrefix(Prefix prefix, VersionedModel model, Name name) {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cString\u003e nameList \u003d name \u003d\u003d null","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"                ? List.of()","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"                : List.of(name.fullName.split(\"\\\\s\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"        NameContainsKeywordsPredicate predicate \u003d name \u003d\u003d null","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"                ? null","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"                : new NameContainsKeywordsPredicate(nameList);","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"        ObservableList\u003cPersonalDetail\u003e expectedResponse \u003d model.getAcademyDirectory()","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"                .getStudentList().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"                .filter(x -\u003e predicate \u003d\u003d null || predicate.test(x))","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"                .map(x -\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"                    if (PREFIX_EMAIL.equals(prefix)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"                        return x.getEmail();","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"                    } else if (PREFIX_TELEGRAM.equals(prefix)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"                        return x.getTelegram();","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"                    } else if (PREFIX_PHONE.equals(prefix)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"                        return x.getPhone();","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"                    }","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"                    return null;","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"                })","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"                .collect(Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"hmanhduc2k"},"content":"        String content \u003d expectedResponse.stream()","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"                .map(Object::toString)","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"        GetCommand command \u003d new GetCommand(List.of(prefix), nameList);","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"        command.execute(model);","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(model.getAdditionalViewModel().getAdditionalInfo().get(), content);","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertCommandSuccess(command, model, GetCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void execute_singlePrefixEmptyModel() {","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel emptyModel \u003d new VersionedModelManager();","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"        GetCommand.SUPPORTED_PREFIX.forEach(prefix -\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"Amadeus-Winarto"},"content":"            GetCommand command \u003d new GetCommand(List.of(prefix), List.of());","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"Amadeus-Winarto"},"content":"            command.execute(emptyModel);","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertEquals(emptyModel.getAdditionalViewModel().getAdditionalInfo().get(), MESSAGE_NOTHING_TO_SHOW);","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertCommandSuccess(command, emptyModel, GetCommand.MESSAGE_FAILED, emptyModel);","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"Amadeus-Winarto"},"content":"        });","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"phuccuongngo99":1,"Amadeus-Winarto":116,"hmanhduc2k":1}},{"path":"src/test/java/seedu/academydirectory/logic/commands/GradeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Assessment;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.testutil.TypicalStudents;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"class GradeCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    private VersionedModel model \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"    private final HashMap\u003cString, Integer\u003e assessmentHashMap \u003d new Assessment().getAssessmentHashMap();","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"    private final String validAssessmentName1 \u003d \"RA1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"    private final String validAssessmentName2 \u003d \"MIDTERM\";","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"    private final Integer validGrade1 \u003d 10;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"    private final Integer validGrade2 \u003d 20;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GradeCommand(null, null, null));","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"    void execute_addGrade_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(0);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"        assessmentHashMap.replace(validAssessmentName1, validGrade1);","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"cheweejia"},"content":"        Student editedStudent \u003d new StudentBuilder(firstStudent).withAssessment(assessmentHashMap).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"cheweejia"},"content":"        GradeCommand addGradeCommand \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"cheweejia"},"content":"                new GradeCommand(INDEX_FIRST_STUDENT, validAssessmentName1, validGrade1);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"cheweejia"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"cheweejia"},"content":"                String.format(GradeCommand.MESSAGE_SUCCESS, editedStudent.getName(), validAssessmentName1);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager(","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"                new AcademyDirectory(model.getAcademyDirectory()), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"cheweejia"},"content":"        expectedModel.setStudent(firstStudent, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"cheweejia"},"content":"        assertCommandSuccess(addGradeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"        // reset model","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"        TypicalStudents.getTypicalAcademyDirectory().getStudentList().get(0).setAssessment(new Assessment());","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"cheweejia"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"cheweejia"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"cheweejia"},"content":"        GradeCommand gradeCommand \u003d new GradeCommand(outOfBoundIndex, validAssessmentName1, validGrade1);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"cheweejia"},"content":"        assertCommandFailure(gradeCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"cheweejia"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"cheweejia"},"content":"        final GradeCommand standardCommand \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"cheweejia"},"content":"                new GradeCommand(INDEX_FIRST_STUDENT, validAssessmentName1, validGrade1);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"cheweejia"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"cheweejia"},"content":"        GradeCommand commandWithSameValues \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"cheweejia"},"content":"                new GradeCommand(INDEX_FIRST_STUDENT, validAssessmentName1, validGrade1);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"cheweejia"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"cheweejia"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"cheweejia"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"cheweejia"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"cheweejia"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"cheweejia"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"cheweejia"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"cheweejia"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"cheweejia"},"content":"        assertNotEquals(standardCommand, new GradeCommand(INDEX_SECOND_STUDENT, validAssessmentName1, validGrade1));","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"cheweejia"},"content":"        // different assessment -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"cheweejia"},"content":"        assertNotEquals(standardCommand, new GradeCommand(INDEX_FIRST_STUDENT, validAssessmentName2, validGrade1));","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"cheweejia"},"content":"        // different grade -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"cheweejia"},"content":"        assertNotEquals(standardCommand, new GradeCommand(INDEX_FIRST_STUDENT, validAssessmentName1, validGrade2));","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Amadeus-Winarto":5,"cheweejia":85,"jianoway":6}},{"path":"src/test/java/seedu/academydirectory/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionedModel model \u003d new VersionedModelManager();","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"    public void valid_help_commands() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"        // two general help commands are equal to each other","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"        HelpCommand helpCommand1 \u003d new HelpCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(helpCommand1, new HelpCommand());","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"        // a general help command is not equal to a specific help command","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(helpCommand1, new HelpCommand(\"add\", AddCommand.HELP_MESSAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"        // a help command is not equal to another type","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(helpCommand1, \"Life\");","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"        HelpCommand helpCommand2 \u003d new HelpCommand(\"grade\", GradeCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"        // a help command is equal if the specific type is equal","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(helpCommand2, new HelpCommand(\"grade\", GradeCommand.HELP_MESSAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(helpCommand2, helpCommand1);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"        // a help command is not equal even if the type is equal, if the message are different","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(helpCommand2, new HelpCommand(\"grade\", AddCommand.HELP_MESSAGE));","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"        // a help command is not equal if type and help message are different","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(helpCommand2, new HelpCommand(\"clear\", ClearCommand.HELP_MESSAGE));","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"    public void execute_valid_help() {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"        HelpCommand helpCommand1 \u003d new HelpCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"        CommandResult commandResult1 \u003d new CommandResult(HelpCommand.MESSAGE_HELP_SUCCESS_GENERAL, true, false);","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"        // assert that executing a general help command is successful","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"        assertCommandSuccess(helpCommand1, model, commandResult1, model);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"        HelpCommand helpCommand2 \u003d new HelpCommand(\"grade\", GradeCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"        CommandResult commandResult2 \u003d new CommandResult(String.format(HelpCommand.MESSAGE_HELP_SUCCESS_SPECIFIC,","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"                \"grade\"), true, false);","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"        // asserting that executing a specific help command is successful","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"        assertCommandSuccess(helpCommand2, model, commandResult2, model);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"        HelpCommand helpCommand3 \u003d new HelpCommand(\"exit\", GradeCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"        CommandResult commandResult3 \u003d new CommandResult(String.format(HelpCommand.MESSAGE_HELP_SUCCESS_SPECIFIC,","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"                \"exit\"), true, false);","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"        // asserting that executing a non-viable help command is successful","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"        assertCommandSuccess(helpCommand3, model, commandResult3, model);","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"    public void executeNonValidHelp() {","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"        // help command throws exception if inputs are null","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"        assertThrows(NullPointerException.class, () -\u003e new HelpCommand(null, null)","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"                .execute(model));","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Amadeus-Winarto":3,"-":10,"hmanhduc2k":53,"jianoway":1}},{"path":"src/test/java/seedu/academydirectory/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":" * Contains integration tests (interaction with the VersionedModel) and unit tests for ListCommand.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    private VersionedModel model;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    private VersionedModel expectedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        model \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        expectedModel \u003d new VersionedModelManager(model.getAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"phuccuongngo99":4,"Amadeus-Winarto":7,"-":25,"jianoway":3}},{"path":"src/test/java/seedu/academydirectory/logic/commands/ParticipationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Attendance;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Participation;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.testutil.TypicalStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":" * Contains integration tests (interaction with the VersionedModel) and unit tests for ParticipationCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"public class ParticipationCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"    private static final Integer STUDIO_SESSION_STUB \u003d 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"    private static final ArrayList\u003cIndex\u003e INDEX_ARRAYLIST_STUB \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"    private static final ArrayList\u003cIndex\u003e INDEX_ARRAYLIST_STUB_2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"    private VersionedModel model \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"        ArrayList\u003cIndex\u003e indexArrayListOutOfBounds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"        indexArrayListOutOfBounds.add(outOfBoundIndex);","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"        ParticipationCommand participationCommand \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"                new ParticipationCommand(12, STUDIO_SESSION_STUB, indexArrayListOutOfBounds);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"        assertCommandFailure(participationCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"    public void execute_updateParticipation_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"        INDEX_ARRAYLIST_STUB.clear();","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"        INDEX_ARRAYLIST_STUB.add(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager(","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"                new AcademyDirectory(model.getAcademyDirectory()), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"        Student editedStudent \u003d new StudentBuilder(model.getFilteredStudentList().get(0)).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"        final int[] partArr \u003d new int[12];","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"        partArr[0] \u003d 12;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"        final boolean[] attArr \u003d new boolean[12];","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"        attArr[0] \u003d true;","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"        Participation expectedParticipation \u003d new Participation(12);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"        expectedParticipation.setParticipation(partArr);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"        Attendance expectedAttendance \u003d new Attendance(12);","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"        expectedAttendance.setAttendance(attArr);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"        editedStudent.setParticipation(expectedParticipation);","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"        editedStudent.setAttendance(expectedAttendance);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"        ParticipationCommand participationCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"                new ParticipationCommand(12, STUDIO_SESSION_STUB, INDEX_ARRAYLIST_STUB);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"        assertCommandSuccess(participationCommand, model,","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"                ParticipationCommand.MESSAGE_UPDATE_PARTICIPATION_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"        Participation resetParticipation \u003d new Participation(12);","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"        Attendance resetAttendance \u003d new Attendance(12);","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"        TypicalStudents.getTypicalAcademyDirectory().getStudentList().get(0).setParticipation(resetParticipation);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"        TypicalStudents.getTypicalAcademyDirectory().getStudentList().get(0).setAttendance(resetAttendance);","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"        INDEX_ARRAYLIST_STUB.clear();","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"        INDEX_ARRAYLIST_STUB.add(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"jianoway"},"content":"        INDEX_ARRAYLIST_STUB_2.add(INDEX_SECOND_STUDENT);","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"jianoway"},"content":"        final ParticipationCommand standardCommand \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"jianoway"},"content":"                new ParticipationCommand(12, STUDIO_SESSION_STUB, INDEX_ARRAYLIST_STUB);","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"jianoway"},"content":"        final ParticipationCommand commandWithSameValues \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"jianoway"},"content":"                new ParticipationCommand(12, STUDIO_SESSION_STUB, INDEX_ARRAYLIST_STUB);","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"jianoway"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"jianoway"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"jianoway"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"jianoway"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"jianoway"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"jianoway"},"content":"        // different indexArrayList","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(standardCommand,","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"jianoway"},"content":"                new ParticipationCommand(12, STUDIO_SESSION_STUB, INDEX_ARRAYLIST_STUB_2));","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"jianoway"},"content":"        // different participation","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(standardCommand,","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"jianoway"},"content":"                new ParticipationCommand(11, STUDIO_SESSION_STUB, INDEX_ARRAYLIST_STUB));","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"jianoway"},"content":"        // different session","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(standardCommand,","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"jianoway"},"content":"                new ParticipationCommand(12, 2, INDEX_ARRAYLIST_STUB));","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"jianoway"},"content":"        INDEX_ARRAYLIST_STUB.clear();","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Amadeus-Winarto":6,"jianoway":116}},{"path":"src/test/java/seedu/academydirectory/logic/commands/ShowCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"public class ShowCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionedModel model \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"    private final String validAssessmentName1 \u003d \"RA1\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"    private final String validAssessmentName2 \u003d \"MIDTERM\";","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"    private final Integer validGrade \u003d 10;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ShowCommand(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"    void execute_showGrade_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"        ShowCommand showCommand \u003d new ShowCommand(validAssessmentName1);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"        String content \u003d ShowCommand.displayResult(model.getFilteredStudentList(), validAssessmentName1);","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"        String expectedMessage \u003d String.format(ShowCommand.MESSAGE_SUCCESS, validAssessmentName1);","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager(","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"                new AcademyDirectory(model.getAcademyDirectory()), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"        assertCommandSuccess(showCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"        GradeCommand gradeCommand \u003d new GradeCommand(outOfBoundIndex, validAssessmentName1, validGrade);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"cheweejia"},"content":"        assertCommandFailure(gradeCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"cheweejia"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"cheweejia"},"content":"        final ShowCommand standardCommand \u003d new ShowCommand(validAssessmentName1);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"cheweejia"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"cheweejia"},"content":"        ShowCommand commandWithSameValues \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"cheweejia"},"content":"                new ShowCommand(validAssessmentName1);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"cheweejia"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"cheweejia"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"cheweejia"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"cheweejia"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"cheweejia"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"cheweejia"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"cheweejia"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"cheweejia"},"content":"        // different assessment -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"cheweejia"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"cheweejia"},"content":"                new ShowCommand(validAssessmentName2)));","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Amadeus-Winarto":5,"cheweejia":64,"hmanhduc2k":2}},{"path":"src/test/java/seedu/academydirectory/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Assessment;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Email;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Phone;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.StudioRecord;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Telegram;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"public class SortCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionedModel model \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"    private final Student student1 \u003d new Student(","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"            new Name(\"Kesha\"),","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"            new Phone(\"911\"),","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"            new Email(\"kesha@gmail.com\"),","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"            new Telegram(\"@Lesha\"),","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"            new StudioRecord(12),","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"            new Assessment(),","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"            new HashSet\u003c\u003e());","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"    private final Student student2 \u003d new Student(","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"            new Name(\"Lesha\"),","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"            new Phone(\"811\"),","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"            new Email(\"kesha@gmail.com\"),","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"            new Telegram(\"@Lesha\"),","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"            new StudioRecord(12),","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"            new Assessment(),","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"            new HashSet\u003c\u003e());","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"    private final Student student3 \u003d new Student(","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"            new Name(\"Mesha\"),","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"            new Phone(\"711\"),","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"            new Email(\"mesha@gmail.com\"),","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"            new Telegram(\"@mesha\"),","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"            new StudioRecord(12),","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"            new Assessment(),","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"            new HashSet\u003c\u003e());","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SortCommand(null, true));","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SortCommand(null, false));","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"    public void execute_sortStudentList_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"        // first for name","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"        student1.getAssessment().updateAssessmentGrade(\"RA1\", 12); // last for RA1","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"        student1.getParticipation().add(10, 6); // middle for participation","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"        // middle for name","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"        student2.getAssessment().updateAssessmentGrade(\"RA1\", 1); // first for RA1","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"        student2.getParticipation().add(10, 12); // last for participation","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"        // last for name","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"        student3.getAssessment().updateAssessmentGrade(\"RA1\", 6); // middle for RA1","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"        student3.getParticipation().add(10, 1); // first for participation","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager(new AcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"        AcademyDirectory expectedAcademyDirectory \u003d new AcademyDirectory();","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e expectedStudentList \u003d Arrays.asList(student1, student2, student3);","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"        AcademyDirectory modelAcademyDireory \u003d new AcademyDirectory();","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e newList \u003d new ArrayList\u003c\u003e(expectedStudentList);","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"        modelAcademyDireory.setStudents(new ArrayList\u003c\u003e(newList));","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"        model.setAcademyDirectory(modelAcademyDireory);","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"jianoway"},"content":"        SortCommand sortParticipationAscendingCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"jianoway"},"content":"                new SortCommand(\"PARTICIPATION\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"        SortCommand sortParticipationDescendingCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"                new SortCommand(\"PARTICIPATION\", false);","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"jianoway"},"content":"        // sort by ascending participation","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"jianoway"},"content":"        expectedStudentList \u003d Arrays.asList(student3, student1, student2);","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"jianoway"},"content":"        expectedAcademyDirectory.setStudents(expectedStudentList);","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"jianoway"},"content":"        expectedModel.setAcademyDirectory(expectedAcademyDirectory);","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"jianoway"},"content":"        // before command executed","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"jianoway"},"content":"        assertCommandSuccess(sortParticipationAscendingCommand, model,","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"jianoway"},"content":"                sortParticipationAscendingCommand.getResultString(), expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"        //after command execute","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"jianoway"},"content":"        assertEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"jianoway"},"content":"        // sort by descending participation","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"jianoway"},"content":"        expectedStudentList \u003d Arrays.asList(student2, student1, student3);","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"jianoway"},"content":"        expectedAcademyDirectory.setStudents(expectedStudentList);","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"jianoway"},"content":"        expectedModel.setAcademyDirectory(expectedAcademyDirectory);","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"jianoway"},"content":"        // before command executed","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"jianoway"},"content":"        //after command execute","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"jianoway"},"content":"        assertCommandSuccess(sortParticipationDescendingCommand, model,","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"jianoway"},"content":"                sortParticipationDescendingCommand.getResultString(), expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"jianoway"},"content":"        assertEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"jianoway"},"content":"        SortCommand sortNameAscendingCommand \u003d new SortCommand(\"NAME\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"jianoway"},"content":"        SortCommand sortNameDescendingCommand \u003d new SortCommand(\"NAME\", false);","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"jianoway"},"content":"        // sort by ascending name","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"jianoway"},"content":"        expectedStudentList \u003d Arrays.asList(student1, student2, student3);","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"jianoway"},"content":"        expectedAcademyDirectory.setStudents(expectedStudentList);","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"jianoway"},"content":"        expectedModel.setAcademyDirectory(expectedAcademyDirectory);","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"jianoway"},"content":"        // before command executed","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"jianoway"},"content":"        // after command execute","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"jianoway"},"content":"        assertCommandSuccess(sortNameAscendingCommand, model,","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"jianoway"},"content":"                sortNameAscendingCommand.getResultString(), expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"jianoway"},"content":"        assertEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"jianoway"},"content":"        // sort by descending name","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"jianoway"},"content":"        expectedStudentList \u003d Arrays.asList(student3, student2, student1);","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"jianoway"},"content":"        expectedAcademyDirectory.setStudents(expectedStudentList);","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"jianoway"},"content":"        expectedModel.setAcademyDirectory(expectedAcademyDirectory);","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"jianoway"},"content":"        // before command executed","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"jianoway"},"content":"        //after command execute","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"jianoway"},"content":"        assertCommandSuccess(sortNameDescendingCommand, model,","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"jianoway"},"content":"                sortNameDescendingCommand.getResultString(), expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"jianoway"},"content":"        assertEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"jianoway"},"content":"        SortCommand sortAverageAscendingCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"jianoway"},"content":"                new SortCommand(\"AVERAGE\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"jianoway"},"content":"        SortCommand sortAverageDescendingCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"jianoway"},"content":"                new SortCommand(\"AVERAGE\", false);","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"jianoway"},"content":"        // sort by ascending average","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"jianoway"},"content":"        expectedStudentList \u003d Arrays.asList(student2, student3, student1);","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"jianoway"},"content":"        expectedAcademyDirectory.setStudents(expectedStudentList);","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"jianoway"},"content":"        expectedModel.setAcademyDirectory(expectedAcademyDirectory);","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"jianoway"},"content":"        // before command executed","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":162,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":163,"author":{"gitId":"jianoway"},"content":"        //after command execute","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"jianoway"},"content":"        assertCommandSuccess(sortAverageAscendingCommand, model,","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"jianoway"},"content":"                sortAverageAscendingCommand.getResultString(), expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"jianoway"},"content":"        assertEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":167,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":168,"author":{"gitId":"jianoway"},"content":"        // sort by descending average","lastModifiedDate":"2021-10-16"},{"lineNumber":169,"author":{"gitId":"jianoway"},"content":"        expectedStudentList \u003d Arrays.asList(student1, student3, student2);","lastModifiedDate":"2021-10-16"},{"lineNumber":170,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":171,"author":{"gitId":"jianoway"},"content":"        expectedAcademyDirectory.setStudents(expectedStudentList);","lastModifiedDate":"2021-10-16"},{"lineNumber":172,"author":{"gitId":"jianoway"},"content":"        expectedModel.setAcademyDirectory(expectedAcademyDirectory);","lastModifiedDate":"2021-10-16"},{"lineNumber":173,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":174,"author":{"gitId":"jianoway"},"content":"        // before command executed","lastModifiedDate":"2021-10-16"},{"lineNumber":175,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":176,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":177,"author":{"gitId":"jianoway"},"content":"        //after command execute","lastModifiedDate":"2021-10-16"},{"lineNumber":178,"author":{"gitId":"jianoway"},"content":"        assertCommandSuccess(sortAverageDescendingCommand, model,","lastModifiedDate":"2021-10-16"},{"lineNumber":179,"author":{"gitId":"jianoway"},"content":"                sortAverageDescendingCommand.getResultString(), expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":180,"author":{"gitId":"jianoway"},"content":"        assertEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":181,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":182,"author":{"gitId":"jianoway"},"content":"        SortCommand sortRA1AscendingCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":183,"author":{"gitId":"jianoway"},"content":"                new SortCommand(\"RA1\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":184,"author":{"gitId":"jianoway"},"content":"        SortCommand sortRA1DescendingCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":185,"author":{"gitId":"jianoway"},"content":"                new SortCommand(\"RA1\", false);","lastModifiedDate":"2021-10-16"},{"lineNumber":186,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":187,"author":{"gitId":"jianoway"},"content":"        // sort by ascending RA1 score","lastModifiedDate":"2021-10-16"},{"lineNumber":188,"author":{"gitId":"jianoway"},"content":"        expectedStudentList \u003d Arrays.asList(student2, student3, student1);","lastModifiedDate":"2021-10-16"},{"lineNumber":189,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":190,"author":{"gitId":"jianoway"},"content":"        expectedAcademyDirectory.setStudents(expectedStudentList);","lastModifiedDate":"2021-10-16"},{"lineNumber":191,"author":{"gitId":"jianoway"},"content":"        expectedModel.setAcademyDirectory(expectedAcademyDirectory);","lastModifiedDate":"2021-10-16"},{"lineNumber":192,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":193,"author":{"gitId":"jianoway"},"content":"        // before command executed","lastModifiedDate":"2021-10-16"},{"lineNumber":194,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":195,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":196,"author":{"gitId":"jianoway"},"content":"        //after command execute","lastModifiedDate":"2021-10-16"},{"lineNumber":197,"author":{"gitId":"jianoway"},"content":"        assertCommandSuccess(sortRA1AscendingCommand, model,","lastModifiedDate":"2021-10-16"},{"lineNumber":198,"author":{"gitId":"jianoway"},"content":"                sortRA1AscendingCommand.getResultString(), expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":199,"author":{"gitId":"jianoway"},"content":"        assertEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":200,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":201,"author":{"gitId":"jianoway"},"content":"        // sort by descending RA1 score","lastModifiedDate":"2021-10-16"},{"lineNumber":202,"author":{"gitId":"jianoway"},"content":"        expectedStudentList \u003d Arrays.asList(student1, student3, student2);","lastModifiedDate":"2021-10-16"},{"lineNumber":203,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":204,"author":{"gitId":"jianoway"},"content":"        expectedAcademyDirectory.setStudents(expectedStudentList);","lastModifiedDate":"2021-10-16"},{"lineNumber":205,"author":{"gitId":"jianoway"},"content":"        expectedModel.setAcademyDirectory(expectedAcademyDirectory);","lastModifiedDate":"2021-10-16"},{"lineNumber":206,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":207,"author":{"gitId":"jianoway"},"content":"        // before command executed","lastModifiedDate":"2021-10-16"},{"lineNumber":208,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":209,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":210,"author":{"gitId":"jianoway"},"content":"        //after command execute","lastModifiedDate":"2021-10-16"},{"lineNumber":211,"author":{"gitId":"jianoway"},"content":"        assertCommandSuccess(sortRA1DescendingCommand, model,","lastModifiedDate":"2021-10-16"},{"lineNumber":212,"author":{"gitId":"jianoway"},"content":"                sortRA1DescendingCommand.getResultString(), expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":213,"author":{"gitId":"jianoway"},"content":"        assertEquals(expectedStudentList, model.getFilteredStudentList());","lastModifiedDate":"2021-10-16"},{"lineNumber":214,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":215,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":216,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":217,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":218,"author":{"gitId":"jianoway"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":219,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":220,"author":{"gitId":"jianoway"},"content":"        // ascending name command","lastModifiedDate":"2021-10-16"},{"lineNumber":221,"author":{"gitId":"jianoway"},"content":"        SortCommand sortAscendingNameCommand \u003d new SortCommand(\"NAME\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":222,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":223,"author":{"gitId":"jianoway"},"content":"        // equals to itself","lastModifiedDate":"2021-10-16"},{"lineNumber":224,"author":{"gitId":"jianoway"},"content":"        assertEquals(sortAscendingNameCommand, sortAscendingNameCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":225,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":226,"author":{"gitId":"jianoway"},"content":"        // duplicate ascending name command","lastModifiedDate":"2021-10-16"},{"lineNumber":227,"author":{"gitId":"jianoway"},"content":"        SortCommand anotherSortAscendingNameCommand \u003d new SortCommand(\"NAME\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":228,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":229,"author":{"gitId":"jianoway"},"content":"        // duplicate ascending name command equals to original","lastModifiedDate":"2021-10-16"},{"lineNumber":230,"author":{"gitId":"jianoway"},"content":"        assertEquals(sortAscendingNameCommand, anotherSortAscendingNameCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":231,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":232,"author":{"gitId":"jianoway"},"content":"        // duplicate ascending name command, but with different casing","lastModifiedDate":"2021-10-16"},{"lineNumber":233,"author":{"gitId":"jianoway"},"content":"        SortCommand anotherLowercaseSortAscendingNameCommand \u003d new SortCommand(\"name\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":234,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":235,"author":{"gitId":"jianoway"},"content":"        //duplicate ascending name command with lower case equals to original","lastModifiedDate":"2021-10-16"},{"lineNumber":236,"author":{"gitId":"jianoway"},"content":"        assertEquals(sortAscendingNameCommand, anotherLowercaseSortAscendingNameCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":237,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":238,"author":{"gitId":"jianoway"},"content":"        // descending name command","lastModifiedDate":"2021-10-16"},{"lineNumber":239,"author":{"gitId":"jianoway"},"content":"        SortCommand sortDescendingNameCommand \u003d new SortCommand(\"NAME\", false);","lastModifiedDate":"2021-10-16"},{"lineNumber":240,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":241,"author":{"gitId":"jianoway"},"content":"        // different order not equals","lastModifiedDate":"2021-10-16"},{"lineNumber":242,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(sortAscendingNameCommand, sortDescendingNameCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":243,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":244,"author":{"gitId":"jianoway"},"content":"        // ascending RA1 command","lastModifiedDate":"2021-10-16"},{"lineNumber":245,"author":{"gitId":"jianoway"},"content":"        SortCommand sortAscendingRA1Command \u003d new SortCommand(\"RA1\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":246,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":247,"author":{"gitId":"jianoway"},"content":"        // different attribute not equals","lastModifiedDate":"2021-10-16"},{"lineNumber":248,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(sortAscendingNameCommand, sortAscendingRA1Command);","lastModifiedDate":"2021-10-16"},{"lineNumber":249,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":250,"author":{"gitId":"jianoway"},"content":"        // different attribute, different order not equals","lastModifiedDate":"2021-10-16"},{"lineNumber":251,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(sortDescendingNameCommand, sortAscendingRA1Command);","lastModifiedDate":"2021-10-16"},{"lineNumber":252,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":253,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":254,"author":{"gitId":"jianoway"},"content":"    public void getComparator() {","lastModifiedDate":"2021-10-16"},{"lineNumber":255,"author":{"gitId":"jianoway"},"content":"        // name sort command","lastModifiedDate":"2021-10-16"},{"lineNumber":256,"author":{"gitId":"jianoway"},"content":"        SortCommand sortNameCommand \u003d new SortCommand(\"NAME\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":257,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":258,"author":{"gitId":"jianoway"},"content":"        // duplicate name sort command","lastModifiedDate":"2021-10-16"},{"lineNumber":259,"author":{"gitId":"jianoway"},"content":"        SortCommand duplicateSortNameCommand \u003d new SortCommand(\"NAME\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":260,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":261,"author":{"gitId":"jianoway"},"content":"        // participation sort command","lastModifiedDate":"2021-10-16"},{"lineNumber":262,"author":{"gitId":"jianoway"},"content":"        SortCommand sortParticipationCommand \u003d new SortCommand(\"PARTICIPATION\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":263,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":264,"author":{"gitId":"jianoway"},"content":"        // average sort command","lastModifiedDate":"2021-10-16"},{"lineNumber":265,"author":{"gitId":"jianoway"},"content":"        SortCommand sortAverageCommand \u003d new SortCommand(\"AVERAGE\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":266,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":267,"author":{"gitId":"jianoway"},"content":"        // RA1 sort command","lastModifiedDate":"2021-10-16"},{"lineNumber":268,"author":{"gitId":"jianoway"},"content":"        SortCommand sortRA1Command \u003d new SortCommand(\"RA1\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":269,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":270,"author":{"gitId":"jianoway"},"content":"        // comparator for sorting name","lastModifiedDate":"2021-10-16"},{"lineNumber":271,"author":{"gitId":"jianoway"},"content":"        Comparator\u003cStudent\u003e sortNameComparator \u003d sortNameCommand.getComparator();","lastModifiedDate":"2021-10-16"},{"lineNumber":272,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":273,"author":{"gitId":"jianoway"},"content":"        // duplicte comparator for sorting name","lastModifiedDate":"2021-10-16"},{"lineNumber":274,"author":{"gitId":"jianoway"},"content":"        Comparator\u003cStudent\u003e duplicateSortNameComparator \u003d duplicateSortNameCommand.getComparator();","lastModifiedDate":"2021-10-16"},{"lineNumber":275,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":276,"author":{"gitId":"jianoway"},"content":"        // comparator for sorting participation","lastModifiedDate":"2021-10-16"},{"lineNumber":277,"author":{"gitId":"jianoway"},"content":"        Comparator\u003cStudent\u003e sortParticipationComparator \u003d sortParticipationCommand.getComparator();","lastModifiedDate":"2021-10-16"},{"lineNumber":278,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":279,"author":{"gitId":"jianoway"},"content":"        // comparator for sorting average","lastModifiedDate":"2021-10-16"},{"lineNumber":280,"author":{"gitId":"jianoway"},"content":"        Comparator\u003cStudent\u003e sortAverageComparator \u003d sortAverageCommand.getComparator();","lastModifiedDate":"2021-10-16"},{"lineNumber":281,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":282,"author":{"gitId":"jianoway"},"content":"        // comparator for sorting RA1","lastModifiedDate":"2021-10-16"},{"lineNumber":283,"author":{"gitId":"jianoway"},"content":"        Comparator\u003cStudent\u003e sortRA1Comparator \u003d sortRA1Command.getComparator();","lastModifiedDate":"2021-10-16"},{"lineNumber":284,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":285,"author":{"gitId":"jianoway"},"content":"        // comparators for same attribute (name) are equal","lastModifiedDate":"2021-10-16"},{"lineNumber":286,"author":{"gitId":"jianoway"},"content":"        assertEquals(sortNameComparator, duplicateSortNameComparator);","lastModifiedDate":"2021-10-16"},{"lineNumber":287,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":288,"author":{"gitId":"jianoway"},"content":"        // comparator not equal to other comparators from different attributes","lastModifiedDate":"2021-10-16"},{"lineNumber":289,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(sortNameComparator, sortAverageComparator);","lastModifiedDate":"2021-10-16"},{"lineNumber":290,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(sortNameComparator, sortParticipationComparator);","lastModifiedDate":"2021-10-16"},{"lineNumber":291,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(sortNameComparator, sortRA1Comparator);","lastModifiedDate":"2021-10-16"},{"lineNumber":292,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":293,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":294,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Amadeus-Winarto":4,"jianoway":290}},{"path":"src/test/java/seedu/academydirectory/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"class TagCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionedModel model \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"    private final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"    private final String validTagName1 \u003d \"mission\";","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"    private final String validTagName2 \u003d \"streams2\";","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TagCommand(null, null));","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"    void execute_addTag_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(0);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"        Student editedStudent \u003d new StudentBuilder(firstStudent).withTags().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"        TagCommand addTagCommand \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"cheweejia"},"content":"                new TagCommand(INDEX_FIRST_STUDENT, tagSet);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"cheweejia"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"cheweejia"},"content":"                String.format(TagCommand.MESSAGE_SUCCESS, editedStudent.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionedModel expectedModel \u003d new VersionedModelManager(","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"                new AcademyDirectory(model.getAcademyDirectory()), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"cheweejia"},"content":"        expectedModel.setStudent(firstStudent, editedStudent);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"cheweejia"},"content":"        assertCommandSuccess(addTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"cheweejia"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"cheweejia"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"cheweejia"},"content":"        TagCommand tagCommand \u003d new TagCommand(outOfBoundIndex, tagSet);","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"cheweejia"},"content":"        assertCommandFailure(tagCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"cheweejia"},"content":"    public void equals() {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"cheweejia"},"content":"        Set\u003cTag\u003e tagSet1 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"cheweejia"},"content":"        Set\u003cTag\u003e tagSet2 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"cheweejia"},"content":"        tagSet1.add(new Tag(validTagName1));","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"cheweejia"},"content":"        tagSet2.add(new Tag(validTagName2));","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"cheweejia"},"content":"        final TagCommand standardCommand \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"cheweejia"},"content":"                new TagCommand(INDEX_FIRST_STUDENT, tagSet1);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"cheweejia"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"cheweejia"},"content":"        TagCommand commandWithSameValues \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"cheweejia"},"content":"                new TagCommand(INDEX_FIRST_STUDENT, tagSet1);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"cheweejia"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"cheweejia"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"cheweejia"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"cheweejia"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"cheweejia"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"cheweejia"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"cheweejia"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"cheweejia"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"cheweejia"},"content":"        assertNotEquals(standardCommand, new TagCommand(INDEX_SECOND_STUDENT, tagSet1));","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"cheweejia"},"content":"        // different grade -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"cheweejia"},"content":"        assertNotEquals(standardCommand, new TagCommand(INDEX_FIRST_STUDENT, tagSet2));","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Amadeus-Winarto":5,"cheweejia":87}},{"path":"src/test/java/seedu/academydirectory/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package seedu.academydirectory.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.VersionedModelManager;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"public class ViewCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final VersionedModel model \u003d new VersionedModelManager(getTypicalAcademyDirectory(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"    public void valid_view_command() {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"        ViewCommand viewCommand1 \u003d new ViewCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"        ViewCommand viewCommand2 \u003d new ViewCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"        ViewCommand viewCommand3 \u003d new ViewCommand(INDEX_THIRD_STUDENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"        // assert that two view commands are equal","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(viewCommand1, new ViewCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(viewCommand2, new ViewCommand(INDEX_SECOND_STUDENT));","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"        // assert that two view commands are not equal","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(viewCommand3, new ViewCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(viewCommand1, viewCommand2);","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"        // assert that a view command is not equal to a differnt type","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(viewCommand2, \"Life is good\");","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"    public void valid_execution() {","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"        // view command parse successfully for random student","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"        ViewCommand viewCommand3 \u003d new ViewCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"        Student studentToGet \u003d model.getFilteredStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"        String expectedMessage3 \u003d String.format(ViewCommand.MESSAGE_SUCCESS, studentToGet.getName());","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"        assertCommandSuccess(viewCommand3, model, expectedMessage3, model);","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"        // view command parses successfully for last student","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"        Index lastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"        Student studentToGet1 \u003d model.getFilteredStudentList().get(lastStudent.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"        ViewCommand viewCommand4 \u003d new ViewCommand(lastStudent);","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"        String expectedMessage4 \u003d String.format(ViewCommand.MESSAGE_SUCCESS, studentToGet1.getName());","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"        assertCommandSuccess(viewCommand4, model, expectedMessage4, model);","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"        // execution is valid when list is increased","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"        ViewCommand viewCommand1 \u003d new ViewCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"        Student student1 \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"        String expectedMessage1 \u003d String.format(ViewCommand.MESSAGE_SUCCESS, student1.getName());","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"        assertCommandSuccess(viewCommand1, model, expectedMessage1, model);","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"    public void invalid_execution() {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"        // execution is invalid when list is reduced","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"        assertTrue(INDEX_SECOND_STUDENT.getZeroBased() \u003c model.getAcademyDirectory().getStudentList().size());","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"        ViewCommand viewCommand3 \u003d new ViewCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"        assertCommandFailure(viewCommand3, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"        Index lastStudentPlusOne \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"hmanhduc2k"},"content":"        ViewCommand viewCommand5 \u003d new ViewCommand(lastStudentPlusOne);","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"hmanhduc2k"},"content":"        // assert throws if index \u003e size","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"hmanhduc2k"},"content":"        assertThrows(CommandException.class, () -\u003e viewCommand5.execute(model));","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"hmanhduc2k"},"content":"        assertCommandFailure(viewCommand5, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"        Index validIndex1 \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 100);","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"hmanhduc2k"},"content":"        ViewCommand viewCommand1 \u003d new ViewCommand(validIndex1);","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"hmanhduc2k"},"content":"        // view command for very high index","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"hmanhduc2k"},"content":"        assertThrows(CommandException.class, () -\u003e viewCommand1.execute(model));","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Amadeus-Winarto":1,"hmanhduc2k":89}},{"path":"src/test/java/seedu/academydirectory/logic/parser/AcademyDirectoryParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.AddCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.EditCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.GetCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.ListCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ViewCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.InformationContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.StudentUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"public class AcademyDirectoryParserTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"    private final AcademyDirectoryParser parser \u003d new AcademyDirectoryParser();","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(StudentUtil.getAddCommand(student));","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(new AddCommand(student), command);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_STUDENT), command);","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"                + INDEX_FIRST_STUDENT.getOneBased() + \" \" + StudentUtil.getEditStudentDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_STUDENT, descriptor), command);","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"cheweejia"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"cheweejia"},"content":"                FilterCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"cheweejia"},"content":"        assertEquals(new FilterCommand(new InformationContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void parseCommand_retrieve() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(parser.parseCommand(GetCommand.COMMAND_WORD + \" \" + PREFIX_EMAIL)","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"                instanceof GetCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"hmanhduc2k"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"hmanhduc2k"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"hmanhduc2k"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" grade\") instanceof HelpCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"hmanhduc2k"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(HelpCommand.COMMAND_WORD + \" me\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"hmanhduc2k"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"hmanhduc2k"},"content":"        assertTrue(parser.parseCommand(ViewCommand.COMMAND_WORD + \" 2\") instanceof ViewCommand);","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"phuccuongngo99":15,"Amadeus-Winarto":8,"-":58,"cheweejia":5,"hmanhduc2k":13,"jianoway":14}},{"path":"src/test/java/seedu/academydirectory/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TAG_RECURSION;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TAG_STREAMS;","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.AddCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"        Student expectedStudent \u003d new StudentBuilder(BOB).withTags(VALID_TAG_RECURSION).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"                + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"                + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"                + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"phuccuongngo99"},"content":"                + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"        // multiple telegrams - last telegram accepted","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"                + TELEGRAM_DESC_AMY + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"        Student expectedStudentMultipleTags \u003d new StudentBuilder(BOB).withTags(VALID_TAG_RECURSION, VALID_TAG_STREAMS)","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":78,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"phuccuongngo99"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedStudentMultipleTags));","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"phuccuongngo99"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + TELEGRAM_DESC_AMY,","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"phuccuongngo99"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"phuccuongngo99"},"content":"                        + TELEGRAM_DESC_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"phuccuongngo99"},"content":"                        + TELEGRAM_DESC_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"phuccuongngo99"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"phuccuongngo99"},"content":"        // missing telegram prefix","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"phuccuongngo99"},"content":"                        + VALID_TELEGRAM_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"phuccuongngo99"},"content":"                        + VALID_TELEGRAM_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"phuccuongngo99"},"content":"                + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"phuccuongngo99"},"content":"        // invalid telegram","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_TELEGRAM_DESC","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"phuccuongngo99"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"jianoway"},"content":"                + INVALID_TAG_DESC + VALID_TAG_RECURSION, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"phuccuongngo99"},"content":"                + TELEGRAM_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"phuccuongngo99":52,"-":66,"jianoway":29}},{"path":"src/test/java/seedu/academydirectory/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":149,"jianoway":1}},{"path":"src/test/java/seedu/academydirectory/logic/parser/AttendanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_STUDIO_ATTENDANCE;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_STUDIO_SESSION;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.AttendanceCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.StudioRecord;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"public class AttendanceCommandParserTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"    private AttendanceCommandParser parser \u003d new AttendanceCommandParser();","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"    private final String nonEmptySession \u003d \" 1 \";","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"    private final String attendanceStatusInt \u003d \" 1 \";","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"    private final boolean attendanceStatus \u003d true;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"        // have attendance","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"                + PREFIX_STUDIO_SESSION + nonEmptySession","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"                + PREFIX_STUDIO_ATTENDANCE","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"                + attendanceStatusInt;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"        ArrayList\u003cIndex\u003e indexArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"        indexArrayList.add(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"        AttendanceCommand expectedCommand \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"                new AttendanceCommand(attendanceStatus, 1, indexArrayList);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AttendanceCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"        String expectedInvalidStudioSessionMessage \u003d StudioRecord.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"        String expectedInvalidAttendanceMessage \u003d ParserUtil.MESSAGE_INVALID_ATTENDANCE_STATUS;","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"        String userInputNoIndex \u003d \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"                + PREFIX_STUDIO_SESSION","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"                + nonEmptySession","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"                + PREFIX_STUDIO_ATTENDANCE","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"                + attendanceStatusInt;","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"        String userInputNoSession \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"                + \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"                + PREFIX_STUDIO_SESSION","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"                + \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"                + PREFIX_STUDIO_ATTENDANCE","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"                + attendanceStatusInt;","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"        String userInputNoAttendance \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"                + \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"                + PREFIX_STUDIO_SESSION","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"                + nonEmptySession","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"                + PREFIX_STUDIO_ATTENDANCE;","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"        // no parameters","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"        assertParseFailure(parser, AttendanceCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"        // no index","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"        assertParseFailure(parser, userInputNoIndex, expectedMessage);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"        // no session","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"cheweejia"},"content":"        assertParseFailure(parser, userInputNoSession, expectedInvalidStudioSessionMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"        // no attendance","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"cheweejia"},"content":"        assertParseFailure(parser, userInputNoAttendance, expectedInvalidAttendanceMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"cheweejia":5,"jianoway":72}},{"path":"src/test/java/seedu/academydirectory/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.Command;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":35,"jianoway":3}},{"path":"src/test/java/seedu/academydirectory/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"phuccuongngo99":2,"-":25,"jianoway":5}},{"path":"src/test/java/seedu/academydirectory/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.EditCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TELEGRAM_DESC,","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"phuccuongngo99"},"content":"                            Telegram.MESSAGE_CONSTRAINTS); // invalid telegram","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"phuccuongngo99"},"content":"        // invalid email followed by valid telegram","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC + TELEGRAM_DESC_AMY, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + INVALID_TELEGRAM_DESC","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"phuccuongngo99"},"content":"                        + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"phuccuongngo99"},"content":"        Index targetIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"cheweejia"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"cheweejia"},"content":"                + EMAIL_DESC_AMY + TELEGRAM_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"phuccuongngo99"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"phuccuongngo99"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"phuccuongngo99"},"content":"                .withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"cheweejia"},"content":"                .build();","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"phuccuongngo99"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"phuccuongngo99"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY + TELEGRAM_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"phuccuongngo99"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"phuccuongngo99"},"content":"                .withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"phuccuongngo99"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"phuccuongngo99"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"phuccuongngo99"},"content":"        // telegram","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"phuccuongngo99"},"content":"        userInput \u003d targetIndex.getOneBased() + TELEGRAM_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTelegram(VALID_TELEGRAM_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"phuccuongngo99"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":154,"author":{"gitId":"phuccuongngo99"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"phuccuongngo99"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"phuccuongngo99"},"content":"                + TELEGRAM_DESC_AMY","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"cheweejia"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"cheweejia"},"content":"                + TELEGRAM_DESC_AMY","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"cheweejia"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"phuccuongngo99"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"phuccuongngo99"},"content":"                .withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"phuccuongngo99"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"phuccuongngo99"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"phuccuongngo99"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"phuccuongngo99"},"content":"                + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"phuccuongngo99"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"phuccuongngo99"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"phuccuongngo99"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"phuccuongngo99"},"content":"        // other valid values specified","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"phuccuongngo99"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"phuccuongngo99"},"content":"                + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":190,"author":{"gitId":"phuccuongngo99"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"phuccuongngo99":57,"-":112,"cheweejia":6,"jianoway":19}},{"path":"src/test/java/seedu/academydirectory/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.InformationContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"                new FilterCommand(new InformationContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Mission\")));","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"        assertParseSuccess(parser, \"Alice Mission\", expectedFilterCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Mission  \\t\", expectedFilterCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"cheweejia":33}},{"path":"src/test/java/seedu/academydirectory/logic/parser/GetCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalStudents;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.logic.commands.GetCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"@SuppressWarnings(\"checkstyle:Regexp\")","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"public class GetCommandParserTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final GetCommandParser parser \u003d new GetCommandParser();","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        // no field specified","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertParseFailure(parser, \"some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertParseFailure(parser, \"i/\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertParseFailure(parser, \"n/\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void parse_validArgs_returnsGetCommand() {","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        Stream\u003cPrefix\u003e relevantPrefixes \u003d Stream.of(GetCommand.SUPPORTED_PREFIX.toArray(Prefix[]::new))","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"                .parallel();","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        relevantPrefixes.forEach(prefix -\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"            String userInput \u003d \" \" + prefix.getPrefix();","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"            GetCommand expectedCommand \u003d new GetCommand(List.of(prefix), List.of());","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        });","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void parse_validArgsWithName_returnsGetCommand() {","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"        Name name \u003d getTypicalStudents().get(0).getName();","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        Stream\u003cPrefix\u003e relevantPrefixes \u003d Stream.of(GetCommand.SUPPORTED_PREFIX.toArray(Prefix[]::new))","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"                .parallel();","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        relevantPrefixes.forEach(prefix -\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"            String userInput \u003d \" \" + prefix.getPrefix() + \" \" + PREFIX_NAME + name.fullName;","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"            NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(List.of(name.fullName));","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"            GetCommand expectedCommand \u003d new GetCommand(List.of(prefix), List.of(name.fullName));","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"        });","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Amadeus-Winarto":66}},{"path":"src/test/java/seedu/academydirectory/logic/parser/GradeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_ASSESSMENT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.GradeCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.Assessment;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.Grade;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"public class GradeCommandParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"    private final GradeCommandParser parser \u003d new GradeCommandParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"    private final String validAssessmentName \u003d \"RA1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"    private final String invalidAssessmentName \u003d \"QUIZ\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"    private final String validGrade \u003d \"10\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"    private final String invalidGrade \u003d \"999\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"    private final String expectedInvalidAssessmentMessage \u003d Assessment.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"    private final String expectedInvalidGradeMessage \u003d Grade.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"    public void parse_validArgument_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"        String input \u003d INDEX_FIRST_STUDENT.getOneBased() + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"                + PREFIX_ASSESSMENT + validAssessmentName + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"                + PREFIX_GRADE + validGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"        GradeCommand expectedCommand \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"                new GradeCommand(INDEX_FIRST_STUDENT, validAssessmentName, Integer.parseInt(validGrade));","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"        assertParseSuccess(parser, input, expectedCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"    public void parse_invalidArgument_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"        String inputInvalidAssessment \u003d INDEX_FIRST_STUDENT.getOneBased() + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"                + PREFIX_ASSESSMENT + invalidAssessmentName + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"                + PREFIX_GRADE + validGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"        String inputInvalidGrade \u003d INDEX_FIRST_STUDENT.getOneBased() + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"                + PREFIX_ASSESSMENT + validAssessmentName + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"                + PREFIX_GRADE + invalidGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"        assertParseFailure(parser, inputInvalidAssessment, expectedInvalidAssessmentMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"cheweejia"},"content":"        assertParseFailure(parser, inputInvalidGrade, expectedInvalidGradeMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"cheweejia":47}},{"path":"src/test/java/seedu/academydirectory/logic/parser/HelpCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.AddCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.AttendanceCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ClearCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.DeleteCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.EditCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ExitCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.FilterCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.GetCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.GradeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ListCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ParticipationCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ShowCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.SortCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.TagCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.VisualizeCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"public class HelpCommandParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"    private HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"    private final String[] validInputs \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"        \"add\", \"attendance\", \"clear\", \"delete\",","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"        \"edit\", \"exit\", \"filter\", \"get\",","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"        \"grade\", \"list\", \"participation\",","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"        \"show\", \"sort\", \"tag\", \"visualize\"","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"    };","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"    private final HashMap\u003cString, String\u003e mapInputsToCorrectHelpMessage \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"    private final String[] invalidInputs \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"        \"CS2103T\", \"my life sucks\", \"NUS\",","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"        \"Computer Science\", \"02hf40hg240\",","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"        \"[;.;..;[\", \"23rglbt;mbw\", \"-3429\"","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"    };","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"    public void parse_validArgument_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"        assertParseSuccess(parser, \"\", new HelpCommand());","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"add\", AddCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"attendance\", AttendanceCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"clear\", ClearCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"delete\", DeleteCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"edit\", EditCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"exit\", ExitCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"filter\", FilterCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"get\", GetCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"grade\", GradeCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"list\", ListCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"participation\", ParticipationCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"show\", ShowCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"sort\", SortCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"tag\", TagCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"        mapInputsToCorrectHelpMessage.put(\"visualize\", VisualizeCommand.HELP_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"        // help works for all valid input command","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"        for (String keyword : validInputs) {","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"            assertParseSuccess(parser, keyword, new HelpCommand(keyword, mapInputsToCorrectHelpMessage.get(keyword)));","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"    public void parse_invalidArgument_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"        for (String keyword : invalidInputs) {","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"            assertParseFailure(parser, keyword, String.format(Messages.MESSAGE_HELP_NOT_EXIST, keyword));","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"hmanhduc2k":79}},{"path":"src/test/java/seedu/academydirectory/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"    private static final String INVALID_PHONE_NA \u003d \"+NA\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"    private static final String INVALID_TELEGRAM \u003d \".tele\";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"    private static final String VALID_PHONE_NA \u003d \"NA\";","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"    private static final String VALID_TELEGRAM \u003d \"@rachel\";","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"phuccuongngo99"},"content":"    public void parsePhoneNA_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE_NA));","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"phuccuongngo99"},"content":"    public void parsePhoneNA_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"phuccuongngo99"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE_NA);","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE_NA));","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"phuccuongngo99"},"content":"    public void parsePhoneNA_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"phuccuongngo99"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE_NA + WHITESPACE;","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"phuccuongngo99"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE_NA);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"phuccuongngo99"},"content":"    public void parseTelegram_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTelegram((String) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"phuccuongngo99"},"content":"    public void parseTelegram_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegram(INVALID_TELEGRAM));","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"phuccuongngo99"},"content":"    public void parseTelegram_validValueWithoutWhitespace_returnsTelegram() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"phuccuongngo99"},"content":"        Telegram expectedTelegram \u003d new Telegram(VALID_TELEGRAM);","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(expectedTelegram, ParserUtil.parseTelegram(VALID_TELEGRAM));","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"phuccuongngo99"},"content":"    public void parseTelegram_validValueWithWhitespace_returnsTrimmedTelegram() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"phuccuongngo99"},"content":"        String telegramWithWhitespace \u003d WHITESPACE + VALID_TELEGRAM + WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"phuccuongngo99"},"content":"        Telegram expectedTelegram \u003d new Telegram(VALID_TELEGRAM);","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(expectedTelegram, ParserUtil.parseTelegram(telegramWithWhitespace));","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"phuccuongngo99":43,"-":168,"jianoway":5}},{"path":"src/test/java/seedu/academydirectory/logic/parser/ParticipationCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_ADD_PARTICIPATON;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_STUDIO_SESSION;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.ParticipationCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"public class ParticipationCommandParserTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"    private ParticipationCommandParser parser \u003d new ParticipationCommandParser();","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"    private final String nonEmptySession \u003d \" 1 \";","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"    private final String participationCount \u003d \" 1 \";","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"        // have attendance","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"                + PREFIX_STUDIO_SESSION + nonEmptySession","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"                + PREFIX_ADD_PARTICIPATON","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"                + participationCount;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"        ArrayList\u003cIndex\u003e indexArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"        indexArrayList.add(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"        ParticipationCommand expectedCommand \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"                new ParticipationCommand(1, 1, indexArrayList);","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ParticipationCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"        String userInputNoIndex \u003d \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"                + PREFIX_STUDIO_SESSION","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"                + nonEmptySession","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"                + PREFIX_ADD_PARTICIPATON","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"                + participationCount;","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"        String userInputNoSession \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"                + \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"                + \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"                + PREFIX_ADD_PARTICIPATON","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"                + participationCount;","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"        String userInputNoParticipationCount \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"                + \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"                + PREFIX_STUDIO_SESSION","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"                + nonEmptySession;","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"        // no parameters","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"        assertParseFailure(parser, ParticipationCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"        // no index","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"        assertParseFailure(parser, userInputNoIndex, expectedMessage);","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"        // no session","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"        assertParseFailure(parser, userInputNoSession, expectedMessage);","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"        // no participation count","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"        assertParseFailure(parser, userInputNoParticipationCount, expectedMessage);","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"jianoway":70}},{"path":"src/test/java/seedu/academydirectory/logic/parser/ShowCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"public class ShowCommandParserTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"    private final ShowCommandParser parser \u003d new ShowCommandParser();","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"    private final String validAssessmentName \u003d \"RA1\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"    private final String invalidAssessmentName \u003d \"QUIZ\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"    private final String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"    public void parse_validAssessmentName_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"        assertParseSuccess(parser, validAssessmentName, new ShowCommand(validAssessmentName));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"    public void parse_invalidAssessmentName_failure() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"        assertParseFailure(parser, invalidAssessmentName, expectedMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"cheweejia":26}},{"path":"src/test/java/seedu/academydirectory/logic/parser/SingularCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ClearCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.Command;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ExitCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.HistoryCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ListCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.RedoCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.UndoCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.VisualizeCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"public class SingularCommandParserTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"    private final String[] validInputs \u003d {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"        \"clear\", \"exit\", \"list\", \"redo\", \"undo\", \"history\", \"visualize\"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"    };","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"    private final HashMap\u003cString, Command\u003e mapToValidCommand \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"    private void processHashMap() {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"        mapToValidCommand.put(\"clear\", new ClearCommand());","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"        mapToValidCommand.put(\"exit\", new ExitCommand());","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"        mapToValidCommand.put(\"list\", new ListCommand());","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"        mapToValidCommand.put(\"redo\", new RedoCommand());","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"        mapToValidCommand.put(\"undo\", new UndoCommand());","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"        mapToValidCommand.put(\"history\", new HistoryCommand());","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"        mapToValidCommand.put(\"visualize\", new VisualizeCommand());","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"    public void testValidSingularCommand() throws Exception {","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"        processHashMap();","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"    public void testInvalidSingularCommand() {","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"        processHashMap();","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"        for (String input : validInputs) {","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"            SingularCommandParser parser \u003d new SingularCommandParser(input);","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"            String userInput \u003d input + \" argument\";","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"            assertParseFailure(parser, userInput,","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"                    String.format(SingularCommandParser.MESSAGE_NO_ARGUMENT_SHOULD_FOLLOW, input));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"hmanhduc2k":51}},{"path":"src/test/java/seedu/academydirectory/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_ATTRIBUTE;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_ORDER;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.SortCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"        final String emptyAttribute \u003d \"  \";","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"        final String nonEmptyAttribute \u003d \"NAME \";","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"        final String emptyOrder \u003d \" \";","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"        final String nonEmptyOrder \u003d \"ASC\";","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"        String userInputNoAttribute \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"                PREFIX_ATTRIBUTE","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"                        + emptyAttribute","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"                        + PREFIX_ORDER","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"                        + nonEmptyOrder;","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"        String userInputNoOrder \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"                PREFIX_ATTRIBUTE","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"                        + nonEmptyAttribute","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"                        + PREFIX_ORDER","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"                        + emptyOrder;","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"        String userInputNoAttributeNoOrder \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"                PREFIX_ATTRIBUTE","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"                        + emptyAttribute","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"                        + PREFIX_ORDER","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"                        + emptyOrder;","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"        // no parameters","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"        assertParseFailure(parser, SortCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"        // no attribute","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"        assertParseFailure(parser, userInputNoAttribute, expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"        // no order","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"        assertParseFailure(parser, userInputNoOrder, expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"        // no attribute and no order","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"        assertParseFailure(parser, userInputNoAttributeNoOrder, expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"    public void parse_validArgs_returnsSortCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"        final SortCommand expectedSortNameAscendingCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"                new SortCommand(\"NAME\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"        final SortCommand expectedSortParticipationAscendingCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"                new SortCommand(\"PARTICIPATION\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"        final SortCommand expectedSortAverageAscendingCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"                new SortCommand(\"AVERAGE\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"        final SortCommand expectedSortRA1AscendingCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"                new SortCommand(\"RA1\", true);","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"        final String userInputSortNameAscending \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"                \" \" + PREFIX_ATTRIBUTE + \"NAME \" + PREFIX_ORDER + \"ASC\";","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"        final String userInputSortParticipationAscending \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"                \" \" + PREFIX_ATTRIBUTE + \"PARTICIPATION \" + PREFIX_ORDER + \"ASC\";","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"        final String userInputSortAverageAscending \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"                \" \" + PREFIX_ATTRIBUTE + \"AVERAGE \" + PREFIX_ORDER + \"ASC\";","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"        final String userInputSortRA1Ascending \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"                \" \" + PREFIX_ATTRIBUTE + \"RA1 \" + PREFIX_ORDER + \"ASC\";","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"        assertParseSuccess(parser, userInputSortNameAscending, expectedSortNameAscendingCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"        assertParseSuccess(parser, userInputSortParticipationAscending, expectedSortParticipationAscendingCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"        assertParseSuccess(parser, userInputSortAverageAscending, expectedSortAverageAscendingCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"        assertParseSuccess(parser, userInputSortRA1Ascending, expectedSortRA1AscendingCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"jianoway":87}},{"path":"src/test/java/seedu/academydirectory/logic/parser/TagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.logic.commands.TagCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"public class TagCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"    private final TagCommandParser parser \u003d new TagCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"    private final Set\u003cTag\u003e tag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"    private final String validTagName \u003d \"mission\";","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"    private final String invalidTagName \u003d \"!!!!!!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"    private final String expectedInvalidTagMessage \u003d Tag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"    public void parse_validArgument_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"        String input \u003d INDEX_FIRST_STUDENT.getOneBased() + \" \"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"                + PREFIX_TAG + validTagName;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"        Tag validTag \u003d new Tag(validTagName);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"        tag.clear();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"        tag.add(validTag);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"        TagCommand expectedCommand \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"                new TagCommand(INDEX_FIRST_STUDENT, tag);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"        assertParseSuccess(parser, input, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"    public void parse_invalidArgument_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"        String inputInvalidTag \u003d INDEX_FIRST_STUDENT.getOneBased() + \" \"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"                + PREFIX_TAG + invalidTagName;","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"        assertParseFailure(parser, inputInvalidTag, expectedInvalidTagMessage);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"cheweejia":43}},{"path":"src/test/java/seedu/academydirectory/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package seedu.academydirectory.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"    private final ViewCommandParser viewCommandParser \u003d new ViewCommandParser();","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"     * ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"    public void parse_validArgument_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"        // View Command executes and parse successfully for valid indices","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"        ViewCommand expectedCommand1 \u003d new ViewCommand(INDEX_THIRD_STUDENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"        assertParseSuccess(viewCommandParser, \"3\", expectedCommand1);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"        ViewCommand expectedCommand2 \u003d new ViewCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"        assertParseSuccess(viewCommandParser, \"1\", expectedCommand2);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"    public void parse_invalidArgument_failure() {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"        // view command parses fail for non-integer input","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"        assertParseFailure(viewCommandParser, \"CS2103T\", expectedMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"        assertParseFailure(viewCommandParser, \"please send help\", expectedMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"        // view command parses fail for numbers that are too big","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"        assertParseFailure(viewCommandParser, \"2478197513134194819844341434441151351\", expectedMessage);","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"hmanhduc2k":38}},{"path":"src/test/java/seedu/academydirectory/model/AcademyDirectoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TAG_RECURSION;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"public class AcademyDirectoryTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"    private final AcademyDirectory academyDirectory \u003d new AcademyDirectory();","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(Collections.emptyList(), academyDirectory.getStudentList());","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"        assertThrows(NullPointerException.class, () -\u003e academyDirectory.resetData(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"    public void resetData_withValidReadOnlyAcademyDirectory_replacesData() {","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"        AcademyDirectory newData \u003d getTypicalAcademyDirectory();","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"        academyDirectory.resetData(newData);","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"        assertEquals(newData, academyDirectory);","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"    public void resetData_withDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_RECURSION)","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"        AcademyDirectoryStub newData \u003d new AcademyDirectoryStub(newStudents);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e academyDirectory.resetData(newData));","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e academyDirectory.hasStudent(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"    public void hasStudent_studentNotInAcademyDirectory_returnsFalse() {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(academyDirectory.hasStudent(ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"phuccuongngo99"},"content":"    public void hasStudent_studentInAcademyDirectory_returnsTrue() {","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"        academyDirectory.addStudent(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(academyDirectory.hasStudent(ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"    public void hasStudent_studentWithSameIdentityFieldsInAcademyDirectory_returnsTrue() {","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"phuccuongngo99"},"content":"        academyDirectory.addStudent(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_RECURSION)","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(academyDirectory.hasStudent(editedAlice));","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"phuccuongngo99"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e academyDirectory.getStudentList().remove(0));","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"phuccuongngo99"},"content":"     * A stub ReadOnlyAcademyDirectory whose students list can violate interface constraints.","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"    private static class AcademyDirectoryStub implements ReadOnlyAcademyDirectory {","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"phuccuongngo99"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"phuccuongngo99"},"content":"        AcademyDirectoryStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"phuccuongngo99"},"content":"            this.students.setAll(students);","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"phuccuongngo99"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"phuccuongngo99"},"content":"            return students;","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"phuccuongngo99":29,"-":59,"jianoway":13}},{"path":"src/test/java/seedu/academydirectory/model/AdditionalInfoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"public class AdditionalInfoTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"    public void testEmptyAdditionalInfo() {","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalInfo\u003c?\u003e emptyInfo1 \u003d AdditionalInfo.empty();","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalInfo\u003cString\u003e emptyInfo2 \u003d AdditionalInfo.empty();","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalInfo emptyInfo3 \u003d AdditionalInfo.empty();","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalInfo\u003cStudent\u003e emptyInfo4 \u003d AdditionalInfo.empty();","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"        // empty info are all equal regardless of the type we passed in,","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"        // be it wildcard, String, or student, or raw type","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(emptyInfo1, emptyInfo2);","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(emptyInfo2, emptyInfo3);","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(emptyInfo3, emptyInfo4);","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"    public void testNonEmptyAdditionalInfo() {","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalInfo\u003cString\u003e stringInfo \u003d AdditionalInfo.of(\"Daenerys Targaryen\");","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"        // two additional info are equal to each other if the info itself is equal","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(stringInfo, AdditionalInfo.of(\"Daenerys Targaryen\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(stringInfo, AdditionalInfo.of(\"Mother of Dragons\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"        // A non-empty additional info is always not equal to an empty one","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(stringInfo, AdditionalInfo.empty());","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalInfo\u003cStudent\u003e studentInfo \u003d AdditionalInfo.of(new StudentBuilder().build());","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"        // Same action, but for the Student class instead","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(studentInfo, AdditionalInfo.of(new StudentBuilder().build()));","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(studentInfo, AdditionalInfo.of(\"Tyrion Lannister\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(studentInfo, AdditionalInfo.empty());","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"    public void testPresentOrEmpty() {","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalInfo\u003c?\u003e additionalInfo1 \u003d AdditionalInfo.empty();","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalInfo\u003cString\u003e stringInfo \u003d AdditionalInfo.of(\"Arya Stark\");","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalInfo\u003cStudent\u003e studentInfo \u003d AdditionalInfo.of(new StudentBuilder().build());","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"        // Test whether an additional info is empty or not","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"        assertTrue(additionalInfo1.isEmpty());","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"        // Test whether an additional info is present or not","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"        assertTrue(stringInfo.isPresent());","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"        assertFalse(studentInfo.isEmpty());","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"    public void testGetter() {","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalInfo\u003c?\u003e additionalInfo1 \u003d AdditionalInfo.empty();","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalInfo\u003cString\u003e stringInfo \u003d AdditionalInfo.of(\"Arya Stark\");","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalInfo\u003cStudent\u003e studentInfo \u003d AdditionalInfo.of(new StudentBuilder().build());","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalInfo\u003cIndex\u003e indexInfo \u003d AdditionalInfo.of(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"        // If it is empty, NoSuchElementException is thrown","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"        assertThrows(NoSuchElementException.class, additionalInfo1::get);","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"        // Test whether getter function returns the correct result in String","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(stringInfo.get(), \"Arya Stark\");","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(stringInfo.get(), \"Jon Snow\");","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"hmanhduc2k"},"content":"        // Same action but for Student class and for Index class","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(studentInfo.get(), new StudentBuilder().build());","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(indexInfo.get(), INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"hmanhduc2k":86}},{"path":"src/test/java/seedu/academydirectory/model/AdditionalViewModelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.logic.AdditionalViewType;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"public class AdditionalViewModelTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"    public void testValidModel() {","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalViewModel additionalViewModel1 \u003d new AdditionalViewModel(","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"                AdditionalViewType.VIEW, AdditionalInfo.of(\"View\")","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"        );","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"        // additional view model is not null","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(additionalViewModel1, null);","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalViewModel additionalViewModel2 \u003d new AdditionalViewModel(","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"                AdditionalViewType.TEXT, AdditionalInfo.of(3.5)","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"        );","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"        // two additional view models are equal if","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"        // the view type and info are equal","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(additionalViewModel2, new AdditionalViewModel(","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"                AdditionalViewType.TEXT, AdditionalInfo.of(3.5)","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"        ));","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"        // they are not equal otherwise","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(additionalViewModel1, additionalViewModel2);","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalViewModel additionalViewModel3 \u003d new AdditionalViewModel(","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"                AdditionalViewType.DEFAULT, AdditionalInfo.empty()","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"        );","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"        // two additional view model with empty info are equal","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(additionalViewModel3, new AdditionalViewModel(","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"                AdditionalViewType.DEFAULT, AdditionalInfo.empty()","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"        ));","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"        // same type of view but different additional info","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(additionalViewModel3, new AdditionalViewModel(","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"                AdditionalViewType.DEFAULT, AdditionalInfo.of(\"\")","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"        ));","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"        // same type of additional info but different view","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"        assertNotEquals(additionalViewModel3, new AdditionalViewModel(","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"                AdditionalViewType.TEXT, AdditionalInfo.empty()","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"        ));","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"    public void testSetterAndGetter() {","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"        AdditionalViewModel additionalViewModel \u003d new AdditionalViewModel(","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"                AdditionalViewType.DEFAULT, AdditionalInfo.empty()","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"        );","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"        // get additional view type is correct","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(additionalViewModel.getAdditionalViewType(), AdditionalViewType.DEFAULT);","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"        // get additional info is correct","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(additionalViewModel.getAdditionalInfo(), AdditionalInfo.empty());","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"        // set view model type for empty info works properly","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"        additionalViewModel.setAdditionalViewType(AdditionalViewType.VIEW);","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(additionalViewModel.getAdditionalViewType(), AdditionalViewType.VIEW);","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"        // set additional info works properly","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"        additionalViewModel.setAdditionalInfo(AdditionalInfo.of(\"Tyrion Lannister\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(additionalViewModel.getAdditionalInfo(), AdditionalInfo.of(\"Tyrion Lannister\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"Amadeus-Winarto":3,"hmanhduc2k":71}},{"path":"src/test/java/seedu/academydirectory/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"    public void setAcademyDirectoryFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAcademyDirectoryFilePath(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":17,"jianoway":4}},{"path":"src/test/java/seedu/academydirectory/model/VersionControlControllerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.File;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.commons.util.FileUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.storage.StageAreaStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.VcObject;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.utils.HashMethod;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"// Integration Test of VersionControlController with other components","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"class VersionControlControllerTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Path RELEVANT_DIR \u003d Paths.get(\"src\", \"test\",","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"            \"data\", \"VersionControlTest\", \"VersionControlTest\");","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Path COMMIT_DIR \u003d RELEVANT_DIR.resolve(Paths.get(\"Commit\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Path REVERT_DIR \u003d RELEVANT_DIR.resolve(Paths.get(\"Revert\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"    @TempDir","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Path tempPath;","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void constructor_initialCommitPresent_fetchCorrectHash() {","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Guard clause since this integration test does not work in Windows CI due to lack of write permissions","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!tempPath.toFile().setWritable(true)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"            return;","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlController versionControlController \u003d new VersionControlController(HashMethod.SHA1, COMMIT_DIR,","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"                tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        String commitHash \u003d \"70e794b5c26973d17a17b83d2ff2a30b0669c920\";","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        String commitMessage \u003d \"Edited Student: Bernice Yu\";","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit fetchedHeadCommit \u003d versionControlController.getHeadCommit();","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(commitHash, fetchedHeadCommit.getHash());","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(commitMessage, fetchedHeadCommit.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void constructor_initialCommitAbsent_createInitialCommit() {","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Guard clause since this integration test does not work in Windows CI","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!tempPath.toFile().setWritable(true)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"            return;","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"        Date dateBeforeCommit \u003d new Date();","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlController versionControlController \u003d new VersionControlController(HashMethod.SHA1, tempPath,","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"                tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"        Date dateAfterCommit \u003d new Date();","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit fetchedHeadCommit \u003d versionControlController.getHeadCommit();","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(System.getProperty(\"user.name\"), fetchedHeadCommit.getAuthor());","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(\"Initial Commit\", fetchedHeadCommit.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(fetchedHeadCommit.getDate().compareTo(dateBeforeCommit) \u003e\u003d 0);","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(fetchedHeadCommit.getDate().compareTo(dateAfterCommit) \u003c\u003d 0);","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void commit_correctStoragePath() {","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Guard clause since this integration test does not work in Windows CI due to lack of write permissions","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!tempPath.toFile().setWritable(true)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"            return;","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"        for (File file : Objects.requireNonNull(COMMIT_DIR.toFile().listFiles())) {","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertDoesNotThrow(() -\u003e Files.copy(file.toPath(), tempPath.resolve(file.toPath().getFileName())));","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path dataDir \u003d tempPath.resolve(Paths.get(\"Data\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e FileUtil.createFile(dataDir));","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlController versionControlController \u003d new VersionControlController(HashMethod.SHA1, tempPath,","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"                dataDir);","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit prevHeadCommit \u003d versionControlController.getHeadCommit();","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"        String commitMessage \u003d \"TESTING\";","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"        versionControlController.commit(commitMessage);","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"        // internal head tracker should be shifted","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(prevHeadCommit, versionControlController.getHeadCommit());","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"        StageAreaStorage stageAreaStorage \u003d new StageAreaStorage(tempPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e stageAreaStorage.saveStageArea(versionControlController.getStageArea()));","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"        // saveStageArea should add 5 new files: OLD, commit, tree, HEAD, CURRENT","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(Objects.requireNonNull(COMMIT_DIR.toFile().listFiles()).length + 5,","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"                Objects.requireNonNull(tempPath.toFile().listFiles()).length);","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(FileUtil.isFileExists(tempPath.resolve(VersionControlController.OLD_LABEL_STRING)));","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(FileUtil.isFileExists(tempPath.resolve(VersionControlController.CURRENT_LABEL_STRING)));","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(FileUtil.isFileExists(tempPath.resolve(VersionControlController.HEAD_LABEL_STRING)));","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Labels should be understandable","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit fetchedHeadCommit \u003d versionControlController.fetchCommitByLabel(","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"                VersionControlController.HEAD_LABEL_STRING);","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(versionControlController.getHeadCommit(), fetchedHeadCommit);","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(prevHeadCommit, fetchedHeadCommit.getParentSupplier().get());","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(System.getProperty(\"user.name\"), fetchedHeadCommit.getAuthor());","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(commitMessage, fetchedHeadCommit.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(prevHeadCommit, fetchedHeadCommit.getParentSupplier().get());","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(FileUtil.isFileExists(tempPath.resolve(fetchedHeadCommit.getHash())));","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit fetchedCurrentCommit \u003d versionControlController.fetchCommitByLabel(","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"Amadeus-Winarto"},"content":"                VersionControlController.CURRENT_LABEL_STRING);","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(fetchedHeadCommit, fetchedCurrentCommit);","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit fetchedOldCommit \u003d versionControlController.fetchCommitByLabel(","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"Amadeus-Winarto"},"content":"                VersionControlController.OLD_LABEL_STRING);","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(prevHeadCommit, fetchedOldCommit);","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Check committed tree","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree blobTree \u003d fetchedHeadCommit.getTreeSupplier().get();","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(dataDir.toString(),","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"Amadeus-Winarto"},"content":"                blobTree.getHashMap().get(blobTree.getHashMap().keySet().stream().findFirst().orElse(null)));","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(FileUtil.isFileExists(Path.of(blobTree.getHashMap().keySet().stream().findFirst().orElse(\"\"))));","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void commit_incorrectStoragePath() {","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Guard clause since this integration test does not work in Windows CI due to lack of write permissions","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!tempPath.toFile().setWritable(true)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"Amadeus-Winarto"},"content":"            return;","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"Amadeus-Winarto"},"content":"        for (File file : Objects.requireNonNull(COMMIT_DIR.toFile().listFiles())) {","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertDoesNotThrow(() -\u003e Files.copy(file.toPath(), tempPath.resolve(file.toPath().getFileName())));","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlController versionControlController \u003d new VersionControlController(HashMethod.SHA1, tempPath,","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"Amadeus-Winarto"},"content":"                tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit prevHeadCommit \u003d versionControlController.getHeadCommit();","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"Amadeus-Winarto"},"content":"        String commitMessage \u003d \"TESTING\";","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"Amadeus-Winarto"},"content":"        versionControlController.commit(commitMessage);","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"Amadeus-Winarto"},"content":"        // internal head tracker should be shifted","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(prevHeadCommit, versionControlController.getHeadCommit());","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Tree.NULL -\u003e unable to write tree","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"Amadeus-Winarto"},"content":"        StageAreaStorage stageAreaStorage \u003d new StageAreaStorage(tempPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e stageAreaStorage.saveStageArea(versionControlController.getStageArea()));","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"Amadeus-Winarto"},"content":"        // saveStageArea should add 2 new files only: OLD, commit","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(Objects.requireNonNull(COMMIT_DIR.toFile().listFiles()).length + 2,","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"Amadeus-Winarto"},"content":"                Objects.requireNonNull(tempPath.toFile().listFiles()).length);","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Everything else should still be correct","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(FileUtil.isFileExists(tempPath.resolve(VersionControlController.OLD_LABEL_STRING)));","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(FileUtil.isFileExists(tempPath.resolve(VersionControlController.CURRENT_LABEL_STRING)));","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(FileUtil.isFileExists(tempPath.resolve(VersionControlController.HEAD_LABEL_STRING)));","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit fetchedHeadCommit \u003d versionControlController.fetchCommitByLabel(","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"Amadeus-Winarto"},"content":"                VersionControlController.HEAD_LABEL_STRING);","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(versionControlController.getHeadCommit(), fetchedHeadCommit);","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(prevHeadCommit, fetchedHeadCommit.getParentSupplier().get());","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(System.getProperty(\"user.name\"), fetchedHeadCommit.getAuthor());","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(commitMessage, fetchedHeadCommit.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":173,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(prevHeadCommit, fetchedHeadCommit.getParentSupplier().get());","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(FileUtil.isFileExists(tempPath.resolve(fetchedHeadCommit.getHash())));","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit fetchedCurrentCommit \u003d versionControlController.fetchCommitByLabel(","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"Amadeus-Winarto"},"content":"                VersionControlController.CURRENT_LABEL_STRING);","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(fetchedHeadCommit, fetchedCurrentCommit);","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit fetchedOldCommit \u003d versionControlController.fetchCommitByLabel(","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"Amadeus-Winarto"},"content":"                VersionControlController.OLD_LABEL_STRING);","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(prevHeadCommit, fetchedOldCommit);","lastModifiedDate":"2021-10-31"},{"lineNumber":183,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":184,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Tree is Null","lastModifiedDate":"2021-10-31"},{"lineNumber":185,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree blobTree \u003d fetchedHeadCommit.getTreeSupplier().get();","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(Tree.emptyTree(), blobTree);","lastModifiedDate":"2021-11-01"},{"lineNumber":187,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":188,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void revert_negativeTests() {","lastModifiedDate":"2021-10-31"},{"lineNumber":191,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Guard clause since this integration test does not work in Windows CI due to lack of write permissions","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!tempPath.toFile().setWritable(true)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":193,"author":{"gitId":"Amadeus-Winarto"},"content":"            return;","lastModifiedDate":"2021-11-02"},{"lineNumber":194,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":195,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":196,"author":{"gitId":"Amadeus-Winarto"},"content":"        for (File file : Objects.requireNonNull(REVERT_DIR.toFile().listFiles())) {","lastModifiedDate":"2021-10-31"},{"lineNumber":197,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertDoesNotThrow(() -\u003e Files.copy(file.toPath(), tempPath.resolve(file.toPath().getFileName())));","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":199,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlController versionControlController \u003d new VersionControlController(HashMethod.SHA1, tempPath,","lastModifiedDate":"2021-11-04"},{"lineNumber":200,"author":{"gitId":"Amadeus-Winarto"},"content":"                tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":202,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Reverting to current hash -\u003e Returns null commit","lastModifiedDate":"2021-10-31"},{"lineNumber":203,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(assertDoesNotThrow(() -\u003e versionControlController.revert(","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"Amadeus-Winarto"},"content":"                versionControlController.getHeadCommit().getHash())).isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":206,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Reverting to a commit that is not present -\u003e Returns null commit","lastModifiedDate":"2021-10-31"},{"lineNumber":207,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(assertDoesNotThrow(() -\u003e versionControlController.revert(\"MISSING\")).isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":209,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":210,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":211,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void revert_correctHash() {","lastModifiedDate":"2021-10-31"},{"lineNumber":212,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Guard clause since this integration test does not work in Windows CI due to lack of write permissions","lastModifiedDate":"2021-11-02"},{"lineNumber":213,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!tempPath.toFile().setWritable(true)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":214,"author":{"gitId":"Amadeus-Winarto"},"content":"            return;","lastModifiedDate":"2021-11-02"},{"lineNumber":215,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":216,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":217,"author":{"gitId":"Amadeus-Winarto"},"content":"        for (File file : Objects.requireNonNull(REVERT_DIR.toFile().listFiles())) {","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertDoesNotThrow(() -\u003e Files.copy(file.toPath(), tempPath.resolve(file.toPath().getFileName())));","lastModifiedDate":"2021-10-31"},{"lineNumber":219,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":220,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":221,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Tree will regenerate blob to the following path:","lastModifiedDate":"2021-11-02"},{"lineNumber":222,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path regeneratePath \u003d RELEVANT_DIR.resolve(\"temp\").resolve(\"academydirectory.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":223,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (FileUtil.isFileExists(regeneratePath)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":224,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertTrue(regeneratePath.toFile().delete());","lastModifiedDate":"2021-10-31"},{"lineNumber":225,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":226,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":227,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path dataDir \u003d tempPath.resolve(Paths.get(\"Data\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":228,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e FileUtil.createFile(dataDir));","lastModifiedDate":"2021-10-31"},{"lineNumber":229,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlController versionControlController \u003d new VersionControlController(HashMethod.SHA1, tempPath,","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"Amadeus-Winarto"},"content":"                dataDir);","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit currHead \u003d versionControlController.getHeadCommit();","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":233,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Reverting to a commit that is present -\u003e Returns that commit","lastModifiedDate":"2021-10-31"},{"lineNumber":234,"author":{"gitId":"Amadeus-Winarto"},"content":"        String correctHash \u003d \"6b8dca90ac26ec6f2f4fc3b7f820bc57f462fcf9\";","lastModifiedDate":"2021-10-31"},{"lineNumber":235,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit revertedCommit \u003d assertDoesNotThrow(() -\u003e versionControlController.revert(correctHash));","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":237,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(revertedCommit.isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":238,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(currHead, revertedCommit);","lastModifiedDate":"2021-10-31"},{"lineNumber":239,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(revertedCommit, versionControlController.getHeadCommit());","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":241,"author":{"gitId":"Amadeus-Winarto"},"content":"        // HEAD label is staged","lastModifiedDate":"2021-10-31"},{"lineNumber":242,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cVcObject\u003e vcObjectList \u003d versionControlController.getStageArea().getVcObjectList();","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(1, vcObjectList.size());","lastModifiedDate":"2021-10-31"},{"lineNumber":244,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(vcObjectList.get(0) instanceof Label);","lastModifiedDate":"2021-10-31"},{"lineNumber":245,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(revertedCommit, ((Label) vcObjectList.get(0)).getCommitSupplier().get());","lastModifiedDate":"2021-10-31"},{"lineNumber":246,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":247,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"Amadeus-Winarto":247}},{"path":"src/test/java/seedu/academydirectory/model/VersionedModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package seedu.academydirectory.model;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.model.VersionedModel.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.commons.core.GuiSettings;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"import seedu.academydirectory.testutil.AcademyDirectoryBuilder;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"public class VersionedModelManagerTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"    private VersionedModelManager versionedModelManager \u003d new VersionedModelManager();","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"    public void constructor() {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(new UserPrefs(), versionedModelManager.getUserPrefs());","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(new GuiSettings(), versionedModelManager.getGuiSettings());","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(new AcademyDirectory(), new AcademyDirectory(versionedModelManager.getAcademyDirectory()));","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"        assertThrows(NullPointerException.class, () -\u003e versionedModelManager.setUserPrefs(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"        userPrefs.setAcademyDirectoryFilePath(Paths.get(\"academy/directory/file/path\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"        versionedModelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(userPrefs, versionedModelManager.getUserPrefs());","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"        // Modifying userPrefs should not modify versionedModelManager\u0027s userPrefs","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"        userPrefs.setAcademyDirectoryFilePath(Paths.get(\"new/academy/directory/file/path\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(oldUserPrefs, versionedModelManager.getUserPrefs());","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"        assertThrows(NullPointerException.class, () -\u003e versionedModelManager.setGuiSettings(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"        versionedModelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(guiSettings, versionedModelManager.getGuiSettings());","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"    public void setAcademyDirectoryFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"        assertThrows(NullPointerException.class, () -\u003e versionedModelManager.setAcademyDirectoryFilePath(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"    public void setAcademyDirectoryFilePath_validPath_setsAcademyDirectoryFilePath() {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"        Path path \u003d Paths.get(\"academy/directory/file/path\");","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"        versionedModelManager.setAcademyDirectoryFilePath(path);","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(path, versionedModelManager.getAcademyDirectoryFilePath());","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"        assertThrows(NullPointerException.class, () -\u003e versionedModelManager.hasStudent(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"hmanhduc2k"},"content":"    public void hasStudent_studentNotInAcademyDirectory_returnsFalse() {","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"hmanhduc2k"},"content":"        assertFalse(versionedModelManager.hasStudent(ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"hmanhduc2k"},"content":"    public void hasStudent_studentInAcademyDirectory_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"hmanhduc2k"},"content":"        versionedModelManager.addStudent(ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"hmanhduc2k"},"content":"        assertTrue(versionedModelManager.hasStudent(ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"hmanhduc2k"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"hmanhduc2k"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e versionedModelManager","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"hmanhduc2k"},"content":"                .getFilteredStudentList().remove(0));","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"hmanhduc2k"},"content":"    public void equals() {","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"hmanhduc2k"},"content":"        AcademyDirectory academyDirectory \u003d new AcademyDirectoryBuilder().withStudent(ALICE)","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"hmanhduc2k"},"content":"                .withStudent(BENSON).build();","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"hmanhduc2k"},"content":"        AcademyDirectory differentAcademyDirectory \u003d new AcademyDirectory();","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"hmanhduc2k"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"hmanhduc2k"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"hmanhduc2k"},"content":"        versionedModelManager \u003d new VersionedModelManager(academyDirectory, userPrefs);","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"hmanhduc2k"},"content":"        VersionedModelManager versionedModelManagerCopy \u003d new VersionedModelManager(academyDirectory, userPrefs);","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"hmanhduc2k"},"content":"        assertTrue(versionedModelManager.equals(versionedModelManagerCopy));","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"hmanhduc2k"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"hmanhduc2k"},"content":"        assertTrue(versionedModelManager.equals(versionedModelManager));","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"hmanhduc2k"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"hmanhduc2k"},"content":"        assertFalse(versionedModelManager.equals(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"hmanhduc2k"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"hmanhduc2k"},"content":"        assertFalse(versionedModelManager.equals(5));","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"hmanhduc2k"},"content":"        // different academyDirectory -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"hmanhduc2k"},"content":"        assertFalse(versionedModelManager.equals(new VersionedModelManager(differentAcademyDirectory, userPrefs)));","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"hmanhduc2k"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"hmanhduc2k"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"hmanhduc2k"},"content":"        versionedModelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"hmanhduc2k"},"content":"        assertFalse(versionedModelManager.equals(new VersionedModelManager(academyDirectory, userPrefs)));","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"hmanhduc2k"},"content":"        // resets versionedModelManager to initial state for upcoming tests","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"hmanhduc2k"},"content":"        versionedModelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"hmanhduc2k"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"hmanhduc2k"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"hmanhduc2k"},"content":"        differentUserPrefs.setAcademyDirectoryFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"hmanhduc2k"},"content":"        assertFalse(versionedModelManager.equals(new VersionedModelManager(academyDirectory, differentUserPrefs)));","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":1,"hmanhduc2k":133}},{"path":"src/test/java/seedu/academydirectory/model/student/AssessmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"public class AssessmentTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"    public void isValidAssessment() {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"        // null assessment","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"        assertThrows(NullPointerException.class, () -\u003e Assessment.isValidAssessment(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"        // blank assessment","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"        assertFalse(Assessment.isValidAssessment(\"\")); // empty string","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"        assertFalse(Assessment.isValidAssessment(\" \")); // spaces only","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"        // incorrect assessment","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"        assertFalse(Assessment.isValidAssessment(\"Quiz\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"        assertFalse(Assessment.isValidAssessment(\"RA\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"        assertFalse(Assessment.isValidAssessment(\"PEE\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"        assertFalse(Assessment.isValidAssessment(\"RA 1\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"        // case-insensitive assessment","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"        assertTrue(Assessment.isValidAssessment(\"rA1\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"        assertTrue(Assessment.isValidAssessment(\"midTerm\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"        // valid assessment","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"        assertTrue(Assessment.isValidAssessment(\"RA1\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"        assertTrue(Assessment.isValidAssessment(\"MIDTERM\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"        assertTrue(Assessment.isValidAssessment(\"RA2\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"        assertTrue(Assessment.isValidAssessment(\"PE\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"        assertTrue(Assessment.isValidAssessment(\"FINAL\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"    public void getAverageComparator() {","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"        Comparator\u003cStudent\u003e ascendingComparator \u003d Assessment.getAverageComparator(true);","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"        Comparator\u003cStudent\u003e descendingComparator \u003d Assessment.getAverageComparator(false);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"        Student firstStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"        Student secondStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"        Student lastStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"        firstStudent.getAssessment().updateAssessmentGrade(\"RA1\", 1);","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"        secondStudent.getAssessment().updateAssessmentGrade(\"RA1\", 2);","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"        lastStudent.getAssessment().updateAssessmentGrade(\"RA1\", 3);","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e studentList \u003d Arrays.asList(","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"                secondStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"                firstStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"                lastStudent);","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e expectedAscendingList \u003d Arrays.asList(","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"                firstStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"                secondStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"                lastStudent","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"        );","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e expectedDescendingList \u003d Arrays.asList(","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"                lastStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"                secondStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"                firstStudent","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"        );","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedAscendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedDescendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"        studentList.sort(ascendingComparator);","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"        assertEquals(studentList, expectedAscendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedDescendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"        studentList.sort(descendingComparator);","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"jianoway"},"content":"        assertEquals(studentList, expectedDescendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedAscendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"jianoway"},"content":"    public void getIndividualComparator() {","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"jianoway"},"content":"        Comparator\u003cStudent\u003e ascendingRA1Comparator \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"jianoway"},"content":"                Assessment.getIndividualComparator(true, \"RA1\");","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"jianoway"},"content":"        Comparator\u003cStudent\u003e descendingRA1Comparator \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"jianoway"},"content":"                Assessment.getIndividualComparator(false, \"RA1\");","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"jianoway"},"content":"        Student firstStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"jianoway"},"content":"        Student secondStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"jianoway"},"content":"        Student lastStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"jianoway"},"content":"        firstStudent.getAssessment().updateAssessmentGrade(\"RA1\", 1);","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"        secondStudent.getAssessment().updateAssessmentGrade(\"RA1\", 2);","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"jianoway"},"content":"        lastStudent.getAssessment().updateAssessmentGrade(\"RA1\", 3);","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e studentList \u003d Arrays.asList(","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"jianoway"},"content":"                secondStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"jianoway"},"content":"                firstStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"jianoway"},"content":"                lastStudent);","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e expectedAscendingList \u003d Arrays.asList(","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"jianoway"},"content":"                firstStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"jianoway"},"content":"                secondStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"jianoway"},"content":"                lastStudent","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"jianoway"},"content":"        );","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e expectedDescendingList \u003d Arrays.asList(","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"jianoway"},"content":"                lastStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"jianoway"},"content":"                secondStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"jianoway"},"content":"                firstStudent","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"jianoway"},"content":"        );","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedAscendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedDescendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"jianoway"},"content":"        studentList.sort(ascendingRA1Comparator);","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"jianoway"},"content":"        assertEquals(studentList, expectedAscendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedDescendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"jianoway"},"content":"        studentList.sort(descendingRA1Comparator);","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"jianoway"},"content":"        assertEquals(studentList, expectedDescendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedAscendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"cheweejia":37,"jianoway":96}},{"path":"src/test/java/seedu/academydirectory/model/student/AttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"public class AttendanceTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Attendance(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"    public void constructor_invalidAttendance_throwsNegativeArraySizeException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"        Integer invalidAttendance \u003d -1;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"        assertThrows(NegativeArraySizeException.class, () -\u003e new Attendance(invalidAttendance));","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"    public void isValidAttendance() {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"        final String zero \u003d \"0\";","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"        final String one \u003d \"1\";","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"        assertTrue(Attendance.isValidAttendance(zero));","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"        assertTrue(Attendance.isValidAttendance(one));","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"        assertFalse(Attendance.isValidAttendance(\"-1\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"        assertFalse(Attendance.isValidAttendance(\"a\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"        assertFalse(Attendance.isValidAttendance(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"        assertFalse(Attendance.isValidAttendance(\"\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"        assertFalse(Attendance.isValidAttendance(\".\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"    public void getSessionCount() {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"        Attendance attendanceFive \u003d new Attendance(5);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"        assertTrue(attendanceFive.getSessionCount() \u003d\u003d 5);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"        Attendance attendanceHundred \u003d new Attendance(100);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"        assertTrue(attendanceHundred.getSessionCount() \u003d\u003d 100);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"        Attendance attendance \u003d new Attendance(4);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"        assertTrue(attendance.equals(attendance));","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"        Attendance attendanceCopy \u003d new Attendance(4);","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"        Attendance attendanceDiff \u003d new Attendance(5);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"        assertTrue(attendance.equals(attendanceCopy));","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"        assertFalse(attendance.equals(attendanceDiff));","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"jianoway":60}},{"path":"src/test/java/seedu/academydirectory/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"phuccuongngo99":1,"-":66,"jianoway":1}},{"path":"src/test/java/seedu/academydirectory/model/student/GradeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"public class GradeTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Grade(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"    public void constructor_invalidGrade_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"        String invalidGrade \u003d \"999\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Grade(invalidGrade));","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"    void isValidGrade() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"        // null grade","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"        assertThrows(NullPointerException.class, () -\u003e Grade.isValidGrade(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"        // blank grade","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"        assertFalse(Grade.isValidGrade(\"\")); // empty string","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"        assertFalse(Grade.isValidGrade(\" \")); // spaces only","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"        // out of range","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"        assertFalse(Grade.isValidGrade(\"-1\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"        assertFalse(Grade.isValidGrade(\"101\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"        // contains non-digits","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"        assertFalse(Grade.isValidGrade(\"ten\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"        assertFalse(Grade.isValidGrade(\"1one\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"        // correct input","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"        assertTrue(Grade.isValidGrade(\"0\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"        assertTrue(Grade.isValidGrade(\"50\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"        assertTrue(Grade.isValidGrade(\"100\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"cheweejia":44}},{"path":"src/test/java/seedu/academydirectory/model/student/InformationContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"public class InformationContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"    public void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"mission\");","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"        InformationContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"                new InformationContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"        InformationContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"                new InformationContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"        InformationContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"                new InformationContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"cheweejia"},"content":"    public void test_nameOrTagContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"cheweejia"},"content":"        // One keyword matching the tag","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"cheweejia"},"content":"        InformationContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"cheweejia"},"content":"                new InformationContainsKeywordsPredicate(Collections.singletonList(\"Mission\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"cheweejia"},"content":"        assertTrue(predicate.test(new StudentBuilder().withTags(\"Mission\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"cheweejia"},"content":"        // One keyword matching the name","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"cheweejia"},"content":"        predicate \u003d new InformationContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"cheweejia"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice\").withTags(\"Mission\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"cheweejia"},"content":"        // Multiple keywords matching the name and tag","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"cheweejia"},"content":"        predicate \u003d new InformationContainsKeywordsPredicate(Arrays.asList(\"mission\", \"Alice\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"cheweejia"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice\").withTags(\"mission\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"cheweejia"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"cheweejia"},"content":"        predicate \u003d new InformationContainsKeywordsPredicate(Arrays.asList(\"mission\", \"stream\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"cheweejia"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice\").withTags(\"mission\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"cheweejia"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"cheweejia"},"content":"        predicate \u003d new InformationContainsKeywordsPredicate(Arrays.asList(\"miSsIon\", \"Bob\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"cheweejia"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice\").withTags(\"mission\", \"stream\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"cheweejia"},"content":"    public void test_nameOrTagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"cheweejia"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"cheweejia"},"content":"        InformationContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"cheweejia"},"content":"                new InformationContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"cheweejia"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withTags(\"mission\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"cheweejia"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"cheweejia"},"content":"        predicate \u003d new InformationContainsKeywordsPredicate(Arrays.asList(\"mission\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"cheweejia"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withTags(\"envModel\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"cheweejia"},"content":"        // Keywords match phone, email, and telegram but does not match name or tag","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"cheweejia"},"content":"        predicate \u003d new InformationContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"@alice\",","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"cheweejia"},"content":"                \"Main\", \"Street\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"cheweejia"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withTags(\"mission\").withPhone(\"12345\")","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"cheweejia"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"@alice\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"cheweejia":85}},{"path":"src/test/java/seedu/academydirectory/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"        // Keywords match phone, email, and telegram but does not match name","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"@alice\",","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"                \"Main\", \"Street\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"phuccuongngo99"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"@alice\").build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"phuccuongngo99":14,"-":62}},{"path":"src/test/java/seedu/academydirectory/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"    public void getComparator() {","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"        Comparator\u003cStudent\u003e ascendingComparator \u003d Name.getComparator(true);","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"        Comparator\u003cStudent\u003e descendingComparator \u003d Name.getComparator(false);","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"        Student firstStudent \u003d new StudentBuilder().withName(\"abc\").build();","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"        Student middleStudent \u003d new StudentBuilder().withName(\"ghi\").build();","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"        Student lastStudent \u003d new StudentBuilder().withName(\"xyz\").build();","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e studentList \u003d Arrays.asList(","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"                middleStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"                firstStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"                lastStudent);","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e expectedAscendingList \u003d Arrays.asList(","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"                firstStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"                middleStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"                lastStudent","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"        );","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e expectedDescendingList \u003d Arrays.asList(","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"                lastStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"                middleStudent,","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"                firstStudent","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"        );","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedAscendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedDescendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"        studentList.sort(ascendingComparator);","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"        assertEquals(studentList, expectedAscendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedDescendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"        studentList.sort(descendingComparator);","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"        assertEquals(studentList, expectedDescendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedAscendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"phuccuongngo99":1,"-":37,"jianoway":49}},{"path":"src/test/java/seedu/academydirectory/model/student/ParticipationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"public class ParticipationTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Participation(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"    public void constructor_invalidAttendance_throwsNegativeArraySizeException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"        Integer invalidParticipation \u003d -1;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"        assertThrows(NegativeArraySizeException.class, () -\u003e new Participation(invalidParticipation));","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"    public void add_validInput_changeParticipationCount() {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"        Participation participation \u003d new Participation(10);","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"        participation.add(1, 10); // note that the index supplied here is Ones-based","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"        assertTrue(participation.getParticipationArray()[0] \u003d\u003d 10);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"        participation.add(1, -100);","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"        assertTrue(participation.getParticipationArray()[0] \u003d\u003d 0);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"        participation.add(1, 100);","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"        assertTrue(participation.getParticipationArray()[0] \u003d\u003d 100);","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"        participation.add(1, 500);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"        assertTrue(participation.getParticipationArray()[0] \u003d\u003d 500);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"        participation.add(1, 500);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"        assertTrue(participation.getParticipationArray()[0] \u003d\u003d 500);","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"    public void isValidParticipation() {","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"        assertTrue(Participation.isValidParticipation(\"1\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"        assertTrue(Participation.isValidParticipation(\"-100\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"        assertTrue(Participation.isValidParticipation(\"0\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"        assertTrue(Participation.isValidParticipation(\"-0\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"        assertFalse(Participation.isValidParticipation(\"\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"        assertFalse(Participation.isValidParticipation(\" \"));","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"        assertFalse(Participation.isValidParticipation(\".\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"        assertFalse(Participation.isValidParticipation(\"-\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"        assertFalse(Participation.isValidParticipation(\"a\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"        assertFalse(Participation.isValidParticipation(\"1a\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"        assertFalse(Participation.isValidParticipation(\"a1\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"        assertFalse(Participation.isValidParticipation(\"-501\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"        assertFalse(Participation.isValidParticipation(\"501\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"        Participation participation \u003d new Participation(10);","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"        Participation participatioCopy \u003d new Participation(10);","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"        Participation participationDiffSize \u003d new Participation(13);","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"        Participation participationDiffCount \u003d new Participation(10).add(1, 10);","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"        // reflexive","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"        assertTrue(participation.equals(participation));","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"        // equal to another participation of same size and values","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"        assertTrue(participation.equals(participatioCopy));","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"jianoway"},"content":"        // not equal to another participation of different size","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"jianoway"},"content":"        assertFalse(participation.equals(participationDiffSize));","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"jianoway"},"content":"        // not equal to another participation of different count","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"        assertFalse(participation.equals(participationDiffCount));","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"jianoway"},"content":"    public void setParticipation_validInput_participationCountChangesCorrectly() {","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"jianoway"},"content":"        Participation participation \u003d new Participation(10);","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"jianoway"},"content":"        int[] intArray \u003d new int[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"jianoway"},"content":"        participation.setParticipation(intArray);","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"jianoway"},"content":"        assertEquals(1, participation.getParticipationArray()[0]);","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"jianoway"},"content":"        assertEquals(2, participation.getParticipationArray()[1]);","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"jianoway"},"content":"        assertEquals(3, participation.getParticipationArray()[2]);","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"jianoway"},"content":"        assertEquals(4, participation.getParticipationArray()[3]);","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"jianoway"},"content":"        assertEquals(5, participation.getParticipationArray()[4]);","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"        assertEquals(6, participation.getParticipationArray()[5]);","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"jianoway"},"content":"        assertEquals(7, participation.getParticipationArray()[6]);","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"jianoway"},"content":"        assertEquals(8, participation.getParticipationArray()[7]);","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"jianoway"},"content":"        assertEquals(9, participation.getParticipationArray()[8]);","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"jianoway"},"content":"        assertEquals(10, participation.getParticipationArray()[9]);","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"jianoway"},"content":"    public void getComparator() {","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"jianoway"},"content":"        Comparator\u003cStudent\u003e ascendingComparator \u003d Participation.getComparator(true);","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"jianoway"},"content":"        Comparator\u003cStudent\u003e descendingComparator \u003d Participation.getComparator(false);","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"jianoway"},"content":"        Participation highParticipation \u003d new Participation(12);","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"jianoway"},"content":"        Participation mediumParticipation \u003d new Participation(12);","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"jianoway"},"content":"        Participation lowParticipation \u003d new Participation(12);","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"jianoway"},"content":"        highParticipation.add(1, 12);","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"jianoway"},"content":"        mediumParticipation.add(1, 6);","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"jianoway"},"content":"        lowParticipation.add(1, 1);","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"jianoway"},"content":"        Student studentHigherParticipation \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"jianoway"},"content":"        studentHigherParticipation.setParticipation(highParticipation);","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"jianoway"},"content":"        Student studentMediumParticipation \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"jianoway"},"content":"        studentMediumParticipation.setParticipation(mediumParticipation);","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"jianoway"},"content":"        Student studentLowerParticipation \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"jianoway"},"content":"        studentLowerParticipation.setParticipation(lowParticipation);","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e studentList \u003d Arrays.asList(","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"jianoway"},"content":"                studentHigherParticipation,","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"jianoway"},"content":"                studentLowerParticipation,","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"jianoway"},"content":"                studentMediumParticipation);","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e expectedAscendingList \u003d Arrays.asList(","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"jianoway"},"content":"                studentLowerParticipation,","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"jianoway"},"content":"                studentMediumParticipation,","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"jianoway"},"content":"                studentHigherParticipation);","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"jianoway"},"content":"        List\u003cStudent\u003e expectedDescendingList \u003d Arrays.asList(","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"jianoway"},"content":"                studentHigherParticipation,","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"jianoway"},"content":"                studentMediumParticipation,","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"jianoway"},"content":"                studentLowerParticipation","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"jianoway"},"content":"        );","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"jianoway"},"content":"        // check not sorted prior to sort","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedAscendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedDescendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"jianoway"},"content":"        // sort by ascending","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"jianoway"},"content":"        studentList.sort(ascendingComparator);","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"jianoway"},"content":"        assertEquals(studentList, expectedAscendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedDescendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"jianoway"},"content":"        // sort by descending","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"jianoway"},"content":"        studentList.sort(descendingComparator);","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"jianoway"},"content":"        assertEquals(studentList, expectedDescendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studentList, expectedAscendingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":162,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"jianoway":164}},{"path":"src/test/java/seedu/academydirectory/model/student/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(Phone.isValidPhone(\"N A\")); // NA with space in between","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(Phone.isValidPhone(\"..NA\")); // NA with preceding characters","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(Phone.isValidPhone(\"NA@\")); // NA with trailing character","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(Phone.isValidPhone(\"NA\")); // represent null value of phone number","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"phuccuongngo99":5,"-":38,"jianoway":1}},{"path":"src/test/java/seedu/academydirectory/model/student/SortableInformationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"public class SortableInformationTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"    public void isValidSortable() {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"        // null sortable","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"        assertThrows(NullPointerException.class, () -\u003e SortableInformation.isValidSortable(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"PE\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"pe\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"pE\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"Pe\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"RA1\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"ra1\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"rA1\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"Ra1\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"RA2\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"ra2\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"rA2\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"Ra2\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"MIDTERM\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"MiDTERM\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"midterm\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"Midterm\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"mIdterm\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"FINAL\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"final\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"FiNAL\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"Final\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"AVERAGE\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"average\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"AVeRAGE\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"name\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"NAME\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"nAME\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"Name\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"participation\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"PARTICIPATION\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"Participation\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.isValidSortable(\"PARTICIPATIOn\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"        assertFalse(SortableInformation.isValidSortable(\"\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"        assertFalse(SortableInformation.isValidSortable(\" \"));","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"        assertFalse(SortableInformation.isValidSortable(\"b\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"    public void isValidOrder() {","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"        assertThrows(NullPointerException.class, () -\u003e SortableInformation.Order.isValidOrder(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.Order.isValidOrder(\"asc\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.Order.isValidOrder(\"aSC\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.Order.isValidOrder(\"ASC\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.Order.isValidOrder(\"desc\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.Order.isValidOrder(\"dESC\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.Order.isValidOrder(\"DESC\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.Order.isValidOrder(\"dEsc\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"        assertTrue(SortableInformation.Order.isValidOrder(\"DEsc\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"jianoway"},"content":"        assertFalse(SortableInformation.Order.isValidOrder(\"des\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"        assertFalse(SortableInformation.Order.isValidOrder(\"esc\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"jianoway":82}},{"path":"src/test/java/seedu/academydirectory/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TAG_RECURSION;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TAG_STREAMS;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"public class StudentTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"    public void isSameStudent() {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_RECURSION).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"        Student editedBob \u003d new StudentBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"        editedBob \u003d new StudentBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"phuccuongngo99"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"phuccuongngo99"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"phuccuongngo99"},"content":"        // different telegram -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"phuccuongngo99"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_STREAMS).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"phuccuongngo99":28,"-":56,"jianoway":8}},{"path":"src/test/java/seedu/academydirectory/model/student/StudioRecordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"public class StudioRecordTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudioRecord(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"        StudioRecord studioRecord \u003d new StudioRecord(4);","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"        assertEquals(studioRecord, studioRecord);","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"        StudioRecord studioRecordCopy \u003d new StudioRecord(4);","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"        StudioRecord studioRecordDiff \u003d new StudioRecord(5);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"        assertEquals(studioRecord, studioRecordCopy);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"jianoway"},"content":"        assertNotEquals(studioRecord, studioRecordDiff);","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"        Participation participation \u003d new Participation(4);","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"        Attendance attendance \u003d new Attendance(4);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"        assertEquals(studioRecord, new StudioRecord(attendance, participation));","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"jianoway":33}},{"path":"src/test/java/seedu/academydirectory/model/student/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheweejia"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"cheweejia"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"cheweejia"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"cheweejia"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"cheweejia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"cheweejia"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"cheweejia"},"content":"    public void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"cheweejia"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"mission\");","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"cheweejia"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"cheweejia"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"cheweejia"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"cheweejia"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"cheweejia"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"cheweejia"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"cheweejia"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"cheweejia"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"cheweejia"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"cheweejia"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"cheweejia"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"cheweejia"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"cheweejia"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"cheweejia"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"cheweejia"},"content":"        // One keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"cheweejia"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.singletonList(\"Mission\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"cheweejia"},"content":"        assertTrue(predicate.test(new StudentBuilder().withTags(\"Mission\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"cheweejia"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"cheweejia"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"mission\", \"stream\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"cheweejia"},"content":"        assertTrue(predicate.test(new StudentBuilder().withTags(\"mission\", \"stream\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"cheweejia"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"cheweejia"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"mission\", \"stream\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"cheweejia"},"content":"        assertTrue(predicate.test(new StudentBuilder().withTags(\"mission\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"cheweejia"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"cheweejia"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"miSsIon\", \"StrEam\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"cheweejia"},"content":"        assertTrue(predicate.test(new StudentBuilder().withTags(\"mission\", \"stream\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"cheweejia"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"cheweejia"},"content":"    public void test_tagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"cheweejia"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"cheweejia"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"cheweejia"},"content":"        assertFalse(predicate.test(new StudentBuilder().withTags(\"mission\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"cheweejia"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"cheweejia"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"mission\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"cheweejia"},"content":"        assertFalse(predicate.test(new StudentBuilder().withTags(\"envModel\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"cheweejia"},"content":"        // Keywords match phone, email, and telegram but does not match tag","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"cheweejia"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"@alice\",","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"cheweejia"},"content":"                \"Main\", \"Street\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"cheweejia"},"content":"        assertFalse(predicate.test(new StudentBuilder().withTags(\"mission\").withPhone(\"12345\")","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"cheweejia"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"@alice\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"cheweejia"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"cheweejia":76}},{"path":"src/test/java/seedu/academydirectory/model/student/TelegramTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"public class TelegramTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Telegram(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"    public void constructor_invalidTelegram_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"        String invalidTelegram \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Telegram(invalidTelegram));","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"    public void isValidTelegram() {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"        // null telegram","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e Telegram.isValidTelegram(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"        // blank telegram","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(Telegram.isValidTelegram(\"\")); // empty string","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(Telegram.isValidTelegram(\" \")); // spaces only","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"        // missing parts","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(Telegram.isValidTelegram(\"peterjack\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"        // invalid parts","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(Telegram.isValidTelegram(\"@peter jack\")); // spaces in handle","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(Telegram.isValidTelegram(\" @peterjack\")); // leading space","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(Telegram.isValidTelegram(\"@peterjack \")); // trailing space","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(Telegram.isValidTelegram(\"@@peterjack \")); // double \u0027@\u0027 symbol","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(Telegram.isValidTelegram(\"@peter@jack\")); // \u0027@\u0027 symbol in handle","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(Telegram.isValidTelegram(\"@-peterjack\")); // handle starts with a hyphen","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(Telegram.isValidTelegram(\"@peterjack-\")); // handle ends with a hyphen","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(Telegram.isValidTelegram(\"@peter..jack\")); // handle has two consecutive periods","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"        // valid telegram","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(Telegram.isValidTelegram(\"@PeterJack_1190\")); // underscore in handle","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(Telegram.isValidTelegram(\"@PeterJack.1190\")); // period in handle","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(Telegram.isValidTelegram(\"@PeterJack+1190\")); // \u0027+\u0027 symbol in handle","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(Telegram.isValidTelegram(\"@PeterJack-1190\")); // hyphen in handle","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(Telegram.isValidTelegram(\"@localhost\")); // alphabets only","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(Telegram.isValidTelegram(\"@145\")); // numeric handle and domain name","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(Telegram.isValidTelegram(\"@a1+be.d\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(Telegram.isValidTelegram(\"@if.you.dream.it_you.can.do.it\")); // long handle","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"phuccuongngo99":54}},{"path":"src/test/java/seedu/academydirectory/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.model.student;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TAG_RECURSION;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"        assertFalse(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_RECURSION)","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"                .build();","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"    public void add_duplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudent_nullTargetStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(null, ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudent_nullEditedStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(ALICE, null));","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudent_targetStudentNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.setStudent(ALICE, ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudent_editedStudentIsSameStudent_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.setStudent(ALICE, ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"phuccuongngo99"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"phuccuongngo99"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudent_editedStudentHasSameIdentity_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_RECURSION)","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"phuccuongngo99"},"content":"                .build();","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.setStudent(ALICE, editedAlice);","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"phuccuongngo99"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"phuccuongngo99"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudent_editedStudentHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.setStudent(ALICE, BOB);","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"phuccuongngo99"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"phuccuongngo99"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudent(ALICE, BOB));","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"phuccuongngo99"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"phuccuongngo99"},"content":"    public void remove_studentDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"phuccuongngo99"},"content":"    public void remove_existingStudent_removesStudent() {","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"phuccuongngo99"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudents_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"phuccuongngo99"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"phuccuongngo99"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"phuccuongngo99"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"phuccuongngo99"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"phuccuongngo99"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"phuccuongngo99"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"phuccuongngo99"},"content":"    public void setStudents_listWithDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"phuccuongngo99"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudents(listWithDuplicateStudents));","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":163,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":164,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"phuccuongngo99"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":166,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-05"},{"lineNumber":167,"author":{"gitId":"phuccuongngo99"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"phuccuongngo99":166,"jianoway":3}},{"path":"src/test/java/seedu/academydirectory/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.model.tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"-":24,"jianoway":2}},{"path":"src/test/java/seedu/academydirectory/storage/JsonAcademyDirectoryStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.HOON;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.IDA;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyAcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"public class JsonAcademyDirectoryStorageTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAcademyDirectoryStorageTest\");","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"    public void readAcademyDirectory_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAcademyDirectory(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"    private java.util.Optional\u003cReadOnlyAcademyDirectory\u003e readAcademyDirectory(String filePath) throws Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"        return new JsonAcademyDirectoryStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"                .readAcademyDirectory(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"jianoway"},"content":"        assertFalse(readAcademyDirectory(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAcademyDirectory(\"notJsonFormatAcademyDirectory.json\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"    public void readAcademyDirectory_invalidStudentAAcademyDirectory_throwDataConversionException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAcademyDirectory(\"invalidStudentAcademyDirectory.json\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"    public void readAcademyDirectory_invalidAndValidStudentAcademyDirectory_throwDataConversionException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"jianoway"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"                readAcademyDirectory(\"invalidAndValidStudentAcademyDirectory.json\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"jianoway"},"content":"    public void readAndSaveAcademyDirectory_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAcademyDirectory.json\");","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"        AcademyDirectory original \u003d getTypicalAcademyDirectory();","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"jianoway"},"content":"        JsonAcademyDirectoryStorage jsonAcademyDirectoryStorage \u003d new JsonAcademyDirectoryStorage(filePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Save in new file and read_fileExist_correctTree back","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"        jsonAcademyDirectoryStorage.saveAcademyDirectory(original, filePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"        ReadOnlyAcademyDirectory readBack \u003d jsonAcademyDirectoryStorage.readAcademyDirectory(filePath).get();","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"jianoway"},"content":"        assertEquals(original, new AcademyDirectory(readBack));","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Modify data, overwrite exiting file, and read_fileExist_correctTree back","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"phuccuongngo99"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"phuccuongngo99"},"content":"        original.removeStudent(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"jianoway"},"content":"        jsonAcademyDirectoryStorage.saveAcademyDirectory(original, filePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"jianoway"},"content":"        readBack \u003d jsonAcademyDirectoryStorage.readAcademyDirectory(filePath).get();","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"jianoway"},"content":"        assertEquals(original, new AcademyDirectory(readBack));","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Save and read_fileExist_correctTree without specifying file path","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"phuccuongngo99"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"jianoway"},"content":"        jsonAcademyDirectoryStorage.saveAcademyDirectory(original); // file path not specified","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"jianoway"},"content":"        readBack \u003d jsonAcademyDirectoryStorage.readAcademyDirectory().get(); // file path not specified","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"jianoway"},"content":"        assertEquals(original, new AcademyDirectory(readBack));","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"jianoway"},"content":"    public void saveAcademyDirectory_nullAcademyDirectory_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"jianoway"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAcademyDirectory(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"jianoway"},"content":"     * Saves {@code academyDirectory} at the specified {@code filePath}.","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"jianoway"},"content":"    private void saveAcademyDirectory(ReadOnlyAcademyDirectory academyDirectory, String filePath) {","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"            new JsonAcademyDirectoryStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"jianoway"},"content":"                    .saveAcademyDirectory(academyDirectory, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"jianoway"},"content":"    public void saveAcademyDirectory_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"jianoway"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAcademyDirectory(new AcademyDirectory(), null));","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"phuccuongngo99":11,"Amadeus-Winarto":3,"-":62,"jianoway":36}},{"path":"src/test/java/seedu/academydirectory/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"cheweejia"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"    private static final String INVALID_TELEGRAM \u003d \"example\";","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"    private static final boolean[] VALID_ATTENDANCE \u003d new boolean[10];","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"    private static final int[] VALID_PARTICIPATION \u003d new int[10];","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"cheweejia"},"content":"    private static final HashMap\u003cString, Integer\u003e VALID_ASSESSMENT \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"    private static final String VALID_TELEGRAM \u003d BENSON.getTelegram().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"    public void toModelType_validStudentDetails_returnsStudent() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(BENSON, student.toModelType());","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"jianoway"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TELEGRAM,","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"                        VALID_ATTENDANCE, VALID_PARTICIPATION, VALID_ASSESSMENT, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"jianoway"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"                VALID_TELEGRAM, VALID_ATTENDANCE, VALID_PARTICIPATION, VALID_ASSESSMENT, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"phuccuongngo99"},"content":"                new JsonAdaptedStudent(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_TELEGRAM,","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"phuccuongngo99"},"content":"                        VALID_ATTENDANCE, VALID_PARTICIPATION, VALID_ASSESSMENT, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"jianoway"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"phuccuongngo99"},"content":"                VALID_TELEGRAM, VALID_ATTENDANCE, VALID_PARTICIPATION, VALID_ASSESSMENT, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"phuccuongngo99"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"jianoway"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_TELEGRAM,","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"phuccuongngo99"},"content":"                        VALID_ATTENDANCE, VALID_PARTICIPATION, VALID_ASSESSMENT, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"phuccuongngo99"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, null, VALID_TELEGRAM,","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"phuccuongngo99"},"content":"                VALID_ATTENDANCE, VALID_PARTICIPATION, VALID_ASSESSMENT, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"phuccuongngo99"},"content":"    public void toModelType_invalidTelegram_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"phuccuongngo99"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"jianoway"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_TELEGRAM,","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"phuccuongngo99"},"content":"                        VALID_ATTENDANCE, VALID_PARTICIPATION, VALID_ASSESSMENT, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"phuccuongngo99"},"content":"        String expectedMessage \u003d Telegram.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"phuccuongngo99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"phuccuongngo99"},"content":"    public void toModelType_nullTelegram_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"phuccuongngo99"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"phuccuongngo99"},"content":"                VALID_ATTENDANCE, VALID_PARTICIPATION, VALID_ASSESSMENT, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"phuccuongngo99"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Telegram.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"phuccuongngo99"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"phuccuongngo99"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TELEGRAM,","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"phuccuongngo99"},"content":"                        VALID_ATTENDANCE, VALID_PARTICIPATION, VALID_ASSESSMENT, invalidTags);","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"phuccuongngo99":49,"-":61,"cheweejia":2,"jianoway":11}},{"path":"src/test/java/seedu/academydirectory/storage/JsonSerializableAcademyDirectoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.util.JsonUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.testutil.TypicalStudents;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"public class JsonSerializableAcademyDirectoryTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"            \"test\", \"data\", \"JsonSerializableAcademyDirectoryTest\");","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"    private static final Path TYPICAL_STUDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStudentsAcademyDirectory.json\");","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"    private static final Path INVALID_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentAcademyDirectory.json\");","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"    private static final Path DUPLICATE_STUDENT_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"                                            .resolve(\"duplicateStudentAcademyDirectory.json\");","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"    public void toModelType_typicalStudentsFile_success() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"        JsonSerializableAcademyDirectory dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STUDENTS_FILE,","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"                JsonSerializableAcademyDirectory.class).get();","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"        AcademyDirectory academyDirectoryFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"        AcademyDirectory typicalStudentsAcademyDirectory \u003d TypicalStudents.getTypicalAcademyDirectory();","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"        assertEquals(academyDirectoryFromFile, typicalStudentsAcademyDirectory);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"        JsonSerializableAcademyDirectory dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENT_FILE,","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"                JsonSerializableAcademyDirectory.class).get();","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"    public void toModelType_duplicateStudents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"        JsonSerializableAcademyDirectory dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENT_FILE,","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"jianoway"},"content":"                JsonSerializableAcademyDirectory.class).get();","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAcademyDirectory.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"phuccuongngo99":14,"-":23,"jianoway":12}},{"path":"src/test/java/seedu/academydirectory/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.GuiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"jianoway"},"content":"        userPrefs.setAcademyDirectoryFilePath(Paths.get(\"academydirectory.json\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":117,"jianoway":6}},{"path":"src/test/java/seedu/academydirectory/storage/StageAreaStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.commons.util.FileUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.StageArea;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.testutil.TypicalCommits;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.testutil.TypicalTrees;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.VcObject;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"public class StageAreaStorageTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    @TempDir","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Path tempPath;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void saveStageArea_commits() {","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        StageAreaStorage stageAreaStorage \u003d new StageAreaStorage(tempPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        testSaveStageArea(stageAreaStorage, TypicalCommits.getTypicalCommits());","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        testSaveStageArea(stageAreaStorage, TypicalCommits.getTypicalCommitList());","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        testSaveStageArea(stageAreaStorage, TypicalCommits.getTypicalCommitTree());","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Negative Testing","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        testSaveStageArea_negativeTesting(stageAreaStorage, null);","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        testSaveStageArea_negativeTesting(stageAreaStorage, Commit.emptyCommit());","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void saveStageArea_trees() {","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        StageAreaStorage stageAreaStorage \u003d new StageAreaStorage(tempPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        testSaveStageArea(stageAreaStorage, List.of(TypicalTrees.TREE1));","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Negative Testing","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        testSaveStageArea_negativeTesting(stageAreaStorage, null);","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        testSaveStageArea_negativeTesting(stageAreaStorage, Tree.emptyTree());","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void saveStageArea_labels() {","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"        StageAreaStorage stageAreaStorage \u003d new StageAreaStorage(tempPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"        HashMap\u003cLabel, String\u003e labelNameMapping \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"        TypicalCommits.getTypicalLabels().forEach(label -\u003e labelNameMapping.put(label, label.getName()));","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        testSaveStageAreaLabel(stageAreaStorage, labelNameMapping);","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        TypicalCommits.getTypicalLabelList().forEach(label -\u003e labelNameMapping.put(label, label.getName()));","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"        testSaveStageAreaLabel(stageAreaStorage, labelNameMapping);","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"        TypicalCommits.getTypicalLabelTree().forEach(label -\u003e labelNameMapping.put(label, label.getName()));","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"        testSaveStageAreaLabel(stageAreaStorage, labelNameMapping);","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Negative Testing","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"        testSaveStageArea_negativeTesting(stageAreaStorage, null);","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"        testSaveStageArea_negativeTesting(stageAreaStorage, Label.emptyLabel());","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"    private void testSaveStageArea(StageAreaStorage stageAreaStorage, List\u003c? extends VcObject\u003e vcObjectsList) {","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"        StageArea stageArea \u003d new StageArea();","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"        vcObjectsList.forEach(stageArea::stage);","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e stageAreaStorage.saveStageArea(stageArea));","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"        stageArea.getVcObjectList().stream().map(VcObject::getHash)","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"                .forEach(hash -\u003e assertTrue(FileUtil.isFileExists(tempPath.resolve(hash))));","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"    private void testSaveStageArea_negativeTesting(StageAreaStorage stageAreaStorage, VcObject vcObject) {","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"        StageArea stageArea \u003d new StageArea();","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"        stageArea.stage(vcObject);","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(IOException.class, () -\u003e stageAreaStorage.saveStageArea(stageArea));","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"    private void testSaveStageAreaLabel(StageAreaStorage stageAreaStorage, HashMap\u003cLabel, String\u003e labelNameMapping) {","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"        StageArea stageArea \u003d new StageArea();","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"        labelNameMapping.keySet().forEach(stageArea::stage);","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e stageAreaStorage.saveStageArea(stageArea));","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"        stageArea.getVcObjectList().stream().filter(x -\u003e x instanceof Label)","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"                .map(x -\u003e (Label) x).map(labelNameMapping::get)","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"                .forEach(name -\u003e assertTrue(FileUtil.isFileExists(tempPath.resolve(name))));","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"Amadeus-Winarto":92}},{"path":"src/test/java/seedu/academydirectory/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.testutil.TypicalStudents.getTypicalAcademyDirectory;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.GuiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.ReadOnlyAcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.UserPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"jianoway"},"content":"        JsonAcademyDirectoryStorage academyDirectoryStorage \u003d new JsonAcademyDirectoryStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        storageManager \u003d new StorageManager(academyDirectoryStorage, userPrefsStorage, getTempFilePath(\"vc\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"jianoway"},"content":"    public void academyDirectoryReadSave() throws Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"         * {@link JsonAcademyDirectoryStorage} class.","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"jianoway"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAcademyDirectoryStorageTest} class.","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"        AcademyDirectory original \u003d getTypicalAcademyDirectory();","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"jianoway"},"content":"        storageManager.saveAcademyDirectory(original);","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"jianoway"},"content":"        ReadOnlyAcademyDirectory retrieved \u003d storageManager.readAcademyDirectory().get();","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"        assertEquals(original, new AcademyDirectory(retrieved));","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"jianoway"},"content":"    public void getAcademyDirectoryFilePath() {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"jianoway"},"content":"        assertNotNull(storageManager.getAcademyDirectoryFilePath());","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"phuccuongngo99":1,"Amadeus-Winarto":1,"-":51,"jianoway":15}},{"path":"src/test/java/seedu/academydirectory/storage/VersionControlReaderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT1;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalTrees.TREE1;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionControlReader;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.utils.HashGenerator;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.utils.HashMethod;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"public class VersionControlReaderTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    @TempDir","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static Path testingDir;","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Path DATA_DIR \u003d Paths.get(\"src\", \"test\",","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"            \"data\", \"VersionControlTest\");","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Path FETCH_OBJECT_DIR \u003d DATA_DIR.resolve(\"FetchObjectTest\");","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final HashMethod hashMethod \u003d HashMethod.SHA1;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final HashGenerator hashGenerator \u003d new HashGenerator(hashMethod);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void createNewCommit() {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlReader versionControlReader \u003d new VersionControlReader(hashMethod, testingDir);","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Null Tree and Null Parent Commit","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        String message \u003d \"Initial Commit\";","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        Supplier\u003cTree\u003e nullTreeSupplier \u003d Tree::emptyTree;","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        Supplier\u003cCommit\u003e nullCommitSupplier \u003d Commit::emptyCommit;","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit currentCommit \u003d assertDoesNotThrow(() -\u003e versionControlReader.createNewCommit(message,","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"                nullTreeSupplier,","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"                nullCommitSupplier));","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(System.getProperty(\"user.name\"), currentCommit.getAuthor());","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(currentCommit.getDate(), currentCommit.getDate());","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(message, currentCommit.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(nullCommitSupplier, currentCommit.getParentSupplier());","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(nullTreeSupplier, currentCommit.getTreeSupplier());","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Null Tree but Non-Null parent Commit","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"        currentCommit \u003d assertDoesNotThrow(() -\u003e versionControlReader.createNewCommit(message,","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"                nullTreeSupplier, () -\u003e COMMIT1));","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(System.getProperty(\"user.name\"), currentCommit.getAuthor());","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(currentCommit.getDate(), currentCommit.getDate());","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(message, currentCommit.getMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT1, currentCommit.getParentSupplier().get());","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(nullTreeSupplier, currentCommit.getTreeSupplier());","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Non-Null Tree but Null parent Commit","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"        currentCommit \u003d assertDoesNotThrow(() -\u003e versionControlReader.createNewCommit(message, () -\u003e TREE1,","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"                nullCommitSupplier));","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(System.getProperty(\"user.name\"), currentCommit.getAuthor());","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(currentCommit.getDate(), currentCommit.getDate());","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(message, currentCommit.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(nullCommitSupplier, currentCommit.getParentSupplier());","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(TREE1, currentCommit.getTreeSupplier().get());","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Non-Null Tree and Non-Null Commit","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"        currentCommit \u003d assertDoesNotThrow(() -\u003e versionControlReader.createNewCommit(","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"                message, () -\u003e TREE1, () -\u003e COMMIT1));","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(System.getProperty(\"user.name\"), currentCommit.getAuthor());","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(currentCommit.getDate(), currentCommit.getDate());","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(message, currentCommit.getMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT1, currentCommit.getParentSupplier().get());","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(TREE1, currentCommit.getTreeSupplier().get());","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void fetchCommitByHash_correctHash_correctCommit() {","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlReader versionControlReader \u003d new VersionControlReader(hashMethod, FETCH_OBJECT_DIR);","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Exact Hash used -\u003e Commit fetched successfully","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"        String commitHash \u003d \"1d83638a25901e76c8e3882afca2347f8352cd06\";","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d FETCH_OBJECT_DIR.resolve(Paths.get(commitHash));","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(filepath.toFile().exists()); // Check if file exists first","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit actualCommit \u003d versionControlReader.fetchCommitByHash(commitHash);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT1, actualCommit);","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"        // fiveCharHash used -\u003e Commit fetched successfully","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"        commitHash \u003d commitHash.substring(0, 5);","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"        actualCommit \u003d versionControlReader.fetchCommitByHash(commitHash);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT1, actualCommit);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void fetchCommitByHash_missingHash_nullCommit() {","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlReader versionControlReader \u003d new VersionControlReader(hashMethod, FETCH_OBJECT_DIR);","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"        // given hash not present in disk -\u003e Commit.NULL returned","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"        String commitHash \u003d \"MMISSING\";","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d FETCH_OBJECT_DIR.resolve(Paths.get(commitHash));","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(filepath.toFile().exists()); // Check if file doesn\u0027t exist first","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(versionControlReader.fetchCommitByHash(commitHash).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void fetchCommitByHash_corruptedCommit_nullCommit() {","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlReader versionControlReader \u003d new VersionControlReader(hashMethod, FETCH_OBJECT_DIR);","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"Amadeus-Winarto"},"content":"        // given corrupt commit file -\u003e Commit.NULL returned","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"Amadeus-Winarto"},"content":"        String commitHash \u003d \"corruptedCommit\";","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d FETCH_OBJECT_DIR.resolve(Paths.get(commitHash));","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(filepath.toFile().exists()); // Check if file exists first","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(versionControlReader.fetchCommitByHash(commitHash).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void createNewTree_blobsPresent_correctlyDuplicated() {","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlReader versionControlReader \u003d new VersionControlReader(hashMethod, testingDir);","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Blobs present -\u003e Correctly Duplicated","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"Amadeus-Winarto"},"content":"        String blobName \u003d \"HEAD\";","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path blobPath \u003d FETCH_OBJECT_DIR.resolve(Paths.get(blobName));","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(blobPath.toFile().exists()); // Check if blob exists first","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree actualTree \u003d versionControlReader.createNewTree(blobPath);","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"Amadeus-Winarto"},"content":"        HashMap\u003cString, String\u003e hashMap \u003d actualTree.getHashMap();","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"Amadeus-Winarto"},"content":"        String[] keySet \u003d hashMap.keySet().toArray(new String[0]);","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"Amadeus-Winarto"},"content":"        for (String vcName : keySet) {","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"Amadeus-Winarto"},"content":"            String realName \u003d hashMap.get(vcName);","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"Amadeus-Winarto"},"content":"            Path actualPath \u003d Paths.get(realName);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertTrue(actualPath.toFile().exists());","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"Amadeus-Winarto"},"content":"            Path vcPath \u003d Paths.get(vcName);","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertTrue(vcPath.toFile().exists());","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"Amadeus-Winarto"},"content":"            String actualHash \u003d assertDoesNotThrow(() -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"Amadeus-Winarto"},"content":"                    hashGenerator.generateHashFromFile(actualPath));","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"Amadeus-Winarto"},"content":"            String vcHash \u003d assertDoesNotThrow(() -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"Amadeus-Winarto"},"content":"                    hashGenerator.generateHashFromFile(actualPath));","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertEquals(actualHash, vcHash);","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void createNewTree_blobsAbsent_nullTree() {","lastModifiedDate":"2021-11-01"},{"lineNumber":156,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlReader versionControlReader \u003d new VersionControlReader(hashMethod, testingDir);","lastModifiedDate":"2021-11-01"},{"lineNumber":157,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"Amadeus-Winarto"},"content":"        String blobName \u003d \"TAIL\";","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path blobPath \u003d FETCH_OBJECT_DIR.resolve(Paths.get(blobName));","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(blobPath.toFile().exists()); // Check if blob does not exist","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree actualTree \u003d versionControlReader.createNewTree(blobPath);","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(actualTree.isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void fetchTreeByHash_correctHash_correctTree() {","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlReader versionControlReader \u003d new VersionControlReader(hashMethod, FETCH_OBJECT_DIR);","lastModifiedDate":"2021-11-01"},{"lineNumber":169,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Exact Hash used -\u003e Commit fetched successfully","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"Amadeus-Winarto"},"content":"        String treeHash \u003d \"9d34f3e9ada5ae7cc5c063b905a5d7893f792497\";","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d FETCH_OBJECT_DIR.resolve(Paths.get(treeHash));","lastModifiedDate":"2021-11-01"},{"lineNumber":173,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(filepath.toFile().exists()); // Check if file exists first","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree actualTree \u003d versionControlReader.fetchTreeByHash(treeHash);","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(TREE1.getHash(), actualTree.getHash());","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"Amadeus-Winarto"},"content":"        // fiveCharHash used -\u003e Commit fetched successfully","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"Amadeus-Winarto"},"content":"        treeHash \u003d treeHash.substring(0, 5);","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"Amadeus-Winarto"},"content":"        actualTree \u003d versionControlReader.fetchTreeByHash(treeHash);","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(TREE1.getHash(), actualTree.getHash());","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":183,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":185,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void fetchTreeByHash_missingHash_nullTree() {","lastModifiedDate":"2021-11-01"},{"lineNumber":186,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlReader versionControlReader \u003d new VersionControlReader(hashMethod, FETCH_OBJECT_DIR);","lastModifiedDate":"2021-11-01"},{"lineNumber":187,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"Amadeus-Winarto"},"content":"        String treeHash \u003d \"MISSING\";","lastModifiedDate":"2021-11-01"},{"lineNumber":189,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d FETCH_OBJECT_DIR.resolve(Paths.get(treeHash));","lastModifiedDate":"2021-11-01"},{"lineNumber":190,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(filepath.toFile().exists()); // Check if file doesn\u0027t exist first","lastModifiedDate":"2021-11-01"},{"lineNumber":191,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(versionControlReader.fetchTreeByHash(treeHash).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":192,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":193,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":194,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":195,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void fetchTreeByHash_corruptedTree_nullTree() {","lastModifiedDate":"2021-11-01"},{"lineNumber":196,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlReader versionControlReader \u003d new VersionControlReader(hashMethod, FETCH_OBJECT_DIR);","lastModifiedDate":"2021-11-01"},{"lineNumber":197,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":198,"author":{"gitId":"Amadeus-Winarto"},"content":"        // given corrupt commit file -\u003e Tree.NULL returned","lastModifiedDate":"2021-11-01"},{"lineNumber":199,"author":{"gitId":"Amadeus-Winarto"},"content":"        String treeHash \u003d \"corruptedCommit\";","lastModifiedDate":"2021-11-01"},{"lineNumber":200,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d FETCH_OBJECT_DIR.resolve(Paths.get(treeHash));","lastModifiedDate":"2021-11-01"},{"lineNumber":201,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(filepath.toFile().exists()); // Check if file exists first","lastModifiedDate":"2021-11-01"},{"lineNumber":202,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(versionControlReader.fetchTreeByHash(treeHash).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":203,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void createLabel() {","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlReader versionControlReader \u003d new VersionControlReader(hashMethod, testingDir);","lastModifiedDate":"2021-11-01"},{"lineNumber":208,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"Amadeus-Winarto"},"content":"        // null passed in -\u003e exception thrown","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e versionControlReader.createNewLabel(\"NULL\", null));","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e versionControlReader.createNewLabel(null, null));","lastModifiedDate":"2021-11-01"},{"lineNumber":212,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Commit1 passed in -\u003e Commit1 labelled","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label labelledCommit \u003d versionControlReader.createNewLabel(\"temp\", COMMIT1);","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(labelledCommit.getCommitSupplier().get(), COMMIT1);","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Commit.NULL passed in -\u003e Commit.NULL labelled","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label labelledNullCommit \u003d versionControlReader.createNewLabel(\"temp\", Commit.emptyCommit());","lastModifiedDate":"2021-11-01"},{"lineNumber":219,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(labelledNullCommit.getCommitSupplier().get().isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":220,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void fetchLabelByName_labelPresent_correctCommit() {","lastModifiedDate":"2021-11-01"},{"lineNumber":224,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlReader versionControlReader \u003d new VersionControlReader(hashMethod, FETCH_OBJECT_DIR);","lastModifiedDate":"2021-11-01"},{"lineNumber":225,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"Amadeus-Winarto"},"content":"        String labelName \u003d \"HEAD\";","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d FETCH_OBJECT_DIR.resolve(Paths.get(labelName));","lastModifiedDate":"2021-11-01"},{"lineNumber":228,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(filepath.toFile().exists()); // Check if file exists first","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Correct Name given -\u003e Label fetched successfully","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label actualLabel \u003d versionControlReader.fetchLabelByName(labelName);","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT1, actualLabel.getCommitSupplier().get());","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":234,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":235,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":236,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void fetchLabelByName_corruptedLabel_nullCommit() {","lastModifiedDate":"2021-11-01"},{"lineNumber":237,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlReader versionControlReader \u003d new VersionControlReader(hashMethod, FETCH_OBJECT_DIR);","lastModifiedDate":"2021-11-01"},{"lineNumber":238,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":239,"author":{"gitId":"Amadeus-Winarto"},"content":"        String labelName \u003d \"corruptedHead\";","lastModifiedDate":"2021-11-01"},{"lineNumber":240,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d FETCH_OBJECT_DIR.resolve(Paths.get(labelName));","lastModifiedDate":"2021-11-01"},{"lineNumber":241,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(filepath.toFile().exists()); // Check if file exists first","lastModifiedDate":"2021-11-01"},{"lineNumber":242,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":243,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(versionControlReader.fetchLabelByName(labelName).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":244,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":245,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":246,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":247,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void fetchLabelByName_missingLabel_nullCommit() {","lastModifiedDate":"2021-11-01"},{"lineNumber":248,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlReader versionControlReader \u003d new VersionControlReader(hashMethod, FETCH_OBJECT_DIR);","lastModifiedDate":"2021-11-01"},{"lineNumber":249,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":250,"author":{"gitId":"Amadeus-Winarto"},"content":"        String labelName \u003d \"MISSING\";","lastModifiedDate":"2021-11-01"},{"lineNumber":251,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d FETCH_OBJECT_DIR.resolve(Paths.get(labelName));","lastModifiedDate":"2021-11-01"},{"lineNumber":252,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(filepath.toFile().exists()); // Check if file doesn\u0027t exist first","lastModifiedDate":"2021-11-01"},{"lineNumber":253,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(versionControlReader.fetchLabelByName(labelName).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":255,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Amadeus-Winarto":256}},{"path":"src/test/java/seedu/academydirectory/testutil/AcademyDirectoryBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":" * A utility class to help with building AcademyDirectory objects.","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":" *     {@code AcademyDirectory ab \u003d new AcademyDirectoryBuilder().withStudent(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"public class AcademyDirectoryBuilder {","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"jianoway"},"content":"    private AcademyDirectory academyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"jianoway"},"content":"    public AcademyDirectoryBuilder() {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"jianoway"},"content":"        academyDirectory \u003d new AcademyDirectory();","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"jianoway"},"content":"    public AcademyDirectoryBuilder(AcademyDirectory academyDirectory) {","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"jianoway"},"content":"        this.academyDirectory \u003d academyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"     * Adds a new {@code Student} to the {@code AcademyDirectory} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"    public AcademyDirectoryBuilder withStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"        academyDirectory.addStudent(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"jianoway"},"content":"    public AcademyDirectory build() {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"        return academyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"jianoway"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"phuccuongngo99":6,"jianoway":28}},{"path":"src/test/java/seedu/academydirectory/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"-":33,"jianoway":1}},{"path":"src/test/java/seedu/academydirectory/testutil/CommitBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.testutil;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":" * A utility class to help with building Commit objects","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"public class CommitBuilder {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String DEFAULT_HASH \u003d \"\";","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String DEFAULT_AUTHOR \u003d \"\";","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final Date DEFAULT_DATE \u003d assertDoesNotThrow(() -\u003e new SimpleDateFormat(\"dd/MM/yyyy\")","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"            .parse(\"31/12/1998\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final String DEFAULT_MESSAGE \u003d \"Hello, World!\";","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final Supplier\u003cCommit\u003e DEFAULT_PARENT_SUPPLIER \u003d Commit::emptyCommit;","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final Supplier\u003cTree\u003e DEFAULT_TREE_SUPPLIER \u003d Tree::emptyTree;","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    private String hash;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    private String author;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Date date;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    private String message;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Supplier\u003cCommit\u003e parentSupplier;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"    private Supplier\u003cTree\u003e treeSupplier;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Creates a {@Code CommitController} with the default details","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommitBuilder() {","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        hash \u003d DEFAULT_HASH;","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        author \u003d DEFAULT_AUTHOR;","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        date \u003d DEFAULT_DATE;","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        message \u003d DEFAULT_MESSAGE;","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        parentSupplier \u003d DEFAULT_PARENT_SUPPLIER;","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        treeSupplier \u003d DEFAULT_TREE_SUPPLIER;","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Initializes the CommitController with the data of {@code commitToCopy}.","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommitBuilder(Commit commitToCopy) {","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        hash \u003d commitToCopy.getHash();","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        author \u003d commitToCopy.getAuthor();","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        date \u003d commitToCopy.getDate();","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"        message \u003d commitToCopy.getMessage();","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"        parentSupplier \u003d commitToCopy.getParentSupplier();","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"        treeSupplier \u003d commitToCopy.getTreeSupplier();","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Sets the {@code hash} of the {@code Commit} that we are building.","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommitBuilder withHash(String hash) {","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.hash \u003d hash;","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this;","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Sets the {@code author} of the {@code Commit} that we are building.","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommitBuilder withAuthor(String author) {","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.author \u003d author;","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this;","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Sets the {@code date} of the {@code Commit} that we are building.","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommitBuilder withDate(Date date) {","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this;","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Sets the {@code message} of the {@code Commit} that we are building.","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommitBuilder withMessage(String message) {","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this;","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Sets the {@code parentSupplier} of the {@code Commit} that we are building.","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommitBuilder withParentSupplier(Supplier\u003cCommit\u003e parentSupplier) {","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.parentSupplier \u003d parentSupplier;","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this;","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Sets the {@code treeSupplier} of the {@code Commit} that we are building.","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommitBuilder withTreeSupplier(Supplier\u003cTree\u003e treeSupplier) {","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.treeSupplier \u003d treeSupplier;","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"        return this;","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"     * Builds the Commit object for testing.","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Commit build() {","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"        return Commit.of(hash, author, date, message, parentSupplier, treeSupplier);","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Amadeus-Winarto":111}},{"path":"src/test/java/seedu/academydirectory/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"    private EditStudentDescriptor descriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"    public EditStudentDescriptorBuilder(EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"        this.descriptor \u003d new EditStudentDescriptor(descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor.setPhone(student.getPhone());","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor.setTelegram(student.getTelegram());","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"     * Sets the {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"     * Sets the {@code Phone} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"    public EditStudentDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"     * Sets the {@code Email} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"phuccuongngo99"},"content":"     * Sets the {@code Telegram} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"    public EditStudentDescriptorBuilder withTelegram(String telegram) {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor.setTelegram(new Telegram(telegram));","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"phuccuongngo99"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"    public EditStudentDescriptor build() {","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"        return descriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"phuccuongngo99":71}},{"path":"src/test/java/seedu/academydirectory/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":71,"jianoway":1}},{"path":"src/test/java/seedu/academydirectory/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"phuccuongngo99"},"content":"package seedu.academydirectory.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"cheweejia"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"phuccuongngo99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"cheweejia"},"content":"import seedu.academydirectory.model.student.Assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Attendance;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.Participation;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.student.StudioRecord;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"phuccuongngo99"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"public class StudentBuilder {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"    public static final String DEFAULT_TELEGRAM \u003d \"@amy\";","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"jianoway"},"content":"    public static final int DEFAULT_NUMBER_OF_STUDIO_SESSIONS \u003d 12;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"    private Name name;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"    private Phone phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"    private Email email;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"    private Telegram telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"jianoway"},"content":"    private StudioRecord studioRecord;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"cheweejia"},"content":"    private Assessment assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"    public StudentBuilder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"phuccuongngo99"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"phuccuongngo99"},"content":"        telegram \u003d new Telegram(DEFAULT_TELEGRAM);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"jianoway"},"content":"        studioRecord \u003d new StudioRecord(DEFAULT_NUMBER_OF_STUDIO_SESSIONS);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"cheweejia"},"content":"        assessment \u003d new Assessment();","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"phuccuongngo99"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"phuccuongngo99"},"content":"        phone \u003d studentToCopy.getPhone();","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"phuccuongngo99"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"phuccuongngo99"},"content":"        telegram \u003d studentToCopy.getTelegram();","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"phuccuongngo99"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"jianoway"},"content":"        studioRecord \u003d studentToCopy.getStudioRecord();","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"cheweejia"},"content":"        assessment \u003d studentToCopy.getAssessment();","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"phuccuongngo99"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"phuccuongngo99"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"phuccuongngo99"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"phuccuongngo99"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"phuccuongngo99"},"content":"    public StudentBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"phuccuongngo99"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"phuccuongngo99"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"phuccuongngo99"},"content":"     * Sets the {@code Phone} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"phuccuongngo99"},"content":"    public StudentBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"phuccuongngo99"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"phuccuongngo99"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"jianoway"},"content":"     * Sets the {@code Attendance} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"jianoway"},"content":"    public StudentBuilder withAttendance(boolean[] boolArr) {","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"jianoway"},"content":"        Integer sessionCount \u003d studioRecord.getAttendance().getSessionCount();","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"jianoway"},"content":"        Attendance newAttendance \u003d new Attendance(sessionCount);","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"jianoway"},"content":"        newAttendance.setAttendance(boolArr);","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"jianoway"},"content":"        this.studioRecord \u003d new StudioRecord(newAttendance, studioRecord.getParticipation());","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"jianoway"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"jianoway"},"content":"     * Sets the {@code Participation} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"jianoway"},"content":"    public StudentBuilder withParticipation(int[] intArr) {","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"jianoway"},"content":"        Integer sessionCount \u003d studioRecord.getAttendance().getSessionCount();","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"jianoway"},"content":"        Participation newParticipation \u003d new Participation(sessionCount);","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"jianoway"},"content":"        newParticipation.setParticipation(intArr);","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"jianoway"},"content":"        this.studioRecord \u003d new StudioRecord(studioRecord.getAttendance(), newParticipation);","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"jianoway"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"jianoway"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"jianoway"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"phuccuongngo99"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"phuccuongngo99"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"phuccuongngo99"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"phuccuongngo99"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"phuccuongngo99"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"phuccuongngo99"},"content":"     * Sets the {@code Telegram} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"phuccuongngo99"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"phuccuongngo99"},"content":"    public StudentBuilder withTelegram(String telegram) {","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"phuccuongngo99"},"content":"        this.telegram \u003d new Telegram(telegram);","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"phuccuongngo99"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"cheweejia"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"cheweejia"},"content":"     * Sets the {@code Assessment} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"cheweejia"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"cheweejia"},"content":"    public StudentBuilder withAssessment(HashMap\u003cString, Integer\u003e assessment) {","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"cheweejia"},"content":"        this.assessment \u003d new Assessment(assessment);","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"cheweejia"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"cheweejia"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"cheweejia"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"jianoway"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"jianoway"},"content":"     * Builds the Student object for testing.","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"jianoway"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"phuccuongngo99"},"content":"    public Student build() {","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"phuccuongngo99"},"content":"        Student newStudent \u003d new Student(name, phone, email, telegram, tags);","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"jianoway"},"content":"        newStudent.setAttendance(studioRecord.getAttendance());","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"cheweejia"},"content":"        newStudent.setAssessment(assessment);","lastModifiedDate":"2021-10-15"},{"lineNumber":141,"author":{"gitId":"jianoway"},"content":"        return newStudent;","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"phuccuongngo99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"phuccuongngo99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"phuccuongngo99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"phuccuongngo99":96,"cheweejia":14,"jianoway":34}},{"path":"src/test/java/seedu/academydirectory/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.logic.commands.AddCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"phuccuongngo99"},"content":" * A utility class for Student.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"phuccuongngo99"},"content":"public class StudentUtil {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"phuccuongngo99"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"        sb.append(PREFIX_NAME + student.getName().fullName + \" \");","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        sb.append(PREFIX_PHONE + student.getPhone().toString() + \" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"phuccuongngo99"},"content":"        sb.append(PREFIX_EMAIL + student.getEmail().value + \" \");","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"        sb.append(PREFIX_TELEGRAM + student.getTelegram().value + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"        student.getTags().stream().forEach(","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"    public static String getEditStudentDescriptorDetails(EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone).append(\" \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"        descriptor.getTelegram().ifPresent(telegram -\u003e sb.append(PREFIX_TELEGRAM).append(telegram.value).append(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"phuccuongngo99":17,"Amadeus-Winarto":2,"-":26,"jianoway":6}},{"path":"src/test/java/seedu/academydirectory/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.model.VersionedModel;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static Index getMidIndex(VersionedModel model) {","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static Index getLastIndex(VersionedModel model) {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static Student getStudent(VersionedModel model, Index index) {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"phuccuongngo99":7,"Amadeus-Winarto":4,"-":42,"jianoway":2}},{"path":"src/test/java/seedu/academydirectory/testutil/TypicalCommits.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.testutil;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalTrees.TREE1;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":" * A utility class containing a list of {@code Commit} objects to be used in tests.","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"public class TypicalCommits {","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Date date;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    static {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"        Date date1;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"            date1 \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"31/12/1998\");","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"            date1 \u003d null;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        date \u003d date1;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    // Standalone Commit with no child","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final Commit COMMIT1 \u003d new CommitBuilder()","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withHash(\"1d83638a25901e76c8e3882afca2347f8352cd06\")","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withAuthor(\"Alice Pauline\")","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withDate(date)","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withMessage(\"Hello, World!\")","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withParentSupplier(Commit::emptyCommit)","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withTreeSupplier(Tree::emptyTree)","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"            .build();","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"    // Commit Chain: Tree form","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final Commit COMMIT2 \u003d new CommitBuilder()","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withHash(\"1\")","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withAuthor(\"Alice\")","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withDate(date)","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withMessage(\"This is Initial Commit\")","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withParentSupplier(Commit::emptyCommit)","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withTreeSupplier(Tree::emptyTree)","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"            .build();","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final Commit COMMIT3 \u003d new CommitBuilder()","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withHash(\"2\")","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withAuthor(\"Alice\")","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withDate(date)","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withMessage(\"This is Second Commit\")","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withParentSupplier(() -\u003e COMMIT2)","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withTreeSupplier(Tree::emptyTree)","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"            .build();","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final Commit COMMIT4 \u003d new CommitBuilder()","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withHash(\"3\")","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withAuthor(\"Alice\")","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withDate(date)","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withMessage(\"This is third Commit\")","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withParentSupplier(() -\u003e COMMIT2)","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withTreeSupplier(Tree::emptyTree)","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"            .build();","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final Commit COMMIT5 \u003d new CommitBuilder()","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withHash(\"4\")","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withAuthor(\"Alice\")","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withDate(date)","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withMessage(\"This is fourth Commit\")","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withParentSupplier(() -\u003e COMMIT4)","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withTreeSupplier(Tree::emptyTree)","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"            .build();","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"    // Commit Chain: LinkedList form","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final Commit COMMIT6 \u003d new CommitBuilder()","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withHash(\"6\")","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withAuthor(\"Bob\")","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withDate(date)","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withMessage(\"This is root of linked list\")","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withParentSupplier(Commit::emptyCommit)","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withTreeSupplier(Tree::emptyTree)","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"            .build();","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final Commit COMMIT7 \u003d new CommitBuilder()","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withHash(\"7\")","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withAuthor(\"Bob\")","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withDate(date)","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withMessage(\"This is first element of linked list\")","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withParentSupplier(() -\u003e COMMIT6)","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withTreeSupplier(Tree::emptyTree)","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"            .build();","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final Commit COMMIT8 \u003d new CommitBuilder()","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withHash(\"8\")","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withAuthor(\"Bob\")","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withDate(date)","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withMessage(\"This is second element of linked list\")","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withParentSupplier(() -\u003e COMMIT7)","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withTreeSupplier(Tree::emptyTree)","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"            .build();","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final Commit COMMIT9 \u003d new CommitBuilder()","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withHash(\"9\")","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withAuthor(\"Bob\")","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withDate(date)","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withMessage(\"This is second element of linked list\")","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withParentSupplier(() -\u003e COMMIT2)","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"Amadeus-Winarto"},"content":"            .withTreeSupplier(() -\u003e TREE1)","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"Amadeus-Winarto"},"content":"            .build();","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static List\u003cCommit\u003e getTypicalCommits() {","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new ArrayList\u003c\u003e(List.of(COMMIT1, COMMIT3, COMMIT9));","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static List\u003cCommit\u003e getTypicalCommitList() {","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new ArrayList\u003c\u003e(List.of(COMMIT8, COMMIT7, COMMIT6));","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static List\u003cCommit\u003e getTypicalCommitTree() {","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new ArrayList\u003c\u003e(List.of(COMMIT5, COMMIT2));","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static List\u003cLabel\u003e getTypicalLabels() {","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"Amadeus-Winarto"},"content":"        return getTypicalCommits().stream()","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"Amadeus-Winarto"},"content":"                .map(x -\u003e Label.of(\"Label\" + x.getHash(), \"Label\" + x.getHash(), () -\u003e x))","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"Amadeus-Winarto"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static List\u003cLabel\u003e getTypicalLabelList() {","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"Amadeus-Winarto"},"content":"        return getTypicalCommitList().stream()","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"Amadeus-Winarto"},"content":"                .map(x -\u003e Label.of(\"Label\" + x.getHash(), \"Label\" + x.getHash(), () -\u003e x))","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"Amadeus-Winarto"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static List\u003cLabel\u003e getTypicalLabelTree() {","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"Amadeus-Winarto"},"content":"        return getTypicalCommitTree().stream()","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"Amadeus-Winarto"},"content":"                .map(x -\u003e Label.of(\"Label\" + x.getHash(), \"Label\" + x.getHash(), () -\u003e x))","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"Amadeus-Winarto"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Amadeus-Winarto":146}},{"path":"src/test/java/seedu/academydirectory/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.commons.core.index.Index;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Index INDEX_FIRST_STUDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Index INDEX_SECOND_STUDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Index INDEX_THIRD_STUDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"phuccuongngo99":3,"-":7,"jianoway":2}},{"path":"src/test/java/seedu/academydirectory/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TAG_RECURSION;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TAG_STREAMS;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"phuccuongngo99"},"content":"import static seedu.academydirectory.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.model.AcademyDirectory;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"phuccuongngo99"},"content":"import seedu.academydirectory.model.student.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"phuccuongngo99"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"phuccuongngo99"},"content":"public class TypicalStudents {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"phuccuongngo99"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"phuccuongngo99"},"content":"            .withTelegram(\"@alice\").withPhone(\"94351253\")","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"jianoway"},"content":"            .withTags(\"recursion\").build();","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"phuccuongngo99"},"content":"            .withEmail(\"johnd@example.com\").withTelegram(\"@johnd\").withPhone(\"98765432\")","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"jianoway"},"content":"            .withTags(\"wishfulThinking\", \"functions\").build();","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"phuccuongngo99"},"content":"            .withEmail(\"heinz@example.com\").withTelegram(\"@heinz\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"phuccuongngo99"},"content":"            .withEmail(\"cornelia@example.com\").withTelegram(\"@cornelia\")","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"jianoway"},"content":"            .withTags(\"higherOrderFunctions\").build();","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"phuccuongngo99"},"content":"            .withEmail(\"werner@example.com\").withTelegram(\"@werner\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"phuccuongngo99"},"content":"            .withEmail(\"lydia@example.com\").withTelegram(\"@lydia\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"phuccuongngo99"},"content":"            .withEmail(\"anna@example.com\").withTelegram(\"@anna\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"phuccuongngo99"},"content":"            .withEmail(\"stefan@example.com\").withTelegram(\"@stefan\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"phuccuongngo99"},"content":"            .withEmail(\"hans@example.com\").withTelegram(\"@hans\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"phuccuongngo99"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"phuccuongngo99"},"content":"            .withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"jianoway"},"content":"            .withTags(VALID_TAG_RECURSION).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"phuccuongngo99"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"phuccuongngo99"},"content":"            .withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"jianoway"},"content":"            .withTags(VALID_TAG_STREAMS, VALID_TAG_RECURSION)","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"phuccuongngo99"},"content":"    private TypicalStudents() {} // prevents instantiation","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"phuccuongngo99"},"content":"     * Returns an {@code AcademyDirectory} with all the typical students.","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"jianoway"},"content":"    public static AcademyDirectory getTypicalAcademyDirectory() {","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"jianoway"},"content":"        AcademyDirectory ad \u003d new AcademyDirectory();","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"phuccuongngo99"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"jianoway"},"content":"            ad.addStudent(student);","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"jianoway"},"content":"        return ad;","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":75,"author":{"gitId":"phuccuongngo99"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"phuccuongngo99":33,"-":26,"jianoway":19}},{"path":"src/test/java/seedu/academydirectory/testutil/TypicalTrees.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.testutil;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":" * A utility class containing a list of {@code Tree} objects to be used in tests.","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"public class TypicalTrees {","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final Tree TREE1 \u003d Tree.of(\"9d34f3e9ada5ae7cc5c063b905a5d7893f792497\", \"hello.world\", \"world.hello\");","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static final Tree TREE2 \u003d Tree.of(\"123456789ThisIsFun!\",","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"            List.of(\"Hello.png\", \"Hello World.java\"),","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"            List.of(\"world_hello\", \"world_hello?\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static List\u003cTree\u003e getTypicalTrees() {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new ArrayList\u003c\u003e(List.of(TREE1, TREE2));","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Amadeus-Winarto":20}},{"path":"src/test/java/seedu/academydirectory/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":34,"jianoway":1}},{"path":"src/test/java/seedu/academydirectory/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianoway"},"content":"package seedu.academydirectory.ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jianoway"},"content":"import static seedu.academydirectory.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"jianoway"},"content":"import seedu.academydirectory.MainApp;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":111,"jianoway":3}},{"path":"src/test/java/seedu/academydirectory/ui/creator/CreatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package seedu.academydirectory.ui.creator;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public class CreatorTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"hmanhduc2k":4}},{"path":"src/test/java/seedu/academydirectory/versioncontrol/objects/CommitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.objects;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT1;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT2;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT3;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT4;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT5;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.testutil.CommitBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.testutil.TypicalCommits;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.utils.HashGenerator;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.utils.HashMethod;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"public class CommitTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void equals() {","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit commit1Copy \u003d new CommitBuilder(COMMIT1).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT1, commit1Copy);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT1, COMMIT1);","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(COMMIT1, null);","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(Commit.emptyCommit(), Commit.emptyCommit());","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(COMMIT1, Commit.emptyCommit());","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        // same hash, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit editedCommitSameHash \u003d new CommitBuilder(COMMIT1)","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"                .withAuthor(COMMIT1.getAuthor() + \"Hi\")","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"                .withDate(new Date())","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"                .withMessage(COMMIT1.getMessage() + \"Hi\")","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"                .withParentSupplier(() -\u003e COMMIT1)","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"                .withTreeSupplier(() -\u003e Tree.of(\"testing\", \"1\", \"2\"))","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"                .build();","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT1, editedCommitSameHash);","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"        // different hash, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"CommitStorageManagerTest\";","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d Paths.get(\"src\", \"test\", \"data\", \"VersionControlTest\", \"StorageManagerTest\", filename);","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"        String newHash \u003d assertDoesNotThrow(() -\u003e new HashGenerator(HashMethod.SHA1).generateHashFromFile(filepath));","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit editedCommitDiffHash \u003d new CommitBuilder(COMMIT1).withHash(newHash).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(COMMIT1, editedCommitDiffHash);","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void isEmpty() {","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"        // null commits -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(COMMIT1.isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"        // null commits and null commits -\u003e return true","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(Commit.emptyCommit().isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void getHistory() {","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit rootCommit \u003d TypicalCommits.COMMIT2;","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit childCommit \u003d TypicalCommits.COMMIT3;","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"        // With no end point","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit[] actualCommitHistory \u003d childCommit.getHistory().toArray(Commit[]::new);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit[] expectedCommitHistory \u003d new Commit[]{childCommit, rootCommit};","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertArrayEquals(expectedCommitHistory, actualCommitHistory);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"        // With endpoint","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"        actualCommitHistory \u003d childCommit.getHistory(rootCommit).toArray(Commit[]::new);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"        expectedCommitHistory \u003d new Commit[]{childCommit};","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertArrayEquals(expectedCommitHistory, actualCommitHistory);","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Same Commit -\u003e Empty array","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"        actualCommitHistory \u003d childCommit.getHistory(childCommit).toArray(Commit[]::new);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(0, actualCommitHistory.length);","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"        actualCommitHistory \u003d rootCommit.getHistory(rootCommit).toArray(Commit[]::new);","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(0, actualCommitHistory.length);","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Start at Commit.Null -\u003e Empty array","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"        actualCommitHistory \u003d Commit.emptyCommit().getHistory(childCommit).toArray(Commit[]::new);","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(0, actualCommitHistory.length);","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void findLca() {","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"        // same commits","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT2, COMMIT2.findLca(COMMIT2));","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"        // LCA to Null commit is Null Commit","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(COMMIT5.findLca(Commit.emptyCommit()).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(Commit.emptyCommit().findLca(COMMIT5).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"        // start with same depth","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit leftChildCommit \u003d TypicalCommits.COMMIT3;","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit rightChildCommit \u003d COMMIT4;","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT2, leftChildCommit.findLca(rightChildCommit));","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"Amadeus-Winarto"},"content":"        // start with different depth","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"Amadeus-Winarto"},"content":"        rightChildCommit \u003d TypicalCommits.COMMIT5;","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT2, leftChildCommit.findLca(rightChildCommit));","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"Amadeus-Winarto"},"content":"        leftChildCommit \u003d TypicalCommits.COMMIT5;","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"Amadeus-Winarto"},"content":"        rightChildCommit \u003d TypicalCommits.COMMIT3;","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT2, leftChildCommit.findLca(rightChildCommit));","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void getHighestAncestor() {","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"Amadeus-Winarto"},"content":"        // No ancestor in range -\u003e Commit.NULL","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(COMMIT2.getHighestAncestor(COMMIT2).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"Amadeus-Winarto"},"content":"        // No nodes between start Commit and endExclusive -\u003e return start Commit","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT3, COMMIT3.getHighestAncestor(COMMIT2));","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT4, COMMIT4.getHighestAncestor(COMMIT2));","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Return highest ancestor","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(COMMIT4, COMMIT5.getHighestAncestor(COMMIT2));","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Amadeus-Winarto":133}},{"path":"src/test/java/seedu/academydirectory/versioncontrol/objects/TreeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.objects;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalTrees.TREE1;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalTrees.TREE2;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.commons.util.FileUtil;","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"public class TreeTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    @TempDir","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Path tempPath;","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void equals() {","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree tree1Copy \u003d Tree.of(TREE1.getHash(), \"hello.world\", \"world.hello\");","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(TREE1, tree1Copy);","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(TREE1, TREE1);","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(TREE2, TREE2);","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        // diff object -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(TREE1, TREE2);","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(TREE1, null);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(TREE2, null);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        // same hash, all other attributes different -\u003e return true","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree editedTree1SameHash \u003d Tree.of(TREE1.getHash(), \"Bob\", \"TheBuilder\");","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree editedTree2SameHash \u003d Tree.of(TREE2.getHash(),","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"                List.of(\"BOB.png\", \"CAT.java\"),","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"                List.of(\"DOG\", \"Hello?\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(TREE1, editedTree1SameHash);","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(TREE2, editedTree2SameHash);","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        // different hash, all other attributes same -\u003e return false","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree editedTree1DiffHash \u003d Tree.of(\"Hello?\", \"hello.world\", \"world.hello\");","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree editedTree2DiffHash \u003d Tree.of(\"World?\",","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"                List.of(\"Hello.png\", \"Hello World.java\"),","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"                List.of(\"world_hello\", \"world_hello?\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(TREE1, editedTree1DiffHash);","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(TREE2, editedTree2DiffHash);","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        // null commits -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(TREE1, Tree.emptyTree());","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertNotEquals(TREE2, Tree.emptyTree());","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"        // null commits and null commits -\u003e return true","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(Tree.emptyTree(), Tree.emptyTree());","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void constructor() {","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Standard inputs","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e Tree.of(\"Tests\", \"TESTS\", \"TESTS\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e Tree.of(\"Tests\", List.of(\"Test\"), List.of(\"Test\")));","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Different list sizes","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Tree.of(\"testing\", List.of(\"Test\"), List.of()));","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"        //Nulls","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tree.of(\"Tests\", List.of(\"Test\"), null));","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tree.of(\"Tests\", null, List.of(\"Test\")));","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tree.of(null, List.of(\"Test\"), List.of(\"Test\")));","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void regenerateBlobs_vcPathPresent_regeneratedCorrectly() {","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path vcFile \u003d tempPath.resolve(\"HelloWorld.txt\");","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e FileUtil.createIfMissing(vcFile));","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e FileUtil.writeToFile(vcFile, \"TESTING!\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path targetFile \u003d tempPath.resolve(\"WorldHello.txt\");","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree tree \u003d Tree.of(\"Testing\", targetFile.toString(), vcFile.toString());","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(tree::regenerateBlobs);","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(FileUtil.isFileExists(targetFile));","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"        byte[] expectedFile \u003d assertDoesNotThrow(() -\u003e Files.readAllBytes(vcFile));","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"        byte[] actualFile \u003d assertDoesNotThrow(() -\u003e Files.readAllBytes(targetFile));","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertArrayEquals(expectedFile, actualFile);","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void regenerateBlobs_targetPathPresent_overwriteTarget() {","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path vcFile \u003d tempPath.resolve(\"HelloWorld.txt\");","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e FileUtil.createIfMissing(vcFile));","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e FileUtil.writeToFile(vcFile, \"TESTING!\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path targetFile \u003d tempPath.resolve(\"WorldHello.txt\");","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e FileUtil.createIfMissing(targetFile));","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e FileUtil.writeToFile(targetFile, \"SomethingElse\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree tree \u003d Tree.of(\"Testing\", targetFile.toString(), vcFile.toString());","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(tree::regenerateBlobs);","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(FileUtil.isFileExists(targetFile));","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"Amadeus-Winarto"},"content":"        byte[] expectedFile \u003d assertDoesNotThrow(() -\u003e Files.readAllBytes(vcFile));","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"Amadeus-Winarto"},"content":"        byte[] actualFile \u003d assertDoesNotThrow(() -\u003e Files.readAllBytes(targetFile));","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertArrayEquals(expectedFile, actualFile);","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void regenerateBlobs_vcPathAbsent_ioException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path vcFile \u003d tempPath.resolve(\"HelloWorld.txt\");","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path targetFile \u003d tempPath.resolve(\"WorldHello.txt\");","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree tree \u003d Tree.of(\"Testing\", targetFile.toString(), vcFile.toString());","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(IOException.class, tree::regenerateBlobs);","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Amadeus-Winarto":125}},{"path":"src/test/java/seedu/academydirectory/versioncontrol/reader/CommitReaderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.reader;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"public class CommitReaderTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Path DATA_DIR \u003d Paths.get(\"src\", \"test\",","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"            \"data\", \"VersionControlTest\", \"StorageManagerTest\");","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final CommitReader commitReader \u003d new CommitReader(","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"            DATA_DIR,","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"            new TreeReader(DATA_DIR)","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    );","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_commitExist_correctCommit() {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"CommitStorageManagerTest\";","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(() -\u003e filepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit actualCommit \u003d assertDoesNotThrow(() -\u003e commitReader.read(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(filename, actualCommit.getHash());","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(\"amadeus\", actualCommit.getAuthor());","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(\"17/10/2021 14:13:39\", commitReader.getDateFormat().format(actualCommit.getDate()));","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(\"8e5abe51e5e68cc7e41e4d783529ec90506fdfa6\", actualCommit.getParentSupplier().get().getHash());","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(Tree.emptyTree(), actualCommit.getTreeSupplier().get());","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_commitCorrupted_nullCommit() {","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Completely cannot understand anything","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"TreeStorageManagerTest\";","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(() -\u003e filepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit actual \u003d assertDoesNotThrow(() -\u003e commitReader.read(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(actual.isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Can understand everything except for date","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        String wrongFilename \u003d \"WrongDateTest\";","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path wrongFilepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(() -\u003e wrongFilepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"        actual \u003d assertDoesNotThrow(() -\u003e commitReader.read(wrongFilename));","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(actual.isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_commitAbsent_nullCommit() {","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"IMMISSING!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(() -\u003e filepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit actual \u003d assertDoesNotThrow(() -\u003e commitReader.read(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(actual.isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":66}},{"path":"src/test/java/seedu/academydirectory/versioncontrol/reader/LabelReaderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.reader;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"public class LabelReaderTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Path DATA_DIR \u003d Paths.get(\"src\", \"test\",","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"            \"data\", \"VersionControlTest\", \"StorageManagerTest\");","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final LabelReader labelReader \u003d new LabelReader(","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"            DATA_DIR,","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"            new CommitReader(DATA_DIR, new TreeReader(DATA_DIR)));","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_labelExist_correctLabel() {","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Positive Test: Label present but labelled commit is absent","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"HeadLabel_NoRef\";","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path finalFilepath \u003d filepath;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(() -\u003e finalFilepath.toFile().exists());","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label label \u003d labelReader.read(filename);","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(label.isEmpty()); // Should not be Null, since reading is successful","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(label.getCommitSupplier().get().isEmpty()); // Commit is null, since labelled commit is missing","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Positive Test: Label present and labelled commit is present","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        filename \u003d \"HeadLabel_WithRef\";","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        filepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path finalFilepath1 \u003d filepath;","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(() -\u003e finalFilepath1.toFile().exists());","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        label \u003d labelReader.read(filename);","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(label.isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(\"CommitStorageManagerTest\", label.getCommitSupplier().get().getHash());","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_labelAbsent_nullLabel() {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"NOSUCHFILE\";","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d Paths.get(\"src\", \"test\", \"data\", \"VersionControlTest\", \"ParserTest\", filename);","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(() -\u003e filepath.toFile().exists());","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(labelReader.read(filename).isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_labelCorrupted_nullLabel() {","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"CommitStorageManagerTest\";","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(() -\u003e filepath.toFile().exists());","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(labelReader.read(filename).isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"Amadeus-Winarto":59}},{"path":"src/test/java/seedu/academydirectory/versioncontrol/reader/TreeReaderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.reader;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"public class TreeReaderTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Path DATA_DIR \u003d Paths.get(\"src\", \"test\",","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"            \"data\", \"VersionControlTest\", \"StorageManagerTest\");","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final TreeReader treeReader \u003d new TreeReader(DATA_DIR);","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_fileExist_correctTree() {","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Positive Test: File Exists and is Readable","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"TreeStorageManagerTest\";","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(() -\u003e filepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree actual \u003d assertDoesNotThrow(() -\u003e treeReader.read(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(filename, actual.getHash());","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        String key \u003d actual.getHashMap().keySet().toArray(String[]::new)[0];","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(\"922d4ff703f9b003da1962b1a2228371718e504a\", key);","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(\"academydirectory.json\", actual.getHashMap().get(key));","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_fileAbsent_nullTree() {","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Negative Test: File does not exist","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        String missingFilename \u003d \"I\u0027MMISSING\";","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path missingFilepath \u003d DATA_DIR.resolve(Paths.get(missingFilename));","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(() -\u003e missingFilepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree actual \u003d assertDoesNotThrow(() -\u003e treeReader.read(missingFilename));","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(Tree.emptyTree(), actual);","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":45}},{"path":"src/test/java/seedu/academydirectory/versioncontrol/reader/VersionControlGeneralReaderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.reader;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":" * Contains integration tests (interaction with the VersionControlObjectReaders).","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"public class VersionControlGeneralReaderTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Path DATA_DIR \u003d Paths.get(\"src\", \"test\",","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"            \"data\", \"VersionControlTest\", \"StorageManagerTest\");","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final VersionControlGeneralReader versionControlGeneralReader \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"            new VersionControlGeneralReader(DATA_DIR);","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    // Tests reading trees","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_treeExist_correctTree() {","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        TreeReader treeReader \u003d new TreeReader(DATA_DIR);","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Positive Test: File Exists and is Readable","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"TreeStorageManagerTest\";","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(() -\u003e filepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree expected \u003d assertDoesNotThrow(() -\u003e treeReader.read(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree actual \u003d assertDoesNotThrow(() -\u003e versionControlGeneralReader.readTree(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_treeAbsent_nullTree() {","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Negative Test: File does not exist","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        String missingFilename \u003d \"I\u0027MMISSING\";","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path missingFilepath \u003d DATA_DIR.resolve(Paths.get(missingFilename));","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(() -\u003e missingFilepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        Tree actual \u003d assertDoesNotThrow(() -\u003e versionControlGeneralReader.readTree(missingFilename));","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(Tree.emptyTree(), actual);","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"    // Tests reading commits","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_commitExist_correctCommit() {","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"        CommitReader commitReader \u003d new CommitReader(DATA_DIR, new TreeReader(DATA_DIR));","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"CommitStorageManagerTest\";","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(() -\u003e filepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit actualCommit \u003d assertDoesNotThrow(() -\u003e versionControlGeneralReader.readCommit(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit expectedCommit \u003d assertDoesNotThrow(() -\u003e commitReader.read(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(expectedCommit, actualCommit);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_commitCorrupted_nullCommit() {","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"TreeStorageManagerTest\";","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(() -\u003e filepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit actualCommit \u003d assertDoesNotThrow(() -\u003e versionControlGeneralReader.readCommit(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(actualCommit.isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_commitAbsent_nullCommit() {","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"IMMISSING\";","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(() -\u003e filepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"        Commit actualCommit \u003d assertDoesNotThrow(() -\u003e versionControlGeneralReader.readCommit(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(actualCommit.isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Amadeus-Winarto"},"content":"    // Tests reading labels","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_labelExist_correctLabel() {","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"Amadeus-Winarto"},"content":"        LabelReader labelReader \u003d new LabelReader(DATA_DIR,","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"Amadeus-Winarto"},"content":"                new CommitReader(DATA_DIR, new TreeReader(DATA_DIR)));","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Positive Test: Label present but labelled commit is absent","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"HeadLabel_NoRef\";","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path finalFilepath \u003d filepath;","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(() -\u003e finalFilepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label expectedLabel \u003d labelReader.read(filename);","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label actualLabel \u003d versionControlGeneralReader.readLabel(filename);","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(expectedLabel, actualLabel);","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(actualLabel.isEmpty()); // Should not be Null, since reading is successful","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(actualLabel.getCommitSupplier().get().isEmpty()); // Commit is null, since labelled commit is missing","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Positive Test: Label present and labelled commit is present","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"Amadeus-Winarto"},"content":"        filename \u003d \"HeadLabel_WithRef\";","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"Amadeus-Winarto"},"content":"        filepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path finalFilepath1 \u003d filepath;","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(() -\u003e finalFilepath1.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"Amadeus-Winarto"},"content":"        expectedLabel \u003d labelReader.read(filename);","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"Amadeus-Winarto"},"content":"        actualLabel \u003d versionControlGeneralReader.readLabel(filename);","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(expectedLabel, actualLabel);","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(actualLabel.isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(\"CommitStorageManagerTest\", actualLabel.getCommitSupplier().get().getHash());","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_labelAbsent_nullLabel() {","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"NOSUCHFILE\";","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d Paths.get(\"src\", \"test\", \"data\", \"VersionControlTest\", \"ParserTest\", filename);","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertFalse(() -\u003e filepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(versionControlGeneralReader.readLabel(filename).isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void read_labelCorrupted_nullLabel() {","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"Amadeus-Winarto"},"content":"        String filename \u003d \"CommitStorageManagerTest\";","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d DATA_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(() -\u003e filepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(versionControlGeneralReader.readLabel(filename).isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":133}},{"path":"src/test/java/seedu/academydirectory/versioncontrol/utils/HashComputerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.utils;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT1;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalTrees.TREE1;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.writer.VersionControlGeneralWriter;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"public class HashComputerTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final HashMethod[] supportedMethods \u003d {HashMethod.MD5, HashMethod.SHA1, HashMethod.SHA256};","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final String filename \u003d \"CommitStorageManagerTest\";","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Path filepath \u003d Paths.get(\"src\", \"test\", \"data\", \"VersionControlTest\",","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"            \"StorageManagerTest\", filename);","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    @TempDir","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Path tempPath;","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void generateHashFromFile() {","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        Arrays.stream(supportedMethods).forEach(method -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"            HashGenerator hashGenerator \u003d new HashGenerator(method);","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"            HashComputer hashComputer \u003d new HashComputer(method);","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"            String expectedHash \u003d assertDoesNotThrow(() -\u003e hashGenerator.generateHashFromFile(filepath));","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"            String actualHash \u003d assertDoesNotThrow(() -\u003e hashComputer.generateHashFromFile(filepath));","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertEquals(expectedHash, actualHash);","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void generateHashForObject() {","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        VersionControlGeneralWriter versionControlGeneralWriter \u003d new VersionControlGeneralWriter(tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        Arrays.stream(supportedMethods).forEach(method -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"            Commit commit \u003d COMMIT1;","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"            HashGenerator hashGenerator \u003d new HashGenerator(method);","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertDoesNotThrow(() -\u003e versionControlGeneralWriter.writeCommit(commit));","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"            String expectedHash \u003d assertDoesNotThrow(() -\u003e hashGenerator.generateHashFromFile(","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"                    tempPath.resolve(commit.getHash())));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"            HashComputer hashComputer \u003d new HashComputer(method);","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"            String actualHash \u003d assertDoesNotThrow(() -\u003e hashComputer.generateHashForObject(commit));","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertEquals(expectedHash, actualHash);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"            Tree tree \u003d TREE1;","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertDoesNotThrow(() -\u003e versionControlGeneralWriter.writeTree(tree));","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"            expectedHash \u003d assertDoesNotThrow(() -\u003e hashGenerator.generateHashFromFile(","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"                    tempPath.resolve(tree.getHash())));","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"            actualHash \u003d assertDoesNotThrow(() -\u003e hashComputer.generateHashForObject(tree));","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertEquals(expectedHash, actualHash);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":63}},{"path":"src/test/java/seedu/academydirectory/versioncontrol/utils/HashGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.utils;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"public class HashGeneratorTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final HashMap\u003cHashMethod, String\u003e expectedHash \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Path RELEVANT_DIR \u003d Paths.get(\"src\", \"test\",","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"            \"data\", \"VersionControlTest\", \"StorageManagerTest\");","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final String filename \u003d \"CommitStorageManagerTest\";","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    @TempDir","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Path tempPath;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void hashGenerator_correctHash() {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Guard clause since this integration test does not work in Windows CI due to lack of write permissions","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (!tempPath.toFile().setWritable(true)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"            return;","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path filepath \u003d RELEVANT_DIR.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path targetPath \u003d tempPath.resolve(Paths.get(filename));","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertTrue(() -\u003e filepath.toFile().exists());","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e Files.copy(filepath, targetPath, REPLACE_EXISTING));","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        expectedHash.put(HashMethod.MD5, \"20afe0516ba98868d4f0787cd13bc59d\");","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        expectedHash.put(HashMethod.SHA1, \"baaa1d6d49f3e50a7b1a02419f5c1889cd15b5aa\");","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        expectedHash.put(HashMethod.SHA256, \"c8c1f5e07b8792d4190e0fca97efb0e3160bb840af888aa9a080c68f3f549669\");","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        // MD5","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        HashMethod hashMethod \u003d HashMethod.MD5;","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        HashGenerator generator \u003d new HashGenerator(hashMethod);","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        HashGenerator finalGenerator1 \u003d generator;","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        String actualHash \u003d assertDoesNotThrow(() -\u003e finalGenerator1.generateHashFromFile(filepath));","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(expectedHash.get(hashMethod), actualHash);","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        // SHA1","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        hashMethod \u003d HashMethod.SHA1;","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        generator \u003d new HashGenerator(hashMethod);","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        HashGenerator finalGenerator2 \u003d generator;","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        actualHash \u003d assertDoesNotThrow(() -\u003e finalGenerator2.generateHashFromFile(filepath));","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(expectedHash.get(hashMethod), actualHash);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"        // SHA256","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"        hashMethod \u003d HashMethod.SHA256;","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"        generator \u003d new HashGenerator(hashMethod);","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        HashGenerator finalGenerator3 \u003d generator;","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"        actualHash \u003d assertDoesNotThrow(() -\u003e finalGenerator3.generateHashFromFile(filepath));","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(expectedHash.get(hashMethod), actualHash);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":61}},{"path":"src/test/java/seedu/academydirectory/versioncontrol/writer/CommitWriterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.writer;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT1;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT3;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT9;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"public class CommitWriterTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    @TempDir","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Path tempPath;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    private CommitWriter commitWriter;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void getWriteableFormat_positiveTests() {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        commitWriter \u003d new CommitWriter(tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Missing Parent and TreeRef","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cString\u003e writeableForm \u003d commitWriter.getWriteableFormat(COMMIT1);","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(\"Author: \" + System.getProperty(\"user.name\"), writeableForm.stream().limit(1)","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"                .reduce((a, b) -\u003e a + b).orElse(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(List.of(\"Date: 31/12/1998 00:00:00\", \"Message: Hello, World!\", \"Parent: null\",","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"                \"TreeRef: null\"), writeableForm.stream().skip(1).collect(Collectors.toList()));","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Parent present but missing TreeRef","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        writeableForm \u003d commitWriter.getWriteableFormat(COMMIT3);","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(\"Author: \" + System.getProperty(\"user.name\"), writeableForm.stream().limit(1)","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"                .reduce((a, b) -\u003e a + b).orElse(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(List.of(\"Date: 31/12/1998 00:00:00\", \"Message: This is Second Commit\",","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"                        \"Parent: 1\",","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"                        \"TreeRef: null\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"                writeableForm.stream().skip(1).collect(Collectors.toList()));","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Parent present and TreeRef present","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        writeableForm \u003d commitWriter.getWriteableFormat(COMMIT9);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(\"Author: \" + System.getProperty(\"user.name\"), writeableForm.stream().limit(1)","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"                .reduce((a, b) -\u003e a + b).orElse(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(List.of(\"Date: 31/12/1998 00:00:00\",","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"                        \"Message: This is second element of linked list\",","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"                        \"Parent: 1\",","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"                        \"TreeRef: 9d34f3e9ada5ae7cc5c063b905a5d7893f792497\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"                writeableForm.stream().skip(1).collect(Collectors.toList()));","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void getWriteableFormat_negativeTests() {","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"        commitWriter \u003d new CommitWriter(tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Negative Tests","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e commitWriter.getWriteableFormat(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e commitWriter.getWriteableFormat(","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"                Commit.emptyCommit()));","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void write() {","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"        commitWriter \u003d new CommitWriter(tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Correct Trees","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e commitWriter.write(COMMIT1.getHash(), COMMIT1));","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e commitWriter.write(COMMIT1.getHash(), COMMIT3));","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e commitWriter.write(COMMIT3.getHash(), COMMIT9));","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Negative Test: null","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e commitWriter.write(COMMIT1.getHash(), null));","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e commitWriter.write(null, COMMIT1));","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e commitWriter.write(null, Commit.emptyCommit()));","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e commitWriter.write(COMMIT1.getHash(), Commit.emptyCommit()));","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":82}},{"path":"src/test/java/seedu/academydirectory/versioncontrol/writer/LabelWriterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.writer;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT1;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT3;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"public class LabelWriterTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    @TempDir","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Path tempPath;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    private LabelWriter labelWriter;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void getWriteableFormat() {","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        labelWriter \u003d new LabelWriter(tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Correct Labels","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label label1 \u003d Label.of(\"Test1\", \"Test1\", () -\u003e COMMIT1);","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label label2 \u003d Label.of(\"Test2\", \"Test2\", () -\u003e COMMIT3);","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(List.of(\"ref: 1d83638a25901e76c8e3882afca2347f8352cd06\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"                labelWriter.getWriteableFormat(label1));","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(List.of(\"ref: 2\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"                labelWriter.getWriteableFormat(label2));","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Negative Test: null","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e labelWriter.getWriteableFormat(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e labelWriter.getWriteableFormat(Label.emptyLabel()));","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void write() {","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        labelWriter \u003d new LabelWriter(tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Correct Labels","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label label1 \u003d Label.of(\"Test1\", \"Test1\", () -\u003e COMMIT1);","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label label2 \u003d Label.of(\"Test2\", \"Test2\", () -\u003e COMMIT3);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e labelWriter.write(label1.getName(), label1));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e labelWriter.write(label2.getName(), label2));","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e labelWriter.write(label1.getName(), label2));","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Negative Test: null","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e labelWriter.write(label1.getName(), null));","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e labelWriter.write(null, label1));","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e labelWriter.write(null, Label.emptyLabel()));","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e labelWriter.write(label1.getName(), Label.emptyLabel()));","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":59}},{"path":"src/test/java/seedu/academydirectory/versioncontrol/writer/TreeWriterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.writer;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalTrees.TREE1;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalTrees.TREE2;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"public class TreeWriterTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    @TempDir","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Path tempPath;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    private TreeWriter treeWriter;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void getWriteableFormat() {","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        treeWriter \u003d new TreeWriter(tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Correct Trees","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(List.of(\"world.hello hello.world\"), treeWriter.getWriteableFormat(TREE1));","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(List.of(\"world_hello Hello.png\", \"world_hello? Hello World.java\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"                treeWriter.getWriteableFormat(TREE2));","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Negative Test: null","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e treeWriter.getWriteableFormat(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e treeWriter.getWriteableFormat(Tree.emptyTree()));","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void write() {","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        treeWriter \u003d new TreeWriter(tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Correct Trees","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e treeWriter.write(TREE1.getHash(), TREE1));","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e treeWriter.write(TREE1.getHash(), TREE2));","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e treeWriter.write(TREE2.getHash(), TREE2));","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Negative Test: null","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e treeWriter.write(TREE1.getHash(), null));","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e treeWriter.write(null, TREE1));","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e treeWriter.write(null, Tree.emptyTree()));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e treeWriter.write(TREE1.getHash(), Tree.emptyTree()));","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":52}},{"path":"src/test/java/seedu/academydirectory/versioncontrol/writer/VersionControlGeneralWriterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package seedu.academydirectory.versioncontrol.writer;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT1;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT3;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalCommits.COMMIT9;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalTrees.TREE1;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import static seedu.academydirectory.testutil.TypicalTrees.TREE2;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Commit;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Label;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"import seedu.academydirectory.versioncontrol.objects.Tree;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"public class VersionControlGeneralWriterTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    @TempDir","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Path tempPath;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    private VersionControlGeneralWriter versionControlGeneralWriter;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void writeTree() {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        versionControlGeneralWriter \u003d new VersionControlGeneralWriter(tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Correct Trees","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e versionControlGeneralWriter.writeTree(TREE1));","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e versionControlGeneralWriter.writeTree(TREE2));","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Negative Test: null","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e versionControlGeneralWriter.writeTree(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e versionControlGeneralWriter.writeTree(Tree.emptyTree()));","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void writeCommit() {","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        versionControlGeneralWriter \u003d new VersionControlGeneralWriter(tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Correct Trees","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e versionControlGeneralWriter.writeCommit(COMMIT1));","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e versionControlGeneralWriter.writeCommit(COMMIT3));","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e versionControlGeneralWriter.writeCommit(COMMIT9));","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Negative Test: null","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e versionControlGeneralWriter.writeCommit(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e versionControlGeneralWriter.writeCommit(","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"                Commit.emptyCommit()));","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void writeLabel() {","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"        versionControlGeneralWriter \u003d new VersionControlGeneralWriter(tempPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Correct Labels","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label label1 \u003d Label.of(\"Test1\", \"Test1\", () -\u003e COMMIT1);","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"        Label label2 \u003d Label.of(\"Test2\", \"Test2\", () -\u003e COMMIT3);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e versionControlGeneralWriter.writeLabel(label1));","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e versionControlGeneralWriter.writeLabel(label2));","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"        // Negative Test: null","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(NullPointerException.class, () -\u003e versionControlGeneralWriter.writeLabel(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e versionControlGeneralWriter.writeLabel(","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"                Label.emptyLabel()));","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Amadeus-Winarto":70}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"\u003c?import seedu.academydirectory.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"jianoway":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"jianoway"},"content":"\u003cfx:root type\u003d\"seedu.academydirectory.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"jianoway":1}}]
