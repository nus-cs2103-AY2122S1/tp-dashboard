[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-W13-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W13-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"![gitGud](docs/images/gitgud.png)","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"## What is gitGud?","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"gitGud is a desktop application for managing friends\u0027 gaming information.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"\u003cbr /\u003eIt uses a simple Graphical User Interface (GUI) combined with an optimized Command Line Interface (CLI) to give you a smooth and efficient experience.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"\u003cbr /\u003eIf you can type fast enough, gitGud can get you contact management tasks done faster than traditional GUI-based applications.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"## Product Screenshot(s):","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"* For the detailed documentation of this project, please visit the **[gitGud Product Website](https://ay2122s1-cs2103t-w13-4.github.io/tp/)**.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"## Acknowledgements","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"tau-bar":4,"YeluriKetan":2,"kevin9foong":10,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"run {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"    archiveName \u003d \u0027gitGud.jar\u0027","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"YeluriKetan":1,"-":71,"kevin9foong":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"We are a team based in the [School of Computing, National University of Singapore](https://www.comp.nus.edu.sg).","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"For any inquiries, please reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"### Kevin Foong Wei Tong","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"\u003cimg src\u003d\"images/kevin9foong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"[[github](https://github.com/kevin9foong)]","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"[[portfolio](team/kevin9foong.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"* Role: Team Lead, Deadlines \u0026 Delivery","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"* Responsibilities: In charge of the `add` feature.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"### Marcus Tang Xin Kye","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"\u003cimg src\u003d\"images/marcustxk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"[[github](https://github.com/marcustxk)]","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"[[portfolio](team/marcustxk.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"* Role: Integration, Code Quality","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"* Responsibilities: In charge of `list` feature","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"### Taufiq Bin Abdul Rahman","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"\u003cimg src\u003d\"images/tau-bar.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"[[github](https://github.com/tau-bar)]","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"[[portfolio](team/tau-bar.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"* Role: Scheduling","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"* Responsibilities: In charge of `delete` feature","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"### Lim Yu Zher","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"\u003cimg src\u003d\"images/lzher385.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"[[github](https://github.com/lzher385)]","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"[[portfolio](team/lzher385.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"* Role: Documentation","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"* Responsibilities: In charge of `link` feature","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"### Yeluri Ketan","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"\u003cimg src\u003d\"images/yeluriketan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"[[github](https://github.com/YeluriKetan)]","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"[[portfolio](team/yeluriketan.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"* Role: Testing","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"* Responsibilities: In charge of the `get` feature.","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"tau-bar":6,"MarcusTXK":6,"YeluriKetan":9,"LZher385":5,"-":28,"kevin9foong":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S1-CS2103T-W13-4/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"The ***Architecture Diagram*** given above explains the high-level design of gitGud.","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-W13-4/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103T-W13-4/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"The rest of gitGud consists of four components.","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"* [**`UI`**](#ui-component): The UI of the gitGud.","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"* [**`Model`**](#model-component): Holds application data for gitGud in memory.","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user ","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"issues the command `friend --delete Draco`.","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"LZher385"},"content":"**API** : [`Ui.java`](https://github.com/AY2122S1-CS2103T-W13-4/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"LZher385"},"content":"**Description** :","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"LZher385"},"content":"The `UI` component is responsible for managing the user interface of the application so that it responds correctly to any command to user inputs.","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"LZher385"},"content":"**Functionality** :","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"LZher385"},"content":"**Component Structure**","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"LZher385"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"LZher385"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"MarcusTXK"},"content":"1. When `Logic` is called upon to execute a command, it uses the `MainParser` class to parse the user command.  ","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `HelpCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"MarcusTXK"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"friend --delete draco\")` API call.","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"![Interactions Inside the Logic Component for the `friend --delete draco` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"MarcusTXK"},"content":"* When called upon to parse a user command, the `MainParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `HelpCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `HelpCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"MarcusTXK"},"content":"    * Note: For user commands with `--friend` or `--game` as the first flags will go through an additional `FriendCommandParser` or `GameCommandParser` respectively for parsing, which will then create the respective `XYZFriendCommandParser` or `XYZGameCommandParser`","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-W13-4/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"The `Model` component is made up of the following subpackages,","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"* [`friend`](https://github.com/AY2122S1-CS2103T-W13-4/tp/tree/master/src/main/java/seedu/address/model/friend)","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"  * a `Friend` comprises of a `FriendId`, `FriendName` and a set of `GameFriendLink`s.","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"  * stores the friends\u0027 data i.e., all `Friend` objects (which are contained in a `UniqueFriendsList` object).","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"* [`game`](https://github.com/AY2122S1-CS2103T-W13-4/tp/tree/master/src/main/java/seedu/address/model/game)","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"  * a `Game` comprises of a `GameId` object. ","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"  * stores the games\u0027 data i.e., all `Game` objects (which are contained in a `UniqueGamesList` object).","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"* [`gamefriendlink`](https://github.com/AY2122S1-CS2103T-W13-4/tp/tree/master/src/main/java/seedu/address/model/gamefriendlink)","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"  * stores the relationship between a `Friend` and a `Game` as a `GameFriendLink` object.","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"  * a `GameFriendLink` object comprises of a `UserName` object.","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"The `Model` component also,","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"* stores the currently \u0027selected\u0027 `Friend` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cFriend\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"* stores the currently \u0027selected\u0027 `Game` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cGame\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"YeluriKetan"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` object.","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"kevin9foong"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-W13-4/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"kevin9foong"},"content":"             ","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"kevin9foong"},"content":"**Description** :                                                                                    ","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"kevin9foong"},"content":"The `Storage` component is responsible for persisting application data to be stored in json file format and reading stored data","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"kevin9foong"},"content":"back into the application. ","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"kevin9foong"},"content":"**Functionality** :","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"kevin9foong"},"content":"The storage component saves the following application data in json format and reads them back into corresponding objects:","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"kevin9foong"},"content":"* friends list","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"kevin9foong"},"content":"* games list","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"kevin9foong"},"content":"* user preferences","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"kevin9foong"},"content":"**Component Structure** : ","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"kevin9foong"},"content":"There are 3 main model objects stored by the Storage component in json format, namely `Friend`, `Game`,","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"kevin9foong"},"content":"and `UserPrefs`, each stored in separate json files.","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"kevin9foong"},"content":"The Storage component inherits from `FriendsListStorage`, `GamesListStorage` and ","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"kevin9foong"},"content":"`UserPrefStorage`, which means it can be treated as any one of the three.","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"MarcusTXK"},"content":"**Target user profile**:","lastModifiedDate":"2021-09-29"},{"lineNumber":226,"author":{"gitId":"MarcusTXK"},"content":"* Gamer who plays competitive games","lastModifiedDate":"2021-09-29"},{"lineNumber":227,"author":{"gitId":"tau-bar"},"content":"* Computer Science university student","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"MarcusTXK"},"content":"* Busy (can only play at specific times based on a weekly schedule)","lastModifiedDate":"2021-09-29"},{"lineNumber":229,"author":{"gitId":"MarcusTXK"},"content":"* Plays multiple online competitive multiplayer games (e.g., Apex legends, Minecraft, Valorant, etc)","lastModifiedDate":"2021-09-29"},{"lineNumber":230,"author":{"gitId":"tau-bar"},"content":"* Has a group of similar persona gamer friends who like him are busy with their computer science university degrees","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":232,"author":{"gitId":"tau-bar"},"content":"Computer Science university student gamer who is busy but wants to keep track of equally busy friends who want to play ","lastModifiedDate":"2021-10-18"},{"lineNumber":233,"author":{"gitId":"tau-bar"},"content":"online competitive multiplayer games together.","lastModifiedDate":"2021-10-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"kevin9foong"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"kevin9foong"},"content":"#### Problem:","lastModifiedDate":"2021-09-29"},{"lineNumber":238,"author":{"gitId":"kevin9foong"},"content":"For busy university student gamers who love playing multiplayer competitive games with their friends, it can","lastModifiedDate":"2021-09-29"},{"lineNumber":239,"author":{"gitId":"kevin9foong"},"content":"often be challenging scheduling times to play games with friends out of a packed schedule.","lastModifiedDate":"2021-09-29"},{"lineNumber":240,"author":{"gitId":"kevin9foong"},"content":"Additionally, it can be challenging to make the most out of the limited time available by choosing","lastModifiedDate":"2021-09-29"},{"lineNumber":241,"author":{"gitId":"kevin9foong"},"content":"the right friends to play with - those you have the most fun playing with or have great performance at the game.","lastModifiedDate":"2021-09-29"},{"lineNumber":242,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":243,"author":{"gitId":"tau-bar"},"content":"#### How gitGud solves the problem and make users\u0027 lives easier:","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"tau-bar"},"content":"gitGud allows users to store your friends\u0027 available timeslots and find matching times to play multiplayer","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"kevin9foong"},"content":"competitive games together - allowing users to identify and coordinate gaming sessions with friends.","lastModifiedDate":"2021-09-29"},{"lineNumber":246,"author":{"gitId":"kevin9foong"},"content":"It also allows users to keep track of each friend\u0027s competitive gaming performance and rate how much fun they had gaming with a friend","lastModifiedDate":"2021-09-29"},{"lineNumber":247,"author":{"gitId":"kevin9foong"},"content":"after each gaming session. These factors are used for gitGud to recommend and help users to decide which friends to play with","lastModifiedDate":"2021-09-29"},{"lineNumber":248,"author":{"gitId":"kevin9foong"},"content":"for future multiplayer competitive gaming sessions.","lastModifiedDate":"2021-09-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"tau-bar"},"content":"| Priority | As a (describes user) | I want to (functionality)                                          | So that I can (rationale)                                 |","lastModifiedDate":"2021-09-28"},{"lineNumber":255,"author":{"gitId":"tau-bar"},"content":"|----------|-----------------------|--------------------------------------------------------------------|-----------------------------------------------------------|","lastModifiedDate":"2021-09-28"},{"lineNumber":256,"author":{"gitId":"kevin9foong"},"content":"| ***      | user                  | be able to easily add my friends personal info/data (name, userid) | store a list of friends who I can possibly play with      |","lastModifiedDate":"2021-09-29"},{"lineNumber":257,"author":{"gitId":"tau-bar"},"content":"| ***      | user                  | be able to link my friends to the games they play                  | associate my friends with a particular game and store their usernames for each game               |","lastModifiedDate":"2021-10-18"},{"lineNumber":258,"author":{"gitId":"kevin9foong"},"content":"| ***      | user                  | be able to view a list of my friends information                   | see who my friends are                                    |","lastModifiedDate":"2021-09-29"},{"lineNumber":259,"author":{"gitId":"kevin9foong"},"content":"| ***      | user                  | be able to delete a friend from the contact list                   | remove friends that were mistakenly added                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":260,"author":{"gitId":"kevin9foong"},"content":"| ***      | user                  | be able to see full information of a friend from the contact list  | get any information I want about the friend               |","lastModifiedDate":"2021-09-29"},{"lineNumber":261,"author":{"gitId":"tau-bar"},"content":"| ***      | user                  | be able to easily add games that I want to play with my friends    | store the games that I plan to play with my friends       |","lastModifiedDate":"2021-10-18"},{"lineNumber":262,"author":{"gitId":"tau-bar"},"content":"| ***      | user                  | be able to view a list of my game information                      | see which of my friends play certain games                |","lastModifiedDate":"2021-10-18"},{"lineNumber":263,"author":{"gitId":"tau-bar"},"content":"| ***      | user                  | be able to delete a game from the contact list                     | remove games that were mistakenly added or due to typos   |","lastModifiedDate":"2021-10-18"},{"lineNumber":264,"author":{"gitId":"tau-bar"},"content":"| ***      | user                  | be able to see full information of a game from the games list      | see information about which friends play the game and their in-game usernames   |","lastModifiedDate":"2021-10-18"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"tau-bar"},"content":"(For all use cases below, the **System** is the `gitGud` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-28"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"YeluriKetan"},"content":"**Use case: UC01 - Add a friend** ","lastModifiedDate":"2021-09-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":274,"author":{"gitId":"kevin9foong"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":276,"author":{"gitId":"kevin9foong"},"content":"1. User requests to add a friend and specifies a `FRIEND_ID`.","lastModifiedDate":"2021-09-29"},{"lineNumber":277,"author":{"gitId":"kevin9foong"},"content":"2. gitGud adds a friend into the friends list and informs user of successful addition of friend.","lastModifiedDate":"2021-09-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":279,"author":{"gitId":"YeluriKetan"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":281,"author":{"gitId":"kevin9foong"},"content":"**Extensions** ","lastModifiedDate":"2021-09-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":283,"author":{"gitId":"kevin9foong"},"content":"* 1a. gitGud detects that the `FRIEND_ID` provided already exists and is not unique.","lastModifiedDate":"2021-09-29"},{"lineNumber":284,"author":{"gitId":"kevin9foong"},"content":"    * 1a1. gitGud informs user that it has failed to add a friend.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":285,"author":{"gitId":"kevin9foong"},"content":"      1a2. User makes another request to add a friend with a different `FRIEND_ID`.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":286,"author":{"gitId":"kevin9foong"},"content":"      Use case continues from step 2.","lastModifiedDate":"2021-09-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":288,"author":{"gitId":"YeluriKetan"},"content":"**Use case: UC02 - Delete a friend**","lastModifiedDate":"2021-09-30"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"tau-bar"},"content":"1. User requests to delete a friend using the friend\u0027s `FRIEND_ID`","lastModifiedDate":"2021-09-28"},{"lineNumber":293,"author":{"gitId":"tau-bar"},"content":"2. gitGud deletes the person","lastModifiedDate":"2021-09-28"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"tau-bar"},"content":"* 2a. The given `FRIEND_ID` is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"tau-bar"},"content":"    * 2a1. gitGud shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"tau-bar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":306,"author":{"gitId":"YeluriKetan"},"content":"**Use case: UC03 - List friends whose `FRIEND_ID` contains a keyword**","lastModifiedDate":"2021-09-30"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":308,"author":{"gitId":"MarcusTXK"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":310,"author":{"gitId":"MarcusTXK"},"content":"1. User requests to list friends in gitGud using a keyword filter.","lastModifiedDate":"2021-09-29"},{"lineNumber":311,"author":{"gitId":"MarcusTXK"},"content":"2. gitGud shows a filtered list of friends whose `FRIEND_ID` contains the keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":313,"author":{"gitId":"MarcusTXK"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":315,"author":{"gitId":"MarcusTXK"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":317,"author":{"gitId":"MarcusTXK"},"content":"* 2a. The user does not provide a keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":319,"author":{"gitId":"MarcusTXK"},"content":"    * 2a1. All friends are listed.","lastModifiedDate":"2021-09-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":321,"author":{"gitId":"MarcusTXK"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":324,"author":{"gitId":"YeluriKetan"},"content":"**Use case: UC04 - List games whose `GAME_NAME` contains a keyword**","lastModifiedDate":"2021-09-30"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":326,"author":{"gitId":"MarcusTXK"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":328,"author":{"gitId":"MarcusTXK"},"content":"1. User requests to list games in gitGud using a keyword filter.","lastModifiedDate":"2021-09-29"},{"lineNumber":329,"author":{"gitId":"MarcusTXK"},"content":"2. gitGud shows a filtered list of games whose `GAME_NAME` contains the keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":331,"author":{"gitId":"MarcusTXK"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":333,"author":{"gitId":"MarcusTXK"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":335,"author":{"gitId":"MarcusTXK"},"content":"* 2a. The user does not provide a keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":337,"author":{"gitId":"MarcusTXK"},"content":"    * 2a1. All games are listed.","lastModifiedDate":"2021-09-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":339,"author":{"gitId":"MarcusTXK"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":342,"author":{"gitId":"YeluriKetan"},"content":"**Use case: UC05 - Link a friend to a particular game**","lastModifiedDate":"2021-09-30"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":346,"author":{"gitId":"tau-bar"},"content":"1. User links a friend (using `FRIEND_ID`) with a particular game (using `GAME_NAME`) and the username for that game ","lastModifiedDate":"2021-10-18"},{"lineNumber":347,"author":{"gitId":"tau-bar"},"content":"   (using `USERNAME`).","lastModifiedDate":"2021-10-18"},{"lineNumber":348,"author":{"gitId":"LZher385"},"content":"2. gitGud associates the friend with the game provided.","lastModifiedDate":"2021-09-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":352,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":354,"author":{"gitId":"LZher385"},"content":"* 2a. The given `FRIEND_ID` is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":356,"author":{"gitId":"LZher385"},"content":"    * 2a1. gitGud shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":357,"author":{"gitId":"LZher385"},"content":"    * 2a2. User can list friends currently in gitGud or add new friends.","lastModifiedDate":"2021-09-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":359,"author":{"gitId":"LZher385"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":362,"author":{"gitId":"LZher385"},"content":"* 2b. The given `GAME_NAME` is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":364,"author":{"gitId":"LZher385"},"content":"    * 2b1. gitGud shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":365,"author":{"gitId":"LZher385"},"content":"    * 2b2. User can list games currently in gitGud or add new games.","lastModifiedDate":"2021-09-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":367,"author":{"gitId":"LZher385"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":370,"author":{"gitId":"YeluriKetan"},"content":"**Use case: UC06 - Get a friend\u0027s complete information**","lastModifiedDate":"2021-09-30"},{"lineNumber":371,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":372,"author":{"gitId":"YeluriKetan"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":373,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":374,"author":{"gitId":"YeluriKetan"},"content":"1. User \u003cu\u003elist friends (UC03)\u003c/u\u003e and chooses a `FRIEND_ID`.","lastModifiedDate":"2021-09-30"},{"lineNumber":375,"author":{"gitId":"YeluriKetan"},"content":"2. User requests for complete information about `FRIEND_ID`.","lastModifiedDate":"2021-09-30"},{"lineNumber":376,"author":{"gitId":"YeluriKetan"},"content":"3. gitGud displays the complete information related to  `FRIEND_ID`.","lastModifiedDate":"2021-09-30"},{"lineNumber":377,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":378,"author":{"gitId":"YeluriKetan"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":379,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":380,"author":{"gitId":"YeluriKetan"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":381,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":382,"author":{"gitId":"YeluriKetan"},"content":"* 3a. The given `FRIEND_ID` is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":383,"author":{"gitId":"YeluriKetan"},"content":"    * 3a1. gitGud shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":384,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":385,"author":{"gitId":"YeluriKetan"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"YeluriKetan"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2021-09-30"},{"lineNumber":390,"author":{"gitId":"YeluriKetan"},"content":"2. Should be able to hold up to 100 friends or games without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-30"},{"lineNumber":391,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"YeluriKetan"},"content":"4. Does not require internet connection.","lastModifiedDate":"2021-09-30"},{"lineNumber":393,"author":{"gitId":"YeluriKetan"},"content":"5. The code should be open source.","lastModifiedDate":"2021-09-30"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"LZher385"},"content":"* **Competitive Game/s**: Multiplayer games with a ranking system","lastModifiedDate":"2021-09-29"},{"lineNumber":398,"author":{"gitId":"LZher385"},"content":"* **Busy**: Maximum of 7hrs/week to play games","lastModifiedDate":"2021-09-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"tau-bar"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample friends. The window size may not be ","lastModifiedDate":"2021-10-19"},{"lineNumber":419,"author":{"gitId":"tau-bar"},"content":"      optimum.","lastModifiedDate":"2021-10-19"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"MarcusTXK"},"content":"1. _{ more test cases … }_","lastModifiedDate":"2021-10-21"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"tau-bar"},"content":"### Adding a friend","lastModifiedDate":"2021-10-18"},{"lineNumber":431,"author":{"gitId":"tau-bar"},"content":"1. Adding a friend to gitGud","lastModifiedDate":"2021-10-18"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"tau-bar"},"content":"    1. Prerequisites: List all friends using the `friend --list` command. There should not be a friend with ","lastModifiedDate":"2021-10-18"},{"lineNumber":434,"author":{"gitId":"tau-bar"},"content":"       `FRIEND_ID` Draco as well as friend with `FRIEND_ID` MrFeely already stored in gitGud. ","lastModifiedDate":"2021-10-19"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"tau-bar"},"content":"    2. Test case: `friend --add Draco --name Marcus`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":437,"author":{"gitId":"tau-bar"},"content":"       Expected: Friend with `FRIEND_ID` Draco is added. gitGud states that `FRIEND_ID` is added.","lastModifiedDate":"2021-10-18"},{"lineNumber":438,"author":{"gitId":"-"},"content":"       ","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"tau-bar"},"content":"    3. Test case: `friend --add MrFeely`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":440,"author":{"gitId":"tau-bar"},"content":"       Expected: Friend with `FRIEND_ID` MrFeely is added. gitGud states that `FRIEND_ID` is added.","lastModifiedDate":"2021-10-18"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"tau-bar"},"content":"    4. Other incorrect add commands to try: `friend --name Marcus`, `friend --add`, `friend --name`, ...`","lastModifiedDate":"2021-10-18"},{"lineNumber":443,"author":{"gitId":"tau-bar"},"content":"       Expected: No friend is added. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-19"},{"lineNumber":444,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":445,"author":{"gitId":"MarcusTXK"},"content":"2. _{ more test cases … }_","lastModifiedDate":"2021-10-21"},{"lineNumber":446,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":447,"author":{"gitId":"tau-bar"},"content":"### Adding a game","lastModifiedDate":"2021-10-18"},{"lineNumber":448,"author":{"gitId":"tau-bar"},"content":"1. Adding a game to gitGud","lastModifiedDate":"2021-10-18"},{"lineNumber":449,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":450,"author":{"gitId":"tau-bar"},"content":"    1. Prerequisites: List all games using the `game --list` command. There should not be a game with `GAME_NAME` ","lastModifiedDate":"2021-10-19"},{"lineNumber":451,"author":{"gitId":"tau-bar"},"content":"       Valorant already stored in gitGud.","lastModifiedDate":"2021-10-19"},{"lineNumber":452,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":453,"author":{"gitId":"tau-bar"},"content":"    2. Test case: `game --add Valorant`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":454,"author":{"gitId":"tau-bar"},"content":"       Expected: Game with `GAME_NAME` Valorant is added. gitGud states that `GAME_NAME` is added.","lastModifiedDate":"2021-10-19"},{"lineNumber":455,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":456,"author":{"gitId":"tau-bar"},"content":"    3. Test case: `game --add`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":457,"author":{"gitId":"tau-bar"},"content":"       Expected: No game is added. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-19"},{"lineNumber":458,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":459,"author":{"gitId":"MarcusTXK"},"content":"2. _{ more test cases … }_","lastModifiedDate":"2021-10-21"},{"lineNumber":460,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":461,"author":{"gitId":"tau-bar"},"content":"### Linking a friend to a game","lastModifiedDate":"2021-10-18"},{"lineNumber":462,"author":{"gitId":"tau-bar"},"content":"1. Linking a friend to a game in gitGud.","lastModifiedDate":"2021-10-18"},{"lineNumber":463,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":464,"author":{"gitId":"tau-bar"},"content":"    1. Prerequisites: There exists a friend with `FRIEND_ID` Draco, and there exists a game with `GAME_NAME` Valorant.","lastModifiedDate":"2021-10-19"},{"lineNumber":465,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":466,"author":{"gitId":"tau-bar"},"content":"    2. Test case: `link --friend Draco --game Valorant --user Draconian`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":467,"author":{"gitId":"tau-bar"},"content":"       Expected: A link between Draco and Valorant is created and Draco\u0027s username for Valorant, Draconian, is ","lastModifiedDate":"2021-10-18"},{"lineNumber":468,"author":{"gitId":"tau-bar"},"content":"       stored in the link.","lastModifiedDate":"2021-10-18"},{"lineNumber":469,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":470,"author":{"gitId":"tau-bar"},"content":"    3. Test case: `link --game Valorant --name Draco --user Draconian`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":471,"author":{"gitId":"tau-bar"},"content":"       Expected: No link is added. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-19"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":473,"author":{"gitId":"tau-bar"},"content":"    3. Test case: `link --friend Draco --game Valorant`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":474,"author":{"gitId":"tau-bar"},"content":"       Expected: No link is added. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-18"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"tau-bar"},"content":"    4. Other incorrect link commands to try: `link --friend Draco --user Draconian`, `link --game Valorant --user ","lastModifiedDate":"2021-10-18"},{"lineNumber":477,"author":{"gitId":"tau-bar"},"content":"       Draconian`, `link --friend`, ...","lastModifiedDate":"2021-10-18"},{"lineNumber":478,"author":{"gitId":"tau-bar"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-10-18"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":480,"author":{"gitId":"MarcusTXK"},"content":"2. _{ more test cases … }_","lastModifiedDate":"2021-10-21"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":482,"author":{"gitId":"tau-bar"},"content":"### Deleting a friend","lastModifiedDate":"2021-10-18"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":484,"author":{"gitId":"tau-bar"},"content":"1. Deleting a friend from gitGud","lastModifiedDate":"2021-10-18"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":486,"author":{"gitId":"tau-bar"},"content":"   1. Prerequisites: Only one friend with `FRIEND_ID` Draco exists in gitGud.","lastModifiedDate":"2021-10-18"},{"lineNumber":487,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":488,"author":{"gitId":"tau-bar"},"content":"   1. Test case: `friend --delete Draco`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":489,"author":{"gitId":"tau-bar"},"content":"      Expected: Friend with `FRIEND_ID` Draco is deleted. gitGud states that `FRIEND_ID` is deleted.","lastModifiedDate":"2021-10-18"},{"lineNumber":490,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":491,"author":{"gitId":"tau-bar"},"content":"   1. Test case: `friend --delete MrFeely`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":492,"author":{"gitId":"tau-bar"},"content":"      Expected: No friend is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-18"},{"lineNumber":493,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":494,"author":{"gitId":"tau-bar"},"content":"   1. Other incorrect delete commands to try: `friend --delete`, `...` ","lastModifiedDate":"2021-10-18"},{"lineNumber":495,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-10-18"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":497,"author":{"gitId":"MarcusTXK"},"content":"2. _{ more test cases … }_","lastModifiedDate":"2021-10-21"},{"lineNumber":498,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":499,"author":{"gitId":"tau-bar"},"content":"### Deleting a game","lastModifiedDate":"2021-10-18"},{"lineNumber":500,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":501,"author":{"gitId":"tau-bar"},"content":"1. Deleting a game from gitGud","lastModifiedDate":"2021-10-18"},{"lineNumber":502,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":503,"author":{"gitId":"tau-bar"},"content":"    1. Prerequisites: Only one game with `GAME_NAME` Valorant exists.","lastModifiedDate":"2021-10-19"},{"lineNumber":504,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":505,"author":{"gitId":"tau-bar"},"content":"    1. Test case: `game --delete Valorant`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":506,"author":{"gitId":"tau-bar"},"content":"       Expected: Game with `GAME_NAME` Valorant is deleted. gitGud states that `GAME_NAME` is deleted.","lastModifiedDate":"2021-10-19"},{"lineNumber":507,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":508,"author":{"gitId":"tau-bar"},"content":"    1. Test case: `game --delete CSGO`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":509,"author":{"gitId":"tau-bar"},"content":"       Expected: No game is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-18"},{"lineNumber":510,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":511,"author":{"gitId":"tau-bar"},"content":"    1. Other incorrect delete commands to try: `game --delete`, `...`","lastModifiedDate":"2021-10-18"},{"lineNumber":512,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"MarcusTXK"},"content":"1. _{ more test cases … }_","lastModifiedDate":"2021-10-21"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"tau-bar"},"content":"### Filtering friends in friends\u0027 list using a keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":517,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":518,"author":{"gitId":"tau-bar"},"content":"1. Filtering friends\u0027 list using a keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":519,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":520,"author":{"gitId":"tau-bar"},"content":"    1. Prerequisites: There exists more than one friend in gitGud, one of which has the `FRIEND_ID` Draco.","lastModifiedDate":"2021-10-18"},{"lineNumber":521,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":522,"author":{"gitId":"tau-bar"},"content":"    2. Test case: `friend --list`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":523,"author":{"gitId":"tau-bar"},"content":"       Expected: All friends are listed.","lastModifiedDate":"2021-10-18"},{"lineNumber":524,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":525,"author":{"gitId":"tau-bar"},"content":"    3. Test case: `friend --list Draco`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":526,"author":{"gitId":"tau-bar"},"content":"       Expected: The friend Draco is listed, as his `FRIEND_ID` contains the keyword Draco.","lastModifiedDate":"2021-10-18"},{"lineNumber":527,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":528,"author":{"gitId":"tau-bar"},"content":"    4. Test case: `friend --list Dra`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":529,"author":{"gitId":"tau-bar"},"content":"       Expected: The friend Draco is listed, as his `FRIEND_ID` contains the keyword `Dra`.","lastModifiedDate":"2021-10-18"},{"lineNumber":530,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":531,"author":{"gitId":"tau-bar"},"content":"    5. Test case: `friend --list co`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":532,"author":{"gitId":"tau-bar"},"content":"       Expected: The friend Draco is listed, as his `FRIEND_ID` contains the keyword `co`.","lastModifiedDate":"2021-10-18"},{"lineNumber":533,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":534,"author":{"gitId":"tau-bar"},"content":"### Filtering friends in games\u0027 list using a keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":535,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":536,"author":{"gitId":"tau-bar"},"content":"1. Filtering games\u0027 list using a keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":537,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":538,"author":{"gitId":"tau-bar"},"content":"    1. Prerequisites: There exists more than one game in gitGud, one of which has the `GAME_NAME` Valorant.","lastModifiedDate":"2021-10-19"},{"lineNumber":539,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":540,"author":{"gitId":"tau-bar"},"content":"    2. Test case: `game --list`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":541,"author":{"gitId":"tau-bar"},"content":"       Expected: All games are listed.","lastModifiedDate":"2021-10-18"},{"lineNumber":542,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":543,"author":{"gitId":"tau-bar"},"content":"    3. Test case: `game --list Valorant`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":544,"author":{"gitId":"tau-bar"},"content":"       Expected: The game Valorant is listed, as its `GAME_ID` contains the keyword `Valorant`.","lastModifiedDate":"2021-10-18"},{"lineNumber":545,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":546,"author":{"gitId":"tau-bar"},"content":"    4. Test case: `game --list Valo`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":547,"author":{"gitId":"tau-bar"},"content":"       Expected: The game Valorant is listed, as its `GAME_ID` contains the keyword `Valo`.","lastModifiedDate":"2021-10-18"},{"lineNumber":548,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":549,"author":{"gitId":"tau-bar"},"content":"    4. Test case: `game --list ant`\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":550,"author":{"gitId":"tau-bar"},"content":"       Expected: The game Valorant is listed, as its `GAME_ID` contains the keyword `ant`.","lastModifiedDate":"2021-10-18"},{"lineNumber":551,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":552,"author":{"gitId":"tau-bar"},"content":"### Viewing a friend\u0027s full data","lastModifiedDate":"2021-10-19"},{"lineNumber":553,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":554,"author":{"gitId":"tau-bar"},"content":"1. View a friend\u0027s full game information, including their in-game usernames","lastModifiedDate":"2021-10-19"},{"lineNumber":555,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":556,"author":{"gitId":"tau-bar"},"content":"    1. Prerequisites: A friend with `FRIEND_ID` Draco exists in gitGud.","lastModifiedDate":"2021-10-19"},{"lineNumber":557,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":558,"author":{"gitId":"tau-bar"},"content":"    2. Test case: `friend --get Draco`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":559,"author":{"gitId":"tau-bar"},"content":"       Expected: The full information about friend with `FRIEND_ID` Draco is listed.","lastModifiedDate":"2021-10-19"},{"lineNumber":560,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":561,"author":{"gitId":"tau-bar"},"content":"    3. Test case: `friend --get Dra`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":562,"author":{"gitId":"tau-bar"},"content":"        Expected: No friend is found. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-19"},{"lineNumber":563,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":564,"author":{"gitId":"tau-bar"},"content":"    4. Test case: `friend --get co`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":565,"author":{"gitId":"tau-bar"},"content":"       Expected: No friend is found. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-19"},{"lineNumber":566,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":567,"author":{"gitId":"tau-bar"},"content":"    5. \\Other incorrect delete commands to try: `friend --get`, `...`","lastModifiedDate":"2021-10-19"},{"lineNumber":568,"author":{"gitId":"tau-bar"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-10-19"},{"lineNumber":569,"author":{"gitId":"tau-bar"},"content":"   ","lastModifiedDate":"2021-10-19"},{"lineNumber":570,"author":{"gitId":"tau-bar"},"content":"2. ### Viewing a game\u0027s full data","lastModifiedDate":"2021-10-19"},{"lineNumber":571,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":572,"author":{"gitId":"tau-bar"},"content":"1. View a game\u0027s full information, including the friends which play that game.","lastModifiedDate":"2021-10-19"},{"lineNumber":573,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":574,"author":{"gitId":"tau-bar"},"content":"    1. Prerequisites: A game with `GAME_NAME` Valorant exists in gitGud.","lastModifiedDate":"2021-10-19"},{"lineNumber":575,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":576,"author":{"gitId":"tau-bar"},"content":"    2. Test case: `game --get Valorant`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":577,"author":{"gitId":"tau-bar"},"content":"       Expected: The full information about game with `GAME_NAME` Valorant is listed.","lastModifiedDate":"2021-10-19"},{"lineNumber":578,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":579,"author":{"gitId":"tau-bar"},"content":"    3. Test case: `game --get Valo`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":580,"author":{"gitId":"tau-bar"},"content":"       Expected: No game is found. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-19"},{"lineNumber":581,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":582,"author":{"gitId":"tau-bar"},"content":"    4. Test case: `game --get rant`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":583,"author":{"gitId":"tau-bar"},"content":"       Expected: No game is found. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-19"},{"lineNumber":584,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":585,"author":{"gitId":"tau-bar"},"content":"    5. \\Other incorrect delete commands to try: `game --get`, `...`","lastModifiedDate":"2021-10-19"},{"lineNumber":586,"author":{"gitId":"tau-bar"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-10-19"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":588,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"MarcusTXK"},"content":"1. _{ more test cases … }_","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tau-bar":168,"MarcusTXK":36,"LZher385":22,"YeluriKetan":41,"-":287,"kevin9foong":40}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"![gitGud](images/gitgud.png)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"gitGud is a **desktop application for managing your friends\u0027 gaming information**. It uses a gamer-themed **Graphical User Interface ","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"(GUI) combined with an optimized Command Line Interface (CLI)** to give you a smooth and efficient experience. ","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"Keeping track of all of yours friends\u0027 gaming information and schedules is difficult and time-consuming.","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"With gitGud, there is no need to get tilted(frustrated) by this anymore as **how fast you type determines how fast you manage your gaming contacts**.","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"  {:toc}","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"2. Download the latest `gitgud.jar` from [here](https://github.com/AY2122S1-CS2103T-W13-4/tp/releases).","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your gitGud application.","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"5. Type the command in the command box and press `Enter` to execute it. e.g. typing **`help`** and pressing `Enter` will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"   * **`friend --list`** : Lists all friends.","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"   * **`friend --add`**`Draco --name Marcus` : Adds a friend __Marcus__ with gitGud FRIEND_ID of __Draco__ to the application.","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"   * **`friend --delete`**`Draco` : Deletes friend with gitGud FRIEND_ID of __Draco__.","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"  e.g. in `get --game GAME_NAME`, `GAME_NAME` is a parameter which can be used as `get --game CSGO`.","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"  e.g. if you specify `--name “Marcus Tang” --name Taufiq`, only `--name Taufiq` will be taken.","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"* If a name provided has spaces in-between, use double quotation marks to wrap the name in the command e.g. wrap the name","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"  \u0027Apex Legends\u0027 as `\"Apex Legends\"`.","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"### Friend commands  ","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"Commands that involve adding, editing, deleting or viewing of friends in your gitGud friend list.","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"#### Adding a friend: `friend --add`","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"Adds a new friend to gitGud friend’s list with an associated **unique** friend identifier.","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"Format: `friend -add FRIEND_ID [--name NAME]`","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"* `friend --add Draco` Adds a brand-new friend into the friends list with the identifier \u0027Draco\u0027 and","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"  which does not currently have an associated real-life name.","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"* `friend --add tau_bar --name Taufiq` Adds a brand-new friend into the friends list with the identifier \u0027tau-bar\u0027 and","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"  has the real-life name \u0027Taufiq\u0027.","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"#### Deleting a friend: `friend --delete`","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"Deletes a friend from gitGud’s friend’s list using gitGud’s unique friend identifier.","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"Format: `friend --delete FRIEND_ID`","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"* Deletes the person with the specified `FRIEND_ID`.","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"* The `FRIEND_ID` must currently exist in the database.","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"* `friend --delete Draco` Deletes friend with gitGud FRIEND_ID of Draco and all their data from the database","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"LZher385"},"content":"#### Link games with a friend: `friend --link`","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"LZher385"},"content":"Links game and the associated in-game username for the game to a friend with the provided FRIEND_ID.","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"LZher385"},"content":"A link between a particular friend and game shows that the friend plays the game. This association is required for subsequent commands, e.g. for the application to display all games that a friend plays or to recommend a friend to play with based on a particular game.","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"LZher385"},"content":"Format: `friend --link FRIEND_ID --game GAME_ID --user IN_GAME_USERNAME`","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"LZher385"},"content":"* Both FRIEND_ID and GAME_ID has to already be inside the database.","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"LZher385"},"content":"* `friend --link Draco --game DOTA --user Draco995`","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"LZher385"},"content":"  Links a single game, “DOTA” with the in-game username ‘Draco995’,","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"LZher385"},"content":"  to the friend with the gitGud FRIEND_ID ‘Draco’.","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"LZher385"},"content":"#### Unlinking a game from a friend: `friend --unlink`","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"LZher385"},"content":"Removes the link between a friend and a game.","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"LZher385"},"content":"Format: `friend --unlink FRIEND_ID --game GAME_ID`","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"LZher385"},"content":"* FRIEND_ID has to already be inside the database.","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"LZher385"},"content":"* The friend has to have a current association with the provided GAME_ID.","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"LZher385"},"content":"Examples:","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"LZher385"},"content":"* `friend --unlink Draco --game DOTA` Removes the link between the friend with FRIEND_D \u0027Draco\u0027 and the game with GAME_ID \u0027DOTA\u0027. \u0027Draco\u0027 is now no longer associated with \u0027DOTA\u0027.","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"MarcusTXK"},"content":"#### Getting a single friend\u0027s complete data: `get --friend`","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"MarcusTXK"},"content":"Takes a look at a particular friend\u0027s complete data by searching their `FRIEND_ID`. A friend\u0027s complete data includes:","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"MarcusTXK"},"content":"* List of games the friend plays","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"MarcusTXK"},"content":"* In-game username for each game","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"MarcusTXK"},"content":"Format: `get [--friend] FRIEND_ID`","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"MarcusTXK"},"content":"* The `FRIEND_ID` must currently exist in the database","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"MarcusTXK"},"content":"* `get --friend Draco` Gets the complete data for friend \"Draco\", which includes the list of games he plays and his username for each game","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"MarcusTXK"},"content":"* `get kev` Gets the complete data for friend \"kev\"","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":"#### Listing multiple friends data: `friend --list`","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"MarcusTXK"},"content":"Lists all friends stored in gitGud whose friend id contains any of the given keywords.","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"MarcusTXK"},"content":"Format: `friend --list [KEYWORD]`","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"MarcusTXK"},"content":"* If `KEYWORD` is left empty, all friends stored in gitGud will be listed","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"* The filter keyword is case insensitive e.g `Tau_bar` will match `tau_bar`","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"* Only the `FRIEND_ID` of friends is filtered","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"MarcusTXK"},"content":"* Partial matches will be displayed e.g. `tau` will match `tau_bar`","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"* `friend --list` or  `friend --list` Lists all friends stored in gitGud","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"MarcusTXK"},"content":"* `friend --list ta` Lists all friends stored in gitGud that have `ta` in their name","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"MarcusTXK"},"content":"![result for \u0027game --list\u0027](images/UiListFriend.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"MarcusTXK"},"content":"#### Scheduling a friends: `friend --schedule`","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"MarcusTXK"},"content":"Schedules an existing friend by updating their schedule to indicate the time periods they are free or busy.","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"MarcusTXK"},"content":"* gitGud stores a weekly schedule for each friend, from Monday to Sunday, with each day having 24 blocks of hours that can be marked as free or busy.","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"MarcusTXK"},"content":"Format: `friend --schedule FRIEND_ID --period START_TIME END_TIME DAY --free IS_FREE`","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"MarcusTXK"},"content":"**:information_source: Notes about the schedule:**\u003cbr\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"MarcusTXK"},"content":"New friends start off which a schedule with all periods marked as busy.","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"MarcusTXK"},"content":"\u003c/div\u003e  ","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"MarcusTXK"},"content":"* `FRIEND_ID` must belong to an existing friend in gitGud","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"MarcusTXK"},"content":"* `START_HOUR` and `END_HOUR` are written in 24 Hour notation and must be whole hours (e.g. 0230 and 1201 are not accepted)","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"MarcusTXK"},"content":"* `END_HOUR` must be after `START_HOUR`, the only exception is if `END_HOUR` is `0000` where it is taken as midnight.","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"MarcusTXK"},"content":"* `DAY` must be an integer between 1 and 7 inclusive, with each day representing a day of the week from Monday to Sunday.","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"MarcusTXK"},"content":"* `IS_FREE` is used to mark the period as a free or busy period, with `1` meaning free and `0` meaning busy","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"MarcusTXK"},"content":"* `friend --schedule Draco --period 1800 2200 2 --free 1` Schedules \"Draco\" as free from 1800 to 2200 on Tuesday.","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"MarcusTXK"},"content":"* `friend --schedule Draco --period 1200 0000 7 --free 0` Schedules \"Draco\" as busy from 1200 to 0000 (midnight) on Sunday.","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"MarcusTXK"},"content":"### Game commands","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"MarcusTXK"},"content":"Commands that involve adding, editing, deleting or viewing of games in your gitGud friend list.","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"MarcusTXK"},"content":"#### Adding a game: `game --add`","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"MarcusTXK"},"content":"Adds a game with the given **unique** GAME_ID into the gitGud game list.","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"MarcusTXK"},"content":"Format: `game --add GAME_ID`","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"MarcusTXK"},"content":"* If the GAME_ID provided already exists, an error will be displayed. ","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"MarcusTXK"},"content":"* The GAME_ID provided must be a single word e.g. `ApexLegends` and not `Apex Legends`.","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"MarcusTXK"},"content":"Examples:","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"MarcusTXK"},"content":"* `game --add Valorant` Adds a brand-new game into the game list with the unique GAME_ID \u0027Valorant\u0027.","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"MarcusTXK"},"content":"#### Deleting a game: `game --delete`","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"MarcusTXK"},"content":"Deletes a game from the gitGud game list.","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"MarcusTXK"},"content":"Format: `game --delete GAME_NAME`","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":196,"author":{"gitId":"MarcusTXK"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"MarcusTXK"},"content":"* `game --delete Valorant` Deletes the game record ‘Valorant’ from the game list if it exists.","lastModifiedDate":"2021-10-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"MarcusTXK"},"content":"#### Getting a single game\u0027s complete data: `get --game`","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"MarcusTXK"},"content":"Gets all the relevant information for a game that was previously added, this includes:","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"MarcusTXK"},"content":"* All the friends (represented by their `FRIEND_ID`) that play the game","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"MarcusTXK"},"content":"Format: `get --game GAME_NAME`","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"MarcusTXK"},"content":"* The `GAME_NAME` must currently exist in the database","lastModifiedDate":"2021-10-23"},{"lineNumber":206,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"MarcusTXK"},"content":"Examples:","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"MarcusTXK"},"content":"* `get --game CSGO` Gets all the relevant information for the game \"CSGO\". This includes all the friends in your database that play the game","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"MarcusTXK"},"content":"#### Listing multiple games data: `game --list`","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"MarcusTXK"},"content":"Lists all games stored in gitGud whose friend id contains any of the given keywords.","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"MarcusTXK"},"content":"Format: `game --list [KEYWORD]`","lastModifiedDate":"2021-10-22"},{"lineNumber":215,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"MarcusTXK"},"content":"* If `KEYWORD` is left empty, all games stored in gitGud will be listed","lastModifiedDate":"2021-09-29"},{"lineNumber":217,"author":{"gitId":"MarcusTXK"},"content":"* The filter keyword is case insensitive e.g `valorant` will match `Valorant`","lastModifiedDate":"2021-09-29"},{"lineNumber":218,"author":{"gitId":"MarcusTXK"},"content":"* Only the `GAME_ID` of games is filtered","lastModifiedDate":"2021-10-22"},{"lineNumber":219,"author":{"gitId":"MarcusTXK"},"content":"* Partial matches will be displayed e.g. `Valo` will match `Valorant`","lastModifiedDate":"2021-09-29"},{"lineNumber":220,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":221,"author":{"gitId":"MarcusTXK"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":222,"author":{"gitId":"MarcusTXK"},"content":"* `game --list` Lists all games stored in gitGud","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"MarcusTXK"},"content":"* `game --list Valo` Lists all friends stored in gitGud that have `Valo` in their name","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":225,"author":{"gitId":"MarcusTXK"},"content":"![result for \u0027game --list\u0027](images/UiListGame.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"MarcusTXK"},"content":"### Other commands","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"MarcusTXK"},"content":"Miscellaneous useful commands for the user.","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"MarcusTXK"},"content":"#### Viewing help: `help`","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"MarcusTXK"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"MarcusTXK"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":236,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"MarcusTXK"},"content":"Format: `help`","lastModifiedDate":"2021-10-23"},{"lineNumber":238,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"MarcusTXK"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2021-10-23"},{"lineNumber":240,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":241,"author":{"gitId":"MarcusTXK"},"content":"Exits the program.","lastModifiedDate":"2021-10-23"},{"lineNumber":242,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"MarcusTXK"},"content":"Format: `exit`","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"YeluriKetan"},"content":"**Q**: How do I **_transfer_** my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"YeluriKetan"},"content":"**Q**: How do I _**update**_ a friend’s data that is already on the database?\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":253,"author":{"gitId":"YeluriKetan"},"content":"**A**: You can delete the friend and then add the friend with the new data.","lastModifiedDate":"2021-09-30"},{"lineNumber":254,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"kevin9foong"},"content":"**Add friend** | `friend --add FRIEND_ID [--name \"NAME\"]` \u003cbr\u003e e.g., `friend --add Draco --name \"Marcus Tang\"`","lastModifiedDate":"2021-10-14"},{"lineNumber":262,"author":{"gitId":"YeluriKetan"},"content":"**Delete friend** | `friend --delete FRIEND_ID`\u003cbr\u003e e.g., `friend --delete Draco`","lastModifiedDate":"2021-09-30"},{"lineNumber":263,"author":{"gitId":"MarcusTXK"},"content":"**Get friend** | `get --friend FRIEND_ID`\u003cbr\u003e e.g., `get --friend Draco`","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"MarcusTXK"},"content":"**List Friend** | `friend --list [KEYWORD]`\u003cbr\u003e e.g., `friend --list`, `friend --list Tau`","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"MarcusTXK"},"content":"**Schedule Friend** | `friend --schedule FRIEND_ID --period START_TIME END_TIME DAY --free IS_FREE`\u003cbr\u003e e.g., `friend --schedule Draco --period 1800 2200 2 --free 1`","lastModifiedDate":"2021-10-23"},{"lineNumber":266,"author":{"gitId":"LZher385"},"content":"**Add game** | `game --add GAME_ID` \u003cbr\u003e e.g., `game --add Valorant`, `game --add ApexLegends` ","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"LZher385"},"content":"**Delete game** | `game --delete GAME_ID` \u003cbr\u003e e.g., `game --delete Valorant`","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"LZher385"},"content":"**Get game** | `get --game GAME_ID`\u003cbr\u003e e.g., `get --game Valorant`","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"MarcusTXK"},"content":"**List Games** | `game --list [KEYWORD]`\u003cbr\u003e e.g., `game --list`, `game --list Valorant`","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"LZher385"},"content":"**Link game and friend** | `friend --link FRIEND_ID --game GAME_ID --user IN_GAME_USERNAME`\u003cbr\u003e e.g., `friend --link Draco --game Valorant --user taufiq007`","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"LZher385"},"content":"**Unlink game and friend** | `friend --unlink FRIEND_ID --game GAME_ID` \u003cbr\u003e e.g., `friend --unlink Draco --game DOTA`","lastModifiedDate":"2021-10-23"},{"lineNumber":272,"author":{"gitId":"MarcusTXK"},"content":"**Viewing Help** | `help`","lastModifiedDate":"2021-10-23"},{"lineNumber":273,"author":{"gitId":"MarcusTXK"},"content":"**Exit program** | `exit`","lastModifiedDate":"2021-10-23"},{"lineNumber":274,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"MarcusTXK":110,"YeluriKetan":15,"LZher385":30,"-":101,"kevin9foong":18}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"LZher385"},"content":"    content: \"gitGud\";","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"LZher385":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"user -[USER_COLOR]\u003e ui : \"friend --delete Draco\"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"friend --delete Draco\")","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteFriend(friendToDeleteId)","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveFriendsList(friendsList)","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"tau-bar":4,"-":34}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"participant \":MainParser\" as MainParser LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"participant \":FriendCommandParser\" as FriendCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"participant \":DeleteFriendCommandParser\" as DeleteFriendCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"participant \"d:DeleteFriendCommand\" as DeleteFriendCommand LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"[-\u003e LogicManager : execute(\"friend --delete draco\")","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"LogicManager -\u003e MainParser : parseCommand(\"friend --delete draco\")","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"activate MainParser","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"create FriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"MainParser -\u003e FriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"activate FriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"FriendCommandParser --\u003e MainParser","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"deactivate FriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"MainParser -\u003e FriendCommandParser : parse(\" --delete draco\")","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"activate FriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"create DeleteFriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"FriendCommandParser -\u003e DeleteFriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"activate DeleteFriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"DeleteFriendCommandParser --\u003e FriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"deactivate DeleteFriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"FriendCommandParser -\u003e DeleteFriendCommandParser : parse(\"draco\")","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"activate DeleteFriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"create DeleteFriendCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"DeleteFriendCommandParser -\u003e DeleteFriendCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"activate DeleteFriendCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"DeleteFriendCommand --\u003e DeleteFriendCommandParser : d","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"deactivate DeleteFriendCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"DeleteFriendCommandParser --\u003e FriendCommandParser : d","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"deactivate DeleteFriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"DeleteFriendCommandParser -[hidden]-\u003e FriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"destroy DeleteFriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"FriendCommandParser --\u003e MainParser : d","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"deactivate FriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"FriendCommandParser -[hidden]-\u003e MainParser","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"destroy FriendCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"MainParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"deactivate MainParser","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"LogicManager -\u003e DeleteFriendCommand : execute()","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"activate DeleteFriendCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"DeleteFriendCommand -\u003e Model : deleteFriend(\"draco\")","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"Model --\u003e DeleteFriendCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"DeleteFriendCommand -\u003e CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"CommandResult --\u003e DeleteFriendCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"DeleteFriendCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"deactivate DeleteFriendCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"MarcusTXK":49,"-":37}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"Class MainParser","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"LogicManager -right-\u003e\"1\" MainParser","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"MainParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"note right of XYZCommand: XYZCommand \u003d AddFriendCommand, \\nAddGameCommand, HelpCommand etc","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"MarcusTXK":4,"-":42}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"Interface ReadOnlyFriendsList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"Interface ReadOnlyGamesList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"Class FriendsList","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"Class GamesList","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"Class ReadOnlyFriendsList","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"Class ReadOnlyGamesList","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"Package friend \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"Class UniqueFriendsList","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"Class Friend","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"Class FriendId","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"Class FriendName","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"Package game \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"Class UniqueGamesList","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"Class Game","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"Class GameId","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"Package gamefriendlink {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"Class GameFriendLink","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"Class UserName","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"Friend \"*\" - \"*\" Game","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"(Friend, Game) . GameFriendLink","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"FriendsList .up.|\u003e ReadOnlyFriendsList","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"GamesList .up.|\u003e ReadOnlyGamesList","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"Model .right.\u003e ReadOnlyGamesList","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"Model .left.\u003e ReadOnlyFriendsList","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"ModelManager -right-\u003e \"1\" GamesList","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"ModelManager -left-\u003e \"1\" FriendsList","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"FriendsList *--\u003e \"1\" UniqueFriendsList","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"UniqueFriendsList ---\u003e \"*\" Friend : all","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"Friend *--\u003e \"1\" FriendName","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"Friend *--\u003e \"1\" FriendId","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"Friend *--\u003e \"*\" GameFriendLink","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"GamesList *--\u003e \"1\" UniqueGamesList","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"UniqueGamesList ---\u003e \"*\" Game : all","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"Game *--\u003e \"1\" GameId","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"GameFriendLink *--\u003e \"1\" UserName","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"ModelManager ---\u003e \"*\" Friend : filtered","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"ModelManager ---\u003e \"*\" Game : filtered","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"YeluriKetan":46,"-":30}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"Class MainParser","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"HiddenOutside ..\u003e MainParser","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"MainParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"MainParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"note top of MainParser: User commands with \"~--friend\" or \"~--game\" as the first flags will go \\nthrough an additional FriendCommandParser and GameCommandParser \\nrespectively which then creates XYZCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"MarcusTXK":5,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"package \"GamesList Storage\" #F4F6F6 {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"Interface GamesListStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"Class JsonGamesListStorage","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"Class JsonSerializableGamesList","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"Class JsonAdaptedGame","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"package \"FriendsList Storage\" #F4F6F6{","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"Interface FriendsListStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"Class JsonFriendsListStorage","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"Class JsonSerializableFriendsList","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"Class JsonAdaptedFriend","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"Class JsonAdaptedGameFriendLink","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"StorageManager -up-\u003e \"1\" GamesListStorage","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"StorageManager -up-\u003e \"1\" FriendsListStorage","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"Storage -left-|\u003e FriendsListStorage","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"Storage -left-|\u003e GamesListStorage","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"Storage -right-|\u003e UserPrefsStorage","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"JsonFriendsListStorage .up.|\u003e FriendsListStorage","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"JsonFriendsListStorage ..\u003e JsonSerializableFriendsList","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"JsonSerializableFriendsList --\u003e \"*\" JsonAdaptedFriend","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"JsonAdaptedFriend --\u003e \"*\" JsonAdaptedGameFriendLink","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"JsonGamesListStorage .up.|\u003e GamesListStorage","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"JsonGamesListStorage ..\u003e JsonSerializableGamesList","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"JsonSerializableGamesList --\u003e \"*\" JsonAdaptedGame","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":28,"kevin9foong":29}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"Class FriendListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"Class FriendCard","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"Class GameListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"Class GameCard","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"Class GameMainCard","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"Class FriendMainCard","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"MainWindow *-down-\u003e \"1\" FriendListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"MainWindow *-down-\u003e \"1\" GameListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"MainWindow *-down-\u003e \"1\" GameMainCard","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"MainWindow *-down-\u003e \"1\" FriendMainCard","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"FriendListPanel -down-\u003e \"*\" FriendCard","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"GameListPanel -down-\u003e \"*\" GameCard","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"FriendListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"FriendCard --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"GameListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"GameCard --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"FriendMainCard --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"GameMainCard --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"FriendCard ..\u003e Model","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"LZher385"},"content":"GameCard ..\u003e Model","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"LZher385"},"content":"FriendListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LZher385":21,"-":52}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: gitGud","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W13-4/tp/branch/master/graph/badge.svg?token\u003dC3FWVNATXW)](https://codecov.io/gh/AY2122S1-CS2103T-W13-4/tp)","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"**gitGud is a desktop application for managing friends\u0027 gaming information.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"* If you are interested in using gitGud, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"YeluriKetan":2,"-":17}},{"path":"docs/team/kevin9foong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"kevin9foong.md---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"title: Kevin Foong\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"### Project: gitGud","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"#### What is gitGud?","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"gitGud is a desktop application for managing friends\u0027 gaming information. gitGud uses a simple Graphical User Interface","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"(GUI) combined with an optimized Command Line Interface (CLI) to give you a smooth and efficient experience. If you can","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"type fast enough, gitGud can get you contact management tasks done faster than traditional GUI-based applications.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"* **New Features**","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"  1. Project-wide refactoring of codebase to adapt AB3 to gitGud\u0027s needs. ","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     - Refactored Persons and Tags to Friends and Games classes for team usage.","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"  2. Add Friend functionality","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"  3. Edit Friend functionality","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"  4. Add Game functionality ","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"  5. Implemented Storage support for Friends and Games","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"  ","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"* **Testing**","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"  1. Wrote unit/integration tests for storage, add friend and add game commands.","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"  2. Wrote unit/integration tests(with Model) for Edit Friend functionality","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dkevin9foong\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"* **Project management**:","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"  * User Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    1. Added the initial documentation for the features `add friend`, `add game`, `delete game` and ","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"       `link game and friend`.","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    2. Maintenance of `add friend` and `add game` features in the UG.  ","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    1. Added the value proposition for gitGud.","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    2. Added use case for `add friend`.","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    3. Added documentation for Storage component (e.g. UML diagram, description etc). ","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"  * README:","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    1. Updated Github Actions build status badge to reflect status of gitGud team repository.","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    2. Updated description and organised layout of README.","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"* **Community**:","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"* **Tools**:","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"  1. Integrated the Github plugin (codecov) to the team repo.","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"* **Miscellaneous**","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"  1. Set up initial project website.","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"  2. Initial set up for team repo \u0026 organization.","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kevin9foong":54}},{"path":"docs/team/lzher385.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"title: Lim Yu Zher\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"### Project: gitGud","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"gitGud is a desktop application for managing friends\u0027 gaming information. gitGud uses a simple Graphical User Interface (GUI) combined with an optimized Command Line Interface (CLI) to give you a smooth and efficient experience. If you can type fast enough, gitGud can get you contact management tasks done faster than traditional GUI-based applications.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"* **New Feature**:","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"  1. Added the ability to link a friend with a game he/she plays.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"     1. What it does: allows the user to associate a friend in his contact list with a game that was previously recorded.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"     2. Justification: This feature improves the product significantly because a user is able to note down what games his/her friends play.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"  * User Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"    * Added documentation for the features `get --friend` and `get --game`.","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"    * Added glossary for gitGud.","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"    * Added user story for `link` feature.","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"LZher385":24}},{"path":"docs/team/marcustxk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"marcustxk.md---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"title: Marcus Tang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"### Project: gitGud","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"gitGud is a desktop application for managing friends\u0027 gaming information. gitGud uses a simple Graphical User Interface","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"(GUI) combined with an optimized Command Line Interface (CLI) to give you a smooth and efficient experience. If you can","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"type fast enough, gitGud can get you contact management tasks done faster than traditional GUI-based applications.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"* **New Feature**: Added the ability to list friends.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"  * What it does: allows the user to list all friends stored in gitGud, with the ability to filter by friend id containing any of the given keywords.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"  * Justification: This feature improves the product significantly because a user can easily view all friends they have and apply any filters to easily find specific friends.","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"* **New Feature**: Added the ability to list games.","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"  * What it does: allows the user to list all games stored in gitGud, with the ability to filter by game id containing any of the given keywords.","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"  * Justification: This feature improves the product significantly because a user can easily view all games they have and apply any filters to easily find specific games.","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"* **Refactor**: Refactored the parser to support new syntax of commands for games and friends each having their own CRUD commands using the flag system","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dMarcusTXK\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dMarcusTXK\u0026tabRepo\u003dAY2122S1-CS2103T-W13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"  * User Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    * Added documentation for the features `list --friend` and `list --game` .","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    * Created mockup GUI for gitGud `v1.1` - `v1.2`.","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    * Added command format notes.","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    * Added personas for gitGud.","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    * Added user story for `list` feature.","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"MarcusTXK":33}},{"path":"docs/team/tau-bar.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"tau-bar.md---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"title: Taufiq\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"### Project: gitGud","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"gitGud is a desktop application for managing friends\u0027 gaming information. gitGud uses a simple Graphical User Interface","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"(GUI) combined with an optimized Command Line Interface (CLI) to give you a smooth and efficient experience. If you can","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"type fast enough, gitGud can get you contact management tasks done faster than traditional GUI-based applications.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"* **New Feature**:","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"  1. Added the ability to add friends.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"      1. What it does: allows the user to add a friend to gitGud by adding the friend\u0027s unique `FRIEND_ID` and","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"         optionally, `FRIEND_NAME`.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"      2. Justification: This feature improves the product significantly, as it is a core feature, which allows the","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"         user to add the friend to gitGud to start planning their gaming schedule with that friend.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"  2. Added the ability to delete friends.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"     1. What it does: allows the user to delete a friend from gitGud using the friend\u0027s unique `FRIEND_ID`.","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"     2. Justification: This feature improves the product significantly because a user can easily delete a friend from","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"           gitGud in the event that they made a mistake in the details or simply wishes to remove a friend.","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"  3. Added the ability to view a detailed view of a friend or game.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"     1. What it does: allows the user to see the games that are played by a friend, or friends that play a game","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"     2. Justification: This feature improves the product significantly as a user can now view what friends play what ","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"        game and what games a friend plays.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"  4. Added the ability to delete games.","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"      1. What it does: allows the user to delete a game from gitGud using the game\u0027s unique `GAME_ID`.","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"      2. Justification: This feature improves the product significantly because a user can easily delete a game from","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"         gitGud in the event that they made a mistake in the details or simply wishes to remove a game.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"  ","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"* **Testing**","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"  1. Adapted the previous tests for our implementation of AddFriendCommand and DeleteFriendCommand.","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"  2. Added tests for DeleteGameCommand and DeleteGameCommandParser.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"  ","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dtau-bar\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dMarcusTXK\u0026tabRepo\u003dAY2122S1-CS2103T-W13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"    * User Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        * Added documentation for the features `friend --delete`.","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"        * Added user story for gitGud.","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"        * Added use case for `delete` feature.","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"    * README:","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        * Added acknowledgements section and acknowledgements for project. ","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"tau-bar":48}},{"path":"docs/team/yeluriketan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"layout: page","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"title: Yeluri Ketan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"### Project: gitGud","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"#### What is gitGud?","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"gitGud is a desktop application for managing friends\u0027 gaming information. gitGud uses a simple Graphical User Interface","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"(GUI) combined with an optimized Command Line Interface (CLI) to give you a smooth and efficient experience. If you can","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"type fast enough, gitGud can get you contact management tasks done faster than traditional GUI-based applications.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"* **New Features**:","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    1. Created the structure and support for Games and GameFriendLinks","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"       - Created the necessary objects, lists, and integrated them into the gitGud\u0027s model. ","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    2. Added the ability to get a friend contact.","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"       - What it does: allows the user to get all information linked to a friend contact.","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"       - Justification: This feature improves the product significantly because a user is now able to view all the information ","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"       about a friend at one place, which includes all the games and the respective in-game ids.","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"* **Testing**","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    1. Wrote unit/integration tests for Game, GameFriendLink and related classes.","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    2. Wrote unit/integration tests for get friend and get game command.","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dYeluriKetan\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dYeluriKetan\u0026tabRepo\u003dAY2122S1-CS2103T-W13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"* **Project management**:","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    * User Guide:","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        * Added the Introduction, Quick start, FAQ and Command Summary to complement the rest of the documentation.","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        * Added use case for the `get` feature.","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        * Added the Non-Functional Requirements (NFR) section.","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        * Update the `Model` component","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    * README:","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        * Created and added the product logo.","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"* **Community**:","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"* **Tools**:","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"YeluriKetan":44}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":" * object that maps flags to their respective argument values. Only the","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":" * given flags will be recognized in the arguments string.","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"MarcusTXK"},"content":" * {@code preamble \u003cflag\u003evalue \u003cflag\u003evalue ...}","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"MarcusTXK"},"content":" * @param flags   Prefixes to tokenize the arguments string with","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"MarcusTXK"},"content":" * @return           ArgumentMultimap object that maps flags to their","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"MarcusTXK"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new flag `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"MarcusTXK"},"content":" * Returns the last value of {@code flag}.","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"MarcusTXK"},"content":"public Optional\u003cString\u003e getValue(Prefix flag) {","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"MarcusTXK"},"content":"    List\u003cString\u003e values \u003d getAllValues(flag);","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"MarcusTXK":9,"-":392}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"YeluriKetan"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `list` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"YeluriKetan":1,"-":300}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":21,"kevin9foong":4}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.GamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.storage.FriendsListStorage;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.storage.GamesListStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.storage.JsonFriendsListStorage;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.storage.JsonGamesListStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        FriendsListStorage friendsListStorage \u003d new JsonFriendsListStorage(userPrefs.getFriendsListFilePath());","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        GamesListStorage gamesListStorage \u003d new JsonGamesListStorage(userPrefs.getGamesListFilePath());","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        storage \u003d new StorageManager(friendsListStorage, gamesListStorage, userPrefsStorage);","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s friends list, games list and","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"     * {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"     * The data from the sample friend\u0027s list will be used instead if {@code storage}\u0027s friends list is not found,","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"     * or an empty friends list will be used instead if errors occur when reading {@code storage}\u0027s friends list.","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"        ReadOnlyGamesList initialGamesList \u003d loadInitialGamesList(storage);","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"        ReadOnlyFriendsList initialFriendsList \u003d loadInitialFriendsList(storage);","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"        // verify valid Games exist for all GameFriendLinks in initial friends list.","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"        if (!checkFriendsGamesExist(initialGamesList, initialFriendsList)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"            logger.info(\"Games linked to friends are not found in the games list. Loading an empty friends list.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"            initialFriendsList \u003d new FriendsList();","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"        return new ModelManager(initialFriendsList, initialGamesList, userPrefs);","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"    private ReadOnlyGamesList loadInitialGamesList(Storage storage) {","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"            Optional\u003cReadOnlyGamesList\u003e loadedGamesList \u003d storage.readGamesList();","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"            if (loadedGamesList.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"                logger.info(\"Game data file not found. Loading an empty games list.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"                return new GamesList();","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"            } else {","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"                return loadedGamesList.get();","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"            logger.warning(\"Game data file not in the correct format. Loading an empty games list.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"            return new GamesList();","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"            logger.info(\"Problem encountered reading game data file. Loading an empty games list.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"            return new GamesList();","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"kevin9foong"},"content":"    private ReadOnlyFriendsList loadInitialFriendsList(Storage storage) {","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"            Optional\u003cReadOnlyFriendsList\u003e loadedFriendsList \u003d storage.readFriendsList();","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"            if (loadedFriendsList.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"                logger.info(\"Friend data file not found. Loading empty friends list.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"                return new FriendsList();","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"            return loadedFriendsList.get();","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"kevin9foong"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"            logger.warning(\"Friend data file not in the correct format. Loading an empty friends list.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"            return new FriendsList();","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"            logger.info(\"Problem encountered reading friend data file. Loading an empty friends list.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"            return new FriendsList();","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"kevin9foong"},"content":"     * Checks if all games linked as {@code GameFriendLink} in Friend stored in {@code friendsList} exist in the","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"kevin9foong"},"content":"     * {@code gamesList}.","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"kevin9foong"},"content":"     * @param gamesList list of games which should contain all games friends link to.","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"kevin9foong"},"content":"     * @param friendsList list of friends to check if all games linked by Friend elements are stored in the gamesList.","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"kevin9foong"},"content":"     * @return whether all games linked to by friends in the friends list exist in the games list.","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"kevin9foong"},"content":"    private boolean checkFriendsGamesExist(ReadOnlyGamesList gamesList, ReadOnlyFriendsList friendsList) {","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"kevin9foong"},"content":"        List\u003cGameId\u003e includedGameIds \u003d gamesList.getGamesList().stream().map(Game::getGameId)","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"kevin9foong"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"kevin9foong"},"content":"        for (Friend friend : friendsList.getFriendsList()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"kevin9foong"},"content":"            for (GameFriendLink gameFriendLink : friend.getGameFriendLinks()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"kevin9foong"},"content":"                if (!includedGameIds.contains(gameFriendLink.getGameId())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"kevin9foong"},"content":"                    return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"kevin9foong"},"content":"                }","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"kevin9foong"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"YeluriKetan":2,"-":164,"kevin9foong":79}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":112,"kevin9foong":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_UNKNOWN_FRIEND_FLAG \u003d \"Unknown friend flag\";","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_UNKNOWN_GAME_FLAG \u003d \"Unknown game flag\";","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"    public static final String MESSAGE_NONEXISTENT_FRIEND_ID \u003d \"That friend is not found with the current list!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"    public static final String MESSAGE_NONEXISTENT_GAME_ID \u003d \"That game is not found with the current list!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    public static final String MESSAGE_INVALID_FRIEND_ID \u003d \"No friend found with the FRIEND_ID - %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    public static final String MESSAGE_INVALID_GAME_ID \u003d \"No game found with the GAME_ID - %1$s\";","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"    public static final String MESSAGE_GAME_NOT_ASSOCIATED \u003d \"That friend is not currently associated with the game!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_FRIEND_ID_NOT_FOUND \u003d \"No friend found with the FRIEND_ID - %1$s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_GAME_ID_NOT_FOUND \u003d \"No game found with the GAME_ID - %1$s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_INVALID_DAY_TIME_FORMAT \u003d \"Invalid day or time format - %1$s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_END_TIME_ORDER \u003d \"End time cannot be before/be the same as start time\";","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tau-bar":1,"MarcusTXK":4,"LZher385":2,"YeluriKetan":2,"-":11,"kevin9foong":2}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":116,"kevin9foong":1}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"kevin9foong":1}},{"path":"src/main/java/seedu/address/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":34,"kevin9foong":3}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":83,"kevin9foong":2}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":142,"kevin9foong":4}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"     * Ignores case, partial match is allowed.","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"CD\") \u003d\u003d false // no match","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"    public static boolean containsPartialWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"        requireNonNull(word);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"                .anyMatch(wordInPreppedSentence -\u003e wordInPreppedSentence.contains(preppedWord));","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MarcusTXK":27,"-":68,"kevin9foong":3}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the FriendsBook.","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     * @see seedu.address.model.Model#getFriendsList()","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    ReadOnlyFriendsList getFriendsBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the GamesBook.","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"     * @see seedu.address.model.Model#getGamesList()","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    ReadOnlyGamesList getGamesBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"     * Returns an unmodifiable view of the filtered list of friends","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    ObservableList\u003cFriend\u003e getFilteredFriendsList();","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"     * Returns an unmodifiable view of the filtered list of games","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    ObservableList\u003cGame\u003e getFilteredGamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"YeluriKetan":11,"-":46,"kevin9foong":10}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.MainParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    private final MainParser mainParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        mainParser \u003d new MainParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        Command command \u003d mainParser.parseCommand(commandText);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"            storage.saveFriendsList(model.getFriendsList());","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"            storage.saveGamesList(model.getGamesList());","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    public ReadOnlyFriendsList getFriendsBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        return model.getFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"    public ReadOnlyGamesList getGamesBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"        return model.getGamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"    public ObservableList\u003cFriend\u003e getFilteredFriendsList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        return model.getFilteredFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"    public ObservableList\u003cGame\u003e getFilteredGamesList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"        return model.getFilteredGamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"MarcusTXK":4,"YeluriKetan":12,"-":72,"kevin9foong":6}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.GamesList;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":" * Clears the gitGud friends and games list.","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"gitGud friends and games list have been cleared!\";","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"        model.setFriendsList(new FriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        model.setGamesList(new GamesList());","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandType.CLEAR);","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tau-bar":1,"YeluriKetan":5,"-":18,"kevin9foong":2}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     * The application should exit.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"    /** The command is a {@Code friend} command. */","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"    private final CommandType commandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"     * The friend to get during {@Code get} commands or if the {@Code list} command","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"     * only returns one friend.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"    private final Friend friendToGet;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"     * The game to get during {@Code get} commands or if the {@Code list} command","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"     * only returns one game.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"    private final Game gameToGet;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"    //TODO : Remove this once merged with main code.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        this.friendToGet \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"        this.commandType \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"        this.gameToGet \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"    public CommandResult(String feedbackToUser, CommandType commandType) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"        this.exit \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"tau-bar"},"content":"        this.friendToGet \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"        this.gameToGet \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"tau-bar"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"tau-bar"},"content":"    public CommandResult(String feedbackToUser, CommandType commandType, Friend friendToGet) {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"tau-bar"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"tau-bar"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"tau-bar"},"content":"        this.exit \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"tau-bar"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"tau-bar"},"content":"        this.friendToGet \u003d friendToGet;","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"tau-bar"},"content":"        this.gameToGet \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"tau-bar"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"tau-bar"},"content":"    public CommandResult(String feedbackToUser, CommandType commandType, Game gameToGet) {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"tau-bar"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"tau-bar"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"tau-bar"},"content":"        this.exit \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"tau-bar"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"tau-bar"},"content":"        this.friendToGet \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"tau-bar"},"content":"        this.gameToGet \u003d gameToGet;","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"tau-bar"},"content":"    public Friend getFriendToGet() {","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"tau-bar"},"content":"        return friendToGet;","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"tau-bar"},"content":"    public Game getGameToGet() {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"tau-bar"},"content":"        return gameToGet;","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"tau-bar"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"tau-bar"},"content":"        return commandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"tau-bar"},"content":"    /** Returns true if the command is a {@Code help} command. */","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"tau-bar"},"content":"    /** Returns true if the command is a {@Code help} command. */","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"tau-bar"},"content":"    /** Returns true if the command is a {@Code friend --get} command. */","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"tau-bar"},"content":"    public boolean isFriendGet() {","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"tau-bar"},"content":"        return commandType.equals(CommandType.FRIEND_GET);","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"tau-bar"},"content":"    /** Returns true if the command is a {@Code game --get} command. */","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"tau-bar"},"content":"    public boolean isGameGet() {","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"tau-bar"},"content":"        return commandType.equals(CommandType.GAME_GET);","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tau-bar":82,"-":69,"kevin9foong":6}},{"path":"src/main/java/seedu/address/logic/commands/CommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"public enum CommandType {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"    FRIEND_ADD, FRIEND_EDIT, FRIEND_ADD_GAME_SKILL, FRIEND_DELETE, FRIEND_GET, FRIEND_LIST, FRIEND_SCHEDULE,","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"    FRIEND_LINK, FRIEND_UNLINK,","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"    GAME_ADD, GAME_DELETE, GAME_GET, GAME_LIST,","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"    HELP, EXIT, CLEAR","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tau-bar":4,"MarcusTXK":4}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, CommandType.EXIT);","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tau-bar":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, CommandType.HELP);","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tau-bar":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/friends/AddFriendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"public class AddFriendCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    public static final String COMMAND_WORD \u003d \"--add\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_SUCCESS_ADD_FRIEND \u003d \"New friend added - %1$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_DUPLICATE_FRIEND_ID \u003d \"A friend with the same FRIEND_ID already exists in \"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"            + \"the friends list.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_USAGE \u003d \"To add a friend: \\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"            + \"friend \" + COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"            + \" FRIEND_ID [--name NAME]: \"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"            + \"Adds a friend to the gitGud friends list. \\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"            + \"Example: \"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"            + \"myfeely923 \"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"            + FLAG_FRIEND_NAME","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"            + \"Yu Zher \";","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"    private final Friend toAdd;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"     * Constructor for AddFriendCommand that takes in the friend to add as the argument.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"     * @param friend The friend to be added.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"    public AddFriendCommand(Friend friend) {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"        requireNonNull(friend);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"        this.toAdd \u003d friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        if (model.hasFriendWithId(toAdd.getFriendId())) {","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FRIEND_ID);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"        model.addFriend(toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_ADD_FRIEND, toAdd), CommandType.FRIEND_ADD);","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"                || (other instanceof AddFriendCommand // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"                \u0026\u0026 toAdd.equals(((AddFriendCommand) other).toAdd));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":38,"MarcusTXK":5,"YeluriKetan":1,"kevin9foong":13}},{"path":"src/main/java/seedu/address/logic/commands/friends/AddFriendGameSkillCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_VALUE;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.exceptions.GameLinkNotFoundException;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.SkillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"public class AddFriendGameSkillCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public static final String COMMAND_WORD \u003d \"--skill\";","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_SUCCESS_ADD_FRIEND_GAME_SKILL \u003d \"Successfully updated skill value for \"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"            + \"friend %1$s for the game %2$s to %3$s.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_USAGE \u003d \"To add a skill value for a game linked to friend: \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"            + \"friend \"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"            + COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"            + \" FRIEND_ID \"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"            + FLAG_GAME","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"            + \"GAME_ID \"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"            + FLAG_VALUE","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"            + \"NUMBER_VALUE \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"            + \"Assigns a skill level ranging from 0 - 10 (inclusive) to store friend\u0027s game skill. \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"            + \"Example: friend \"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"            + \"myfeely923 \"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"            + FLAG_GAME","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"            + \"CSGO \"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"            + FLAG_VALUE","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"            + \"10\";","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_FRIEND_ID_NOT_IN_MODEL \u003d \"Adding skill value failed. \"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"            + \"Could not find FRIEND_ID in friends list.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_NO_GAME_LINK_FOUND \u003d \"Adding skill value failed. \"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"            + \"Game_ID provided is not linked to friend.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    private final FriendId friendIdToAddSkillFor;","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    private final GameId gameIdToAddSkillFor;","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    private final SkillValue skillValue;","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"     * Constructor for AddFriendGameSkillCommand that takes in the friend and game to update skill level for","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"     * and skill value to assign for as the argument.","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"     * @param friendId   identifier of {@code Friend} to set skill value for.","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"     * @param gameId     identifier of  {@code Game} to set skill value for.","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"     * @param skillValue value to set friend\u0027s game skill value as.","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    public AddFriendGameSkillCommand(FriendId friendId, GameId gameId, SkillValue skillValue) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friendId);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(gameId);","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(skillValue);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        this.friendIdToAddSkillFor \u003d friendId;","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        this.gameIdToAddSkillFor \u003d gameId;","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        this.skillValue \u003d skillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        if (!model.hasFriendWithId(this.friendIdToAddSkillFor)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"            throw new CommandException(MESSAGE_FRIEND_ID_NOT_IN_MODEL);","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        Friend friendToUpdateSkillValue \u003d model.getFriend(friendIdToAddSkillFor);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"            friendToUpdateSkillValue.updateGameFriendLinkSkillValue(gameIdToAddSkillFor, skillValue);","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        } catch (GameLinkNotFoundException glnfe) {","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"            throw new CommandException(MESSAGE_NO_GAME_LINK_FOUND);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_ADD_FRIEND_GAME_SKILL, friendIdToAddSkillFor,","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"                gameIdToAddSkillFor, skillValue), CommandType.FRIEND_ADD_GAME_SKILL);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"                || (other instanceof AddFriendGameSkillCommand // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 friendIdToAddSkillFor.equals(((AddFriendGameSkillCommand) other).friendIdToAddSkillFor)","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 gameIdToAddSkillFor.equals(((AddFriendGameSkillCommand) other).gameIdToAddSkillFor)","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 skillValue.equals(((AddFriendGameSkillCommand) other).skillValue));","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kevin9foong":88}},{"path":"src/main/java/seedu/address/logic/commands/friends/DeleteFriendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"public class DeleteFriendCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    public static final String COMMAND_WORD \u003d \"--delete\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes the person identified by the friend id\"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"            + \".\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"            + \"Parameters: FRIEND_ID (must be an existing friend id)\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"            + \"Example: \" + COMMAND_WORD + \" Draco\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"    private FriendId friendToDeleteId;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"     * Command to delete a friend using the unique FRIEND_ID.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"     * @param friendId The friend id to identify the friend to be deleted.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"    public DeleteFriendCommand(FriendId friendId) {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"        requireNonNull(friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"        friendToDeleteId \u003d friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        if (model.hasFriendWithId(friendToDeleteId)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"            model.deleteFriend(friendToDeleteId);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"                    friendToDeleteId), CommandType.FRIEND_DELETE);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"            throw new CommandException(Messages.MESSAGE_NONEXISTENT_FRIEND_ID);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"                || (other instanceof DeleteFriendCommand // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 friendToDeleteId.equals(((DeleteFriendCommand) other).friendToDeleteId)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":44,"MarcusTXK":3,"YeluriKetan":1,"kevin9foong":2}},{"path":"src/main/java/seedu/address/logic/commands/friends/EditFriendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.Schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":" * Edits the details of an existing friend in the address book.","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"public class EditFriendCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    public static final String COMMAND_WORD \u003d \"--edit\";","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public static final String USAGE_EXAMPLE \u003d \"Example: friend \" + COMMAND_WORD + \" Draco \"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"            + FLAG_FRIEND_NAME + \"Marcus Tang\";","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_EDIT_FRIEND_SUCCESS \u003d \"Friend edited - \\nId: %1$s \\nNew name: %2$s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided. \\n\" + USAGE_EXAMPLE;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the friend identified \"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"            + \"by friend\u0027s FRIEND_ID. \"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"            + \"Parameters: FRIEND_ID \"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"            + FLAG_FRIEND_NAME + \"NEW_FRIEND_NAME \\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"            + USAGE_EXAMPLE;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    private final FriendId friendIdToEdit;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    private final EditFriendDescriptor editFriendDescriptor;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"     * @param friendIdToEdit       of the person in the filtered person list to edit","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"     * @param editFriendDescriptor details to edit the person with","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    public EditFriendCommand(FriendId friendIdToEdit, EditFriendDescriptor editFriendDescriptor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friendIdToEdit);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(editFriendDescriptor);","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        this.friendIdToEdit \u003d friendIdToEdit;","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        this.editFriendDescriptor \u003d new EditFriendDescriptor(editFriendDescriptor);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"     * Creates and returns a {@code Friend} with the details of {@code friendToEdit}","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"     * edited with {@code EditFriendDescriptor}.","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"    private static Friend createEditedFriend(Friend friendToEdit, EditFriendDescriptor editFriendDescriptor) {","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        assert friendToEdit !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        assert editFriendDescriptor !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        FriendId friendId \u003d friendToEdit.getFriendId();","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"        FriendName updatedFriendName \u003d editFriendDescriptor.getFriendName().orElse(friendToEdit.getFriendName());","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        Set\u003cGameFriendLink\u003e gameFriendLinks \u003d friendToEdit.getGameFriendLinks();","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"        Schedule schedule \u003d friendToEdit.getSchedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"        return new Friend(friendId, updatedFriendName, gameFriendLinks, schedule);","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        if (!model.hasFriendWithId(this.friendIdToEdit)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_FRIEND_ID_NOT_FOUND,","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"                    this.friendIdToEdit));","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        Friend friendToEdit \u003d model.getFriend(friendIdToEdit);","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"        Friend editedFriend \u003d createEditedFriend(friendToEdit, editFriendDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"        model.setFriend(friendToEdit, editedFriend);","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_FRIEND_SUCCESS,","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"                editedFriend.getFriendId(),","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"                editedFriend.getFriendName()),","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"                CommandType.FRIEND_EDIT);","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"        if (!(other instanceof EditFriendCommand)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"        // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"        EditFriendCommand e \u003d (EditFriendCommand) other;","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"        return friendIdToEdit.equals(e.friendIdToEdit)","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 editFriendDescriptor.equals(e.editFriendDescriptor);","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"     * Stores the details to edit the friend with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"     * corresponding field value of the friend.","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"    public static class EditFriendDescriptor {","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"        private FriendName friendName;","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"        public EditFriendDescriptor() {","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"        /**","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"kevin9foong"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"         */","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"        public EditFriendDescriptor(EditFriendDescriptor toCopy) {","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"            setFriendName(toCopy.friendName);","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"        /**","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"         */","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"kevin9foong"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"            return CollectionUtil.isAnyNonNull(friendName);","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"        public Optional\u003cFriendName\u003e getFriendName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"            return Optional.ofNullable(friendName);","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"kevin9foong"},"content":"        public void setFriendName(FriendName friendName) {","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"kevin9foong"},"content":"            this.friendName \u003d friendName;","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"kevin9foong"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"kevin9foong"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"kevin9foong"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"kevin9foong"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"kevin9foong"},"content":"                return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"kevin9foong"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"kevin9foong"},"content":"            if (!(other instanceof EditFriendDescriptor)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"kevin9foong"},"content":"                return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"kevin9foong"},"content":"            // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"kevin9foong"},"content":"            EditFriendDescriptor e \u003d (EditFriendDescriptor) other;","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"kevin9foong"},"content":"            return getFriendName().equals(e.getFriendName());","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"MarcusTXK":7,"kevin9foong":152}},{"path":"src/main/java/seedu/address/logic/commands/friends/GetFriendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.GameFriendLinksContainsGameIdPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":" * Gets and displays the complete information of a friend from the address book whose FRIEND_ID matches the given","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":" * argument keywords.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"public class GetFriendCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    public static final String COMMAND_FAMILY \u003d \"friend\";","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    public static final String COMMAND_WORD \u003d \"--get\";","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_FAMILY + \" \" + COMMAND_WORD","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"            + \": Gets all the information about a friend whose \"","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"            + \"FRIEND_ID matches the given keyword(s) exactly (case-insensitive) and displays them in a \"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"            + \"easy-to-read format.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"            + \"Parameters: KEYWORD\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            + \"Example: \" + COMMAND_FAMILY + \" \" + COMMAND_WORD + \" Draco\";","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    public static final String MESSAGE_FRIEND_FULL_INFORMATION \u003d \"Showing the complete information of %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    private final FriendId friendId;","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    public GetFriendCommand(FriendId friendId) {","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        this.friendId \u003d friendId;","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        if (!model.hasFriendWithId(friendId)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"            throw new CommandException(","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"                    String.format(Messages.MESSAGE_FRIEND_ID_NOT_FOUND, friendId.value));","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        Friend friend \u003d model.getFriend(friendId);","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        model.updateFilteredGamesList(new GameFriendLinksContainsGameIdPredicate(friend));","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"                String.format(MESSAGE_FRIEND_FULL_INFORMATION, friendId.value), CommandType.FRIEND_GET, friend);","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"                || (other instanceof GetFriendCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 friendId.equals(((GetFriendCommand) other).friendId)); // state check","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"tau-bar":2,"MarcusTXK":6,"YeluriKetan":51,"kevin9foong":1}},{"path":"src/main/java/seedu/address/logic/commands/friends/LinkFriendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.gamefriendlink.UserName;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":" * Links an existing friend to an existing game, associating them.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"public class LinkFriendCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"    public static final String COMMAND_WORD \u003d \"--link\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"            + \": Links a game and the associated in-game username \"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"            + \"to a friend. \\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"            + \"Parameters: --friend FRIEND_ID --game GAME_NAME --user IN_GAME_USERNAME...\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"            + \"Example: \" + COMMAND_WORD + \" --friend Draco --game Valorant --user SmurfLord\";","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"    private final FriendId friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"    private final GameId gameId;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"    private final UserName userName;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"     * Constructor for LinkFriendCommand.","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"    public LinkFriendCommand(FriendId friendId, GameId gameId, UserName userName) {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"        requireAllNonNull(friendId, gameId, userName);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"        this.friendId \u003d friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"        this.gameId \u003d gameId;","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"        this.userName \u003d userName;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"        if (!model.hasFriendWithId(friendId)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"            throw new CommandException(Messages.MESSAGE_NONEXISTENT_FRIEND_ID);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"        if (!model.hasGameWithId(gameId)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"            throw new CommandException(Messages.MESSAGE_NONEXISTENT_GAME_ID);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"        // Obtain a Friend object from the model that matches friendId","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"        Friend friendToEdit \u003d model.getFriend(friendId);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"        Game gameToLink \u003d model.getGame(gameId);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"LZher385"},"content":"        GameFriendLink gameFriendLink \u003d new GameFriendLink(gameToLink.getGameId(), friendToEdit.getFriendId(),","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"LZher385"},"content":"                userName);","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"        model.linkFriend(friendToEdit, gameFriendLink);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        model.updateFilteredFriendsList(Model.PREDICATE_SHOW_ALL_FRIENDS);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"LZher385"},"content":"        return new CommandResult(generateSuccessMessage(friendToEdit), CommandType.FRIEND_LINK);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"LZher385"},"content":"     * Generates a success message referencing the friend and the games linked to him.","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"LZher385"},"content":"    public String generateSuccessMessage(Friend friend) {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"LZher385"},"content":"        return friend.getFriendId() + \" is now linked to \" + gameId + \" with username \" + userName + \".\";","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"LZher385"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"LZher385"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"LZher385"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"LZher385"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"LZher385"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"LZher385"},"content":"        if (!(other instanceof LinkFriendCommand)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"LZher385"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"LZher385"},"content":"        // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"LZher385"},"content":"        LinkFriendCommand e \u003d (LinkFriendCommand) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"LZher385"},"content":"        return friendId.equals(e.friendId)","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"LZher385"},"content":"                \u0026\u0026 gameId.equals(e.gameId)","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"LZher385"},"content":"                \u0026\u0026 userName.equals(e.userName);","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"LZher385":91,"YeluriKetan":1}},{"path":"src/main/java/seedu/address/logic/commands/friends/ListFriendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.FriendIdContainsKeywordPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"public class ListFriendCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    public static final String COMMAND_WORD \u003d \"--list\";","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_SUCCESS_PREPEND \u003d \"Listed all friends\";","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_UNKNOWN_PREDICATE \u003d \"Unknown search filter entered\";","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all friends whose id contain any of \"","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"            + \"Parameters: --list [KEYWORD] \\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"            + \"Example: \" + COMMAND_WORD + \"--list alice\";","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    private final Predicate\u003cFriend\u003e predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    public ListFriendCommand(Predicate\u003cFriend\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        if (predicate instanceof FriendIdContainsKeywordPredicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"            FriendIdContainsKeywordPredicate friendIdContainsKeywordPredicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"                    (FriendIdContainsKeywordPredicate) predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"            model.updateFilteredFriendsList(friendIdContainsKeywordPredicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"            return new CommandResult(getMessageSuccess(), CommandType.FRIEND_LIST);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        // ListCommand initialized with unknown predicate","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        throw new CommandException(MESSAGE_UNKNOWN_PREDICATE);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"     * Returns success message to display after running list","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"     * @return String containing success message","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"    public String getMessageSuccess() throws CommandException {","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"        if (predicate instanceof FriendIdContainsKeywordPredicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"            FriendIdContainsKeywordPredicate friendIdContainsKeywordPredicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"                    (FriendIdContainsKeywordPredicate) predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"            String keyword \u003d friendIdContainsKeywordPredicate.getKeyword();","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"            String messageEnd \u003d keyword.isEmpty()","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"                    ? \"\"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"                    : \" whose id contains the keyword: \" + keyword;","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"            return MESSAGE_SUCCESS_PREPEND + messageEnd;","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"        throw new CommandException(MESSAGE_UNKNOWN_PREDICATE);","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"                || (other instanceof ListFriendCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 predicate.equals(((ListFriendCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tau-bar":2,"MarcusTXK":56,"-":16,"kevin9foong":1}},{"path":"src/main/java/seedu/address/logic/commands/friends/ScheduleFriendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DAY_TIME_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.Schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.exceptions.InvalidDayTimeException;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"public class ScheduleFriendCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    public static final String COMMAND_WORD \u003d \"--schedule\";","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Schedules free time for friend.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"            + \"Parameters: FRIEND_ID --period START_HOUR END_HOUR DAY --free IS_FREE\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"            + \"Example: \" + COMMAND_WORD + \" Draco --period 0800 0900 3 --free 1\\n\";","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_SCHEDULE_FRIEND_SUCCESS \u003d \"Scheduled Friend: %1$s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    private FriendId friendToScheduleId;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    private int day;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    private String startTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    private String endTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    private boolean isFree;","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"     * Command to schedule a friend using the unique FRIEND_ID.","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"     * @param friendId  Id of friend to be scheduled.","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"     * @param day       Day to set.","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"     * @param startTime Start of timeslot.","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"     * @param endTime   End of timeslot.","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"     * @param isFree    Is timeslot free.","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"    public ScheduleFriendCommand(FriendId friendId, int day, String startTime, String endTime, boolean isFree) {","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        requireNonNull(friendId);","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        friendToScheduleId \u003d friendId;","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"        this.isFree \u003d isFree;","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"     * Creates friend with updated schedule.","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"     * @param friendToSchedule Friend to update.","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"     * @return Friend with updated schedule.","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"     * @throws InvalidDayTimeException Invalid day or time format","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"    private Friend createScheduledFriend(Friend friendToSchedule) throws InvalidDayTimeException {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        FriendId friendId \u003d friendToSchedule.getFriendId();","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"        FriendName updatedFriendName \u003d friendToSchedule.getFriendName();","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"        Set\u003cGameFriendLink\u003e gameFriendLinks \u003d friendToSchedule.getGameFriendLinks();","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"        Schedule schedule \u003d friendToSchedule.getSchedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"        schedule.setScheduleDay(day, startTime, endTime, isFree);","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"        return new Friend(friendId, updatedFriendName, gameFriendLinks, schedule);","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"        if (!model.hasFriendWithId(friendToScheduleId)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"            throw new CommandException(Messages.MESSAGE_NONEXISTENT_FRIEND_ID);","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"            Friend friendToSchedule \u003d model.getFriend(friendToScheduleId);","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"            Friend scheduledFriend \u003d createScheduledFriend(friendToSchedule);","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"            model.setFriend(friendToSchedule, scheduledFriend);","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"            return new CommandResult(String.format(MESSAGE_SCHEDULE_FRIEND_SUCCESS,","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"                    friendToScheduleId), CommandType.FRIEND_SCHEDULE);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"        } catch (InvalidDayTimeException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_DAY_TIME_FORMAT, e.getMessage()));","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"                || (other instanceof ScheduleFriendCommand // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 friendToScheduleId.equals(((ScheduleFriendCommand) other).friendToScheduleId)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"MarcusTXK":92}},{"path":"src/main/java/seedu/address/logic/commands/friends/UnlinkFriendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"public class UnlinkFriendCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"    public static final String COMMAND_WORD \u003d \"--unlink\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"            + \": Unlinks friend with the associated game. \\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"            + \"Parameters: --friend FRIEND_ID --game GAME_NAME...\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"            + \"Example: \" + COMMAND_WORD + \" --friend Draco --game Valorant\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"    private final FriendId friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"    private final GameId gameId;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"     * Constructor for UnlinkFriendCommand.","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"    public UnlinkFriendCommand(FriendId friendId, GameId gameId) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"        requireAllNonNull(friendId, gameId);","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"        this.friendId \u003d friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"        this.gameId \u003d gameId;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"        if (!model.hasFriendWithId(friendId)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"            throw new CommandException(Messages.MESSAGE_NONEXISTENT_FRIEND_ID);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"        if (!model.hasGameWithId(gameId)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"            throw new CommandException(Messages.MESSAGE_NONEXISTENT_GAME_ID);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"        // Obtain a Friend object from the model that matches friendId","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"        Friend friendToEdit \u003d model.getFriend(friendId);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"        Game gameToUnlink \u003d model.getGame(gameId);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"        if (!friendToEdit.hasGameAssociation(gameToUnlink)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"            throw new CommandException(Messages.MESSAGE_GAME_NOT_ASSOCIATED);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"        model.unlinkFriend(friendToEdit, gameToUnlink);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        model.updateFilteredFriendsList(Model.PREDICATE_SHOW_ALL_FRIENDS);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"        return new CommandResult(generateSuccessMessage(friendToEdit), CommandType.FRIEND_UNLINK);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"LZher385"},"content":"     * Generates a success message referencing the friend and the games unlinked.","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"LZher385"},"content":"    public String generateSuccessMessage(Friend friend) {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"LZher385"},"content":"        return friend.getFriendId() + \" is now unlinked to \" + gameId + \".\";","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"LZher385"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"LZher385"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"LZher385"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"LZher385"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"LZher385"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"LZher385"},"content":"        if (!(other instanceof UnlinkFriendCommand)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"LZher385"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"LZher385"},"content":"        // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"LZher385"},"content":"        UnlinkFriendCommand e \u003d (UnlinkFriendCommand) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"LZher385"},"content":"        return friendId.equals(e.friendId)","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"LZher385"},"content":"                \u0026\u0026 gameId.equals(e.gameId);","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"LZher385":83,"YeluriKetan":1}},{"path":"src/main/java/seedu/address/logic/commands/games/AddGameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.commands.games;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"public class AddGameCommand extends Command {","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    public static final String COMMAND_WORD \u003d \"--add\";","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    // add command messages","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_SUCCESS_ADD_GAME \u003d \"New game added - %1$s\";","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_DUPLICATE_GAME \u003d \"A game with the same GAME_ID\"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"            + \" already exists in the gitGud games list.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_USAGE \u003d \"To add a game: \\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"            + \"game \" + COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"            + \" GAME_ID: \"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"            + \"Adds a game to the gitGud games list. \\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"            + \"Example: \"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"            + \"Valorant\";","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    private final Game toAdd;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     * Constructor for AddGameCommand that takes in the game to add as the argument.","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     * @param game The game to be added.","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public AddGameCommand(Game game) {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(game);","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        this.toAdd \u003d game;","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        if (model.hasGameWithId(toAdd.getGameId())) {","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GAME);","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        model.addGame(toAdd);","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_ADD_GAME, toAdd), CommandType.GAME_ADD);","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"                || (other instanceof AddGameCommand // instanceof handles nulls","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 toAdd.equals(((AddGameCommand) other).toAdd));","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"tau-bar":2,"YeluriKetan":1,"kevin9foong":51}},{"path":"src/main/java/seedu/address/logic/commands/games/DeleteGameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.commands.games;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"public class DeleteGameCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"    public static final String COMMAND_WORD \u003d \"--delete\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes the game identified by the game id\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"            + \".\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"            + \"Parameters: GAME_ID (must be an existing game id)\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"            + \"Example: \" + COMMAND_WORD + \" CSGO\";","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"    public static final String MESSAGE_DELETE_GAME_SUCCESS \u003d \"Deleted Game: %1$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"    private GameId gameToDeleteId;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"     * Command to delete a friend using the unique FRIEND_ID.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"     * @param gameId The friend id to identify the friend to be deleted.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"    public DeleteGameCommand(GameId gameId) {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"        requireNonNull(gameId);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"        gameToDeleteId \u003d gameId;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"     * Executes the {@Code game --delete} command.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"     * @return The resulting {@Code CommandResult} from deleting the game.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"     * @throws CommandException Thrown when the game does not exist.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        if (model.hasGameWithId(gameToDeleteId)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"            model.deleteGame(gameToDeleteId);","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_GAME_SUCCESS, gameToDeleteId),","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"                    CommandType.GAME_DELETE);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"            throw new CommandException(Messages.MESSAGE_NONEXISTENT_GAME_ID);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"                || (other instanceof DeleteGameCommand // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"                \u0026\u0026 gameToDeleteId.equals(((DeleteGameCommand) other).gameToDeleteId)); // state","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tau-bar":56}},{"path":"src/main/java/seedu/address/logic/commands/games/GetGameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.logic.commands.games;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendGameFriendLinksContainsGamePredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"public class GetGameCommand extends Command {","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    public static final String COMMAND_FAMILY \u003d \"game\";","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    public static final String COMMAND_WORD \u003d \"--get\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_FAMILY + \" \" + COMMAND_WORD","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"            + \": Gets all the information about a game whose \"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"            + \"GAME_ID matches the given keyword(s) exactly (case-insensitive) and displays them in a \"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"            + \"easy-to-read format.\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"            + \"Parameters: KEYWORD\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"            + \"Example: \" + COMMAND_FAMILY + \" \" + COMMAND_WORD + \" Minecraft\";","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    public static final String MESSAGE_GAME_FULL_INFORMATION \u003d \"Showing the complete information of %1$s\";","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    private final GameId gameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    public GetGameCommand(GameId gameId) {","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        this.gameId \u003d gameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        if (!model.hasGameWithId(gameId)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"            throw new CommandException(","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"                    String.format(Messages.MESSAGE_GAME_ID_NOT_FOUND, gameId.value));","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        Game game \u003d model.getGame(gameId);","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"        model.updateFilteredFriendsList(new FriendGameFriendLinksContainsGamePredicate(game));","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"                String.format(MESSAGE_GAME_FULL_INFORMATION, gameId.value), CommandType.GAME_GET, game);","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"                || (other instanceof GetGameCommand // instanceof handles nulls","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 gameId.equals(((GetGameCommand) other).gameId)); // state check","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"tau-bar":3,"YeluriKetan":52,"kevin9foong":1}},{"path":"src/main/java/seedu/address/logic/commands/games/ListGameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.commands.games;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.game.GameIdContainsKeywordPredicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"public class ListGameCommand extends Command {","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    public static final String COMMAND_WORD \u003d \"--list\";","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_SUCCESS_PREPEND \u003d \"Listed all games\";","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_UNKNOWN_PREDICATE \u003d \"Unknown search filter entered\";","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all games whose id contain any of \"","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"            + \"Parameters: \u003d --list [KEYWORD] \\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"            + \"Example: \" + COMMAND_WORD + \"Valorant\";","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    private final Predicate\u003cGame\u003e predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    public ListGameCommand(Predicate\u003cGame\u003e predicate) {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        if (predicate instanceof GameIdContainsKeywordPredicate) {","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"            GameIdContainsKeywordPredicate gameIdContainsKeywordPredicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"                    (GameIdContainsKeywordPredicate) predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"            model.updateFilteredGamesList(gameIdContainsKeywordPredicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"            return new CommandResult(getMessageSuccess(), CommandType.GAME_ADD);","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        // ListCommand initialized with unknown predicate","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        throw new CommandException(MESSAGE_UNKNOWN_PREDICATE);","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"     * Returns success message to display after running list","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"     * @return String containing success message","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"    public String getMessageSuccess() throws CommandException {","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"        if (predicate instanceof GameIdContainsKeywordPredicate) {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"            GameIdContainsKeywordPredicate gameIdContainsKeywordPredicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"                    (GameIdContainsKeywordPredicate) predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"            String keyword \u003d gameIdContainsKeywordPredicate.getKeyword();","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"            String messageEnd \u003d keyword.isEmpty()","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"                    ? \"\"","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"                    : \" whose id contains the keyword: \" + keyword;","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"            return MESSAGE_SUCCESS_PREPEND + messageEnd;","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"        throw new CommandException(MESSAGE_UNKNOWN_PREDICATE);","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"                || (other instanceof ListGameCommand // instanceof handles nulls","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 predicate.equals(((ListGameCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"MarcusTXK":75}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     **/","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    private final Map\u003cFlag, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"     * @param flag     Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    public void put(Flag flag, String argValue) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(flag);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        argMultimap.put(flag, argValues);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"    public Optional\u003cString\u003e getValue(Flag flag) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cString\u003e values \u003d getAllValues(flag);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"    public List\u003cString\u003e getAllValues(Flag flag) {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        if (!argMultimap.containsKey(flag)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(flag));","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        return getValue(new Flag(\"\")).orElse(\"\");","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"MarcusTXK":11,"-":48,"kevin9foong":3}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"     * @param flags      Prefixes to tokenize the arguments string with","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    public static ArgumentMultimap tokenize(String argsString, Flag... flags) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        List\u003cFlagPosition\u003e positions \u003d findAllPrefixPositions(argsString, flags);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"     * @param flags      Prefixes to find in the arguments string","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    private static List\u003cFlagPosition\u003e findAllPrefixPositions(String argsString, Flag... flags) {","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        return Arrays.stream(flags)","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    private static List\u003cFlagPosition\u003e findPrefixPositions(String argsString, Flag flag) {","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        List\u003cFlagPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, flag.getFlag(), 0);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"            FlagPosition extendedPrefix \u003d new FlagPosition(flag, prefixPosition);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, flag.getFlag(), prefixPosition);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString    Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"     * @param flagPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cFlagPosition\u003e flagPositions) {","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"        flagPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"        FlagPosition preambleMarker \u003d new FlagPosition(new Flag(\"\"), 0);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"        flagPositions.add(0, preambleMarker);","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"        FlagPosition endPositionMarker \u003d new FlagPosition(new Flag(\"\"), argsString.length());","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"        flagPositions.add(endPositionMarker);","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"        for (int i \u003d 0; i \u003c flagPositions.size() - 1; i++) {","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"            Flag argFlag \u003d flagPositions.get(i).getPrefix();","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"            String argValue \u003d extractArgumentValue(argsString, flagPositions.get(i), flagPositions.get(i + 1));","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"            argMultimap.put(argFlag, argValue);","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"                                               FlagPosition currentFlagPosition,","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"                                               FlagPosition nextFlagPosition) {","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"        Flag flag \u003d currentFlagPosition.getPrefix();","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"        int valueStartPos \u003d currentFlagPosition.getStartPosition() + flag.getFlag().length();","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"        String value \u003d argsString.substring(valueStartPos, nextFlagPosition.getStartPosition());","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"    private static class FlagPosition {","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"        private final int startPosition;","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":"        private final Flag flag;","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"        FlagPosition(Flag flag, int startPosition) {","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"            this.flag \u003d flag;","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"MarcusTXK"},"content":"        Flag getPrefix() {","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"            return flag;","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"MarcusTXK":11,"-":113,"kevin9foong":24}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"    /* Flag definitions */","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"    // command flags:","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_FRIEND \u003d new Flag(\"--friend \");","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_GAME \u003d new Flag(\"--game \");","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    public static final Flag FLAG_ADD_GAME_SKILL \u003d new Flag(\"--skill \");","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_ADD \u003d new Flag(\"--add \");","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    public static final Flag FLAG_EDIT \u003d new Flag(\"--edit \");","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_DELETE \u003d new Flag(\"--delete \");","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_GET \u003d new Flag(\"--get \");","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_LIST \u003d new Flag(\"--list \");","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_SCHEDULE \u003d new Flag(\"--schedule \");","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    public static final Flag FLAG_LINK \u003d new Flag(\"--link \");","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"    public static final Flag FLAG_UNLINK \u003d new Flag(\"--unlink \");","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_POSTFIX \u003d new Flag(\" \"); // for flags with optional fields","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    // data flags","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_FRIEND_NAME \u003d new Flag(\"--name \");","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"    public static final Flag FLAG_USERNAME \u003d new Flag(\"--user \");","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_PERIOD \u003d new Flag(\"--period \");","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_FREE \u003d new Flag(\"--free \");","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public static final Flag FLAG_VALUE \u003d new Flag(\"--value \");","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    // TODO remove once commands are updated","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_GAME_OLD \u003d new Flag(\"--g\");","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_FRIEND_SPACE \u003d new Flag(\"--friend \");","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"MarcusTXK":18,"LZher385":3,"-":9,"kevin9foong":3}},{"path":"src/main/java/seedu/address/logic/parser/Flag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"public class Flag {","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"    private final String flag;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"    public Flag(String flag) {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"        this.flag \u003d flag;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    public String getFlag() {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"        return flag;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"        return getFlag();","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        return flag \u003d\u003d null ? 0 : flag.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"        if (!(obj instanceof Flag)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        Flag otherFlag \u003d (Flag) obj;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"        return otherFlag.getFlag().equals(getFlag());","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"MarcusTXK":11,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/MainParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.friends.EditFriendCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.friends.EditFriendCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.friends.FriendCommandParser;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.games.GameCommandParser;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"public class MainParser {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        case FriendCommandParser.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"            return new FriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        case GameCommandParser.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"            return new GameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        case EditFriendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"            return new EditFriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tau-bar":2,"MarcusTXK":5,"-":57,"kevin9foong":4}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":16,"kevin9foong":1}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.SkillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.gamefriendlink.UserName;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     * Private constructor to hide implicit public constructor since","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     * {@code ParserUtil} is a utility class.","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    private ParserUtil() {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"     * Parses a {@code String friendId} into a {@code FriendId}.","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"     * @throws ParseException if the given {@code friendId} is invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    public static FriendId parseFriendId(String friendId) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friendId);","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        String trimmedName \u003d friendId.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        if (friendId.isBlank()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"            throw new ParseException(FriendId.MESSAGE_EMPTY_FRIEND_ID);","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        } else if (!FriendId.isValidFriendId(trimmedName)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"            throw new ParseException(FriendId.MESSAGE_INVALID_CHARACTERS);","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        return new FriendId(trimmedName);","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"tau-bar"},"content":"     * Parses a {@code String gameId} into a {@code GameId}.","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"tau-bar"},"content":"     * @throws ParseException if the given {@code gameId} is invalid.","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"tau-bar"},"content":"    public static GameId parseGameId(String gameId) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"tau-bar"},"content":"        requireNonNull(gameId);","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"tau-bar"},"content":"        String trimmedName \u003d gameId.trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"tau-bar"},"content":"        if (!GameId.isValidGameId(trimmedName)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"tau-bar"},"content":"            throw new ParseException(GameId.MESSAGE_INVALID_CHARACTERS_IN_GAME_ID);","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"tau-bar"},"content":"        return new GameId(trimmedName);","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"     * Parses a {@code String friendName} into a {@code FriendName}.","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"     * @throws ParseException if the given {@code friendName} is invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    public static FriendName parseFriendName(String friendName) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friendName);","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"        String trimmedName \u003d friendName.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"        if (!FriendName.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"            throw new ParseException(FriendName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"        return new FriendName(trimmedName);","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"     * Parses {@code Collection\u003cString\u003e games} into a {@code Set\u003cGame\u003e}.","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"    public static Set\u003cGameFriendLink\u003e parseGameFriendLinks(Collection\u003cString\u003e games) throws ParseException {","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(games);","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"        final Set\u003cGameFriendLink\u003e gameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"        for (String gameName : games) {","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"            // TODO - Edit command","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"            // gameSet.add(new Game(parseGameId(gameName)));","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"        return gameSet;","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"LZher385"},"content":"     * Takes in {@code userName} and returns the corresponding {@code UserName} if its format is valid.","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"LZher385"},"content":"    public static UserName parseUserName(String userName) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"LZher385"},"content":"        if (!UserName.isValidUserName(userName)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"LZher385"},"content":"            throw new ParseException(UserName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"LZher385"},"content":"        return new UserName(userName);","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"     * Takes in {@code skillVal} and returns the corresponding {@code SkillValue} if its range is valid.","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"    public static SkillValue parseSkillValue(String skillVal) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"            Integer skillValue \u003d Integer.parseInt(skillVal);","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"            if (!SkillValue.validateSkillValue(skillValue)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"                throw new ParseException(SkillValue.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"kevin9foong"},"content":"            return new SkillValue(skillValue);","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"            throw new ParseException(SkillValue.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"LZher385"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"LZher385"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"kevin9foong"},"content":"    public static boolean areFlagsPresent(ArgumentMultimap argumentMultimap, Flag... flags) {","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"        return Stream.of(flags).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tau-bar":9,"MarcusTXK":1,"LZher385":11,"YeluriKetan":2,"-":68,"kevin9foong":51}},{"path":"src/main/java/seedu/address/logic/parser/friends/AddFriendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_ADD;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.AddFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"public class AddFriendCommandParser implements Parser\u003cAddFriendCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"     * Parses the given {@code String} of arguments in the context of the AddFriendCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"     * and returns an AddFriendCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    public AddFriendCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        // assign friend name","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, FLAG_ADD, FLAG_FRIEND_NAME);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        if (!ParserUtil.areFlagsPresent(argumentMultimap, FLAG_ADD) || argumentMultimap.getValue(FLAG_ADD).isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddFriendCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        FriendName friendName \u003d argumentMultimap.getValue(FLAG_FRIEND_NAME).isPresent()","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"                ? ParserUtil.parseFriendName(argumentMultimap.getValue(FLAG_FRIEND_NAME).get())","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"                : null;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        FriendId friendId \u003d ParserUtil.parseFriendId(argumentMultimap.getValue(FLAG_ADD).get());","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"        return new AddFriendCommand(new Friend(friendId, friendName));","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":27,"MarcusTXK":3,"kevin9foong":9}},{"path":"src/main/java/seedu/address/logic/parser/friends/AddFriendGameSkillCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_ADD_GAME_SKILL;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_VALUE;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.friends.AddFriendGameSkillCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.SkillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"public class AddFriendGameSkillCommandParser implements Parser\u003cAddFriendGameSkillCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    public AddFriendGameSkillCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, FLAG_ADD_GAME_SKILL,","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"                FLAG_GAME, FLAG_VALUE);","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        if (!ParserUtil.areFlagsPresent(argumentMultimap, FLAG_ADD_GAME_SKILL, FLAG_GAME, FLAG_VALUE)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"                    AddFriendGameSkillCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        FriendId friendId \u003d ParserUtil.parseFriendId(argumentMultimap.getValue(FLAG_ADD_GAME_SKILL).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        GameId gameId \u003d ParserUtil.parseGameId(argumentMultimap.getValue(FLAG_GAME).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        SkillValue skillValue \u003d ParserUtil.parseSkillValue(argumentMultimap.getValue(FLAG_VALUE).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        return new AddFriendGameSkillCommand(friendId, gameId, skillValue);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kevin9foong":35}},{"path":"src/main/java/seedu/address/logic/parser/friends/DeleteFriendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_DELETE;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.DeleteFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"public class DeleteFriendCommandParser implements Parser\u003cDeleteFriendCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"    private FriendId friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"    private ArgumentMultimap argMultimap;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    public DeleteFriendCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"            argMultimap \u003d ArgumentTokenizer.tokenize(args, FLAG_DELETE);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"            friendId \u003d ParserUtil.parseFriendId(argMultimap.getValue(FLAG_DELETE).get());","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"            return new DeleteFriendCommand(friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"        } catch (ParseException | NoSuchElementException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteFriendCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":28,"MarcusTXK":3}},{"path":"src/main/java/seedu/address/logic/parser/friends/EditFriendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_EDIT;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.friends.EditFriendCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"public class EditFriendCommandParser implements Parser\u003cEditFriendCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    public EditFriendCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"                ArgumentTokenizer.tokenize(args, FLAG_EDIT, FLAG_FRIEND_NAME);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        FriendId friendToEditFriendId;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        if (!ParserUtil.areFlagsPresent(argMultimap, FLAG_EDIT) || argMultimap.getValue(FLAG_EDIT).isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditFriendCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        friendToEditFriendId \u003d ParserUtil.parseFriendId(argMultimap.getValue(FLAG_EDIT).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        EditFriendCommand.EditFriendDescriptor editFriendDescriptor \u003d new EditFriendCommand.EditFriendDescriptor();","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        if (argMultimap.getValue(FLAG_FRIEND_NAME).isPresent()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"            editFriendDescriptor.setFriendName(ParserUtil.parseFriendName(argMultimap.getValue(FLAG_FRIEND_NAME)","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"                    .get()));","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        if (!editFriendDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"            throw new ParseException(EditFriendCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        return new EditFriendCommand(friendToEditFriendId, editFriendDescriptor);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kevin9foong":53}},{"path":"src/main/java/seedu/address/logic/parser/friends/FriendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_FRIEND_FLAG;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.AddFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.friends.AddFriendGameSkillCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.DeleteFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.friends.EditFriendCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.GetFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.friends.LinkFriendCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.ListFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.ScheduleFriendCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.friends.UnlinkFriendCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":" * Parses user input for friends.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"public class FriendCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    public static final String COMMAND_WORD \u003d \"friend\";","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"     * Parses the given {@code String} of arguments in the context of the FriendCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"     * and returns a FriendCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    public Command parse(String arguments) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        String[] userInput \u003d arguments.strip().split(\" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        if (userInput.length \u003c\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        switch (userInput[0]) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        case AddFriendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"            return new AddFriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        case AddFriendGameSkillCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"            return new AddFriendGameSkillCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        case EditFriendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"            return new EditFriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"        case DeleteFriendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"            return new DeleteFriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"        case ScheduleFriendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"            return new ScheduleFriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"        case GetFriendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"            return new GetFriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"        case ListFriendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"            return new ListFriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"LZher385"},"content":"        case LinkFriendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"            return new LinkFriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"LZher385"},"content":"        case UnlinkFriendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"LZher385"},"content":"            return new UnlinkFriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"        default:","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_FRIEND_FLAG);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":16,"MarcusTXK":40,"LZher385":8,"kevin9foong":8}},{"path":"src/main/java/seedu/address/logic/parser/friends/GetFriendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GET;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.GetFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" * Parses input arguments and creates a new GetFriendCommand object","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"public class GetFriendCommandParser implements Parser\u003cGetFriendCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     * Parses the given {@code String} of arguments in the context of the GetFriendCommand","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     * and returns a GetFriendCommand object for execution.","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    public GetFriendCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"                ArgumentTokenizer.tokenize(args, FLAG_GET);","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        if (!ParserUtil.areFlagsPresent(argMultimap, FLAG_GET)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetFriendCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        String keyword \u003d argMultimap.getValue(FLAG_GET).get().trim();","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        if (!FriendId.isValidFriendId(keyword)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"            throw new ParseException(FriendId.MESSAGE_INVALID_CHARACTERS);","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        return new GetFriendCommand(new FriendId(keyword));","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"MarcusTXK":7,"YeluriKetan":33,"kevin9foong":1}},{"path":"src/main/java/seedu/address/logic/parser/friends/LinkFriendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GAME;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_LINK;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_USERNAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.ParserUtil.areFlagsPresent;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.friends.LinkFriendCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.gamefriendlink.UserName;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"public class LinkFriendCommandParser implements Parser\u003cLinkFriendCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"    private FriendId friendId;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"    private GameId gameId;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"    private UserName userName;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"     * Parses the given {@code String} of arguments in the context of the LinkCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"     * and returns an LinkCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"    public LinkFriendCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"                ArgumentTokenizer.tokenize(args, FLAG_LINK, FLAG_GAME, FLAG_USERNAME);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"        // All fields must be present.","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"        if (!areFlagsPresent(argMultimap, FLAG_LINK, FLAG_GAME, FLAG_USERNAME)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LinkFriendCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"        friendId \u003d ParserUtil.parseFriendId(argMultimap.getValue(FLAG_LINK).get());","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"        gameId \u003d ParserUtil.parseGameId(argMultimap.getValue(FLAG_GAME).get());","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"        userName \u003d ParserUtil.parseUserName(argMultimap.getValue(FLAG_USERNAME).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"        return new LinkFriendCommand(friendId, gameId, userName);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"LZher385":48,"kevin9foong":1}},{"path":"src/main/java/seedu/address/logic/parser/friends/ListFriendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_LIST;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_POSTFIX;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.ListFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.FriendIdContainsKeywordPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":" * Parses input arguments and creates a new ListFriendCommand object","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"public class ListFriendCommandParser implements Parser\u003cListFriendCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"     * Parses the given {@code String} of arguments in the context of the ListFriendCommand","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"     * and returns a ListFriendCommand object for execution.","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    public ListFriendCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"                ArgumentTokenizer.tokenize(args + FLAG_POSTFIX, FLAG_LIST);","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        if (argMultimap.getValue(FLAG_LIST).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"            return new ListFriendCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"                    new FriendIdContainsKeywordPredicate(argMultimap.getValue(FLAG_LIST).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        // default to list all","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        return new ListFriendCommand(new FriendIdContainsKeywordPredicate(\"\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"MarcusTXK":35,"kevin9foong":1}},{"path":"src/main/java/seedu/address/logic/parser/friends/ScheduleFriendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DAY_TIME_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FREE;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_PERIOD;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_SCHEDULE;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.ParserUtil.areFlagsPresent;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.ScheduleFriendCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.exceptions.InvalidDayTimeException;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":" * Parses input arguments and creates a new ListFriendCommand object","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"public class ScheduleFriendCommandParser implements Parser\u003cScheduleFriendCommand\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    public static final String INVALID_PERIOD_OR_FREE_ARGUMENT \u003d \"Invalid \" + FLAG_PERIOD","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"            + \" or \" + FLAG_FREE + \" arguments\";","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"     * Parses the given {@code String} of arguments in the context of the ScheduleFriendCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"     * and returns a ScheduleFriendCommand object for execution.","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    public ScheduleFriendCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"                ArgumentTokenizer.tokenize(args, FLAG_SCHEDULE, FLAG_PERIOD, FLAG_FREE);","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"        if (!areFlagsPresent(argMultimap, FLAG_SCHEDULE, FLAG_PERIOD, FLAG_FREE)","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"                || argMultimap.getValue(FLAG_SCHEDULE).isEmpty()","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"                || argMultimap.getValue(FLAG_PERIOD).isEmpty()","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"                || argMultimap.getValue(FLAG_FREE).isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"                    ScheduleFriendCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"            String[] period \u003d argMultimap.getValue(FLAG_PERIOD).get().split(\" \");","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"            if (period.length !\u003d 3 || !(argMultimap.getValue(FLAG_FREE).get().equals(\"0\")","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"                    || argMultimap.getValue(FLAG_FREE).get().equals(\"1\"))) {","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"                throw new InvalidDayTimeException(INVALID_PERIOD_OR_FREE_ARGUMENT);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"            int dayIndex \u003d Integer.parseInt(period[2]);","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"            boolean isFree \u003d argMultimap.getValue(FLAG_FREE).get().equals(\"1\");","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"            FriendId friendId \u003d ParserUtil.parseFriendId(argMultimap.getValue(FLAG_SCHEDULE).get());","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"            return new ScheduleFriendCommand(friendId, dayIndex, period[0], period[1], isFree);","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"        } catch (InvalidDayTimeException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_DAY_TIME_FORMAT,","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"                    e.getMessage()));","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"MarcusTXK":64}},{"path":"src/main/java/seedu/address/logic/parser/friends/UnlinkFriendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GAME;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_UNLINK;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.ParserUtil.areFlagsPresent;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.friends.UnlinkFriendCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"public class UnlinkFriendCommandParser implements Parser\u003cUnlinkFriendCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    private FriendId friendId;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"    private GameId gameId;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"     * Parses the given {@code String} of arguments in the context of the UnlinkFriendCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"     * and returns an UnlinkFriendCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"    public UnlinkFriendCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"                ArgumentTokenizer.tokenize(args, FLAG_UNLINK, FLAG_GAME);","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"        // All fields must be present.","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"        if (!areFlagsPresent(argMultimap, FLAG_UNLINK, FLAG_GAME)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnlinkFriendCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"        friendId \u003d ParserUtil.parseFriendId(argMultimap.getValue(FLAG_UNLINK).get());","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"        gameId \u003d ParserUtil.parseGameId(argMultimap.getValue(FLAG_GAME).get());","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"        return new UnlinkFriendCommand(friendId, gameId);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"LZher385":44,"kevin9foong":1}},{"path":"src/main/java/seedu/address/logic/parser/games/AddGameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.parser.games;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_ADD;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.games.AddGameCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"public class AddGameCommandParser implements Parser\u003cAddGameCommand\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"     * Parses the given {@code String} of arguments in the context of the AddGameCommand","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     * and returns an AddGameCommand object for execution.","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    public AddGameCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"        // assign gameId","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, FLAG_ADD);","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        if (!ParserUtil.areFlagsPresent(argumentMultimap, FLAG_ADD) || argumentMultimap.getValue(FLAG_ADD).isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGameCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        GameId gameId \u003d ParserUtil.parseGameId(argumentMultimap.getValue(FLAG_ADD).get());","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        return new AddGameCommand(new Game(gameId));","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kevin9foong":34}},{"path":"src/main/java/seedu/address/logic/parser/games/DeleteGameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.parser.games;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_DELETE;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.games.DeleteGameCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"public class DeleteGameCommandParser implements Parser\u003cDeleteGameCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"    private GameId gameId;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"    private ArgumentMultimap argMultimap;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"    public DeleteGameCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"            argMultimap \u003d ArgumentTokenizer.tokenize(args, FLAG_DELETE);","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"            gameId \u003d ParserUtil.parseGameId(argMultimap.getValue(FLAG_DELETE).get());","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"            return new DeleteGameCommand(gameId);","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"        } catch (ParseException | NoSuchElementException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"                    DeleteGameCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tau-bar":31}},{"path":"src/main/java/seedu/address/logic/parser/games/GameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.parser.games;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_GAME_FLAG;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.games.AddGameCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.games.DeleteGameCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.games.GetGameCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.games.ListGameCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":" * Parses user input for games.","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"public class GameCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    public static final String COMMAND_WORD \u003d \"game\";","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"     * Parses the given {@code String} of arguments in the context of the GameCommand","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"     * and returns a GameCommand object for execution.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    public Command parse(String arguments) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        String[] userInput \u003d arguments.strip().split(\" \");","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"        if (userInput.length \u003c\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        switch (userInput[0]) {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        case AddGameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"            return new AddGameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        case DeleteGameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"            return new DeleteGameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        case GetGameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"            return new GetGameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"        case ListGameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"            return new ListGameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        default:","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_GAME_FLAG);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"tau-bar":3,"MarcusTXK":42,"YeluriKetan":3,"kevin9foong":4}},{"path":"src/main/java/seedu/address/logic/parser/games/GetGameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.logic.parser.games;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GET;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.games.GetGameCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" * Parses input arguments and creates a new GetGameCommand object","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"public class GetGameCommandParser implements Parser\u003cGetGameCommand\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     * Parses the given {@code String} of arguments in the context of the GetGameCommand","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     * and returns a GetGameCommand object for execution.","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    public GetGameCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"                ArgumentTokenizer.tokenize(args, FLAG_GET);","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        if (!ParserUtil.areFlagsPresent(argMultimap, FLAG_GET)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetGameCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        String keyword \u003d argMultimap.getValue(FLAG_GET).get().trim();","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        if (!GameId.isValidGameId(keyword)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"            throw new ParseException(GameId.MESSAGE_INVALID_CHARACTERS_IN_GAME_ID);","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        return new GetGameCommand(new GameId(keyword));","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"YeluriKetan":40}},{"path":"src/main/java/seedu/address/logic/parser/games/ListGameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.parser.games;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_LIST;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_POSTFIX;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.games.ListGameCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.game.GameIdContainsKeywordPredicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":" * Parses input arguments and creates a new ListGameCommand object","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"public class ListGameCommandParser implements Parser\u003cListGameCommand\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"     * Parses the given {@code String} of arguments in the context of the ListGameCommand","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"     * and returns a ListGameCommand object for execution.","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    public ListGameCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"                ArgumentTokenizer.tokenize(args + FLAG_POSTFIX, FLAG_LIST);","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        if (argMultimap.getValue(FLAG_LIST).isPresent()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"            return new ListGameCommand(","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"                    new GameIdContainsKeywordPredicate(argMultimap.getValue(FLAG_LIST).get()));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        // default to list all","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        return new ListGameCommand(new GameIdContainsKeywordPredicate(\"\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"MarcusTXK":36}},{"path":"src/main/java/seedu/address/model/FriendsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.UniqueFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" * Wraps all friends list data at the gitGud level.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":" * Duplicates are not allowed (by .equals comparison).","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"public class FriendsList implements ReadOnlyFriendsList {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    private final UniqueFriendsList friends;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    /*","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     *   among constructors.","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        friends \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    public FriendsList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     * Creates an Friends List using the friends in {@code toBeCopied}","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    public FriendsList(ReadOnlyFriendsList toBeCopied) {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        this();","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"     * Replaces the contents of the friends list with {@code friends}.","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"     * {@code friends} must not contain duplicate friends.","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    public void setFriends(List\u003cFriend\u003e friends) {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        this.friends.setFriends(friends);","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"     * Resets the existing data of this {@code FriendsList} with {@code newData}.","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    public void resetData(ReadOnlyFriendsList newData) {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        setFriends(newData.getFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    //// person-level operations","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"     * Returns true if a friend with the same identity as {@code friend} exists in the friends list.","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    public boolean hasFriend(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        return friends.contains(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"LZher385"},"content":"     * Returns true if a friend with the same FriendId as (@code friendId} exists in the friends list.","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"LZher385"},"content":"    public boolean hasFriendWithId(FriendId friendId) {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"LZher385"},"content":"        requireNonNull(friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"LZher385"},"content":"        return friends.containsId(friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"     * Adds a friend to the friends list.","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"     * The friend must not already exist in the friends list.","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"    public void addFriend(Friend p) {","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        friends.add(p);","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"     * Gets a friend from the friends list.","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"     * The friend with the friendId must already exist in the friends list.","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"    public Friend getFriend(FriendId friendId) {","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"        return friends.getFriend(friendId);","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"     * Replaces the given friend {@code target} in the list with {@code editedFriend}.","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"     * {@code target} must exist in the friends list.","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"     * The friend identity of {@code editedFriend} must not be the same as another existing friend in the friends list.","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"    public void setFriend(Friend target, Friend editedFriend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"        friends.setFriend(target, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"LZher385"},"content":"     * Associates the given friend {@code toLink} in the list with {@code gameFriendLink}","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"LZher385"},"content":"     * {@code toLink} must exist in the friends list.","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"LZher385"},"content":"    public void linkFriend(Friend toLink, GameFriendLink gameFriendLink) {","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"LZher385"},"content":"        friends.link(toLink, gameFriendLink);","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"LZher385"},"content":"     * Removes the associated {@code GameFriendLink} between Friend {@code toUnlink} and Game {@code game}.","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"LZher385"},"content":"    public void unlinkFriend(Friend toUnlink, Game game) {","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"LZher385"},"content":"        friends.unlink(toUnlink, game);","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"     * Removes {@code key} from this {@code FriendsList}.","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"     * {@code key} must exist in the friends list.","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"    public void removeFriend(Friend key) {","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"        friends.remove(key);","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"    // util methods","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"        return friends.asUnmodifiableObservableList().size() + \" friends\";","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"kevin9foong"},"content":"        // TODO: refine later","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"kevin9foong"},"content":"    public ObservableList\u003cFriend\u003e getFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"kevin9foong"},"content":"        return friends.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"kevin9foong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"kevin9foong"},"content":"                || (other instanceof FriendsList // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 friends.equals(((FriendsList) other).friends));","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"kevin9foong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"kevin9foong"},"content":"        return friends.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"LZher385":25,"YeluriKetan":8,"kevin9foong":122}},{"path":"src/main/java/seedu/address/model/GamesList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.UniqueGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":" * Wraps all data at the games-book level","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":" * Duplicates are not allowed (by .isSameGame comparison)","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"public class GamesList implements ReadOnlyGamesList {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    private final UniqueGamesList games;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    /*","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"     *   among constructors.","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        games \u003d new UniqueGamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public GamesList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"     * Creates an GamesBook using the Games in the {@code toBeCopied}","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    public GamesList(ReadOnlyGamesList toBeCopied) {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        this();","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces the contents of the games list with {@code games}.","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"     * {@code games} must not contain duplicate games.","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    public void setGames(List\u003cGame\u003e games) {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        this.games.setGames(games);","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"     * Resets the existing data of this {@code GamesBook} with {@code newData}.","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"    public void resetData(ReadOnlyGamesList newData) {","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"        setGames(newData.getGamesList());","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    //// game-level operations","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a game with the same identity as {@code game} exists in the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"    public boolean hasGame(Game game) {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(game);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"        return games.contains(game);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a game with the same GameId as {@code gameId} exists in the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"    public boolean hasGameWithId(GameId gameId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"        return games.containsId(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"     * Adds a game to the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"     * The game must not already exist in the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"    public void addGame(Game p) {","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"        games.add(p);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"     * Gets a game from the games list.","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"     * The game with the gameId must already exist in the games list.","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"    public Game getGame(GameId gameId) {","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"        return games.getGame(gameId);","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces the given game {@code target} in the list with {@code editedGame}.","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"     * {@code target} must exist in the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"     * The game identity of {@code editedGame} must not be the same as another existing game in the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"    public void setGame(Game target, Game editedGame) {","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(editedGame);","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"        games.setGame(target, editedGame);","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"     * Removes {@code key} from this {@code GamesList}.","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"     * {@code key} must exist in the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"    public void removeGame(Game key) {","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"        games.remove(key);","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"    // util methods","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"        return games.asUnmodifiableObservableList().size() + \" games\";","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"        // TODO: refine later","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"    public ObservableList\u003cGame\u003e getGamesList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"        return games.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"                || (other instanceof GamesList // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 games.equals(((GamesList) other).games));","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"        return games.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":136,"kevin9foong":2}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    Predicate\u003cFriend\u003e PREDICATE_SHOW_ALL_FRIENDS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    Predicate\u003cGame\u003e PREDICATE_SHOW_ALL_GAMES \u003d unused -\u003e true;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FriendsBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces friends book data with the data in {@code readOnlyFriendsList}.","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    void setFriendsList(ReadOnlyFriendsList readOnlyFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"     * Returns the FriendsBook","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    ReadOnlyFriendsList getFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a friend with the same identity as {@code friend} exists in the friends book.","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"    boolean hasFriend(Friend friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a friend with the same friendId as {@code friendId} exists in the friends book.","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"LZher385"},"content":"    boolean hasFriendWithId(FriendId friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"     * Deletes the given friend.","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"     * The friend must exist in the friends book.","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"tau-bar"},"content":"    void deleteFriend(FriendId targetId);","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"     * Adds the given friend.","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"     * {@code friend} must not already exist in the friends book.","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"    void addFriend(Friend friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the friend with the given friendId.","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"     * {@code friend} with the friendId must already exist in the friends book.","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"    Friend getFriend(FriendId friendId);","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces the given friend {@code target} with {@code editedFriend}.","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"     * {@code target} must exist in the friends book.","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"     * The friend identity of {@code editedFriend} must not be the same as another existing friend in the friends book.","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"    void setFriend(Friend target, Friend editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"     * Returns an unmodifiable view of the filtered friend list","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"    ObservableList\u003cFriend\u003e getFilteredFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"     * Updates the filter of the filtered friend list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"    void updateFilteredFriendsList(Predicate\u003cFriend\u003e predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"LZher385"},"content":"     * Links the friend {@code toLink} with the game in {@code gameFriendLink}.","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"LZher385"},"content":"    void linkFriend(Friend toLink, GameFriendLink gameFriendLink);","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"LZher385"},"content":"     * Unlinks the friend {@code toUnlink} with the Game {@code game}.","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"LZher385"},"content":"    void unlinkFriend(Friend toUnlink, Game game);","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d GamesBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces games book data with the data in {@code readOnlyGamesList}.","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"    void setGamesList(ReadOnlyGamesList readOnlyGamesList);","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"     * Returns the GamesBook","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"    ReadOnlyGamesList getGamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a game with the same identity as {@code game} exists in the games book.","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"    boolean hasGame(Game game);","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a game with the same gameId as {@code gameId} exists in the games book.","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"    boolean hasGameWithId(GameId gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"     * Deletes the given game based on the {@code targetId}.","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"YeluriKetan"},"content":"     * The game must exist in the games book.","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"YeluriKetan"},"content":"    void deleteGame(GameId targetId);","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"YeluriKetan"},"content":"     * Adds the given game.","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"YeluriKetan"},"content":"     * {@code game} must not already exist in the games book.","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"YeluriKetan"},"content":"    void addGame(Game game);","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the game with the given gameId.","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"YeluriKetan"},"content":"     * {@code game} with the gameId must already exist in the games book.","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"YeluriKetan"},"content":"    Game getGame(GameId gameId);","lastModifiedDate":"2021-10-14"},{"lineNumber":165,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces the given game {@code target} with {@code editedGame}.","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"YeluriKetan"},"content":"     * {@code target} must exist in the games book.","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"YeluriKetan"},"content":"     * The game identity of {@code editedGame} must not be the same as another existing game in the games book.","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"YeluriKetan"},"content":"    void setGame(Game target, Game editedGame);","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"kevin9foong"},"content":"     * Returns an unmodifiable view of the filtered game list","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"YeluriKetan"},"content":"    ObservableList\u003cGame\u003e getFilteredGamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"YeluriKetan"},"content":"     * Updates the filter of the filtered game list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"YeluriKetan"},"content":"    void updateFilteredGamesList(Predicate\u003cGame\u003e predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tau-bar":1,"LZher385":11,"YeluriKetan":62,"-":84,"kevin9foong":27}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":" * Represents the in-memory model of the gitGud friends and games list data.","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    private final FriendsList friendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    private final FilteredList\u003cFriend\u003e filteredFriends;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    private final GamesList gamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    private final FilteredList\u003cGame\u003e filteredGames;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     * Initializes a ModelManager with the given friends list and userPrefs.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    public ModelManager(ReadOnlyFriendsList readOnlyFriendsList, ReadOnlyGamesList readOnlyGamesList,","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        requireAllNonNull(readOnlyFriendsList, readOnlyGamesList, userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        logger.fine(\"Initializing with friends book: \" + readOnlyFriendsList","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"                + \" games book: \" + readOnlyGamesList","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        this.friendsList \u003d new FriendsList(readOnlyFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        filteredFriends \u003d new FilteredList\u003c\u003e(this.friendsList.getFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        this.gamesList \u003d new GamesList(readOnlyGamesList);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        filteredGames \u003d new FilteredList\u003c\u003e(this.gamesList.getGamesList());","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        this(new FriendsList(), new GamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"        return userPrefs.getFriendsListFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"        userPrefs.setFriendsListFilePath(addressBookFilePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FriendsBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"    public void setFriendsList(ReadOnlyFriendsList readOnlyFriendsList) {","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"        this.friendsList.resetData(readOnlyFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"    public ReadOnlyFriendsList getFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"        return friendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"    public boolean hasFriend(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"        return friendsList.hasFriend(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"LZher385"},"content":"    public boolean hasFriendWithId(FriendId friendId) {","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"LZher385"},"content":"        requireNonNull(friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"LZher385"},"content":"        return friendsList.hasFriendWithId(friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"    public Friend getFriend(FriendId friendId) {","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"        return friendsList.getFriend(friendId);","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"tau-bar"},"content":"    public void deleteFriend(FriendId targetId) {","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"tau-bar"},"content":"        Friend friendToDelete \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"tau-bar"},"content":"                this.getFriendsList().getFriendsList()","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"tau-bar"},"content":"                        .stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"tau-bar"},"content":"                        .filter(friend -\u003e friend.getFriendId().equals(targetId))","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"tau-bar"},"content":"                        .findFirst()","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"tau-bar"},"content":"                        .get();","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"tau-bar"},"content":"        friendsList.removeFriend(friendToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"    public void addFriend(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"        friendsList.addFriend(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"        updateFilteredFriendsList(PREDICATE_SHOW_ALL_FRIENDS);","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"kevin9foong"},"content":"    public void setFriend(Friend target, Friend editedFriend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"kevin9foong"},"content":"        requireAllNonNull(target, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"        // For debugging purposes while UI does not support displaying all fields yet.","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"        logger.info(\"ModelManager:setFriend - \" + editedFriend);","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"kevin9foong"},"content":"        friendsList.setFriend(target, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":144,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"LZher385"},"content":"    public void linkFriend(Friend toLink, GameFriendLink gameFriendLink) {","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"LZher385"},"content":"        friendsList.linkFriend(toLink, gameFriendLink);","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"LZher385"},"content":"    public void unlinkFriend(Friend toUnlink, Game game) {","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"LZher385"},"content":"        friendsList.unlinkFriend(toUnlink, game);","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"YeluriKetan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Friend List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"kevin9foong"},"content":"    public ObservableList\u003cFriend\u003e getFilteredFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"kevin9foong"},"content":"        return filteredFriends;","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"kevin9foong"},"content":"    public void updateFilteredFriendsList(Predicate\u003cFriend\u003e predicate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"kevin9foong"},"content":"        filteredFriends.setPredicate(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":171,"author":{"gitId":"YeluriKetan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d GamesBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"YeluriKetan"},"content":"    public void setGamesList(ReadOnlyGamesList readOnlyGamesList) {","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"YeluriKetan"},"content":"        this.gamesList.resetData(readOnlyGamesList);","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"YeluriKetan"},"content":"    public ReadOnlyGamesList getGamesList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"YeluriKetan"},"content":"        return gamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"YeluriKetan"},"content":"    public boolean hasGame(Game game) {","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(game);","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"YeluriKetan"},"content":"        return gamesList.hasGame(game);","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"YeluriKetan"},"content":"    public boolean hasGameWithId(GameId gameId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"YeluriKetan"},"content":"        return gamesList.hasGameWithId(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"YeluriKetan"},"content":"    public void deleteGame(GameId targetId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"kevin9foong"},"content":"        // TODO: Check for gameId not found for DELETE.","lastModifiedDate":"2021-10-13"},{"lineNumber":198,"author":{"gitId":"YeluriKetan"},"content":"        Game gameToDelete \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"YeluriKetan"},"content":"                this.getGamesList().getGamesList()","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"YeluriKetan"},"content":"                        .stream()","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"YeluriKetan"},"content":"                        .filter(game -\u003e game.getGameId().equals(targetId))","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"YeluriKetan"},"content":"                        .findFirst()","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"YeluriKetan"},"content":"                        .get();","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"YeluriKetan"},"content":"        gamesList.removeGame(gameToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"YeluriKetan"},"content":"    public void addGame(Game game) {","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"YeluriKetan"},"content":"        gamesList.addGame(game);","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"YeluriKetan"},"content":"        updateFilteredGamesList(PREDICATE_SHOW_ALL_GAMES);","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":214,"author":{"gitId":"YeluriKetan"},"content":"    public Game getGame(GameId gameId) {","lastModifiedDate":"2021-10-14"},{"lineNumber":215,"author":{"gitId":"YeluriKetan"},"content":"        return gamesList.getGame(gameId);","lastModifiedDate":"2021-10-14"},{"lineNumber":216,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":217,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":218,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"YeluriKetan"},"content":"    public void setGame(Game target, Game editedGame) {","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"YeluriKetan"},"content":"        requireAllNonNull(target, editedGame);","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"YeluriKetan"},"content":"        gamesList.setGame(target, editedGame);","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":224,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"YeluriKetan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Game List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"YeluriKetan"},"content":"    public ObservableList\u003cGame\u003e getFilteredGamesList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"YeluriKetan"},"content":"        return filteredGames;","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":233,"author":{"gitId":"YeluriKetan"},"content":"    public void updateFilteredGamesList(Predicate\u003cGame\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"YeluriKetan"},"content":"        filteredGames.setPredicate(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"kevin9foong"},"content":"        return friendsList.equals(other.friendsList)","lastModifiedDate":"2021-10-06"},{"lineNumber":253,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 filteredFriends.equals(other.filteredFriends)","lastModifiedDate":"2021-10-10"},{"lineNumber":254,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 gamesList.equals(other.gamesList)","lastModifiedDate":"2021-10-10"},{"lineNumber":255,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 filteredGames.equals(other.filteredGames)","lastModifiedDate":"2021-10-10"},{"lineNumber":256,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tau-bar":8,"MarcusTXK":2,"LZher385":11,"YeluriKetan":83,"-":128,"kevin9foong":27}},{"path":"src/main/java/seedu/address/model/ReadOnlyFriendsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * Unmodifiable view of gitGud friends data.","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"public interface ReadOnlyFriendsList {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"     * Returns an unmodifiable view of the friends list.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"     * This list will not contain any duplicate friends.","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    ObservableList\u003cFriend\u003e getFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kevin9foong":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyGamesList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" * Unmodifiable view of a games-book","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"public interface ReadOnlyGamesList {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"     * Returns an unmodifiable view of the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"     * This list will not contain any duplicate games.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    ObservableList\u003cGame\u003e getGamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    Path getFriendsListFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":15,"kevin9foong":1}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    private Path friendsListFilePath \u003d Paths.get(\"data\", \"friendsList.json\");","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    private Path gamesListFilePath \u003d Paths.get(\"data\", \"gamesList.json\");","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    public UserPrefs() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        setFriendsListFilePath(newUserPrefs.getFriendsListFilePath());","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    public Path getFriendsListFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        return friendsListFilePath;","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    public void setFriendsListFilePath(Path friendsListFilePath) {","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friendsListFilePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        this.friendsListFilePath \u003d friendsListFilePath;","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    public Path getGamesListFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        return gamesListFilePath;","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    public void setGamesListFilePath(Path gamesListFilePath) {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        this.gamesListFilePath \u003d gamesListFilePath;","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 friendsListFilePath.equals(o.friendsListFilePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        return Objects.hash(guiSettings, friendsListFilePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"        sb.append(\"\\nLocal data file location : \" + friendsListFilePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":76,"kevin9foong":21}},{"path":"src/main/java/seedu/address/model/friend/Day.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_END_TIME_ORDER;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.model.util.DayTimeUtil.getIndexFromTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.model.util.DayTimeUtil.getTimeFromIndex;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.exceptions.InvalidDayTimeException;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":" * Represents a day in a schedule.","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"public class Day {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    private static final int NUMBER_OF_SLOTS \u003d 24;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    private final boolean[] timeSlots;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    private final DayOfWeek dayOfWeek;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs a default {@code Day}.","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"     * Utilised by jackson for serialization","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    private Day() {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        this.timeSlots \u003d new boolean[NUMBER_OF_SLOTS];","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        this.dayOfWeek \u003d DayOfWeek.of(1);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs a {@code Day}.","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"     * @param dayOfWeek A day of the week.","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"    public Day(DayOfWeek dayOfWeek) {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        requireNonNull(dayOfWeek);","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        this.timeSlots \u003d new boolean[NUMBER_OF_SLOTS];","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        this.dayOfWeek \u003d dayOfWeek;","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"     * Sets the timeslots in the day from the range of startTime to endTime to isFree.","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"     * @param startTime Start of timeslot.","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"     * @param endTime   End of timeslot.","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"     * @param isFree    Is timeslot free.","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"     * @throws InvalidDayTimeException Invalid time.","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"    public void setTime(String startTime, String endTime, boolean isFree) throws InvalidDayTimeException {","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"        int startIndex \u003d getIndexFromTime(startTime);","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"        int endIndex \u003d getIndexFromTime(endTime);","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"        endIndex \u003d endIndex \u003d\u003d 0 ? 24 : endIndex; // when endTime is 0000, it is treated as 2400","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        if (endIndex \u003c\u003d startIndex) {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"            throw new InvalidDayTimeException(MESSAGE_END_TIME_ORDER);","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"        for (int i \u003d startIndex; i \u003c\u003d endIndex - 1; i++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"            timeSlots[i] \u003d isFree;","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"     * Returns true if valid day.","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"     * @param day Day to validate.","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"     * @return True if valid.","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"    public static boolean isValidDay(Day day) {","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"        return day.dayOfWeek !\u003d null \u0026\u0026 day.timeSlots !\u003d null \u0026\u0026 day.timeSlots.length \u003d\u003d 24;","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"     * Gets day name.","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"     * @return Name of day.","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"    public String getDayName() {","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"        return dayOfWeek.name();","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"     * Gets free time slots grouped.","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"     * eg. groups 0800-0900 (index 8) and 0900-1000 (index 9) to [0800, 1000]","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"     * @return Grouped free timeslots","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"    public List\u003cString[]\u003e getGroupedTimeSlots() throws InvalidDayTimeException {","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"        ArrayList\u003cString[]\u003e groupedSlots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"        String previousTimeSlot \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"        boolean isContinuous \u003d false;","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"        for (int i \u003d 0; i \u003c timeSlots.length; i++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":"            if (!isContinuous \u0026\u0026 timeSlots[i]) { // start of new continuous slot","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"                previousTimeSlot \u003d getTimeFromIndex(i);","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":"                isContinuous \u003d true;","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":"            } else if (isContinuous \u0026\u0026 !timeSlots[i]) { // end of continuous slot","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"                groupedSlots.add(new String[]{previousTimeSlot, getTimeFromIndex(i)});","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"MarcusTXK"},"content":"                isContinuous \u003d false;","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"MarcusTXK"},"content":"        if (isContinuous) { // For last continuous time slot it wraps around to 0000","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"MarcusTXK"},"content":"            groupedSlots.add(new String[]{previousTimeSlot, getTimeFromIndex(0)});","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"MarcusTXK"},"content":"        return groupedSlots;","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"MarcusTXK"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"MarcusTXK"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"MarcusTXK"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"MarcusTXK"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"MarcusTXK"},"content":"            return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"MarcusTXK"},"content":"        Day day \u003d (Day) o;","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"MarcusTXK"},"content":"        return Arrays.equals(timeSlots, day.timeSlots) \u0026\u0026 dayOfWeek \u003d\u003d day.dayOfWeek;","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"MarcusTXK"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"MarcusTXK"},"content":"        int result \u003d Objects.hash(dayOfWeek);","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"MarcusTXK"},"content":"        result \u003d 31 * result + Arrays.hashCode(timeSlots);","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":"        return result;","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"MarcusTXK"},"content":"    public String toString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"MarcusTXK"},"content":"        return \"Day{\"","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"MarcusTXK"},"content":"                + \"timeSlots\u003d\" + Arrays.toString(timeSlots)","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"                + \", dayOfWeek\u003d\" + dayOfWeek.name()","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"MarcusTXK":142}},{"path":"src/main/java/seedu/address/model/friend/Friend.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.exceptions.GameLinkNotFoundException;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.SkillValue;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":" * Represents a Friend in the gitGud friend\u0027s list.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"public class Friend {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    // Identity fields","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    // used to uniquely identify each Friend.","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    private final FriendId friendId;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    private final FriendName friendName;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    private final Schedule schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    // Data fields","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    private final Set\u003cGameFriendLink\u003e gameFriendLinks \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a {@code Friend}.","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"     * @param friendId        a valid friend id.","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"     * @param friendName      a valid friend name.","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     * @param gameFriendLinks a set of game-friend links of this friend.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"     * @param schedule        Schedule of friend.","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"    public Friend(FriendId friendId, FriendName friendName, Set\u003cGameFriendLink\u003e gameFriendLinks, Schedule schedule) {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        requireAllNonNull(friendId, gameFriendLinks);","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        this.friendId \u003d friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        this.friendName \u003d friendName \u003d\u003d null ? FriendName.DEFAULT_FRIEND_NAME : friendName;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        this.gameFriendLinks.addAll(gameFriendLinks);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"     * Overloaded constructor using only friendId and friendName.","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"     * @param friendId   Unique id of friend.","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"     * @param friendName Name of friend.","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"    public Friend(FriendId friendId, FriendName friendName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        requireAllNonNull(friendId);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"        this.friendId \u003d friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        this.friendName \u003d friendName \u003d\u003d null ? FriendName.DEFAULT_FRIEND_NAME : friendName;","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"        this.schedule \u003d new Schedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"     * Updates the skill value for the {@code GameFriendLink} with the given {@code gameId} and linked to","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"     * this friend.","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"     * @param gameId     valid gameId which is already linked to this friend.","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"     * @param skillValue value to update friend\u0027s skill value to.","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"     * @throws GameLinkNotFoundException thrown when gameId provided is not linked to this friend.","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    public void updateGameFriendLinkSkillValue(GameId gameId, SkillValue skillValue) throws GameLinkNotFoundException {","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        Optional\u003cGameFriendLink\u003e linkToUpdate \u003d gameFriendLinks.stream().filter(","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"            gfl -\u003e gfl.getGameId().equals(gameId)).findFirst();","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        if (linkToUpdate.isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"            throw new GameLinkNotFoundException();","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        linkToUpdate.get().setSkillValue(skillValue);","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"    public FriendId getFriendId() {","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"        return friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"    public FriendName getFriendName() {","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"        return friendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"    public Schedule getSchedule() {","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"        return schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"     * Returns an immutable game set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"    public Set\u003cGameFriendLink\u003e getGameFriendLinks() {","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"        return Collections.unmodifiableSet(gameFriendLinks);","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"LZher385"},"content":"     * Returns true if the friend is currently associated with the game provided.","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"LZher385"},"content":"     * @param game Game to check.","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"LZher385"},"content":"     * @return True if the friend is associated with the game.","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"LZher385"},"content":"    public boolean hasGameAssociation(Game game) {","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"LZher385"},"content":"        Set\u003cGameFriendLink\u003e gameFriendLinks \u003d this.getGameFriendLinks();","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"LZher385"},"content":"        if (gameFriendLinks.stream().filter(gameFriendLink -\u003e gameFriendLink","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"LZher385"},"content":"                .getGameId().equals(game.getGameId())).count() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"LZher385"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"LZher385"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"LZher385"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"     * Returns true if both friends have same friendId.","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"     * @return boolean result of equals.","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"    public boolean isSameFriendId(Friend friend) {","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"        return this.friendId.equals(friend.getFriendId());","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"     * Returns true if both friends have the same friendId, name and games.","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"kevin9foong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"        if (!(other instanceof Friend)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"kevin9foong"},"content":"        Friend otherFriend \u003d (Friend) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"kevin9foong"},"content":"        return otherFriend.getFriendId().equals(getFriendId())","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 otherFriend.getGameFriendLinks().equals(getGameFriendLinks())","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 otherFriend.getFriendName().equals(getFriendName());","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"kevin9foong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"kevin9foong"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"kevin9foong"},"content":"        return Objects.hash(friendId);","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"kevin9foong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"kevin9foong"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"kevin9foong"},"content":"        builder.append(\"Friend ID: \")","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"kevin9foong"},"content":"                .append(getFriendId())","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"kevin9foong"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"MarcusTXK"},"content":"                .append(getFriendName());","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"kevin9foong"},"content":"        Set\u003cGameFriendLink\u003e gameSet \u003d getGameFriendLinks();","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"kevin9foong"},"content":"        if (!gameSet.isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"kevin9foong"},"content":"            builder.append(\"; Games: \");","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"kevin9foong"},"content":"            gameSet.forEach(builder::append);","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"kevin9foong"},"content":"            builder.append(\" \");","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"MarcusTXK"},"content":"        builder.append(schedule);","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"kevin9foong"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tau-bar":8,"MarcusTXK":14,"LZher385":16,"YeluriKetan":10,"kevin9foong":118}},{"path":"src/main/java/seedu/address/model/friend/FriendGameFriendLinksContainsGamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"public class FriendGameFriendLinksContainsGamePredicate implements Predicate\u003cFriend\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"    private final Game game;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"    public FriendGameFriendLinksContainsGamePredicate(Game game) {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"        this.game \u003d game;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"    public Game getGame() {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"        return game;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"                || (other instanceof FriendGameFriendLinksContainsGamePredicate // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"                \u0026\u0026 game.equals(((FriendGameFriendLinksContainsGamePredicate) other).game)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"    public boolean test(Friend friend) {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"        return friend.hasGameAssociation(game);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"tau-bar":31}},{"path":"src/main/java/seedu/address/model/friend/FriendId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * Represents a Friend\u0027s unique friend identifier in the gitGud friend\u0027s list.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFriendId(String)}","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public class FriendId {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_EMPTY_FRIEND_ID \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"            \"FRIEND_ID cannot be empty.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_INVALID_CHARACTERS \u003d \"FRIEND_ID provided must be a single word and only contain \"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"            + \"alphanumeric characters.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9._-]+$\";","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    public final String value;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code FriendId}.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     * @param friendId A valid friendId.","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    public FriendId(String friendId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friendId);","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        checkArgument(isValidFriendId(friendId), MESSAGE_INVALID_CHARACTERS);","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        value \u003d friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     * Returns true if a given string is a valid friendId.","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    public static boolean isValidFriendId(String friendId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"        return friendId.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        return value;","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"                || (other instanceof FriendId // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 value.equalsIgnoreCase(((FriendId) other).value)); // state check","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tau-bar":2,"YeluriKetan":1,"kevin9foong":50}},{"path":"src/main/java/seedu/address/model/friend/FriendIdContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":" * Tests that a {@code Friend}\u0027s {@code FriendId} matches any of the keywords given.","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"public class FriendIdContainsKeywordPredicate implements Predicate\u003cFriend\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"    private final String keyword;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    public FriendIdContainsKeywordPredicate(String keyword) {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    public String getKeyword() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"        return keyword;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    public boolean test(Friend friend) {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        // if no keyword is specified, all friends will be listed","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        return StringUtil.containsPartialWordIgnoreCase(friend.getFriendId().value, keyword);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"                || (other instanceof FriendIdContainsKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 keyword.equals(((FriendIdContainsKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"MarcusTXK":37}},{"path":"src/main/java/seedu/address/model/friend/FriendIdMatchesKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":" * Tests that a {@code Friend}\u0027s {@code FriendId} matches the keywords given.","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"public class FriendIdMatchesKeywordPredicate implements Predicate\u003cFriend\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"    private final String keyword;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    public FriendIdMatchesKeywordPredicate(String keyword) {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    public String getKeyword() {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"        return keyword;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    public boolean test(Friend friend) {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"        return keyword.equalsIgnoreCase(friend.getFriendId().value);","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"                || (other instanceof FriendIdMatchesKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 keyword.equalsIgnoreCase(((FriendIdMatchesKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"YeluriKetan":31}},{"path":"src/main/java/seedu/address/model/friend/FriendName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Represents a Friend\u0027s name in the gitGud friend\u0027s list.","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"public class FriendName {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    // constants","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    public static final FriendName DEFAULT_FRIEND_NAME \u003d new FriendName(\"No name assigned\");","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code FriendName}.","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     * @param name A valid friend\u0027s name.","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public FriendName(String name) {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"            fullName \u003d DEFAULT_FRIEND_NAME.fullName;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"                || (other instanceof FriendName // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 fullName.equals(((FriendName) other).fullName)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kevin9foong":13,"-":49}},{"path":"src/main/java/seedu/address/model/friend/FriendNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" * Tests that a {@code Friend}\u0027s {@code FriendName} matches any of the keywords given.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public class FriendNameContainsKeywordsPredicate implements Predicate\u003cFriend\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    public FriendNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public boolean test(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(friend.getFriendName().fullName, keyword));","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"                || (other instanceof FriendNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 keywords.equals(((FriendNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"MarcusTXK":1,"kevin9foong":30}},{"path":"src/main/java/seedu/address/model/friend/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.exceptions.InvalidDayTimeException;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":" * Represents a Friend\u0027s schedule in gitGud\u0027s friend list.","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"public class Schedule {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_INVALID_SCHEDULE \u003d \"Schedule must contain 7 valid days,from Monday to Sunday.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    private final ArrayList\u003cDay\u003e schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs a {@code Schedule}.","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    public Schedule() {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        this.schedule \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        for (int i \u003d 1; i \u003c\u003d 7; i++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"            schedule.add(new Day(DayOfWeek.of(i)));","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"     * Returns true if valid schedule.","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"     * @param schedule Schedule to validate.","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"     * @return True if valid.","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    public static boolean isValidSchedule(Schedule schedule) {","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        if (schedule.getSchedule().size() !\u003d 7) {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"            return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        for (int i \u003d 1; i \u003c\u003d 7; i++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"            Day current \u003d schedule.getSchedule().get(i - 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"            isValid \u003d isValid \u0026\u0026 Day.isValidDay(current) \u0026\u0026 current.getDayName().equals(DayOfWeek.of(i).name());","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        return isValid;","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"     * Sets the schedule of the day.","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"     * @param day       Day to set.","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"     * @param startTime Start of timeslot.","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"     * @param endTime   End of timeslot.","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"     * @param isFree    Is timeslot free.","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"     * @throws InvalidDayTimeException Invalid time or day.","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"    public void setScheduleDay(int day, String startTime, String endTime, boolean isFree)","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"            throws InvalidDayTimeException {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        if (day \u003c 1 || day \u003e 7) {","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"            throw new InvalidDayTimeException(\"Day value must be an Integer within 1 - 7 (inclusive).\");","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"        schedule.get(day - 1).setTime(startTime, endTime, isFree);","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"     * Returns an immutable day list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"    public List\u003cDay\u003e getSchedule() {","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"        return Collections.unmodifiableList(schedule);","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"    public String toString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"        for (Day day : schedule) {","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"            builder.append(\"\\nDay: \")","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"                    .append(day.getDayName())","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"                    .append(\"; Free TimeSlots: \");","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"            try {","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"                day.getGroupedTimeSlots().forEach(timeSlot -\u003e builder.append(Arrays.toString(timeSlot)).append(\", \"));","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"            } catch (InvalidDayTimeException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"                builder.append(\"Could not display timeslots\");","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"            builder.append(\";\");","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"            return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"        Schedule schedule1 \u003d (Schedule) o;","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":"        return Objects.equals(schedule, schedule1.schedule);","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"MarcusTXK"},"content":"        return Objects.hash(schedule);","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"MarcusTXK":107}},{"path":"src/main/java/seedu/address/model/friend/UniqueFriendsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.exceptions.DuplicateFriendException;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.exceptions.FriendNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":" * A list of friends that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":" * A friends is considered unique by comparing using {@code Friend#equals(Object)}. As such, adding and updating","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":" * of friends uses Friend#equals(Object) for equality so as to ensure that the friend being added or updated","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":" * is unique in terms of identity in the UniqueFriendsList. The removal of a friend also uses","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":" * Friend#equals(Object) so as to ensure that the friend with exactly the same friendId will be removed.","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":" * @see Friend#equals(Object)","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"public class UniqueFriendsList implements Iterable\u003cFriend\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    private final ObservableList\u003cFriend\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    private final ObservableList\u003cFriend\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     * Returns true if the list contains an equivalent friend as the given argument.","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    public boolean contains(Friend toCheck) {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"     * Returns true if the list contains a friend with idToCheck.","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"    public boolean containsId(FriendId idToCheck) {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"        requireNonNull(idToCheck);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"        return internalList.stream().anyMatch(friend -\u003e friend.getFriendId().equals(idToCheck));","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"     * Adds a friend to the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"     * The friend must not already exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    public void add(Friend friendToAdd) {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friendToAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"        if (containsId(friendToAdd.getFriendId())) {","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"            throw new DuplicateFriendException();","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        internalList.add(friendToAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"     * Gets a friend from the list.","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"     * The friend with the friendId must already exist in the list.","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"    public Friend getFriend(FriendId friendId) {","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(friendId);","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"        if (!containsId(friendId)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"            throw new FriendNotFoundException();","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"        return internalList.stream().filter(friend -\u003e friend.getFriendId().equals(friendId)).iterator().next();","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"     * Replaces the friend {@code friendToEdit} in the list with {@code editedFriend}.","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"     * {@code friendToEdit} must exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"     * The friend identity of {@code editedFriend} must not be the same as another existing friend in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"    public void setFriend(Friend friendToEdit, Friend editedFriend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"        requireAllNonNull(friendToEdit, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"        int index \u003d internalList.indexOf(friendToEdit);","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"            throw new FriendNotFoundException();","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"        // guard against if editedFriend already exists in the UniqueFriendsList.","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"        if (!friendToEdit.isSameFriendId(editedFriend) \u0026\u0026 containsId(editedFriend.getFriendId())) {","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"            throw new DuplicateFriendException();","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"        internalList.set(index, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"     * Removes the equivalent friend from the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"     * The friend must exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"    public void remove(Friend toRemove) {","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"            throw new FriendNotFoundException();","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"LZher385"},"content":"     * Links a friend with the game he plays.","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"LZher385"},"content":"     * The friend must exist in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"LZher385"},"content":"    public void link(Friend toLink, GameFriendLink gameFriendLink) {","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"LZher385"},"content":"        requireAllNonNull(toLink, gameFriendLink);","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"LZher385"},"content":"        // Get a modifiable copy of the current games in toLink","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"LZher385"},"content":"        Set\u003cGameFriendLink\u003e currentGames \u003d new HashSet\u003c\u003e(toLink.getGameFriendLinks());","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"LZher385"},"content":"        GameId gameId \u003d gameFriendLink.getGameId();","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"LZher385"},"content":"        currentGames.removeIf(game -\u003e game.getGameId().equals(gameId));","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"LZher385"},"content":"        currentGames.add(gameFriendLink);","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"MarcusTXK"},"content":"        Friend editedFriend \u003d new Friend(toLink.getFriendId(), toLink.getFriendName(),","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"MarcusTXK"},"content":"                currentGames, toLink.getSchedule());","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"LZher385"},"content":"        this.setFriend(toLink, editedFriend);","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"LZher385"},"content":"     * Unlinks a Friend {@code friendtoUnlink} with game {@code gameToUnlink}.","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"LZher385"},"content":"     * The friend must exist in the list.","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"LZher385"},"content":"    public void unlink(Friend friendToUnlink, Game gameToUnlink) {","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"LZher385"},"content":"        requireAllNonNull(friendToUnlink, gameToUnlink);","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"LZher385"},"content":"        // Get a modifiable copy of the current games in toUnlink","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"LZher385"},"content":"        Set\u003cGameFriendLink\u003e currentGames \u003d new HashSet\u003c\u003e(friendToUnlink.getGameFriendLinks());","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"LZher385"},"content":"        GameId gameId \u003d gameToUnlink.getGameId();","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"LZher385"},"content":"        currentGames.removeIf(game -\u003e game.getGameId().equals(gameId));","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"MarcusTXK"},"content":"        Friend editedFriend \u003d new Friend(friendToUnlink.getFriendId(), friendToUnlink.getFriendName(),","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"                currentGames, friendToUnlink.getSchedule());","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"LZher385"},"content":"        this.setFriend(friendToUnlink, editedFriend);","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"kevin9foong"},"content":"    public void setFriends(UniqueFriendsList replacement) {","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"kevin9foong"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"kevin9foong"},"content":"     * Replaces the contents of this list with {@code friends}.","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"kevin9foong"},"content":"     * {@code friends} must not contain duplicate friends.","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"kevin9foong"},"content":"    public void setFriends(List\u003cFriend\u003e friends) {","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"kevin9foong"},"content":"        requireAllNonNull(friends);","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"kevin9foong"},"content":"        if (!friendsAreUnique(friends)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"kevin9foong"},"content":"            throw new DuplicateFriendException();","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"kevin9foong"},"content":"        internalList.setAll(friends);","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"kevin9foong"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"kevin9foong"},"content":"    public ObservableList\u003cFriend\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"kevin9foong"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":169,"author":{"gitId":"kevin9foong"},"content":"    public Iterator\u003cFriend\u003e iterator() {","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"kevin9foong"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"kevin9foong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"kevin9foong"},"content":"                || (other instanceof UniqueFriendsList // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 internalList.equals(((UniqueFriendsList) other).internalList));","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"kevin9foong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"kevin9foong"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"kevin9foong"},"content":"     * Returns true if {@code friends} contains only unique friends.","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"kevin9foong"},"content":"    private boolean friendsAreUnique(List\u003cFriend\u003e friends) {","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"kevin9foong"},"content":"        for (int i \u003d 0; i \u003c friends.size() - 1; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"kevin9foong"},"content":"            for (int j \u003d i + 1; j \u003c friends.size(); j++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"kevin9foong"},"content":"                if (friends.get(i).equals(friends.get(j))) {","lastModifiedDate":"2021-10-06"},{"lineNumber":192,"author":{"gitId":"kevin9foong"},"content":"                    return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":193,"author":{"gitId":"kevin9foong"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"kevin9foong"},"content":"        return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"MarcusTXK":4,"LZher385":42,"YeluriKetan":16,"kevin9foong":136}},{"path":"src/main/java/seedu/address/model/friend/exceptions/DuplicateFriendException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":" * Signals that the operation will result in duplicate Friends (Friends are considered duplicates if they have the same","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":" * friendId).","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"public class DuplicateFriendException extends RuntimeException {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"    public DuplicateFriendException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"        super(\"Operation would result in duplicate friends\");","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kevin9foong":11}},{"path":"src/main/java/seedu/address/model/friend/exceptions/FriendNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":" * Signals that the operation is unable to find the specified friend.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"public class FriendNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":2,"kevin9foong":5}},{"path":"src/main/java/seedu/address/model/friend/exceptions/GameLinkNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend.exceptions;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"public class GameLinkNotFoundException extends Exception {","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"kevin9foong":4}},{"path":"src/main/java/seedu/address/model/friend/exceptions/InvalidDayTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.model.friend.exceptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":" * Signals that an invalid day or time was being parsed","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"public class InvalidDayTimeException extends IllegalValueException {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"    public InvalidDayTimeException(String message) {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"        super(message);","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    public InvalidDayTimeException(String message, Throwable cause) {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"        super(message, cause);","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"MarcusTXK":16}},{"path":"src/main/java/seedu/address/model/game/Game.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * Represents a Game in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public class Game {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    // Identity field","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    // used to uniquely identify each Game.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    public final GameId gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code Game}.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     * @param gameId A valid game name.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    public Game(GameId gameId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        this.gameId \u003d gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    public GameId getGameId() {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        return gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if both games have same gameId.","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"     * @return boolean result of equals.","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    public boolean isSameGameId(Game game) {","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        return this.gameId.equals(game.getGameId());","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        if (!(other instanceof Game)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        Game otherGame \u003d (Game) other;","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        return otherGame.getGameId().equals(getGameId());","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        return Objects.hash(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        builder.append(\"Game ID: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"                .append(getGameId());","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"YeluriKetan":36,"kevin9foong":33}},{"path":"src/main/java/seedu/address/model/game/GameFriendLinksContainsGameIdPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":" * Tests that a {@code gameId} is contained within a friend\u0027s {@Code GameFriendLinks}","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"public class GameFriendLinksContainsGameIdPredicate implements Predicate\u003cGame\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"    private final Friend friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"    public GameFriendLinksContainsGameIdPredicate(Friend friend) {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"        this.friend \u003d friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"    public Friend getFriend() {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"        return friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"                || (other instanceof GameFriendLinksContainsGameIdPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"                \u0026\u0026 friend.equals(((GameFriendLinksContainsGameIdPredicate) other).friend)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"    public boolean test(Game game) {","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"        return friend.hasGameAssociation(game);","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"tau-bar":32}},{"path":"src/main/java/seedu/address/model/game/GameId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" * Represents a Game\u0027s unique identifier in the gitGud game\u0027s list.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGameId(String)}","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"public class GameId {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_DUPLICATE_GAME_ID \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"            \"Game IDs should be unique for each game in the game\u0027s list.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_INVALID_CHARACTERS_IN_GAME_ID \u003d \"GAME_ID provided must be a single word\"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"            + \" and only contain alphanumeric characters.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9._-]+$\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    public final String value;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a {@code GameId}.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"     * @param gameId A valid gameId.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    public GameId(String gameId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        checkArgument(isValidGameId(gameId), MESSAGE_INVALID_CHARACTERS_IN_GAME_ID);","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        value \u003d gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a given string is a valid gameId.","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    public static boolean isValidGameId(String gameId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        return gameId.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        return value;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"                || (other instanceof GameId // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 value.equalsIgnoreCase(((GameId) other).value)); // state check","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":49,"kevin9foong":4}},{"path":"src/main/java/seedu/address/model/game/GameIdContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" * Tests that a {@code Game}\u0027s {@code GameId} matches any of the keywords given.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"public class GameIdContainsKeywordPredicate implements Predicate\u003cGame\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    private final String keyword;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    public GameIdContainsKeywordPredicate(String keyword) {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    public String getKeyword() {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"        return keyword;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    public boolean test(Game game) {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        // if no keyword is specified, all games will be listed","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        return StringUtil.containsPartialWordIgnoreCase(game.getGameId().value, keyword);","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"                || (other instanceof GameIdContainsKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 keyword.equals(((GameIdContainsKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":37}},{"path":"src/main/java/seedu/address/model/game/UniqueGamesList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.exceptions.DuplicateGameException;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.exceptions.GameNotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" * A list of games that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":" * Games is considered unique by comparing using {@code Game#equals(Object)}. As such, adding and updating","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":" * of games uses Game#equals(Object) for equality to ensure that the game being added or updated","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":" * is unique in terms of identity in the UniqueGamesList. The removal of a game also uses","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":" * Game#equals(Object) to ensure that the game with exactly the same gameId will be removed.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":" * @see Game#equals(Object)","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"public class UniqueGamesList implements Iterable\u003cGame\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    private final ObservableList\u003cGame\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    private final ObservableList\u003cGame\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if the list contains an equivalent game as the given argument.","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    public boolean contains(Game toCheck) {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if the list contains a game with idToCheck.","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    public boolean containsId(GameId idToCheck) {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(idToCheck);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        return internalList.stream().anyMatch(game -\u003e game.getGameId().equals(idToCheck));","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"     * Adds a game to the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"     * The game must not already exist in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    public void add(Game gameToAdd) {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(gameToAdd);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"        if (containsId(gameToAdd.getGameId())) {","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"            throw new DuplicateGameException();","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        internalList.add(gameToAdd);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"     * Gets a game from the list.","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"     * The game with the gameId must already exist in the list.","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"    public Game getGame(GameId gameId) {","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(gameId);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"        if (!containsId(gameId)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"            throw new GameNotFoundException();","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"        return internalList.stream().filter(game -\u003e game.getGameId().equals(gameId)).iterator().next();","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces the game {@code gameToEdit} in the list with {@code editedGame}.","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"     * {@code gameToEdit} must exist in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"     * The game identity of {@code editedGame} must not be the same as another existing game in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"    public void setGame(Game gameToEdit, Game editedGame) {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        requireAllNonNull(gameToEdit, editedGame);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"        int index \u003d internalList.indexOf(gameToEdit);","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"            throw new GameNotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"        // guard against if editedGame already exists in the UniqueGamesList.","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"        if (!gameToEdit.isSameGameId(editedGame) \u0026\u0026 containsId(editedGame.getGameId())) {","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"            throw new DuplicateGameException();","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"        internalList.set(index, editedGame);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"     * Removes the equivalent game from the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"     * The game must exist in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"    public void remove(Game toRemove) {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"            throw new GameNotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"    public void setGames(UniqueGamesList replacement) {","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces the contents of this list with {@code games}.","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"     * {@code games} must not contain duplicate games.","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"    public void setGames(List\u003cGame\u003e games) {","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"        requireAllNonNull(games);","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"        if (!gamesAreUnique(games)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"            throw new DuplicateGameException();","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"        internalList.setAll(games);","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"    public ObservableList\u003cGame\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"    public Iterator\u003cGame\u003e iterator() {","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"                || (other instanceof UniqueGamesList // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 internalList.equals(((UniqueGamesList) other).internalList));","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if {@code games} contains only unique games.","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"    private boolean gamesAreUnique(List\u003cGame\u003e games) {","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"YeluriKetan"},"content":"        for (int i \u003d 0; i \u003c games.size() - 1; i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"YeluriKetan"},"content":"            for (int j \u003d i + 1; j \u003c games.size(); j++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"YeluriKetan"},"content":"                if (games.get(i).equals(games.get(j))) {","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"YeluriKetan"},"content":"                    return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"YeluriKetan"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"YeluriKetan"},"content":"        return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":159}},{"path":"src/main/java/seedu/address/model/game/exceptions/DuplicateGameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.game.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":" * Signals that the operation will result in duplicate Games (Games are considered duplicates if they have the same","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":" * gameId).","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"public class DuplicateGameException extends RuntimeException {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"    public DuplicateGameException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"        super(\"Operation would result in duplicate games\");","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":12}},{"path":"src/main/java/seedu/address/model/game/exceptions/GameNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.game.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":" * Signals that the operation is unable to find the specified game.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"public class GameNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":7}},{"path":"src/main/java/seedu/address/model/gamefriendlink/GameFriendLink.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.gamefriendlink;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":" * Represents an association between a {@code Friend} and a {@code Game} that are present in the gitGud database.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"public class GameFriendLink {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    private final GameId gameId;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    private final FriendId friendId;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    private final UserName userName;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    private SkillValue skillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code GameFriendLink} with SkillValue set as null.","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     * Every field except skillValue must be present and not null.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"     * @param gameId   the valid game id of an existing {@code Game}.","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     * @param friendId the valid friend id of an existing {@code Friend}.","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"     * @param userName a valid username.","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    public GameFriendLink(GameId gameId, FriendId friendId, UserName userName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        requireAllNonNull(gameId, friendId, userName);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        this.gameId \u003d gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        this.friendId \u003d friendId;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        this.userName \u003d userName;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        this.skillValue \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code GameFriendLink}.","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"     * Every field except skillValue must be present and not null.","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"     * @param gameId     the valid game id of an existing {@code Game}.","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"     * @param friendId   the valid friend id of an existing {@code Friend}.","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"     * @param userName   a valid username.","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"     * @param skillValue a valid skill value or null.","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    public GameFriendLink(GameId gameId, FriendId friendId, UserName userName, SkillValue skillValue) {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        requireAllNonNull(gameId, friendId, userName);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        this.gameId \u003d gameId;","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        this.friendId \u003d friendId;","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        this.userName \u003d userName;","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        this.skillValue \u003d skillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"    public GameId getGameId() {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        return gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    public FriendId getFriendId() {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"        return friendId;","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"    public UserName getUserName() {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        return userName;","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    public SkillValue getSkillValue() {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        return skillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"    public void setSkillValue(SkillValue skillValue) {","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        this.skillValue \u003d skillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"        if (!(other instanceof GameFriendLink)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"        GameFriendLink otherLink \u003d (GameFriendLink) other;","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"        return otherLink.getGameId().equals(getGameId())","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 otherLink.getFriendId().equals(getFriendId())","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 otherLink.getUserName().equals(getUserName())","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 ((otherLink.getSkillValue() \u003d\u003d null \u0026\u0026 getSkillValue() \u003d\u003d null)","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"                || (otherLink.getSkillValue() !\u003d null \u0026\u0026 otherLink.getSkillValue().equals(getSkillValue())));","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"        return Objects.hash(gameId, friendId, userName);","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"        builder.append(\"Game ID: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"                .append(getGameId())","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"                .append(\" Username: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"                .append(getUserName());","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":73,"kevin9foong":36}},{"path":"src/main/java/seedu/address/model/gamefriendlink/SkillValue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.gamefriendlink;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"public class SkillValue {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Skill value assigned must be an integer \"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"            + \"from 0 to 10 (inclusive).\";","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    private static final Integer SKILL_LEVEL_MIN \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    private static final Integer SKILL_LEVEL_MAX \u003d 10;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    public final Integer skillVal;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code UserName}.","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     * @param skillVal A valid skill level.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    public SkillValue(Integer skillVal) {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(skillVal);","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"        checkArgument(validateSkillValue(skillVal), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"        this.skillVal \u003d skillVal;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     * Returns true if the given skill value provided is within the range 0 to 10 with bounds inclusive.","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    public static boolean validateSkillValue(Integer skillVal) {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(skillVal);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        return skillVal \u003e\u003d SKILL_LEVEL_MIN \u0026\u0026 skillVal \u003c\u003d SKILL_LEVEL_MAX;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     * Returns true if the given skill value string represents a valid integer and is within the range of [0, 10].","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     * @param skillValString string representing skill value to validate.","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"     * @return whether skill value string is valid integer and within range of [0, 10].","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"     * @throws ParseException thrown when","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    public static boolean validateSkillValueString(String skillValString) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(skillValString);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"            int skillVal \u003d Integer.parseInt(skillValString);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"            return skillVal \u003e\u003d SKILL_LEVEL_MIN \u0026\u0026 skillVal \u003c\u003d SKILL_LEVEL_MAX;","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    public Integer getSkillVal() {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        return this.skillVal;","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        return this.skillVal.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"                || (other instanceof SkillValue // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 this.skillVal.equals(((SkillValue) other).skillVal)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        return skillVal.hashCode();","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kevin9foong":73}},{"path":"src/main/java/seedu/address/model/gamefriendlink/UserName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.gamefriendlink;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" * Represents an in-game username of a {@code Friend} in a {@code Game} both of which are in the gitGud database.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidUserName(String)}","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"public class UserName {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"In-game usernames cannot be empty.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    /*","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"     * The first character of the username must not be a whitespace,","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\S.*$\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    public final String value;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a {@code UserName}.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"     * @param userName A valid username.","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    public UserName(String userName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(userName);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        checkArgument(isValidUserName(userName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        value \u003d userName;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    public static boolean isValidUserName(String test) {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        return value;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"                || (other instanceof UserName // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 value.equals(((UserName) other).value)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":57,"kevin9foong":1}},{"path":"src/main/java/seedu/address/model/util/DayTimeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.model.util;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.exceptions.InvalidDayTimeException;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":" * Helper function for managing conversions of day and time","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"public class DayTimeUtil {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"     * Used for validation that String follows the 24 hour format without minutes eg, 0100, 0200, etc","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    private static final Pattern TIME_FORMAT \u003d Pattern.compile(\"^([01][0-9]|2[0-3])(00)$\");","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"     * Converts index to time string in 24 hour format","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"     * @param index Index of time","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"     * @return Time in 24 hour format","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"     * @throws InvalidDayTimeException Invalid time input (must be within 0 - 23)","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    public static String getTimeFromIndex(int index) throws InvalidDayTimeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        if (index \u003c 0 || index \u003e 23) {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"            throw new InvalidDayTimeException(\"Invalid time index input\");","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"        if (index \u003c 10) {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"            return \"0\" + index + \"00\";","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        return index + \"00\";","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"     * Converts time string in 24 hour format to time index","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"     * @param time Time string in 24 hour format","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"     * @return Time index","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"     * @throws InvalidDayTimeException Invalid time string input","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"    public static int getIndexFromTime(String time) throws InvalidDayTimeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        final Matcher matcher \u003d TIME_FORMAT.matcher(time.trim());","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"            throw new InvalidDayTimeException(\"Invalid time string input\");","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        String indexTime \u003d time.trim().substring(0, 2);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"        return Integer.parseInt(indexTime);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"MarcusTXK":55}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.GamesList;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.Schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.exceptions.InvalidDayTimeException;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.UserName;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":" * The gameFriendLinkSet for each friend must be empty to prevent mismatched game and friend data","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":" * in the event of storage load failure.","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    // include private constructor for utility class","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    private SampleDataUtil() {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public static Friend[] getSampleFriends() {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        Game[] sampleGames \u003d getSampleGames();","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        Schedule[] sampleSchedules \u003d getSampleSchedules();","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        return new Friend[]{","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"                createSampleFriend(\"AlexY123\", \"Alex Yeoh\", sampleSchedules[0],","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"                        sampleGames[1], sampleGames[3]),","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"                createSampleFriend(\"BernieSanders\", \"Bernice Yu\", sampleSchedules[1],","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"                        sampleGames[5], sampleGames[4]),","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"                createSampleFriend(\"ChickenTender\", \"Charlotte Oliveiro\", sampleSchedules[2],","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"                        sampleGames[6], sampleGames[1]),","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"                createSampleFriend(\"Davidz\", \"David Li\", sampleSchedules[2],","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"                        sampleGames[7]),","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"                createSampleFriend(\"II3\", \"Irfan Ibrahim\", sampleSchedules[1],","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"                        sampleGames[0]),","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"                createSampleFriend(\"RoyJoy\", \"Roy Balakrishnan\", sampleSchedules[0],","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"                        sampleGames[1], sampleGames[0])","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"    public static Game[] getSampleGames() {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"        return new Game[]{","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"            new Game(new GameId(\"CSGO\")),","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"            new Game(new GameId(\"Valorant\")),","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"            new Game(new GameId(\"LeagueofLegends\")),","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"            new Game(new GameId(\"Minecraft\")),","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"            new Game(new GameId(\"Doom\")),","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"            new Game(new GameId(\"RocketLeague\")),","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"            new Game(new GameId(\"Halo\")),","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"            new Game(new GameId(\"ApexLegends\"))","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"    public static Schedule[] getSampleSchedules() {","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"            Schedule scheduleOne \u003d new Schedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"            scheduleOne.setScheduleDay(0, \"1800\", \"2200\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"            Schedule scheduleTwo \u003d new Schedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"            scheduleTwo.setScheduleDay(2, \"0200\", \"1600\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"            scheduleTwo.setScheduleDay(3, \"0300\", \"1600\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"            scheduleTwo.setScheduleDay(4, \"0400\", \"1600\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"            Schedule scheduleThree \u003d new Schedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"            scheduleThree.setScheduleDay(5, \"0800\", \"2200\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"            scheduleThree.setScheduleDay(6, \"0900\", \"2200\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"            return new Schedule[]{","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"                scheduleOne,","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"                scheduleTwo,","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"                scheduleThree","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"            };","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"        } catch (InvalidDayTimeException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"            return new Schedule[]{","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"                new Schedule(),","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"                new Schedule(),","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"                new Schedule()","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"            };","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"LZher385"},"content":"    public static ReadOnlyGamesList getSampleGamesList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"LZher385"},"content":"        GamesList sampleAb \u003d new GamesList();","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"LZher385"},"content":"        for (Game sampleGame : getSampleGames()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"LZher385"},"content":"            sampleAb.addGame(sampleGame);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"LZher385"},"content":"        return sampleAb;","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"    public static ReadOnlyFriendsList getSampleFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"        FriendsList sampleAb \u003d new FriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"        for (Friend sampleFriend : getSampleFriends()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"            sampleAb.addFriend(sampleFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":110,"author":{"gitId":"LZher385"},"content":"     * Create a Friend object with an array of gameIds.","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"MarcusTXK"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"     * Sample friends can only have GameFriendLinks to games which exist in the sample games list and must have unique","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"     * FriendIds.","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":115,"author":{"gitId":"MarcusTXK"},"content":"    public static Friend createSampleFriend(String friendIdString, String friendNameString, Schedule schedule,","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"MarcusTXK"},"content":"                                            Game... games) {","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"LZher385"},"content":"        FriendId friendId \u003d new FriendId(friendIdString);","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"        Set\u003cGameFriendLink\u003e gameFriendLinks \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"LZher385"},"content":"        FriendName friendName \u003d new FriendName(friendNameString);","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"        for (Game game : games) {","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"            // only link game and friend if game exists","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"            if (validateSampleGameExists(game)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"                gameFriendLinks.add(new GameFriendLink(game.getGameId(), friendId, new UserName(\"Username\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"MarcusTXK"},"content":"        return new Friend(friendId, friendName, gameFriendLinks, schedule);","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"    private static boolean validateSampleGameExists(Game game) {","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"        return Arrays.asList(getSampleGames()).contains(game);","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"    public static Set\u003cGameFriendLink\u003e getGameFriendLinkSet(GameFriendLink... gameFriendLinks) {","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"        return new HashSet\u003c\u003e(Arrays.asList(gameFriendLinks));","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"MarcusTXK":45,"YeluriKetan":1,"LZher385":20,"-":28,"kevin9foong":43}},{"path":"src/main/java/seedu/address/storage/FriendsListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" * Represents a storage for {@link FriendsList}.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"public interface FriendsListStorage {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"     * Returns the file path of the friends list file.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    Path getFriendsListFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     * Returns gitGud friends list as a {@link ReadOnlyFriendsList}.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    Optional\u003cReadOnlyFriendsList\u003e readFriendsList() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     * @see #getFriendsListFilePath()","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    Optional\u003cReadOnlyFriendsList\u003e readFriendsList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     * Saves the given {@link ReadOnlyFriendsList} to the storage.","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     * @param friendsList cannot be null.","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    void saveFriendsList(ReadOnlyFriendsList friendsList) throws IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"     * @see #saveFriendsList(ReadOnlyFriendsList)","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    void saveFriendsList(ReadOnlyFriendsList friendsList, Path filePath) throws IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":30,"kevin9foong":17}},{"path":"src/main/java/seedu/address/storage/GamesListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public interface GamesListStorage {","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"     * Returns the file path of the games list data file.","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    Path getGamesListFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    Optional\u003cReadOnlyGamesList\u003e readGamesList() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     * @see #getGamesListFilePath()","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    Optional\u003cReadOnlyGamesList\u003e readGamesList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     * @param gamesList cannot be null.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    void saveGamesList(ReadOnlyGamesList gamesList) throws IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"     * @see #saveGamesList(ReadOnlyGamesList)","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    void saveGamesList(ReadOnlyGamesList gamesList, Path filePath) throws IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"kevin9foong":43}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedFriend.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.Schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":" * Jackson-friendly version of {@link Friend}.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"class JsonAdaptedFriend {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Friend\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    private final String friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    private final String friendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    private final List\u003cJsonAdaptedGameFriendLink\u003e gameFriendLinks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    private final Schedule schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    public JsonAdaptedFriend(@JsonProperty(\"friendId\") String friendId,","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"                             @JsonProperty(\"friendName\") String friendName,","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"                             @JsonProperty(\"gameFriendLink\") List\u003cJsonAdaptedGameFriendLink\u003e gameFriendLinks,","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"                             @JsonProperty(\"schedule\") Schedule schedule) {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        this.friendId \u003d friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        this.friendName \u003d friendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        if (gameFriendLinks !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"            this.gameFriendLinks.addAll(gameFriendLinks);","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    public JsonAdaptedFriend(Friend sourceInstance) {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        friendId \u003d sourceInstance.getFriendId().value;","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"        friendName \u003d sourceInstance.getFriendName().fullName;","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        gameFriendLinks.addAll(sourceInstance.getGameFriendLinks().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"                .map(JsonAdaptedGameFriendLink::new)","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"        schedule \u003d sourceInstance.getSchedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    public Friend toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"        final List\u003cGameFriendLink\u003e gameFriendLinksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        for (JsonAdaptedGameFriendLink gameFriendLink : gameFriendLinks) {","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"            gameFriendLinksList.add(gameFriendLink.toModelType());","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        if (friendId \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"                    FriendId.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        if (!FriendId.isValidFriendId(friendId)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"            throw new IllegalValueException(FriendId.MESSAGE_INVALID_CHARACTERS);","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        if (friendName \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"                    FriendName.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"        if (!FriendName.isValidName(friendName)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"            throw new IllegalValueException(FriendName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"        final FriendId modelFriendId \u003d new FriendId(friendId);","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        final FriendName modelFriendName \u003d new FriendName(friendName);","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"        final Set\u003cGameFriendLink\u003e gameFriendLinkSet \u003d new HashSet\u003c\u003e(gameFriendLinksList);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"        if (schedule \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"                    Schedule.class.getSimpleName()));","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"        if (!Schedule.isValidSchedule(schedule)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"            throw new IllegalValueException(Schedule.MESSAGE_INVALID_SCHEDULE);","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":"        return new Friend(modelFriendId, modelFriendName, gameFriendLinkSet, schedule);","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"MarcusTXK":18,"kevin9foong":82}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGame.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":" * Jackson-friendly version of {@link Game}.","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"class JsonAdaptedGame {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    private final String gameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code JsonAdaptedGame} with the given gameName {@code String}.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    public JsonAdaptedGame(@JsonProperty(\"gameId\") String gameId) {","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"        this.gameId \u003d gameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     * Converts a given {@code Game} into this class for Jackson use.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public JsonAdaptedGame(Game sourceInstance) {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        this.gameId \u003d sourceInstance.getGameId().value;","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     * Converts this Jackson-friendly adapted game object into the model\u0027s {@code Game} object.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Game.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    public Game toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        if (!GameId.isValidGameId(gameId)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"            throw new IllegalValueException(GameId.MESSAGE_INVALID_CHARACTERS_IN_GAME_ID);","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        return new Game(new GameId(gameId));","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"YeluriKetan":1,"-":26,"kevin9foong":17}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGameFriendLink.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.SkillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.UserName;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"public class JsonAdaptedGameFriendLink {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    private final String gameId;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    private final String friendId;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    private final String friendGameUserName;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    private final String skillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code JsonAdaptedGameFriendLink} with the given gameId, friendId and friendGameUserName.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    public JsonAdaptedGameFriendLink(","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"            @JsonProperty(\"gameId\") String gameId,","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"            @JsonProperty(\"friendId\") String friendId,","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"            @JsonProperty(\"friendGameUserName\") String friendGameUserName,","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"            @JsonProperty(\"skillValue\") String skillValue) {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        this.gameId \u003d gameId;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        this.friendId \u003d friendId;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        this.friendGameUserName \u003d friendGameUserName;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        this.skillValue \u003d skillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     * Converts a given {@code GameFriendLink} into this class for Jackson use.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public JsonAdaptedGameFriendLink(GameFriendLink sourceInstance) {","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        friendId \u003d sourceInstance.getFriendId().value;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        gameId \u003d sourceInstance.getGameId().value;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        friendGameUserName \u003d sourceInstance.getUserName().value;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        SkillValue skillValueToSave \u003d sourceInstance.getSkillValue();","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        if (skillValueToSave \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"            this.skillValue \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"            this.skillValue \u003d skillValueToSave.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"     * Converts this Jackson-friendly adapted GameFriendLink object into the model\u0027s {@code GameFriendLink} object.","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted GameFriendLink.","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    public GameFriendLink toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        if (!GameId.isValidGameId(gameId)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"            throw new IllegalValueException(GameId.MESSAGE_INVALID_CHARACTERS_IN_GAME_ID);","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        if (!FriendId.isValidFriendId(friendId)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"            throw new IllegalValueException(FriendId.MESSAGE_INVALID_CHARACTERS);","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        if (!UserName.isValidUserName(friendGameUserName)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"            throw new IllegalValueException(UserName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"        if (skillValue !\u003d null","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 !SkillValue.validateSkillValueString(skillValue)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"            throw new IllegalValueException(SkillValue.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        SkillValue loadedSkillValue \u003d skillValue \u003d\u003d null ? null : ParserUtil.parseSkillValue(skillValue);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        return new GameFriendLink(new GameId(gameId), new FriendId(friendId), new UserName(friendGameUserName),","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"                loadedSkillValue);","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"kevin9foong":75}},{"path":"src/main/java/seedu/address/storage/JsonFriendsListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"public class JsonFriendsListStorage implements FriendsListStorage {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonFriendsListStorage.class);","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    private final Path filePath;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public JsonFriendsListStorage(Path filePath) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    public Path getFriendsListFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    public Optional\u003cReadOnlyFriendsList\u003e readFriendsList() throws DataConversionException {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        return readFriendsList(filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"     * Similar to {@link #readFriendsList()}.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    public Optional\u003cReadOnlyFriendsList\u003e readFriendsList(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        Optional\u003cJsonSerializableFriendsList\u003e jsonFriendsList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"                filePath, JsonSerializableFriendsList.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        if (jsonFriendsList.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"            return Optional.of(jsonFriendsList.get().toModelType());","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    public void saveFriendsList(ReadOnlyFriendsList friendsList) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        saveFriendsList(friendsList, filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"     * Similar to {@link #saveFriendsList(ReadOnlyFriendsList)}.","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"    public void saveFriendsList(ReadOnlyFriendsList friendsList, Path filePath) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friendsList);","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableFriendsList(friendsList), filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":60,"kevin9foong":20}},{"path":"src/main/java/seedu/address/storage/JsonGamesListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":" * A class to access games list data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"public class JsonGamesListStorage implements GamesListStorage {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonGamesListStorage.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    private final Path filePath;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public JsonGamesListStorage(Path filePath) {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public Path getGamesListFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        return filePath;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    public Optional\u003cReadOnlyGamesList\u003e readGamesList() throws DataConversionException {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        return readGamesList(filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"     * Similar to {@link #readGamesList()}.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    public Optional\u003cReadOnlyGamesList\u003e readGamesList(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        Optional\u003cJsonSerializableGamesList\u003e jsonGamesList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"                filePath, JsonSerializableGamesList.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        if (jsonGamesList.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"            return Optional.of(jsonGamesList.get().toModelType());","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    public void saveGamesList(ReadOnlyGamesList gamesList) throws IOException {","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"        saveGamesList(gamesList, filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"     * Similar to {@link #saveGamesList(ReadOnlyGamesList)}.","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"    public void saveGamesList(ReadOnlyGamesList gamesList, Path filePath) throws IOException {","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(gamesList);","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableGamesList(gamesList), filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"kevin9foong":82}},{"path":"src/main/java/seedu/address/storage/JsonSerializableFriendsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":" * An Immutable FriendsList that is serializable to JSON format.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"@JsonRootName(value \u003d \"friends\")","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"class JsonSerializableFriendsList {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_DUPLICATE_FRIEND_ID \u003d \"Friends list contains duplicate friend(s) \"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"            + \"with the same friendId.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    private final List\u003cJsonAdaptedFriend\u003e friends \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code JsonSerializableFriendsList} with the given friends.","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public JsonSerializableFriendsList(@JsonProperty(\"friends\") List\u003cJsonAdaptedFriend\u003e friends) {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        this.friends.addAll(friends);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     * Converts a given {@code ReadOnlyFriendsList} into this class for Jackson use.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableFriendsList}.","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    public JsonSerializableFriendsList(ReadOnlyFriendsList source) {","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        friends.addAll(source.getFriendsList().stream().map(JsonAdaptedFriend::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"     * Converts this friend list into the model\u0027s {@code FriendsList} object.","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    public FriendsList toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        FriendsList friendsList \u003d new FriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        for (JsonAdaptedFriend jsonAdaptedFriend : friends) {","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"            Friend friend \u003d jsonAdaptedFriend.toModelType();","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"            if (friendsList.hasFriendWithId(friend.getFriendId())) {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_FRIEND_ID);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"            friendsList.addFriend(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        return friendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":36,"kevin9foong":25}},{"path":"src/main/java/seedu/address/storage/JsonSerializableGamesList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.GamesList;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":" * An Immutable games list that is serializable to JSON format.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"@JsonRootName(value \u003d \"games\")","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"class JsonSerializableGamesList {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_DUPLICATE_GAME \u003d \"Games list contains duplicate game(s).\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    private final List\u003cJsonAdaptedGame\u003e games \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code JsonSerializableGamesList} with the given games.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    public JsonSerializableGamesList(@JsonProperty(\"games\") List\u003cJsonAdaptedGame\u003e games) {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        this.games.addAll(games);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     * Converts a given {@code ReadOnlyGamesList} into this class for Jackson use.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableGamesList}.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    public JsonSerializableGamesList(ReadOnlyGamesList source) {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        games.addAll(source.getGamesList().stream().map(JsonAdaptedGame::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"     * Converts this games list into the model\u0027s {@code GamesList} object.","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    public GamesList toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        GamesList gamesList \u003d new GamesList();","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        for (JsonAdaptedGame jsonAdaptedGame : games) {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"            Game game \u003d jsonAdaptedGame.toModelType();","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"            if (gamesList.hasGame(game)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GAME);","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"            gamesList.addGame(game);","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        return gamesList;","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"kevin9foong":60}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":47,"kevin9foong":1}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"public interface Storage extends FriendsListStorage, GamesListStorage, UserPrefsStorage {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":6,"kevin9foong":1}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    private final FriendsListStorage friendsListStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    private final GamesListStorage gamesListStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    public StorageManager(FriendsListStorage friendsListStorage, GamesListStorage gamesListStorage,","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friendsListStorage);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(gamesListStorage);","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(userPrefsStorage);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        this.friendsListStorage \u003d friendsListStorage;","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        this.gamesListStorage \u003d gamesListStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Friends list methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    public Path getFriendsListFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"        return friendsListStorage.getFriendsListFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    public Optional\u003cReadOnlyFriendsList\u003e readFriendsList() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        return readFriendsList(friendsListStorage.getFriendsListFilePath());","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"    public Optional\u003cReadOnlyFriendsList\u003e readFriendsList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        logger.fine(\"Attempting to read friends list data from file: \" + filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        return friendsListStorage.readFriendsList(filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"    public void saveFriendsList(ReadOnlyFriendsList friendsList) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"        saveFriendsList(friendsList, friendsListStorage.getFriendsListFilePath());","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"    public void saveFriendsList(ReadOnlyFriendsList friendsList, Path filePath) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        logger.fine(\"Attempting to write friends list data to file: \" + filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"        friendsListStorage.saveFriendsList(friendsList, filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Games list methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"    public Path getGamesListFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"        return gamesListStorage.getGamesListFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"    public Optional\u003cReadOnlyGamesList\u003e readGamesList() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"        return readGamesList(gamesListStorage.getGamesListFilePath());","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"    public Optional\u003cReadOnlyGamesList\u003e readGamesList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"        logger.fine(\"Attempting to read games list data from file: \" + filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"        return gamesListStorage.readGamesList(filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"    public void saveGamesList(ReadOnlyGamesList gamesList) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"        saveGamesList(gamesList, gamesListStorage.getGamesListFilePath());","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"    public void saveGamesList(ReadOnlyGamesList gamesList, Path filePath) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"        logger.fine(\"Attempting to write games list data to file: \" + filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"        gamesListStorage.saveGamesList(gamesList, filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":73,"kevin9foong":45}},{"path":"src/main/java/seedu/address/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.UserPrefs}.","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":36,"kevin9foong":2}},{"path":"src/main/java/seedu/address/ui/FriendCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import seedu.address.ui.util.SampleStyles;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"public class FriendCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    private static final String FXML \u003d \"FriendListCard.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    public final Friend friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    private Label friendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    private Label id;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    private FlowPane games;","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"     * Creates a {@code FriendCard} with the given {@code Friend} and index to display.","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    public FriendCard(Friend friend, int displayedIndex) {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        this.friend \u003d friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"        friendName.setText(formatFriendNameId(friend));","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        games.setHgap(20.0);","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        games.setVgap(15.0);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        friend.getGameFriendLinks().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"                .sorted(Comparator.comparing(game -\u003e game.getGameId().value))","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"                .forEach(game -\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"                    Label label \u003d new Label(game.getGameId().value);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"                    label.setBackground(SampleStyles.BLURPLE_BACKGROUND);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"                    games.getChildren().add(label);","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"                });","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"     * Formats the friendName for the {@Code FriendCard}.","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"     * @param friend The friend whose id and name (if available) is to be displayed.","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"tau-bar"},"content":"     * @return String with the friend\u0027s id and name.","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"tau-bar"},"content":"    private String formatFriendNameId(Friend friend) {","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"tau-bar"},"content":"        if (friend.getFriendName().equals(FriendName.DEFAULT_FRIEND_NAME)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"tau-bar"},"content":"            return friend.getFriendId().toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"tau-bar"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"tau-bar"},"content":"            return friend.getFriendId() + \" (Name: \" + friend.getFriendName().fullName + \")\";","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"        if (!(other instanceof FriendCard)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        FriendCard card \u003d (FriendCard) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 friend.equals(card.friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tau-bar":25,"LZher385":1,"YeluriKetan":1,"-":51,"kevin9foong":12}},{"path":"src/main/java/seedu/address/ui/FriendListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"public class FriendListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    private static final String FXML \u003d \"FriendListPanel.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"     * The default FriendMainCard with no friend\u0027s data to be used when a non-get command is run.","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"    private static final FriendMainCard DEFAULT_FRIEND_MAIN_CARD \u003d new FriendMainCard();","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FriendListPanel.class);","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"    private FriendMainCard friendMainCard;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    private ListView\u003cFriend\u003e personListView;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"    private StackPane friendMainCardPlaceholder;","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"    public FriendListPanel(ObservableList\u003cFriend\u003e friendList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"        friendMainCard \u003d DEFAULT_FRIEND_MAIN_CARD;","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"        friendMainCardPlaceholder.getChildren().add(friendMainCard.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        personListView.setItems(friendList);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"     * Updates the {@Code FriendMainCard} to contain details about a friend.","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"     * @param friend The friend whose details are to be displayed.","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"     * @param gameObservableList The list of games to be filtered and displayed.","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"    public void updateFriendMainCardWithFriend(Friend friend, ObservableList\u003cGame\u003e gameObservableList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"        friendMainCardPlaceholder.getChildren().remove(friendMainCard.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"        friendMainCard \u003d new FriendMainCard(friend, gameObservableList);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"        friendMainCardPlaceholder.getChildren().add(friendMainCard.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"     * Sets the FriendMainCard to the default setting.","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"    public void setFriendMainCardToDefault() {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"        friendMainCardPlaceholder.getChildren().remove(friendMainCard.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"        friendMainCard \u003d DEFAULT_FRIEND_MAIN_CARD;","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"        friendMainCardPlaceholder.getChildren().add(friendMainCard.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    class PersonListViewCell extends ListCell\u003cFriend\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        protected void updateItem(Friend friend, boolean empty) {","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"            super.updateItem(friend, empty);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"            if (empty || friend \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"                setGraphic(new FriendCard(friend, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tau-bar":35,"LZher385":3,"-":36,"kevin9foong":8}},{"path":"src/main/java/seedu/address/ui/FriendMainCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"import seedu.address.ui.util.SampleStyles;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"public class FriendMainCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"    private static final String FXML \u003d \"FriendMainCard.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"    private static final String FRIEND_TITLE \u003d \"Friend ID: %s \\n Name: %s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"    private static final String DEFAULT_FRIEND_TITLE \u003d \"No friend selected\";","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FriendMainCard.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"    private Label friendTitle;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"    private FlowPane games;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"    private ListView\u003cGame\u003e gameListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"    private Friend currentFriend;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"     * Creates a {@code FriendMainCard}.","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"    public FriendMainCard() {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        friendTitle.setText(DEFAULT_FRIEND_TITLE);","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"     * Creates a {@code FriendMainCard} with the given {@Code Friend} and {@code ObservableList}.","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"    public FriendMainCard(Friend friend, ObservableList\u003cGame\u003e filteredGamesList) {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        super(FXML);","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        friendTitle.setText(String.format(FRIEND_TITLE, friend.getFriendId(), friend.getFriendName()));","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"        filteredGamesList.stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"                .sorted(Comparator.comparing(game -\u003e game.getGameId().value))","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"                .forEach(game -\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"                    Label label \u003d new Label(game.getGameId().value);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"                    label.setBackground(SampleStyles.BLURPLE_BACKGROUND);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"                    games.getChildren().add(label);","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"                });","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"        this.currentFriend \u003d friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"//    private ObservableList\u003cGame\u003e filterGamesList(Friend friend, ObservableList\u003cGame\u003e gamesList) {","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"//        FilteredList\u003cGame\u003e filteredGames \u003d new FilteredList\u003c\u003e(gamesList);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"//        filteredGames.setPredicate(new GameFriendLinksContainsGameIdPredicate(friend));","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"tau-bar"},"content":"//        return filteredGames;","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"//    }","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tau-bar":65}},{"path":"src/main/java/seedu/address/ui/GameCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":" * An UI component that displays information of a {@code Game}.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"public class GameCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    private static final String FXML \u003d \"GameListCard.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"    public final Game game;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"    private Label gameId;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"    private Label id;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"    private FlowPane games;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"     * Creates a {@code GameCode} with the given {@code Game} and index to display.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"    public GameCard(Game game, int displayedIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"        this.game \u003d game;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"        gameId.setText(game.getGameId().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"        if (!(other instanceof GameCard)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"        // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"LZher385"},"content":"        GameCard card \u003d (GameCard) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"LZher385"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"LZher385"},"content":"                \u0026\u0026 game.equals(card.game);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LZher385":63}},{"path":"src/main/java/seedu/address/ui/GameListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":" * Panel containing the list of Games.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"public class GameListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    private static final String FXML \u003d \"GameListPanel.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"     * The default GameMainCard with no game\u0027s data to be used when a non-get command is run.","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"    private static final GameMainCard DEFAULT_GAME_MAIN_CARD \u003d new GameMainCard();","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GameListPanel.class);","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"    private GameMainCard gameMainCard;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"    private ListView\u003cGame\u003e gameListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"    private StackPane gameMainCardPlaceholder;","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"     * Creates a {@code GameListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"    public GameListPanel(ObservableList\u003cGame\u003e gameList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"        gameMainCard \u003d DEFAULT_GAME_MAIN_CARD;","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"        gameMainCardPlaceholder.getChildren().add(gameMainCard.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"        gameListView.setItems(gameList);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"        gameListView.setCellFactory(listView -\u003e new GameListViewCell());","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"     * Updates the {@Code GameMainCard} to contain details about a game.","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"     * @param game The game whose details are to be displayed.","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"     * @param friendObservableList The list of friends to be filtered and displayed.","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"    public void updateGameMainCardWithGame(Game game, ObservableList\u003cFriend\u003e friendObservableList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"        gameMainCardPlaceholder.getChildren().remove(gameMainCard.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"        gameMainCard \u003d new GameMainCard(game, friendObservableList);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"        gameMainCardPlaceholder.getChildren().add(gameMainCard.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"     * Sets the GameMainCard to the default setting.","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"    public void setGameMainCardToDefault() {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"        gameMainCardPlaceholder.getChildren().remove(gameMainCard.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"        gameMainCard \u003d DEFAULT_GAME_MAIN_CARD;","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"        gameMainCardPlaceholder.getChildren().add(gameMainCard.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"LZher385"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Game} using a {@code GameCard}.","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"LZher385"},"content":"    class GameListViewCell extends ListCell\u003cGame\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"LZher385"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"LZher385"},"content":"        protected void updateItem(Game game, boolean empty) {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"LZher385"},"content":"            super.updateItem(game, empty);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"LZher385"},"content":"            if (empty || game \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"LZher385"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"LZher385"},"content":"                setText(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"LZher385"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"LZher385"},"content":"                setGraphic(new GameCard(game, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"LZher385"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tau-bar":35,"LZher385":47}},{"path":"src/main/java/seedu/address/ui/GameMainCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"import seedu.address.ui.util.SampleStyles;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"public class GameMainCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"    private static final String FXML \u003d \"GameMainCard.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"    private static final String GAME_TITLE \u003d \"Game: %s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"    private static final String DEFAULT_GAME_TITLE \u003d \"No game selected\";","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GameMainCard.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"    private Label gameTitle;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"    private ListView\u003cFriend\u003e friendListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"    private FlowPane friends;","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"    private Game currentGame;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"     * Creates a {@code GameMainCard}.","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"    public GameMainCard() {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"        super(FXML);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        gameTitle.setText(DEFAULT_GAME_TITLE);","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"     * Creates a {@code GameMainCard} with the given {@Code Game} and {@code ObservableList}.","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"    public GameMainCard(Game game, ObservableList\u003cFriend\u003e filteredFriendList) {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        gameTitle.setText(String.format(GAME_TITLE, game.getGameId()));","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"        filteredFriendList.stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"                .sorted(Comparator.comparing(friend -\u003e friend.getFriendId().value))","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"                .forEach(friend -\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"                    Label label \u003d new Label(friend.getFriendId().value);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"                    label.setBackground(SampleStyles.BLURPLE_BACKGROUND);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"                    friends.getChildren().add(label);","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"                });","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"        this.currentGame \u003d game;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tau-bar":59}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w13-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tau-bar":1,"-":101,"kevin9foong":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"    private FriendListPanel friendListPanel;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"    private GameListPanel gameListPanel;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"    private GameMainCard gameMainCard;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"    private StackPane friendsPlaceholder;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"    private VBox friendBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"    private VBox gameBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"    private StackPane gamesPlaceholder;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"LZher385"},"content":"        friendListPanel \u003d new FriendListPanel(logic.getFilteredFriendsList());","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"tau-bar"},"content":"        showFriendList();","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"LZher385"},"content":"        gameListPanel \u003d new GameListPanel(logic.getFilteredGamesList());","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"LZher385"},"content":"    private void hideFriendBox() {","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"LZher385"},"content":"        friendBox.setVisible(false);","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"LZher385"},"content":"        friendBox.setManaged(false);","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"LZher385"},"content":"    private void showFriendBox() {","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"LZher385"},"content":"        friendBox.setVisible(true);","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"LZher385"},"content":"        friendBox.setManaged(true);","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"LZher385"},"content":"    private void hideGameBox() {","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"LZher385"},"content":"        gameBox.setVisible(false);","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"LZher385"},"content":"        gameBox.setManaged(false);","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"LZher385"},"content":"    private void showGameBox() {","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"LZher385"},"content":"        gameBox.setVisible(true);","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"LZher385"},"content":"        gameBox.setManaged(true);","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"LZher385"},"content":"    private void addFriendListPanelToFriendsPlaceholder() {","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"LZher385"},"content":"        // only shows friend list if not already being shown","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"LZher385"},"content":"        if (!friendsPlaceholder.getChildren().contains(friendListPanel.getRoot())) {","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"LZher385"},"content":"            friendsPlaceholder.getChildren().add(friendListPanel.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"LZher385"},"content":"    private void removeGameListPanelFromGamesPlaceholder() {","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"LZher385"},"content":"        gamesPlaceholder.getChildren().removeAll(gameListPanel.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"LZher385"},"content":"    private void addGameListPanelToGamesPlaceholder() {","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"LZher385"},"content":"        if (!gamesPlaceholder.getChildren().contains(gameListPanel.getRoot())) {","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"LZher385"},"content":"            gamesPlaceholder.getChildren().add(gameListPanel.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"LZher385"},"content":"    private void removeGameMainCardFromGamesPlaceholder() {","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"tau-bar"},"content":"        if (gameMainCard !\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"LZher385"},"content":"            gamesPlaceholder.getChildren().removeAll(gameMainCard.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"tau-bar"},"content":"            gameMainCard \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"LZher385"},"content":"     * Shows the {@Code friendListPanel} when the {@Code friend --list} command is run.","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"tau-bar"},"content":"    private void showFriendList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"tau-bar"},"content":"        // only shows friend list if not already being shown","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"LZher385"},"content":"        addFriendListPanelToFriendsPlaceholder();","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"LZher385"},"content":"    private void showGameList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"LZher385"},"content":"        removeGameMainCardFromGamesPlaceholder();","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"LZher385"},"content":"        addGameListPanelToGamesPlaceholder();","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"tau-bar"},"content":"     * Handles the mounting and dismounting of UI Regions when a {@Code friend}","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"tau-bar"},"content":"     * command is run.","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"tau-bar"},"content":"     * @param commandResult The {@Code commandResult} from the {@Code friend} command.","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"tau-bar"},"content":"    private void handleFriendCommand(CommandResult commandResult) {","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"LZher385"},"content":"        hideGameBox();","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"LZher385"},"content":"        showFriendBox();","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"tau-bar"},"content":"        if (commandResult.isFriendGet()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"tau-bar"},"content":"            friendListPanel.updateFriendMainCardWithFriend(commandResult.getFriendToGet(),","lastModifiedDate":"2021-10-22"},{"lineNumber":249,"author":{"gitId":"tau-bar"},"content":"                    logic.getFilteredGamesList());","lastModifiedDate":"2021-10-22"},{"lineNumber":250,"author":{"gitId":"tau-bar"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"tau-bar"},"content":"            friendListPanel.setFriendMainCardToDefault();","lastModifiedDate":"2021-10-22"},{"lineNumber":252,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"tau-bar"},"content":"        showFriendList();","lastModifiedDate":"2021-10-22"},{"lineNumber":254,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":258,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"tau-bar"},"content":"     * Handles the mounting and dismounting of UI Regions when a {@Code game}","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"tau-bar"},"content":"     * command is run.","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"tau-bar"},"content":"     * @param commandResult The {@Code commandResult} from the {@Code game} command.","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"tau-bar"},"content":"    private void handleGameCommand(CommandResult commandResult) {","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"LZher385"},"content":"        hideFriendBox();","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"LZher385"},"content":"        showGameBox();","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"tau-bar"},"content":"        if (commandResult.isGameGet()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"tau-bar"},"content":"            gameListPanel.updateGameMainCardWithGame(commandResult.getGameToGet(), logic.getFilteredFriendsList());","lastModifiedDate":"2021-10-22"},{"lineNumber":268,"author":{"gitId":"tau-bar"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"tau-bar"},"content":"            gameListPanel.setGameMainCardToDefault();","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"tau-bar"},"content":"        showGameList();","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"tau-bar"},"content":"     * Executes the command based on the {@Code CommandType}","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"tau-bar"},"content":"     * enumeration.","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":286,"author":{"gitId":"tau-bar"},"content":"            switch (commandResult.getCommandType()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"kevin9foong"},"content":"            case FRIEND_GET:","lastModifiedDate":"2021-10-22"},{"lineNumber":288,"author":{"gitId":"kevin9foong"},"content":"            case FRIEND_ADD:","lastModifiedDate":"2021-10-22"},{"lineNumber":289,"author":{"gitId":"kevin9foong"},"content":"            case FRIEND_EDIT:","lastModifiedDate":"2021-10-22"},{"lineNumber":290,"author":{"gitId":"kevin9foong"},"content":"            case FRIEND_ADD_GAME_SKILL:","lastModifiedDate":"2021-10-22"},{"lineNumber":291,"author":{"gitId":"kevin9foong"},"content":"            case FRIEND_LIST:","lastModifiedDate":"2021-10-22"},{"lineNumber":292,"author":{"gitId":"tau-bar"},"content":"            case CLEAR:","lastModifiedDate":"2021-10-22"},{"lineNumber":293,"author":{"gitId":"tau-bar"},"content":"            case FRIEND_LINK:","lastModifiedDate":"2021-10-22"},{"lineNumber":294,"author":{"gitId":"kevin9foong"},"content":"            case FRIEND_DELETE:","lastModifiedDate":"2021-10-22"},{"lineNumber":295,"author":{"gitId":"tau-bar"},"content":"                handleFriendCommand(commandResult);","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"tau-bar"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"tau-bar"},"content":"            case GAME_ADD: case GAME_GET: case GAME_DELETE: case GAME_LIST:","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"tau-bar"},"content":"                handleGameCommand(commandResult);","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"tau-bar"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"tau-bar"},"content":"            case HELP:","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2021-10-22"},{"lineNumber":302,"author":{"gitId":"tau-bar"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":303,"author":{"gitId":"tau-bar"},"content":"            case EXIT:","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":305,"author":{"gitId":"tau-bar"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"tau-bar"},"content":"            default:","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"tau-bar"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tau-bar":62,"LZher385":62,"-":185,"kevin9foong":7}},{"path":"src/main/java/seedu/address/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":12,"kevin9foong":3}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/gitGud.png\";","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"MarcusTXK":1,"-":88}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param root     Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":87,"kevin9foong":6}},{"path":"src/main/java/seedu/address/ui/util/SampleStyles.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.ui.util;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"public class SampleStyles {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"    public static final Background BLURPLE_BACKGROUND \u003d new Background(","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"            new BackgroundFill(Color.rgb(114, 137, 218, 1),","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"            new CornerRadii(10.0),","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"            new Insets(-5.0, -7.0, -5.0, -7.0)));","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"tau-bar":15}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"tau-bar":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"    -fx-background-color: #393E46;","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"    background-color: #393E46; /* Used in the default.html file */","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"    -fx-font-family: \"Open Sans\";","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"    -fx-background-color: #393E46;","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":68,"author":{"gitId":"tau-bar"},"content":"    -fx-background-color: #393E46;","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":74,"author":{"gitId":"tau-bar"},"content":"    -fx-background-color: #393E46;","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"tau-bar"},"content":".list-cell:filled {","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"tau-bar"},"content":"    -fx-background-color: #393E46;","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"tau-bar"},"content":"    -fx-border-color: #222831;","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"tau-bar"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":115,"author":{"gitId":"tau-bar"},"content":"     -fx-background-color: #393E46;","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":119,"author":{"gitId":"tau-bar"},"content":"     -fx-background-color: #393E46;","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"tau-bar"},"content":"     -fx-border-color: transparent;","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"tau-bar"},"content":"    -fx-font-family: \"Monaco\";","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"tau-bar"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"tau-bar"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"tau-bar"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"tau-bar"},"content":".result-display .scroll-pane {","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"tau-bar"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"tau-bar"},"content":".result-display .scroll-pane .viewport{","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"tau-bar"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":143,"author":{"gitId":"tau-bar"},"content":".result-display .scroll-pane .content{","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"tau-bar"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"tau-bar"},"content":"    -fx-background-color: #393E46;","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"tau-bar"},"content":"    -fx-font-family: \"Monaco\";","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":272,"author":{"gitId":"tau-bar"},"content":"    -fx-background-color: #393E46;","lastModifiedDate":"2021-10-22"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":275,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"tau-bar"},"content":"    -fx-background-color: #D3D3D3;","lastModifiedDate":"2021-10-22"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":297,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":308,"author":{"gitId":"tau-bar"},"content":"    -fx-background-color: #eeeeee;","lastModifiedDate":"2021-10-22"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":310,"author":{"gitId":"tau-bar"},"content":"    -fx-border-color: #eeeeee;","lastModifiedDate":"2021-10-22"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"tau-bar"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2021-10-22"},{"lineNumber":314,"author":{"gitId":"tau-bar"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2021-10-22"},{"lineNumber":315,"author":{"gitId":"tau-bar"},"content":"    -fx-font-family: \"Monaco\";","lastModifiedDate":"2021-10-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":317,"author":{"gitId":"tau-bar"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"tau-bar"},"content":"    -fx-background-color: #eeeeee;","lastModifiedDate":"2021-10-22"},{"lineNumber":326,"author":{"gitId":"tau-bar"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2021-10-22"},{"lineNumber":327,"author":{"gitId":"tau-bar"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2021-10-22"},{"lineNumber":328,"author":{"gitId":"tau-bar"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"tau-bar"},"content":".main-card {","lastModifiedDate":"2021-10-22"},{"lineNumber":332,"author":{"gitId":"tau-bar"},"content":"    -fx-background-color: #222831;","lastModifiedDate":"2021-10-22"},{"lineNumber":333,"author":{"gitId":"tau-bar"},"content":"    -fx-text-fill: #eeeeee;","lastModifiedDate":"2021-10-22"},{"lineNumber":334,"author":{"gitId":"tau-bar"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2021-10-22"},{"lineNumber":335,"author":{"gitId":"tau-bar"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2021-10-22"},{"lineNumber":336,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":337,"author":{"gitId":"tau-bar"},"content":".main-card-title {","lastModifiedDate":"2021-10-22"},{"lineNumber":338,"author":{"gitId":"tau-bar"},"content":"    -fx-text-fill: #eeeeee;","lastModifiedDate":"2021-10-22"},{"lineNumber":339,"author":{"gitId":"tau-bar"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2021-10-22"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"tau-bar"},"content":".items-list {","lastModifiedDate":"2021-10-22"},{"lineNumber":343,"author":{"gitId":"tau-bar"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-10-22"},{"lineNumber":344,"author":{"gitId":"tau-bar"},"content":"    -fx-border-color: black;","lastModifiedDate":"2021-10-22"},{"lineNumber":345,"author":{"gitId":"tau-bar"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2021-10-22"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"tau-bar":51,"-":295}},{"path":"src/main/resources/view/FriendListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" prefHeight\u003d\"106.0\" prefWidth\u003d\"311.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" prefHeight\u003d\"105.0\" prefWidth\u003d\"374.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"                  \u003cInsets bottom\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"                \u003cLabel fx:id\u003d\"friendName\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"                  \u003cInsets bottom\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"               \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"            \u003cFlowPane fx:id\u003d\"games\" prefWidth\u003d\"291.0\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tau-bar":17,"-":26}},{"path":"src/main/resources/view/FriendListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" prefHeight\u003d\"440.0\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"    \u003cListView fx:id\u003d\"personListView\" styleClass\u003d\"items-list\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"    \u003cStackPane fx:id\u003d\"friendMainCardPlaceholder\" alignment\u003d\"TOP_RIGHT\" nodeOrientation\u003d\"INHERIT\" prefHeight\u003d\"440.0\"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"               prefWidth\u003d\"282.0\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"tau-bar":8,"-":3}},{"path":"src/main/resources/view/FriendMainCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"\u003cVBox fx:id\u003d\"friendMainCard\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"440.0\" prefWidth\u003d\"279.0\" styleClass\u003d\"main-card\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"   \u003cLabel fx:id\u003d\"friendTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"55.0\" prefWidth\u003d\"279.0\" styleClass\u003d\"main-card-title\" text\u003d\"No Friend Selected\" textAlignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"   \u003cFlowPane fx:id\u003d\"games\" hgap\u003d\"20.0\" prefHeight\u003d\"348.0\" prefWidth\u003d\"279.0\" vgap\u003d\"15.0\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"         \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"      \u003c/padding\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tau-bar":14}},{"path":"src/main/resources/view/GameListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"                \u003cLabel fx:id\u003d\"gameId\" text\u003d\"\\$gameId\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tau-bar":1,"LZher385":31}},{"path":"src/main/resources/view/GameListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"\u003cListView fx:id\u003d\"gameListView\" styleClass\u003d\"items-list\" HBox.hgrow\u003d\"ALWAYS\" prefHeight\u003d\"440.0\"/\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"\u003cStackPane fx:id\u003d\"gameMainCardPlaceholder\" alignment\u003d\"TOP_RIGHT\" prefHeight\u003d\"440.0\"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"           prefWidth\u003d\"282.0\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"tau-bar":8,"-":4}},{"path":"src/main/resources/view/GameMainCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"\u003cVBox fx:id\u003d\"gameMainCard\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"      prefHeight\u003d\"440.0\" prefWidth\u003d\"279.0\" styleClass\u003d\"main-card\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"    \u003cLabel fx:id\u003d\"gameTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"49.0\" prefWidth\u003d\"284.0\" styleClass\u003d\"main-card-title\" text\u003d\"No Friend Selected\" textAlignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"    \u003cFlowPane fx:id\u003d\"friends\" hgap\u003d\"20.0\" prefHeight\u003d\"356.0\" prefWidth\u003d\"279.0\" vgap\u003d\"15.0\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"        \u003c/padding\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tau-bar":15}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/16\"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@HelpWindow.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                            \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                            \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"tau-bar":1,"-":42,"kevin9foong":2}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"         title\u003d\"gitGud\" minWidth\u003d\"650\" minHeight\u003d\"700\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    \u003cImage url\u003d\"@/images/gitGud.png\" /\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"        \u003cVBox fx:id\u003d\"friendBox\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"          \u003cStackPane fx:id\u003d\"friendsPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"        \u003cVBox fx:id\u003d\"gameBox\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"LZher385"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"LZher385"},"content":"          \u003cStackPane fx:id\u003d\"gamesPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"tau-bar":2,"MarcusTXK":1,"LZher385":9,"-":55}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/16\"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"tau-bar":1,"-":7}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"tau-bar":1,"-":10}},{"path":"src/test/data/JsonFriendsListStorageTest/invalidAndValidFriendsList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"{","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"  \"friends\": [{","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"InvalidFriendName\",","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"Roy Balakrishnan!.%\",","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"  }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"ValidFriendName\",","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"world\",","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"  }]","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"MarcusTXK":24,"kevin9foong":11}},{"path":"src/test/data/JsonFriendsListStorageTest/invalidFriendsList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"{","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"  \"friends\": [{","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"      \"friendId\" : \"RoyJoy 3space\",","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"      \"friendName\" : \"Roy Balakrishnan\",","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"        \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"          \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"          \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"        }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"          \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"          \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"        }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"          \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"          \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"        }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"          \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"          \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"        }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"          \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"          \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"        }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"          \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"          \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"          \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"          \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"      },","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"      \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"      \"friendId\" : \"\",","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"      \"friendName\" : \"world\",","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"      \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"  ]","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"MarcusTXK":24,"kevin9foong":12}},{"path":"src/test/data/JsonGamesListStorageTest/invalidAndValidGamesList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"{","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"  \"games\" : [","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"ValidGameId2\"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"    },","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"InvalidGameId23$*X\"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"    }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"ValidGameId1\"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    } ]","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kevin9foong":11}},{"path":"src/test/data/JsonGamesListStorageTest/invalidGamesList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"{","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"  \"games\" : [","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"\"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"    },","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"InvalidGameId23$*X\"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"    }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"\"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    } ]","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kevin9foong":11}},{"path":"src/test/data/JsonGamesListStorageTest/notJsonFormatGamesList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"I\u0027m not in json format!","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kevin9foong":1}},{"path":"src/test/data/JsonGamesListStorageTest/validGamesList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"{","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"  \"games\" : [","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"Valorant\"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"    }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"Minecraft\"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"    } ]","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kevin9foong":8}},{"path":"src/test/data/JsonSerializableFriendsListTest/duplicateFriendsInFriendsList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"{","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"  \"friends\" : [ {","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"AlexY123\",","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"Alex Yeoh\",","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"  }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"AlexY123\",","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"Bernice Yu\",","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"  }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"ChickenTender\",","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"Charlotte Oliveiro\",","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"  }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"Davidz\",","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"David Li\",","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"  }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"II3\",","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"Irfan Ibrahim\",","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"kevin9foong"},"content":"  }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"RoyJoy\",","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"Roy Balakrishnan\",","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"kevin9foong"},"content":"  }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"hello\",","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"world\",","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":198,"author":{"gitId":"kevin9foong"},"content":"  } ]","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"MarcusTXK":168,"kevin9foong":31}},{"path":"src/test/data/JsonSerializableFriendsListTest/invalidFriendsList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"{","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"\"friends\": [{","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"  \"friendId\" : \"RoyJoy space\",","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"  \"friendName\" : \"Roy Balakrishnan\",","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"  \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"      \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"      \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"      \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"      \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"      \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"      \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"      \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"      \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"      \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"      \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"      \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"      \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"      \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"      \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"  },","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"  \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"  }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"  \"friendId\" : \"\",","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"  \"friendName\" : \"world\",","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"  \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"      \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"      \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"      \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"      \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"      \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"      \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"      \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"      \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"      \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"      \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"      \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"      \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"      \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"      \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"    } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"  },","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"  \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"  }]","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"MarcusTXK":48,"kevin9foong":11}},{"path":"src/test/data/JsonSerializableFriendsListTest/typicalFriendsList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"{","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"  \"_comment\": \"friends list save file which contains the same Friend values as in TypicalFriends#getTypicalFriendsList()\",","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"  \"friends\" : [ {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"94351253\",","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"Alice Pauline\",","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\" : \"CSGO\",","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"      \"friendId\" : \"94351253\",","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"      \"friendGameUserName\" : \"OmegaLynx\",","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"      \"skillValue\" : \"8\"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    } ]","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"  }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"98765432\",","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"Benson Meier\",","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\" : \"CSGO\",","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"      \"friendId\" : \"98765432\",","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"      \"friendGameUserName\" : \"OmegaLynx\",","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"      \"skillValue\" : null","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    } ]","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"  }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"95352563\",","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"Carl Kurz\",","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"  }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"87652533\",","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"Daniel Meier\",","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"  }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"9482224\",","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"Elle Meyer\",","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"kevin9foong"},"content":"  }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"9482427\",","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"Fiona Kunz\",","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"kevin9foong"},"content":"  }, {","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\" : \"9482442\",","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\" : \"George Best\",","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"MarcusTXK"},"content":"    \"schedule\" : {","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"MarcusTXK"},"content":"      \"schedule\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"MONDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"TUESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"WEDNESDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"THURSDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"FRIDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SATURDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"MarcusTXK"},"content":"      }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"MarcusTXK"},"content":"        \"timeSlots\" : [ false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false ],","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"MarcusTXK"},"content":"        \"dayOfWeek\" : \"SUNDAY\"","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"MarcusTXK"},"content":"      } ]","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"MarcusTXK"},"content":"    },","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"kevin9foong"},"content":"    \"gameFriendLinks\" : [ ]","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"kevin9foong"},"content":"  } ]","lastModifiedDate":"2021-10-13"},{"lineNumber":210,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"MarcusTXK":168,"kevin9foong":42}},{"path":"src/test/data/JsonSerializableGamesListTest/duplicateGameIdsInGamesList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"{","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"  \"games\" : [","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"Valorant\"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"    }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"Minecraft\"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"    }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"Valorant\"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"    }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"Apex Legends\"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    } ]","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kevin9foong":12}},{"path":"src/test/data/JsonSerializableGamesListTest/invalidGamesList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"{","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"  \"games\" : [","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"\"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"    },","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"InvalidGameId23$*X\"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"    }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"\"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    } ]","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kevin9foong":11}},{"path":"src/test/data/JsonSerializableGamesListTest/typicalGamesList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"{","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"  \"games\" : [","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"Minecraft\"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"    }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"LeagueOfLegends\"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"    }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"Fortnite\"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"    }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"GenshinImpact\"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"GTAV\"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"AnimalCrossing\"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"      \"gameId\": \"Valorant\"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    } ]","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kevin9foong":18}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"  \"addressBookFilePath\" : \"friendsList.json\"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":12,"kevin9foong":1}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"  \"addressBookFilePath\" : \"friendsList.json\"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":10,"kevin9foong":1}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"        assertNotNull(AppUtil.getImage(\"/images/gitGud.png\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"MarcusTXK":1,"-":35}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"MarcusTXK"},"content":"    //---------------- Tests for containsPartialWordIgnoreCase --------------------------------------","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"MarcusTXK"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"MarcusTXK"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"MarcusTXK"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"MarcusTXK"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"    public void containsPartialWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"MarcusTXK"},"content":"                StringUtil.containsPartialWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"MarcusTXK"},"content":"    public void containsPartialWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"MarcusTXK"},"content":"                StringUtil.containsPartialWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"MarcusTXK"},"content":"    public void containsPartialWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"MarcusTXK"},"content":"                StringUtil.containsPartialWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"MarcusTXK"},"content":"    public void containsPartialWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsPartialWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"MarcusTXK"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"MarcusTXK"},"content":"     *   - any word","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"MarcusTXK"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"MarcusTXK"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"MarcusTXK"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"MarcusTXK"},"content":"     *   - empty string","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"MarcusTXK"},"content":"     *   - one word","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"MarcusTXK"},"content":"     *   - multiple words","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"MarcusTXK"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"MarcusTXK"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"MarcusTXK"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"MarcusTXK"},"content":"     *   - last word in sentence","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"MarcusTXK"},"content":"     *   - middle word in sentence","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"MarcusTXK"},"content":"     *   - matches multiple words","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"MarcusTXK"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"MarcusTXK"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"MarcusTXK"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"MarcusTXK"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"MarcusTXK"},"content":"    public void containsPartialWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"MarcusTXK"},"content":"        // Empty sentence","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"MarcusTXK"},"content":"        // Wrong matches","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"MarcusTXK"},"content":"        // Query word bigger than sentence word","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"MarcusTXK"},"content":"        // Query word not in sentence word","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"aaa bbb ccc\", \"zzz\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"MarcusTXK"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"MarcusTXK"},"content":"        // Partial word present","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bbb ccc\", \"bb\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"MarcusTXK"},"content":"        // First word (boundary case)","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"MarcusTXK"},"content":"        // Last word (boundary case)","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"MarcusTXK"},"content":"        // Sentence has extra spaces","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"MarcusTXK"},"content":"        // Only one word in sentence (boundary case)","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"Aaa\", \"aaa\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"MarcusTXK"},"content":"        // Leading/trailing spaces","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"MarcusTXK"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"MarcusTXK":88,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NONEXISTENT_FRIEND_ID;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FRIEND_ID_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.AddFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.DeleteFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.parser.friends.FriendCommandParser;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"import seedu.address.storage.JsonFriendsListStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.storage.JsonGamesListStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        JsonFriendsListStorage friendsListStorage \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"                new JsonFriendsListStorage(temporaryFolder.resolve(\"friendsList.json\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        JsonGamesListStorage gamesListStorage \u003d new JsonGamesListStorage(temporaryFolder.resolve(\"gamesList.json\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        StorageManager storage \u003d new StorageManager(friendsListStorage, gamesListStorage, userPrefsStorage);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        String deleteCommand \u003d FriendCommandParser.COMMAND_WORD + \" \" + DeleteFriendCommand.COMMAND_WORD","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"                + \" daksjhdkjashdjkashkdjashjkaskjdjkasdhkas\";","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        assertCommandException(deleteCommand, MESSAGE_NONEXISTENT_FRIEND_ID);","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"        // no flag will default to listing all friends","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"        // TODO Update after list command is updated","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"        // String listCommand \u003d FriendCommandParser.COMMAND_WORD + \" \" + ListFriendCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"        // assertCommandSuccess(listCommand,","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"        //         String.format(ListFriendCommand.MESSAGE_SUCCESS_PREPEND, ListFriendCommand.FRIEND_LIST), model);","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        JsonFriendsListStorage friendsListStorage \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"                new JsonFriendsListIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionFriendsList.json\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"        JsonGamesListStorage gamesListStorage \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"                new JsonGamesListIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionGamesList.json\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        StorageManager storage \u003d new StorageManager(friendsListStorage, gamesListStorage, userPrefsStorage);","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"        String addFriendCommand \u003d FriendCommandParser.COMMAND_WORD + \" \" + AddFriendCommand.COMMAND_WORD","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"                + FRIEND_ID_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"        Friend expectedFriend \u003d new FriendBuilder(AMY).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"        expectedModel.addFriend(expectedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"        assertCommandFailure(addFriendCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"    public void getFilteredFriendList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredFriendsList().remove(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"    public void getFilteredGameList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredGamesList().remove(0));","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"kevin9foong"},"content":"     * A stub class for {@code JsonFriendsListIoExceptionThrowingStub} to throw an {@code IOException}","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"kevin9foong"},"content":"     * when the save method is called.","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"kevin9foong"},"content":"    private static class JsonFriendsListIoExceptionThrowingStub extends JsonFriendsListStorage {","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"kevin9foong"},"content":"        private JsonFriendsListIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"kevin9foong"},"content":"        public void saveFriendsList(ReadOnlyFriendsList friendsList, Path filePath) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"kevin9foong"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"kevin9foong"},"content":"     * A stub class for {@code JsonGamesListIoExceptionThrowingStub} to throw an {@code IOException}","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"kevin9foong"},"content":"     * when the save method is called.","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":186,"author":{"gitId":"kevin9foong"},"content":"    private static class JsonGamesListIoExceptionThrowingStub extends JsonGamesListStorage {","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"kevin9foong"},"content":"        private JsonGamesListIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"kevin9foong"},"content":"        public void saveGamesList(ReadOnlyGamesList gamesList, Path filePath) throws IOException {","lastModifiedDate":"2021-10-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tau-bar":8,"MarcusTXK":5,"YeluriKetan":19,"-":135,"kevin9foong":29}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.GamesList;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        Model model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        expectedModel.setFriendsList(new FriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        expectedModel.setGamesList(new GamesList());","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"YeluriKetan":5,"-":27,"kevin9foong":3}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_ADD;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FREE;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GAME_OLD;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_PERIOD;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_SCHEDULE;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.APEX_LEGENDS;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.CSGO;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.VALORANT;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.friends.EditFriendCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.GamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.GameIdContainsKeywordPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.EditFriendDescriptorBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"    public static final String VALID_FRIEND_ID_AMY \u003d \"amyawesome\";","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    public static final String VALID_FRIEND_ID_BOB \u003d \"456\";","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    public static final String VALID_GAME_ID_CSGO \u003d \"CSGO\";","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    public static final String VALID_GAME_ID_APEX_LEGENDS \u003d \"ApexLegends\";","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    public static final String VALID_USER_NAME_DRACO \u003d \"draco#1777\";","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    public static final String VALID_USER_NAME_OMEGA \u003d \"OmegaLynx\";","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    public static final String VALID_DAY \u003d \"1\"; // Monday","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"    public static final String VALID_START_TIME \u003d \"0200\";","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"    public static final String VALID_END_TIME \u003d \"0800\";","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"    public static final String VALID_IS_FREE_TIME \u003d \"1\";","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"    public static final String FRIEND_ID_DESC_AMY \u003d \" \" + FLAG_ADD + VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    public static final String FRIEND_ID_DESC_BOB \u003d \" \" + FLAG_ADD + VALID_FRIEND_ID_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + FLAG_FRIEND_NAME + VALID_NAME_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + FLAG_FRIEND_NAME + VALID_NAME_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    public static final String GAME_DESC_AMY \u003d \" \" + FLAG_ADD + VALID_GAME_ID_APEX_LEGENDS;","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    public static final String GAME_DESC_BOB \u003d \" \" + FLAG_ADD + VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    public static final String GAME_DESC_CSGO \u003d \" \" + FLAG_ADD + CSGO.gameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    public static final String GAME_DESC_VALORANT \u003d \" \" + FLAG_ADD + VALORANT.gameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"    public static final String GAME_DESC_APEX_LEGENDS \u003d \" \" + FLAG_ADD + APEX_LEGENDS.gameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"    public static final String SCHEDULE_FRIEND_AMY \u003d \" \" + FLAG_SCHEDULE + \" \" + VALID_FRIEND_ID_AMY + \" \" + FLAG_PERIOD","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"            + \" \" + VALID_START_TIME + \" \" + VALID_END_TIME + \" \" + VALID_DAY + \" \" + FLAG_FREE","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"            + \" \" + VALID_IS_FREE_TIME;","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"tau-bar"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + FLAG_FRIEND_NAME + \" \" + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"    public static final String INVALID_GAME_DESC \u003d \" \" + FLAG_GAME_OLD + \"kickstar*\"; // \u0027*\u0027 not allowed in games","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r\";","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"    public static final EditFriendCommand.EditFriendDescriptor DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"    public static final EditFriendCommand.EditFriendDescriptor DESC_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        DESC_AMY \u003d new EditFriendDescriptorBuilder().withFriendId(VALID_FRIEND_ID_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"                .withFriendName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        DESC_BOB \u003d new EditFriendDescriptorBuilder().withFriendId(VALID_FRIEND_ID_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"                .withFriendName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"        FriendsList expectedFriendsList \u003d new FriendsList(actualModel.getFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"LZher385"},"content":"        List\u003cFriend\u003e expectedFilteredFriendsList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredFriendsList());","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"LZher385"},"content":"        GamesList expectedGamesList \u003d new GamesList(actualModel.getGamesList());","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"LZher385"},"content":"        List\u003cGame\u003e expectedFilteredGamesList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredGamesList());","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedFriendsList, actualModel.getFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"LZher385"},"content":"        assertEquals(expectedFilteredFriendsList, actualModel.getFilteredFriendsList());","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"LZher385"},"content":"        assertEquals(expectedGamesList, actualModel.getGamesList());","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"LZher385"},"content":"        assertEquals(expectedFilteredGamesList, actualModel.getFilteredGamesList());","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredFriendsList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"        Friend friend \u003d model.getFilteredFriendsList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"MarcusTXK"},"content":"        final String[] splitName \u003d friend.getFriendName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"kevin9foong"},"content":"        model.updateFilteredFriendsList(new FriendNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(1, model.getFilteredFriendsList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"tau-bar"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"tau-bar"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"tau-bar"},"content":"    public static void showGameAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"tau-bar"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredGamesList().size());","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"tau-bar"},"content":"        Game game \u003d model.getFilteredGamesList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"tau-bar"},"content":"        final String[] splitName \u003d game.getGameId().value.split(\"\\\\s+\");","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"tau-bar"},"content":"        model.updateFilteredGamesList(new GameIdContainsKeywordPredicate(splitName[0]));","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"tau-bar"},"content":"        assertEquals(1, model.getFilteredGamesList().size());","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tau-bar":17,"MarcusTXK":15,"LZher385":7,"YeluriKetan":4,"-":78,"kevin9foong":35}},{"path":"src/test/java/seedu/address/logic/commands/EditFriendDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.friends.EditFriendCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.EditFriendDescriptorBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"public class EditFriendDescriptorTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"        EditFriendCommand.EditFriendDescriptor descriptorWithSameValues \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"                new EditFriendCommand.EditFriendDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        EditFriendCommand.EditFriendDescriptor editedAmy \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"                new EditFriendDescriptorBuilder(DESC_AMY).withFriendName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kevin9foong":40}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, CommandType.EXIT);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tau-bar":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, CommandType.HELP);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tau-bar":1,"-":17,"kevin9foong":2}},{"path":"src/test/java/seedu/address/logic/commands/friends/AddFriendCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":" * {@code seedu.address.logic.commands.friends.AddFriendCommand}.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"public class AddFriendCommandIntegrationTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public void execute_newFriend_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        Friend validFriend \u003d new FriendBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        expectedModel.addFriend(validFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"        assertCommandSuccess(new AddFriendCommand(validFriend), model,","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"                String.format(AddFriendCommand.MESSAGE_SUCCESS_ADD_FRIEND, validFriend), expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    public void execute_duplicateFriend_throwsCommandException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        // duplicated in list","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        Friend friendInList \u003d model.getFriendsList().getFriendsList().get(0);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        assertCommandFailure(new AddFriendCommand(friendInList), model, AddFriendCommand.MESSAGE_DUPLICATE_FRIEND_ID);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        // duplicated friendId","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        String duplicatedFriendId \u003d model.getFriendsList().getFriendsList().get(0).getFriendId().value;","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        assertCommandFailure(new AddFriendCommand(new FriendBuilder().withFriendId(duplicatedFriendId)","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"                        .withFriendName(null).build()),","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"                model, AddFriendCommand.MESSAGE_DUPLICATE_FRIEND_ID);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tau-bar":5,"YeluriKetan":3,"-":29,"kevin9foong":17}},{"path":"src/test/java/seedu/address/logic/commands/friends/AddFriendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"public class AddFriendCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public void constructor_nullFriend_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddFriendCommand(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    public void execute_friendAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        ModelStubAcceptingFriendAdded modelStub \u003d new ModelStubAcceptingFriendAdded();","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        Friend validFriendBobId \u003d new FriendBuilder().withFriendId(VALID_FRIEND_ID_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        CommandResult commandResult \u003d new AddFriendCommand(validFriendBobId).execute(modelStub);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(String.format(AddFriendCommand.MESSAGE_SUCCESS_ADD_FRIEND, validFriendBobId),","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(Collections.singletonList(validFriendBobId), modelStub.friendsAdded);","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        Friend validFriendAmyId \u003d new FriendBuilder().withFriendId(VALID_FRIEND_ID_AMY).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        CommandResult commandResultAddAnother \u003d new AddFriendCommand(validFriendAmyId).execute(modelStub);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(String.format(AddFriendCommand.MESSAGE_SUCCESS_ADD_FRIEND, validFriendAmyId),","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"                commandResultAddAnother.getFeedbackToUser());","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(Arrays.asList(validFriendBobId, validFriendAmyId), modelStub.friendsAdded);","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    public void execute_duplicateFriend_throwsCommandException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        Friend validFriend \u003d new FriendBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"        AddFriendCommand addFriendCommand \u003d new AddFriendCommand(validFriend);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        ModelStub modelStub \u003d new ModelStubWithFriend(validFriend);","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(CommandException.class, AddFriendCommand.MESSAGE_DUPLICATE_FRIEND_ID, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"                addFriendCommand.execute(modelStub));","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        Friend alice \u003d new FriendBuilder().withFriendName(\"Alice\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        Friend bob \u003d new FriendBuilder().withFriendName(\"Bob\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"tau-bar"},"content":"        AddFriendCommand addAliceCommand \u003d new AddFriendCommand(alice);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"        AddFriendCommand addBobCommand \u003d new AddFriendCommand(bob);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        // same object -\u003e equals","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(addAliceCommand, addAliceCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        // same values -\u003e equals","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"tau-bar"},"content":"        AddFriendCommand addAliceCommandCopy \u003d new AddFriendCommand(alice);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(addAliceCommandCopy, addAliceCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(1, addAliceCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        // null -\u003e notEquals","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(null, addAliceCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        // different friend -\u003e notEquals","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(addBobCommand, addAliceCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"     * A Model stub that contains a single friend.","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"    private class ModelStubWithFriend extends ModelStub {","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"        private final Friend friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"        ModelStubWithFriend(Friend friend) {","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"            requireNonNull(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"            this.friend \u003d friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"        public boolean hasFriend(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"            requireNonNull(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"            return this.friend.equals(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"tau-bar"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"        public boolean hasFriendWithId(FriendId idToFind) {","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"tau-bar"},"content":"            return this.friend.getFriendId().equals(friend.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"     * A Model stub that always accept the friend being added.","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"    private class ModelStubAcceptingFriendAdded extends ModelStub {","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"kevin9foong"},"content":"        final ArrayList\u003cFriend\u003e friendsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"        public boolean hasFriend(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"            requireNonNull(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"            return friendsAdded.stream().anyMatch(friend::equals);","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"tau-bar"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"        public boolean hasFriendWithId(FriendId idToFind) {","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"            return friendsAdded.stream().anyMatch(friend -\u003e friend.getFriendId().equals(idToFind));","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"        public void addFriend(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"            requireNonNull(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"            friendsAdded.add(friend);","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"        public ReadOnlyFriendsList getFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"            return new FriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"tau-bar":19,"LZher385":1,"YeluriKetan":2,"-":56,"kevin9foong":58}},{"path":"src/test/java/seedu/address/logic/commands/friends/AddFriendGameSkillCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USER_NAME_OMEGA;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.APEX_LEGENDS;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.CSGO;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.SkillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.UserName;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"public class AddFriendGameSkillCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public void execute_nullArguments_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddFriendGameSkillCommand(null, CSGO.getGameId(),","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"                new SkillValue(3)));","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddFriendGameSkillCommand(new FriendId(\"Alice\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"                null, new SkillValue(3)));","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddFriendGameSkillCommand(new FriendId(\"Alice\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"                CSGO.getGameId(), null));","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public void execute_validGameFriendLinkAndSkillValue_success() throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        ModelStubAcceptingFriendGameSkillUpdate modelStub \u003d new ModelStubAcceptingFriendGameSkillUpdate();","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        GameFriendLink gameFriendLink \u003d new GameFriendLink(CSGO.getGameId(), new FriendId(VALID_FRIEND_ID_BOB),","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"                new UserName(VALID_USER_NAME_OMEGA));","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        Friend validFriendBob \u003d new FriendBuilder().withFriendId(VALID_FRIEND_ID_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"                .withGameFriendLinks(gameFriendLink).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        modelStub.addFriend(validFriendBob);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        CommandResult commandResult \u003d new AddFriendGameSkillCommand(validFriendBob.getFriendId(),","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"                gameFriendLink.getGameId(), new SkillValue(3)).execute(modelStub);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(String.format(AddFriendGameSkillCommand.MESSAGE_SUCCESS_ADD_FRIEND_GAME_SKILL,","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"                validFriendBob.getFriendId(), gameFriendLink.getGameId(), new SkillValue(3)),","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        ModelStubAcceptingFriendGameSkillUpdate expectedModelStub \u003d new ModelStubAcceptingFriendGameSkillUpdate();","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        expectedModelStub.addFriend(new FriendBuilder().withFriendId(VALID_FRIEND_ID_BOB).withGameFriendLinks(","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"                new GameFriendLink(CSGO.getGameId(), new FriendId(VALID_FRIEND_ID_BOB),","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"                        new UserName(VALID_USER_NAME_OMEGA), new SkillValue(3))).build());","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(modelStub, expectedModelStub);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        CommandResult commandResultTwo \u003d new AddFriendGameSkillCommand(validFriendBob.getFriendId(),","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"                gameFriendLink.getGameId(), new SkillValue(5)).execute(modelStub);","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(String.format(AddFriendGameSkillCommand.MESSAGE_SUCCESS_ADD_FRIEND_GAME_SKILL,","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"                validFriendBob.getFriendId(), gameFriendLink.getGameId(), new SkillValue(5)),","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"                commandResultTwo.getFeedbackToUser());","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        ModelStubAcceptingFriendGameSkillUpdate expectedModelStubTwo \u003d new ModelStubAcceptingFriendGameSkillUpdate();","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        expectedModelStubTwo.addFriend(new FriendBuilder().withFriendId(VALID_FRIEND_ID_BOB).withGameFriendLinks(","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"                new GameFriendLink(CSGO.getGameId(), new FriendId(VALID_FRIEND_ID_BOB),","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"                        new UserName(VALID_USER_NAME_OMEGA), new SkillValue(5))).build());","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(modelStub, expectedModelStubTwo);","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"    public void execute_noGameFriendLinkFound_throwsCommandException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        Friend validFriend \u003d new FriendBuilder().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        AddFriendGameSkillCommand commandUnderTest \u003d new AddFriendGameSkillCommand(validFriend.getFriendId(),","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"                CSGO.getGameId(), new SkillValue(9));","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"        ModelStub modelStub \u003d new ModelStubAcceptingFriendGameSkillUpdate();","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"        modelStub.addFriend(validFriend);","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(CommandException.class, AddFriendGameSkillCommand.MESSAGE_NO_GAME_LINK_FOUND, () -\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"                commandUnderTest.execute(modelStub));","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"    public void equals() {","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"        Friend alice \u003d new FriendBuilder().withFriendId(\"Alice\").withFriendName(\"Alice\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"        Friend bob \u003d new FriendBuilder().withFriendId(\"Bob\").withFriendName(\"Bob\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"        AddFriendGameSkillCommand addFriendGameSkillAliceCsgoThreeCommand \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"                new AddFriendGameSkillCommand(alice.getFriendId(), CSGO.getGameId(), new SkillValue(3));","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"        AddFriendGameSkillCommand addFriendGameSkillBobCsgoThreeCommand \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"                new AddFriendGameSkillCommand(bob.getFriendId(), CSGO.getGameId(), new SkillValue(3));","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"        AddFriendGameSkillCommand addFriendGameSkillAliceApexLegendsThreeCommand \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"                new AddFriendGameSkillCommand(alice.getFriendId(), APEX_LEGENDS.getGameId(), new SkillValue(3));","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"        AddFriendGameSkillCommand addFriendGameSkillAliceCsgoFiveCommand \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"                new AddFriendGameSkillCommand(alice.getFriendId(), CSGO.getGameId(), new SkillValue(5));","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"        // same object -\u003e equals","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(addFriendGameSkillAliceCsgoThreeCommand, addFriendGameSkillAliceCsgoThreeCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"        // same values -\u003e equals","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"        AddFriendGameSkillCommand addFriendGameSkillAliceCsgoThreeCommandCopy \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"                new AddFriendGameSkillCommand(alice.getFriendId(), CSGO.getGameId(), new SkillValue(3));","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(addFriendGameSkillAliceCsgoThreeCommandCopy, addFriendGameSkillAliceCsgoThreeCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"        // different types -\u003e notEquals","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(1, addFriendGameSkillAliceCsgoThreeCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"        // null -\u003e notEquals","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(null, addFriendGameSkillAliceCsgoThreeCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"        // different friendId -\u003e notEquals","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(addFriendGameSkillBobCsgoThreeCommand, addFriendGameSkillAliceCsgoThreeCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"        // different gameId -\u003e notEquals","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(addFriendGameSkillAliceApexLegendsThreeCommand, addFriendGameSkillAliceCsgoThreeCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"        // different skillValue -\u003e notEquals","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(addFriendGameSkillAliceCsgoFiveCommand, addFriendGameSkillAliceCsgoThreeCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"    private class ModelStubAcceptingFriendGameSkillUpdate extends ModelStub {","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"        final ArrayList\u003cFriend\u003e friendsInModel \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"kevin9foong"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"        public boolean hasFriendWithId(FriendId friendId) {","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"            return friendsInModel.stream().anyMatch(friend -\u003e friend.getFriendId().equals(friendId));","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"        public Friend getFriend(FriendId friendId) {","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"kevin9foong"},"content":"            return friendsInModel.stream().filter(friend -\u003e friend.getFriendId().equals(friendId))","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"kevin9foong"},"content":"                    .findFirst().orElse(null);","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"kevin9foong"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"kevin9foong"},"content":"        public void addFriend(Friend friend) {","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"kevin9foong"},"content":"            friendsInModel.add(friend);","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"kevin9foong"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"kevin9foong"},"content":"        public void setFriend(Friend target, Friend editedFriend) {","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"kevin9foong"},"content":"            int index \u003d friendsInModel.indexOf(target);","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"kevin9foong"},"content":"            if (index \u003c 0 || index \u003e\u003d friendsInModel.size()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"kevin9foong"},"content":"                return;","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"kevin9foong"},"content":"            friendsInModel.set(index, editedFriend);","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"kevin9foong"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"kevin9foong"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"kevin9foong"},"content":"            if (other \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"kevin9foong"},"content":"                return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"kevin9foong"},"content":"            } else if (!(other instanceof ModelStubAcceptingFriendGameSkillUpdate)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"kevin9foong"},"content":"                return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"kevin9foong"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"kevin9foong"},"content":"                ModelStubAcceptingFriendGameSkillUpdate otherStub \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"kevin9foong"},"content":"                        (ModelStubAcceptingFriendGameSkillUpdate) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"kevin9foong"},"content":"                return otherStub.friendsInModel.size() \u003d\u003d this.friendsInModel.size()","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"kevin9foong"},"content":"                        \u0026\u0026 otherStub.friendsInModel.containsAll(this.friendsInModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kevin9foong":168}},{"path":"src/test/java/seedu/address/logic/commands/friends/DeleteFriendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":" * {@code DeleteFriendCommand}.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"public class DeleteFriendCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    private final Model model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"    public void execute_validIdUnfilteredList_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"        // command can delete friend by friend id","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        Friend friendToDelete \u003d model.getFilteredFriendsList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"        DeleteFriendCommand deleteCommand \u003d new DeleteFriendCommand(friendToDelete.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"        String expectedMessage \u003d String.format(DeleteFriendCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"                friendToDelete.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        expectedModel.deleteFriend(friendToDelete.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"    public void execute_nonExistentIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"        // command fails if friend id does not exist in unfiltered list","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        DeleteFriendCommand deleteFriendCommand \u003d new DeleteFriendCommand(AMY.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        assertCommandFailure(deleteFriendCommand, model, Messages.MESSAGE_NONEXISTENT_FRIEND_ID);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"    public void execute_validIdFilteredList_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"        // can delete friend by friendid even if not in the currently filtered list","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        Friend friendToDelete \u003d model.getFilteredFriendsList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"        DeleteFriendCommand deleteCommand \u003d new DeleteFriendCommand(friendToDelete.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"        String expectedMessage \u003d String.format(DeleteFriendCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"                friendToDelete.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"        // show no one","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        showNoFriend(expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"tau-bar"},"content":"        // should still be able to delete","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tau-bar"},"content":"        expectedModel.deleteFriend(friendToDelete.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"tau-bar"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tau-bar"},"content":"    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tau-bar"},"content":"        Friend friendAmy \u003d new FriendBuilder(AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tau-bar"},"content":"        Friend friendBob \u003d new FriendBuilder(BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tau-bar"},"content":"        DeleteFriendCommand deleteFirstCommand \u003d new DeleteFriendCommand(friendAmy.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"tau-bar"},"content":"        DeleteFriendCommand deleteSecondCommand \u003d new DeleteFriendCommand(friendBob.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"tau-bar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tau-bar"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"tau-bar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"tau-bar"},"content":"        DeleteFriendCommand deleteFirstCommandCopy \u003d new DeleteFriendCommand(friendAmy.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tau-bar"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"tau-bar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"tau-bar"},"content":"        assertFalse(deleteFirstCommand.equals(\"123\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"tau-bar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"tau-bar"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"tau-bar"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"tau-bar"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"     * Updates {@code model}\u0027s filtered friend list to show no one.","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"    private void showNoFriend(Model model) {","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"tau-bar"},"content":"        model.updateFilteredFriendsList(p -\u003e false);","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"tau-bar"},"content":"        assertTrue(model.getFilteredFriendsList().isEmpty());","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":91,"YeluriKetan":11}},{"path":"src/test/java/seedu/address/logic/commands/friends/EditFriendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.exceptions.FriendNotFoundException;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.EditFriendDescriptorBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"public class EditFriendCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    private final Model model \u003d new ModelManager(SampleDataUtil.getSampleFriendsList(),","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"            SampleDataUtil.getSampleGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    public void execute_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        Model expectedModel \u003d new ModelManager(SampleDataUtil.getSampleFriendsList(),","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"                SampleDataUtil.getSampleGamesList(),","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"                new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        Friend friendToEdit \u003d model.getFriendsList().getFriendsList().get(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        Friend editedFriend \u003d new FriendBuilder(friendToEdit).withFriendName(\"1234 5678 9101112 13141516\").build();","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        EditFriendCommand.EditFriendDescriptor editFriendDescriptor \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"                new EditFriendDescriptorBuilder(editedFriend).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        EditFriendCommand editFriendCommand \u003d new EditFriendCommand(friendToEdit.getFriendId(), editFriendDescriptor);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d String.format(EditFriendCommand.MESSAGE_EDIT_FRIEND_SUCCESS,","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"                editedFriend.getFriendId(), editedFriend.getFriendName());","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        expectedModel.setFriend(expectedModel.getFriend(friendToEdit.getFriendId()), editedFriend);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        assertCommandSuccess(editFriendCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"     * Edit FriendId which does not exist in the friends list.","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    public void execute_friendIdNotInFriendsList_failure() {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        FriendId notInListFriendId \u003d new FriendId(\"NOTINLIST\");","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(FriendNotFoundException.class, () -\u003e model.getFriend(notInListFriendId));","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        EditFriendCommand editFriendCommand \u003d new EditFriendCommand(notInListFriendId,","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"                new EditFriendDescriptorBuilder().withFriendName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        assertCommandFailure(editFriendCommand, model,","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"                String.format(Messages.MESSAGE_FRIEND_ID_NOT_FOUND, notInListFriendId));","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        Friend friendToEdit \u003d model.getFriendsList().getFriendsList().get(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        final EditFriendCommand standardCommand \u003d new EditFriendCommand(friendToEdit.getFriendId(), DESC_AMY);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        EditFriendCommand.EditFriendDescriptor copyDescriptor \u003d new EditFriendCommand.EditFriendDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        EditFriendCommand commandWithSameValues \u003d new EditFriendCommand(friendToEdit.getFriendId(), copyDescriptor);","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(commandWithSameValues, standardCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(standardCommand, null);","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(new ClearCommand(), standardCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(new EditFriendCommand(new FriendId(friendToEdit.getFriendId().value + \"diff\"), DESC_AMY),","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"                standardCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(new EditFriendCommand(friendToEdit.getFriendId(), DESC_BOB), standardCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"MarcusTXK":1,"kevin9foong":97}},{"path":"src/test/java/seedu/address/logic/commands/friends/GetFriendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalFriends.AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalFriends.BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import java.util.BitSet;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.GameFriendLinksContainsGameIdPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":" * {@code GetFriendCommand}.","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"public class GetFriendCommandTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    private final Model model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    public void execute_validIdUnfilteredList_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        // command can get friend by friend id","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        Friend friendToGet \u003d model.getFilteredFriendsList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        GetFriendCommand getCommand \u003d new GetFriendCommand(friendToGet.getFriendId());","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        String expectedMessage \u003d String.format(GetFriendCommand.MESSAGE_FRIEND_FULL_INFORMATION,","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"                friendToGet.getFriendId());","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"        expectedModel.updateFilteredGamesList(new GameFriendLinksContainsGameIdPredicate(friendToGet));","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, CommandType.FRIEND_GET, friendToGet);","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        assertCommandSuccess(getCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    public void execute_nonExistentIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        // command fails if friend id does not exist in unfiltered list","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        GetFriendCommand getFriendCommand \u003d new GetFriendCommand(AMY.getFriendId());","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_FRIEND_ID_NOT_FOUND, AMY.getFriendId());","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        assertCommandFailure(getFriendCommand, model, expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"    public void execute_validIdFilteredList_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"        // can get friend by friendId even if not in the currently filtered list","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"        Friend friendToGet \u003d model.getFilteredFriendsList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        GetFriendCommand getCommand \u003d new GetFriendCommand(friendToGet.getFriendId());","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"        showNoFriend(model);","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"        String expectedMessage \u003d String.format(GetFriendCommand.MESSAGE_FRIEND_FULL_INFORMATION,","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"                friendToGet.getFriendId());","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"        // show no one","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"        showNoFriend(expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, CommandType.FRIEND_GET, friendToGet);","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"tau-bar"},"content":"        expectedModel.updateFilteredGamesList(new GameFriendLinksContainsGameIdPredicate(friendToGet));","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"        assertCommandSuccess(getCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        Friend friendAmy \u003d new FriendBuilder(AMY).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"        Friend friendBob \u003d new FriendBuilder(BOB).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"        GetFriendCommand getFirstCommand \u003d new GetFriendCommand(friendAmy.getFriendId());","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"        GetFriendCommand getSecondCommand \u003d new GetFriendCommand(friendBob.getFriendId());","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(getFirstCommand.equals(getFirstCommand));","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"        GetFriendCommand getFirstCommandCopy \u003d new GetFriendCommand(friendAmy.getFriendId());","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(getFirstCommand.equals(getFirstCommandCopy));","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(getFirstCommand.equals(new BitSet()));","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(getFirstCommand.equals(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(getFirstCommand.equals(getSecondCommand));","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"     * Updates {@code model}\u0027s filtered friend list to show no one.","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"    private void showNoFriend(Model model) {","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"        model.updateFilteredFriendsList(p -\u003e false);","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(model.getFilteredFriendsList().isEmpty());","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"tau-bar":3,"YeluriKetan":104,"kevin9foong":1}},{"path":"src/test/java/seedu/address/logic/commands/friends/LinkFriendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import static seedu.address.testutil.TypicalFriends.ALICE;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import static seedu.address.testutil.TypicalFriends.AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"import static seedu.address.testutil.TypicalGames.CSGO;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import static seedu.address.testutil.TypicalGames.GENSHIN_IMPACT;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.gamefriendlink.UserName;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":" * {@code DeleteFriendCommand}.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"public class LinkFriendCommandTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    private final Model model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"    public void execute_validFriendIdUnfilteredList_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        Friend friendToLink \u003d model.getFilteredFriendsList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"        UserName userName \u003d new UserName(\"GoldNova\");","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"        LinkFriendCommand linkFriendCommand \u003d new LinkFriendCommand(friendToLink.getFriendId(),","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"                GENSHIN_IMPACT.getGameId(), userName);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(),","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"                model.getUserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"        GameFriendLink gameFriendLink \u003d new GameFriendLink(GENSHIN_IMPACT.getGameId(), friendToLink.getFriendId(),","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"                userName);","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"        expectedModel.linkFriend(friendToLink, gameFriendLink);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"        assertCommandSuccess(linkFriendCommand, model, linkFriendCommand.generateSuccessMessage(friendToLink),","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"                expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"    public void execute_nonExistentFriendIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"        UserName userName \u003d new UserName(\"Smurf\");","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"        LinkFriendCommand linkFriendCommand \u003d new LinkFriendCommand(AMY.getFriendId(), GENSHIN_IMPACT.getGameId(),","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"                userName);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"        assertCommandFailure(linkFriendCommand, model, Messages.MESSAGE_NONEXISTENT_FRIEND_ID);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"    public void execute_nonExistentGameIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"        UserName userName \u003d new UserName(\"GoldNova\");","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"LZher385"},"content":"        LinkFriendCommand linkFriendCommand \u003d new LinkFriendCommand(ALICE.getFriendId(), CSGO.getGameId(), userName);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"LZher385"},"content":"        assertCommandFailure(linkFriendCommand, model, Messages.MESSAGE_NONEXISTENT_GAME_ID);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"LZher385":59,"YeluriKetan":5}},{"path":"src/test/java/seedu/address/logic/commands/friends/ListFriendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.commands.friends.ListFriendCommand.MESSAGE_UNKNOWN_PREDICATE;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.FriendIdContainsKeywordPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":" * {@code ListFriendCommand}.","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"public class ListFriendCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        expectedModel \u003d new ModelManager(model.getFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"    public void execute_unknownPredicate_throwsCommandException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        Predicate\u003cFriend\u003e unknownPredicate \u003d friend -\u003e false;","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        assertCommandFailure(new ListFriendCommand(unknownPredicate), model, MESSAGE_UNKNOWN_PREDICATE);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(CommandException.class, () -\u003e new ListFriendCommand(unknownPredicate).getMessageSuccess());","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"    public void execute_listFriendNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        assertCommandSuccess(new ListFriendCommand(preparePredicate(\"\")), model,","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"                ListFriendCommand.MESSAGE_SUCCESS_PREPEND, expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"    public void execute_listFriendIsFiltered_showsEverything() throws CommandException {","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"        // Set up expected filtered list by Ali","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"        expectedModel.updateFilteredFriendsList(preparePredicate(\"Ali\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"        ListFriendCommand listFriendCommand \u003d new ListFriendCommand(preparePredicate(\"Ali\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"        assertCommandSuccess(listFriendCommand, model,","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"                listFriendCommand.getMessageSuccess(), expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"        Predicate\u003cFriend\u003e filterByA \u003d preparePredicate(\"A\");","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"        ListFriendCommand friendCommand \u003d new ListFriendCommand(filterByA);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"        // Same Object","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(friendCommand.equals(friendCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"        // Same Predicate","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(friendCommand.equals(new ListFriendCommand(filterByA)));","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"        // Same Predicate Value","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(friendCommand.equals(new ListFriendCommand(preparePredicate(\"A\"))));","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"        // Different Value","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(friendCommand.equals(new ListFriendCommand(preparePredicate(\"Different\"))));","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"    private FriendIdContainsKeywordPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"        return new FriendIdContainsKeywordPredicate(userInput);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"MarcusTXK":59,"YeluriKetan":3,"-":21,"kevin9foong":1}},{"path":"src/test/java/seedu/address/logic/commands/friends/ScheduleFriendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.Schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.exceptions.InvalidDayTimeException;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":" * {@code ScheduleFriendCommand}.","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"class ScheduleFriendCommandTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    private final Model model \u003d new ModelManager(SampleDataUtil.getSampleFriendsList(),","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"            SampleDataUtil.getSampleGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    public void execute_updateSchedule_success() throws InvalidDayTimeException {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        // Set up Schedule","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        int day \u003d 7;","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        String startTime \u003d \"0000\";","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        String endTime \u003d \"2300\";","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        boolean isFree \u003d true;","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"        Schedule updatedSchedule \u003d new Schedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        updatedSchedule.setScheduleDay(day, startTime, endTime, isFree);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        // Set up Models","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        Model expectedModel \u003d new ModelManager(SampleDataUtil.getSampleFriendsList(),","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"                SampleDataUtil.getSampleGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        Friend friendToEdit \u003d model.getFriendsList().getFriendsList().get(0);","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        Friend editedFriend \u003d new FriendBuilder(friendToEdit).withSchedule(updatedSchedule).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        expectedModel.setFriend(expectedModel.getFriend(friendToEdit.getFriendId()), editedFriend);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        // Test if command works","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        ScheduleFriendCommand scheduleFriendCommand \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"                new ScheduleFriendCommand(friendToEdit.getFriendId(), day, startTime, endTime, isFree);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        String expectedMessage \u003d String.format(ScheduleFriendCommand.MESSAGE_SCHEDULE_FRIEND_SUCCESS,","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"                editedFriend.getFriendId());","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"        assertCommandSuccess(scheduleFriendCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"    public void execute_nonExistentFriendId_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"        FriendId nonExistentId \u003d new FriendId(\"completelyrandomid1\");","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"        ScheduleFriendCommand scheduleFriendCommand \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"                new ScheduleFriendCommand(nonExistentId, 1, \"0000\", \"2000\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        assertCommandFailure(scheduleFriendCommand, model,","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"                String.format(Messages.MESSAGE_NONEXISTENT_FRIEND_ID, nonExistentId));","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"    public void execute_invalidDayTime_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"        ScheduleFriendCommand scheduleFriendCommand \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"                new ScheduleFriendCommand(model.getFriendsList().getFriendsList().get(0).getFriendId(),","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"                        1, \"2000\", \"1000\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"        assertCommandFailure(scheduleFriendCommand, model,","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"                String.format(Messages.MESSAGE_INVALID_DAY_TIME_FORMAT,","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"                        Messages.MESSAGE_END_TIME_ORDER));","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"    public void equals() {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"        // Set up Schedule","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"        int day \u003d 7;","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"        String startTime \u003d \"0000\";","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"        String endTime \u003d \"2300\";","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"        boolean isFree \u003d true;","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"        FriendId friendId \u003d model.getFriendsList().getFriendsList().get(0).getFriendId();","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"        ScheduleFriendCommand scheduleFriendCommand \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"                new ScheduleFriendCommand(friendId, day, startTime, endTime, isFree);","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"        // Same Fields","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(scheduleFriendCommand.equals(","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"                new ScheduleFriendCommand(friendId, day, startTime, endTime, isFree)));","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"        // Same Object","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(scheduleFriendCommand.equals(scheduleFriendCommand));","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"        // Different FriendId","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(scheduleFriendCommand.equals(new ScheduleFriendCommand(","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"                model.getFriendsList().getFriendsList().get(1).getFriendId(), day, startTime, endTime, isFree)));","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"MarcusTXK":97}},{"path":"src/test/java/seedu/address/logic/commands/friends/UnlinkFriendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import static seedu.address.testutil.TypicalFriends.ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import static seedu.address.testutil.TypicalFriends.AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"import static seedu.address.testutil.TypicalGames.CSGO;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import static seedu.address.testutil.TypicalGames.GENSHIN_IMPACT;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.gamefriendlink.UserName;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"public class UnlinkFriendCommandTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"    private Model model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"    public void execute_validFriendIdUnfilteredList_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"        Model model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"        Friend friendToUnlink \u003d model.getFilteredFriendsList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"        GameFriendLink gameFriendLink \u003d new GameFriendLink(GENSHIN_IMPACT.getGameId(), friendToUnlink.getFriendId(),","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"                new UserName(\"GoldNova\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(),","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"                model.getUserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"        UnlinkFriendCommand unlinkFriendCommand \u003d new UnlinkFriendCommand(friendToUnlink.getFriendId(),","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"                GENSHIN_IMPACT.getGameId());","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"        model.linkFriend(friendToUnlink, gameFriendLink);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"        assertCommandSuccess(unlinkFriendCommand, model, unlinkFriendCommand.generateSuccessMessage(friendToUnlink),","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"                expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"    public void execute_nonExistentFriendIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"        UnlinkFriendCommand unlinkFriendCommand \u003d new UnlinkFriendCommand(AMY.getFriendId(),","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"                GENSHIN_IMPACT.getGameId());","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"        assertCommandFailure(unlinkFriendCommand, model, Messages.MESSAGE_NONEXISTENT_FRIEND_ID);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"    public void execute_nonExistentGameIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"        UnlinkFriendCommand unlinkFriendCommand \u003d new UnlinkFriendCommand(ALICE.getFriendId(), CSGO.getGameId());","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"        assertCommandFailure(unlinkFriendCommand, model, Messages.MESSAGE_NONEXISTENT_GAME_ID);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"    public void execute_gameNotAssociatedWithFriend_throwsCommandException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"        UnlinkFriendCommand unlinkFriendCommand \u003d new UnlinkFriendCommand(ALICE.getFriendId(),","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"LZher385"},"content":"                GENSHIN_IMPACT.getGameId());","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"LZher385"},"content":"        assertCommandFailure(unlinkFriendCommand, model, Messages.MESSAGE_GAME_NOT_ASSOCIATED);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"LZher385":63}},{"path":"src/test/java/seedu/address/logic/commands/games/AddGameCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.commands.games;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.GameBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"public class AddGameCommandIntegrationTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    private Model model;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"        model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public void execute_newGame_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        Game validGame \u003d new GameBuilder().withGameId(\"HELLOWORLD123\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        expectedModel.addGame(validGame);","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        assertCommandSuccess(new AddGameCommand(validGame), model,","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"                String.format(AddGameCommand.MESSAGE_SUCCESS_ADD_GAME, validGame), expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    public void execute_duplicateGame_throwsCommandException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        // duplicated in list","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        Game gameInList \u003d model.getGamesList().getGamesList().get(0);","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        assertCommandFailure(new AddGameCommand(gameInList), model, AddGameCommand.MESSAGE_DUPLICATE_GAME);","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        // duplicated gameId","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        String duplicatedGameId \u003d model.getGamesList().getGamesList().get(0).getGameId().value;","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        assertCommandFailure(new AddGameCommand(new GameBuilder().withGameId(duplicatedGameId).build()),","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"                model, AddGameCommand.MESSAGE_DUPLICATE_GAME);","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kevin9foong":48}},{"path":"src/test/java/seedu/address/logic/commands/games/AddGameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.commands.games;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.CSGO;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.MINECRAFT;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.VALORANT;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.GamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.GameBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"public class AddGameCommandTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public void constructor_nullGame_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddGameCommand(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    public void execute_gameAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        ModelStubAcceptingGameAdded modelStub \u003d new ModelStubAcceptingGameAdded();","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        Game expectedGameValorant \u003d new GameBuilder(VALORANT).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        CommandResult commandResult \u003d new AddGameCommand(expectedGameValorant).execute(modelStub);","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(String.format(AddGameCommand.MESSAGE_SUCCESS_ADD_GAME, expectedGameValorant),","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(Collections.singletonList(expectedGameValorant), modelStub.gamesAdded);","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        Game validGameMinecraft \u003d new GameBuilder(MINECRAFT).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        CommandResult commandResultAddAnother \u003d new AddGameCommand(validGameMinecraft).execute(modelStub);","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(String.format(AddGameCommand.MESSAGE_SUCCESS_ADD_GAME, validGameMinecraft),","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"                commandResultAddAnother.getFeedbackToUser());","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(Arrays.asList(expectedGameValorant, validGameMinecraft), modelStub.gamesAdded);","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        Game expectedGameCsgo \u003d new GameBuilder(CSGO).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        AddGameCommand addFriendCommand \u003d new AddGameCommand(expectedGameCsgo);","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        ModelStub modelStub \u003d new ModelStubWithGame(expectedGameCsgo);","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(CommandException.class, AddGameCommand.MESSAGE_DUPLICATE_GAME, () -\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"                addFriendCommand.execute(modelStub));","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        Game expectedGameCsgo \u003d new GameBuilder(CSGO).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        Game expectedGameValorant \u003d new GameBuilder(VALORANT).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        AddGameCommand addCsgoCommand \u003d new AddGameCommand(expectedGameCsgo);","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"        AddGameCommand addValorantCommand \u003d new AddGameCommand(expectedGameValorant);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(addCsgoCommand, addCsgoCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        AddGameCommand addCsgoCommandCopy \u003d new AddGameCommand(CSGO);","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(addCsgoCommandCopy, addCsgoCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(1, addCsgoCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(null, addCsgoCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        // different game -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(addValorantCommand, addCsgoCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"     * A Model stub that contains a single game.","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    private class ModelStubWithGame extends ModelStub {","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"        private final Game game;","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"        ModelStubWithGame(Game game) {","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"            requireNonNull(game);","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"            this.game \u003d game;","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"        public boolean hasGame(Game game) {","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"            requireNonNull(game);","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"            return this.game.equals(game);","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"        public boolean hasGameWithId(GameId idToFind) {","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"            return this.game.getGameId().equals(idToFind);","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"     * A Model stub that always accept the game being added.","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"    private class ModelStubAcceptingGameAdded extends ModelStub {","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"kevin9foong"},"content":"        final ArrayList\u003cGame\u003e gamesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"        public boolean hasGame(Game game) {","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"            requireNonNull(game);","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"            return gamesAdded.stream().anyMatch(game::equals);","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"        public boolean hasGameWithId(GameId idToFind) {","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"            return gamesAdded.stream().anyMatch(game -\u003e game.getGameId().equals(idToFind));","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"        public void addGame(Game game) {","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"            requireNonNull(game);","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"            gamesAdded.add(game);","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"        public ReadOnlyGamesList getGamesList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"            return new GamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"YeluriKetan":2,"kevin9foong":133}},{"path":"src/test/java/seedu/address/logic/commands/games/DeleteGameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.commands.games;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showGameAtIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalGames.CSGO;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalGames.VALORANT;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"import seedu.address.testutil.GameBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"public class DeleteGameCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"    private final Model model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"    public void execute_validIdUnfilteredList_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"        // command can delete game by game id","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        Game gameToDelete \u003d model.getFilteredGamesList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"        DeleteGameCommand deleteCommand \u003d new DeleteGameCommand(gameToDelete.getGameId());","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"        String expectedMessage \u003d String.format(DeleteGameCommand.MESSAGE_DELETE_GAME_SUCCESS,","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"                gameToDelete.getGameId());","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"        expectedModel.deleteGame(gameToDelete.getGameId());","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"    public void execute_nonExistentIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"        // command fails if game id does not exist in unfiltered list","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"        DeleteGameCommand deleteGameCommand \u003d new DeleteGameCommand(CSGO.getGameId());","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"        assertCommandFailure(deleteGameCommand, model, Messages.MESSAGE_NONEXISTENT_GAME_ID);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"    public void execute_validIdFilteredList_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        // can delete game by gameid even if not in the currently filtered list","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        showGameAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        Game gameToDelete \u003d model.getFilteredGamesList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"        DeleteGameCommand deleteCommand \u003d new DeleteGameCommand(gameToDelete.getGameId());","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"        String expectedMessage \u003d String.format(DeleteGameCommand.MESSAGE_DELETE_GAME_SUCCESS,","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"                gameToDelete.getGameId());","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"        // show no one","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"        showNoGame(expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"        // should still be able to delete","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"        expectedModel.deleteGame(gameToDelete.getGameId());","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"tau-bar"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"tau-bar"},"content":"        Game gameCsgo \u003d new GameBuilder(CSGO).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"tau-bar"},"content":"        Game gameValorant \u003d new GameBuilder(VALORANT).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"tau-bar"},"content":"        DeleteGameCommand deleteFirstCommand \u003d new DeleteGameCommand(gameCsgo.getGameId());","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"tau-bar"},"content":"        DeleteGameCommand deleteSecondCommand \u003d new DeleteGameCommand(gameValorant.getGameId());","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"tau-bar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"tau-bar"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"tau-bar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"tau-bar"},"content":"        DeleteGameCommand deleteFirstCommandCopy \u003d new DeleteGameCommand(gameCsgo.getGameId());","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"tau-bar"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"tau-bar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"tau-bar"},"content":"        assertFalse(deleteFirstCommand.equals(\"123\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"tau-bar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"tau-bar"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"tau-bar"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"tau-bar"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"     * Updates {@code model}\u0027s filtered game list to show no one.","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"tau-bar"},"content":"    private void showNoGame(Model model) {","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"tau-bar"},"content":"        model.updateFilteredGamesList(g -\u003e false);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"tau-bar"},"content":"        assertTrue(model.getFilteredGamesList().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tau-bar":93,"YeluriKetan":5}},{"path":"src/test/java/seedu/address/logic/commands/games/GetGameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.logic.commands.games;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.CSGO;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.MINECRAFT;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.VALORANT;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"import java.util.BitSet;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendGameFriendLinksContainsGamePredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.testutil.GameBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":" * {@code GetGameCommand}.","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"public class GetGameCommandTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    private final Model model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    public void execute_validIdUnfilteredList_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        // command can get game by game id","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        Game gameToGet \u003d model.getFilteredGamesList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        GetGameCommand getCommand \u003d new GetGameCommand(gameToGet.getGameId());","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        String expectedMessage \u003d String.format(GetGameCommand.MESSAGE_GAME_FULL_INFORMATION,","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"                gameToGet.getGameId());","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, CommandType.GAME_GET, gameToGet);","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"        expectedModel.updateFilteredFriendsList(new FriendGameFriendLinksContainsGamePredicate(gameToGet));","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        assertCommandSuccess(getCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    public void execute_nonExistentIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        // command fails if game id does not exist in unfiltered list","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        GetGameCommand getGameCommand \u003d new GetGameCommand(CSGO.getGameId());","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_GAME_ID_NOT_FOUND, CSGO.getGameId());","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        assertCommandFailure(getGameCommand, model, expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"    public void execute_validIdFilteredList_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"        // can get game by gameId even if not in the currently filtered list","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"        Game gameToGet \u003d model.getFilteredGamesList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        GetGameCommand getCommand \u003d new GetGameCommand(gameToGet.getGameId());","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"        showNoGame(model);","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"        String expectedMessage \u003d String.format(GetGameCommand.MESSAGE_GAME_FULL_INFORMATION, gameToGet.getGameId());","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"        // show no one","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"        showNoGame(expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, CommandType.GAME_GET, gameToGet);","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"tau-bar"},"content":"        expectedModel.updateFilteredFriendsList(new FriendGameFriendLinksContainsGamePredicate(gameToGet));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"        assertCommandSuccess(getCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"        Game gameMinecraft \u003d new GameBuilder(MINECRAFT).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        Game gameValorant \u003d new GameBuilder(VALORANT).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"        GetGameCommand getFirstCommand \u003d new GetGameCommand(gameMinecraft.getGameId());","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"        GetGameCommand getSecondCommand \u003d new GetGameCommand(gameValorant.getGameId());","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(getFirstCommand.equals(getFirstCommand));","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"        GetGameCommand getFirstCommandCopy \u003d new GetGameCommand(gameMinecraft.getGameId());","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(getFirstCommand.equals(getFirstCommandCopy));","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(getFirstCommand.equals(new BitSet()));","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(getFirstCommand.equals(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(getFirstCommand.equals(getSecondCommand));","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"     * Updates {@code model}\u0027s filtered game list to show no one.","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"    private void showNoGame(Model model) {","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"        model.updateFilteredGamesList(p -\u003e false);","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(model.getFilteredGamesList().isEmpty());","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"tau-bar":3,"YeluriKetan":103,"kevin9foong":1}},{"path":"src/test/java/seedu/address/logic/commands/games/ListGameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.commands.games;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.commands.friends.ListFriendCommand.MESSAGE_UNKNOWN_PREDICATE;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.game.GameIdContainsKeywordPredicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"public class ListGameCommandTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    private Model model;","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        expectedModel \u003d new ModelManager(model.getFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"    public void execute_unknownPredicate_throwsCommandException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        Predicate\u003cGame\u003e unknownPredicate \u003d game -\u003e false;","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        assertCommandFailure(new ListGameCommand(unknownPredicate), model, MESSAGE_UNKNOWN_PREDICATE);","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(CommandException.class, () -\u003e new ListGameCommand(unknownPredicate).getMessageSuccess());","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    public void execute_listGameNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        assertCommandSuccess(new ListGameCommand(preparePredicate(\"\")), model,","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"                ListGameCommand.MESSAGE_SUCCESS_PREPEND, expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"    public void execute_listGameIsFiltered_showsEverything() throws CommandException {","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"        // Set up expected filtered list by Ali","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"        expectedModel.updateFilteredGamesList(preparePredicate(\"Ali\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"        ListGameCommand listGameCommand \u003d new ListGameCommand(preparePredicate(\"Ali\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"        assertCommandSuccess(listGameCommand, model,","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"                listGameCommand.getMessageSuccess(), expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"        Predicate\u003cGame\u003e filterByA \u003d preparePredicate(\"A\");","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"        ListGameCommand gameCommand \u003d new ListGameCommand(filterByA);","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"        // Same Object","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(gameCommand.equals(gameCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"        // Same Predicate","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(gameCommand.equals(new ListGameCommand(filterByA)));","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"        // Same Predicate Value","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(gameCommand.equals(new ListGameCommand(preparePredicate(\"A\"))));","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"        // Different Value","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(gameCommand.equals(new ListGameCommand(preparePredicate(\"Different\"))));","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"    private GameIdContainsKeywordPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"        return new GameIdContainsKeywordPredicate(userInput);","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"MarcusTXK":83}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    private final Flag unknownFlag \u003d new Flag(\"--u\");","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    private final Flag pSlash \u003d new Flag(\"p/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    private final Flag dashT \u003d new Flag(\"-t\");","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    private final Flag hatQ \u003d new Flag(\"^Q\");","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Flag flag, String... expectedValues) {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(flag).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(flag).size());","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(flag).get(i));","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Flag flag) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(argMultimap.getValue(flag).isPresent());","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"        argsString \u003d unknownFlag + \"some value\";","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"MarcusTXK"},"content":"        assertArgumentAbsent(argMultimap, unknownFlag);","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"MarcusTXK"},"content":"        Flag aaa \u003d new Flag(\"aaa\");","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(aaa, new Flag(\"aaa\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"MarcusTXK"},"content":"        assertNotEquals(aaa, new Flag(\"aab\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"MarcusTXK":15,"-":135}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"            throw new AssertionError(\"The expected ParseFailure was not thrown.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":37,"kevin9foong":1}},{"path":"src/test/java/seedu/address/logic/parser/FriendsListParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"public class FriendsListParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    private final MainParser parser \u003d new MainParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"    public void parseCommand_addFriend() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"        // TODO Update after add command is updated","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"        // Friend friend \u003d new FriendBuilder().build();","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        // AddFriendCommand command \u003d (AddFriendCommand) parser.parseCommand(FriendUtil.getAddFriendCommand(friend));","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        // assertEquals(new AddFriendCommand(friend), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        // TODO Update after delete command is updated","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        // DeleteFriendCommand command \u003d (DeleteFriendCommand) parser.parseCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"        //      DeleteFriendCommand.COMMAND_WORD + \" \" + AMY.getFriendId().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        // assertEquals(new DeleteFriendCommand(AMY.getFriendId()), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"    //    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"    //    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"    //        Friend friend \u003d new FriendBuilder().build();","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"    //        EditFriendDescriptor descriptor \u003d new EditFriendDescriptorBuilder(friend).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"    //        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"    //                + INDEX_FIRST_PERSON.getOneBased() + \" \" + FriendUtil.getEditFriendDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"    //        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"    //    }","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"        // TODO Update after list command is updated","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"        // assertTrue(parser.parseCommand(ListFriendCommand.COMMAND_WORD) instanceof ListFriendCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"        // assertTrue(parser.parseCommand(ListFriendCommand.COMMAND_WORD + \" 3\") instanceof ListFriendCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tau-bar":1,"MarcusTXK":12,"LZher385":8,"-":57,"kevin9foong":1}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"    private static final String VALID_GAME_NAME \u003d \"Counter Strike\";","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"    private static final String VALID_IN_GAME_USERNAME \u003d \"Ferrari_peek\";","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(INDEX_FIRST_ITEM, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(INDEX_FIRST_ITEM, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    public void parseFriendName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseFriendName((String) null));","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    public void parseFriendName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFriendName(INVALID_NAME));","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    public void parseFriendName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        FriendName expectedFriendName \u003d new FriendName(VALID_NAME);","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedFriendName, ParserUtil.parseFriendName(VALID_NAME));","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    public void parseFriendName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        FriendName expectedFriendName \u003d new FriendName(VALID_NAME);","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedFriendName, ParserUtil.parseFriendName(nameWithWhitespace));","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"    // TODO: Add tests for parseFriendId and parseGame","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"YeluriKetan":3,"LZher385":2,"-":58,"kevin9foong":12}},{"path":"src/test/java/seedu/address/logic/parser/friends/AddFriendCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FRIEND_ID_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FRIEND_ID_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.AddFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"public class AddFriendCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"    private final AddFriendCommandParser parser \u003d new AddFriendCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"    private final String invalidCommandFormatMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"           AddFriendCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        // BOB has valid name and friendId","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        Friend expectedFriendBob \u003d new FriendBuilder(BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        Friend expectedFriendAmy \u003d new FriendBuilder(AMY).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        // normal command","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        assertParseSuccess(parser, FRIEND_ID_DESC_BOB + NAME_DESC_BOB,","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"                new AddFriendCommand(expectedFriendBob));","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        // with whitespace preamble","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        assertParseSuccess(parser, FRIEND_ID_DESC_AMY + PREAMBLE_WHITESPACE + NAME_DESC_AMY,","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"                new AddFriendCommand(expectedFriendAmy));","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"        assertParseSuccess(parser, FRIEND_ID_DESC_BOB + NAME_DESC_AMY + NAME_DESC_BOB ,","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"                new AddFriendCommand(expectedFriendBob));","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"    public void parse_compulsoryFieldsMissing_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        // name id missing","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        assertParseFailure(parser, NAME_DESC_AMY, invalidCommandFormatMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB, invalidCommandFormatMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"    public void parse_wrongFormatName_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"        // --name without FRIEND_NAME","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"        String noNameInput \u003d FRIEND_ID_DESC_AMY + \" \" + FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"        assertParseFailure(parser, noNameInput, FriendName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"        // whitespace is not a valid name","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"        assertParseFailure(parser, noNameInput + \"  \", FriendName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"    public void parse_noInput_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"tau-bar"},"content":"        // no input","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tau-bar"},"content":"        assertParseFailure(parser, \"\", invalidCommandFormatMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tau-bar"},"content":"        // whitespace only","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"tau-bar"},"content":"        assertParseFailure(parser, \" \", invalidCommandFormatMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tau-bar"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tau-bar"},"content":"        // no friend name","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        Friend expectedFriendAmyDefaultName \u003d new FriendBuilder().withFriendId(AMY.getFriendId()","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"                .toString()).withFriendName(null).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"tau-bar"},"content":"        assertParseSuccess(parser, FRIEND_ID_DESC_AMY,","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"                new AddFriendCommand(expectedFriendAmyDefaultName));","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":63,"kevin9foong":17}},{"path":"src/test/java/seedu/address/logic/parser/friends/AddFriendGameSkillCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_APEX_LEGENDS;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_ADD_GAME_SKILL;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_POSTFIX;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_VALUE;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.model.friend.FriendId.MESSAGE_EMPTY_FRIEND_ID;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.model.friend.FriendId.MESSAGE_INVALID_CHARACTERS;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.APEX_LEGENDS;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.CSGO;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.friends.AddFriendGameSkillCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.SkillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"public class AddFriendGameSkillCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    private static final String INVALID_FRIEND_ID_WITH_SPACES \u003d \"id with spaces\";","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    private static final String INVALID_FRIEND_ID_INVALID_CHAR \u003d \"!NV@L$D#C\u0026A%\";","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    private static final String INVALID_GAME_ID_WITH_SPACES \u003d \"game with spaces\";","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    private static final String INVALID_GAME_ID_INVALID_CHAR \u003d \"!NV@L$D#C\u0026A%\";","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    private final AddFriendGameSkillCommandParser parser \u003d new AddFriendGameSkillCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    private final String invalidCommandFormatMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"            AddFriendGameSkillCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    public void parse_allFlagsPresent_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        String allFlagsPresentInput \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD_GAME_SKILL + VALID_FRIEND_ID_AMY","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"                + \" \" + FLAG_GAME + VALID_GAME_ID_CSGO + \" \" + FLAG_VALUE + \"3\";","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        assertParseSuccess(parser, allFlagsPresentInput, new AddFriendGameSkillCommand(AMY.getFriendId(),","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"                CSGO.getGameId(), new SkillValue(3)));","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        String allFlagsPresentInputLowerBound \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD_GAME_SKILL + VALID_FRIEND_ID_AMY","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"                + \" \" + FLAG_GAME + VALID_GAME_ID_APEX_LEGENDS + \" \" + FLAG_VALUE + \"0\";","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        assertParseSuccess(parser, allFlagsPresentInputLowerBound, new AddFriendGameSkillCommand(AMY.getFriendId(),","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"                APEX_LEGENDS.getGameId(), new SkillValue(0)));","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        String allFlagsPresentInputUpperBound \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD_GAME_SKILL + VALID_FRIEND_ID_BOB","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"                + \" \" + FLAG_GAME + VALID_GAME_ID_CSGO + \" \" + FLAG_VALUE + \"10\";","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        assertParseSuccess(parser, allFlagsPresentInputUpperBound, new AddFriendGameSkillCommand(BOB.getFriendId(),","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"                CSGO.getGameId(), new SkillValue(10)));","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    public void parse_missingFriendId_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        String missingFriendIdInput \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD_GAME_SKILL","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"                + \" \" + FLAG_GAME + VALID_GAME_ID_CSGO + \" \" + FLAG_VALUE + \"3\";","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, missingFriendIdInput, MESSAGE_EMPTY_FRIEND_ID);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    public void parse_missingGameFlag_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        String missingGameFlagInput \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD_GAME_SKILL","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"                + VALID_FRIEND_ID_AMY + \" \" + FLAG_VALUE + \"3\";","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, missingGameFlagInput, invalidCommandFormatMessage);","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    public void parse_missingValue_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        String missingValueFlagInput \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD_GAME_SKILL + VALID_FRIEND_ID_AMY","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"                + \" \" + FLAG_GAME + VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, missingValueFlagInput, invalidCommandFormatMessage);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"    public void parse_invalidFriendId_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        String invalidFriendIdWithSpacesInput \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD_GAME_SKILL","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"                + INVALID_FRIEND_ID_WITH_SPACES + \" \" + FLAG_GAME + VALID_GAME_ID_CSGO + \" \" + FLAG_VALUE + \"3\";","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, invalidFriendIdWithSpacesInput, MESSAGE_INVALID_CHARACTERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"        String invalidFriendIdWithInvalidChar \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD_GAME_SKILL","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"                + INVALID_FRIEND_ID_INVALID_CHAR + \" \" + FLAG_GAME + VALID_GAME_ID_CSGO + \" \" + FLAG_VALUE + \"3\";","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, invalidFriendIdWithInvalidChar, MESSAGE_INVALID_CHARACTERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    public void parse_invalidGameId_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"        String invalidGameIdWithSpacesInput \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD_GAME_SKILL","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"                + VALID_FRIEND_ID_AMY + \" \" + FLAG_GAME + INVALID_GAME_ID_WITH_SPACES + \" \" + FLAG_VALUE + \"3\";","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, invalidGameIdWithSpacesInput, GameId.MESSAGE_INVALID_CHARACTERS_IN_GAME_ID);","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"        String invalidGameIdWithInvalidChar \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD_GAME_SKILL","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"                + VALID_FRIEND_ID_AMY + \" \" + FLAG_GAME + INVALID_GAME_ID_INVALID_CHAR + \" \" + FLAG_VALUE + \"3\";","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, invalidGameIdWithInvalidChar, GameId.MESSAGE_INVALID_CHARACTERS_IN_GAME_ID);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"    public void parse_invalidSkillValue_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"        String invalidValueNotIntegerInput \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD_GAME_SKILL","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"                + VALID_FRIEND_ID_AMY + \" \" + FLAG_GAME + VALID_GAME_ID_CSGO + \" \" + FLAG_VALUE + \"non integer\";","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, invalidValueNotIntegerInput, SkillValue.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"        String invalidGameIdWithExceedLowerBound \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD_GAME_SKILL","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"                + VALID_FRIEND_ID_AMY + \" \" + FLAG_GAME + VALID_GAME_ID_CSGO + \" \" + FLAG_VALUE + \"-1\";","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, invalidGameIdWithExceedLowerBound, SkillValue.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kevin9foong":107}},{"path":"src/test/java/seedu/address/logic/parser/friends/DeleteFriendCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.DeleteFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":" * outside of the DeleteFriendCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":" * same path through the DeleteFriendCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"public class DeleteFriendCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"    private DeleteFriendCommandParser parser \u003d new DeleteFriendCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"    public void parse_validArgs_returnsDeleteFriendCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"        String userInput \u003d \" \" + DeleteFriendCommand.COMMAND_WORD + \" \" + AMY.getFriendId().toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"        assertParseSuccess(parser, userInput,","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"                 new DeleteFriendCommand(AMY.getFriendId()));","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"        assertParseFailure(parser, DeleteFriendCommand.COMMAND_WORD, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"                DeleteFriendCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":35}},{"path":"src/test/java/seedu/address/logic/parser/friends/EditFriendCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_EDIT;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_POSTFIX;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.model.friend.FriendId.MESSAGE_EMPTY_FRIEND_ID;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.model.friend.FriendId.MESSAGE_INVALID_CHARACTERS;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.friends.EditFriendCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"public class EditFriendCommandParserTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditFriendCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    private static final String COMMAND_EDIT_PREFIX \u003d FLAG_POSTFIX.getFlag() + FLAG_EDIT;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    private EditFriendCommandParser parser \u003d new EditFriendCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public void parse_noFriendIdSpecified_failure() {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        // no friendId specified","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, FLAG_POSTFIX.getFlag() + FLAG_FRIEND_NAME + VALID_NAME_AMY,","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    public void parse_invalidFriendId_failure() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        // friendId no special characters","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, COMMAND_EDIT_PREFIX + \"$2\" + NAME_DESC_AMY, MESSAGE_INVALID_CHARACTERS);","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        // friendId no spaces","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, COMMAND_EDIT_PREFIX + \"James blunt\" + NAME_DESC_AMY, MESSAGE_INVALID_CHARACTERS);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    public void parse_noFieldsUpdated_failure() {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        // no fields to update specified","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, COMMAND_EDIT_PREFIX + VALID_FRIEND_ID_AMY,","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"                EditFriendCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        // no friendId and no field specified","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, FLAG_POSTFIX.getFlag() + FLAG_EDIT, MESSAGE_EMPTY_FRIEND_ID);","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kevin9foong":50}},{"path":"src/test/java/seedu/address/logic/parser/friends/FriendCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SCHEDULE_FRIEND_AMY;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_ADD;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_ADD_GAME_SKILL;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_DELETE;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_EDIT;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GET;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_LIST;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_POSTFIX;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_VALUE;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"class FriendCommandParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    private FriendCommandParser parser \u003d new FriendCommandParser();","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    public void parse_invalidFlag_exceptionThrown() {","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"        // unrecognised flag","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" --invalid\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        // empty input","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    public void parseAdd_validCommandFlag_correctParserReturned() throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        String addInput \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD.getFlag() + VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(parser.parse(addInput), new AddFriendCommandParser().parse(addInput));","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    public void parseAddFriendGameSkill_validCommandFlag_correctParserReturned() throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        String addFriendGameSkillInput \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD_GAME_SKILL.getFlag() + VALID_FRIEND_ID_AMY","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"                + \" \" + FLAG_GAME + VALID_GAME_ID_CSGO + \" \" + FLAG_VALUE + \"3\";","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(parser.parse(addFriendGameSkillInput),","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"                new AddFriendGameSkillCommandParser().parse(addFriendGameSkillInput));","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"    public void parseEdit_validCommandFlag_correctParserReturned() throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        String editInput \u003d FLAG_POSTFIX.getFlag() + FLAG_EDIT.getFlag() + VALID_FRIEND_ID_AMY + \" \"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"                + FLAG_FRIEND_NAME + VALID_NAME_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(parser.parse(editInput), new EditFriendCommandParser().parse(editInput));","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    public void parseDelete_validCommandFlag_correctParserReturned() throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"        String deleteInput \u003d FLAG_POSTFIX.getFlag() + FLAG_DELETE.getFlag() + VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(parser.parse(deleteInput), new DeleteFriendCommandParser().parse(deleteInput));","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"    public void parseSchedule_validCommandFlag_correctParserReturned() throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"        String scheduleInput \u003d SCHEDULE_FRIEND_AMY;","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(parser.parse(scheduleInput), new ScheduleFriendCommandParser().parse(scheduleInput));","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"    public void parseGet_validCommandFlag_correctParserReturned() throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"        String getInput \u003d FLAG_POSTFIX.getFlag() + FLAG_GET.getFlag() + VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(parser.parse(getInput), new GetFriendCommandParser().parse(getInput));","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"    public void parseList_validCommandFlag_correctParserReturned() throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"        String listInput \u003d FLAG_POSTFIX.getFlag() + FLAG_LIST.getFlag();","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(parser.parse(listInput), new ListFriendCommandParser().parse(listInput));","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"MarcusTXK":33,"YeluriKetan":15,"kevin9foong":32}},{"path":"src/test/java/seedu/address/logic/parser/friends/GetFriendCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GET;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.friends.GetFriendCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"public class GetFriendCommandParserTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    private GetFriendCommandParser parser \u003d new GetFriendCommandParser();","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_emptyArgsWithNoFlag_throwsParseException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"        String emptyArgs1 \u003d \"\";","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"        String emptyArgs2 \u003d \"    \";","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"        String emptyArgs3 \u003d \"--get\";","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetFriendCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        assertParseFailure(parser, emptyArgs1, expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"        assertParseFailure(parser, emptyArgs2, expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        assertParseFailure(parser, emptyArgs3, expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_emptyArgsWithFlag_throwsParseException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        String emptyArgs1 \u003d \" \" + FLAG_GET.getFlag();","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        String emptyArgs2 \u003d \" \" + FLAG_GET.getFlag() + \"          \";","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        String expectedMessage \u003d FriendId.MESSAGE_INVALID_CHARACTERS;","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        assertParseFailure(parser, emptyArgs1, expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        assertParseFailure(parser, emptyArgs2, expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_multipleWordArgsWithFlag_throwsParseException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        String emptyArgs \u003d \" \" + FLAG_GET.getFlag() + \"alice yeoh\";","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        String expectedMessage \u003d FriendId.MESSAGE_INVALID_CHARACTERS;","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        assertParseFailure(parser, emptyArgs, expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_singleWordArgsWithFlag_correctCommand() {","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        String validArgs \u003d \"drdisrespect\";","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        GetFriendCommand expectedCommand \u003d new GetFriendCommand(new FriendId(validArgs));","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        assertParseSuccess(parser, \" \" + FLAG_GET + \" \" + validArgs, expectedCommand);","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"YeluriKetan":53}},{"path":"src/test/java/seedu/address/logic/parser/friends/LinkFriendCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.friends.LinkFriendCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.gamefriendlink.UserName;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"class LinkFriendCommandParserTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    private LinkFriendCommandParser parser \u003d new LinkFriendCommandParser();","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"    private final String invalidCommandFormatMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"            LinkFriendCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"    public void parse_validArgs_returnsLinkCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"        String userInput \u003d \" \" + LinkFriendCommand.COMMAND_WORD + \" Draco --game CSGO --user GoldNova\";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"        FriendId friendId \u003d new FriendId(\"Draco\");","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"        GameId gameId \u003d new GameId(\"CSGO\");","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"        UserName userName \u003d new UserName(\"GoldNova\");","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"        assertParseSuccess(parser, userInput, new LinkFriendCommand(friendId, gameId, userName));","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"    public void parse_validArgsInDifferentOrder_returnsLinkCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"        String userInput \u003d \" \" + LinkFriendCommand.COMMAND_WORD + \" Draco --game CSGO --user GoldNova\";","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"        FriendId friendId \u003d new FriendId(\"Draco\");","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"        GameId gameId \u003d new GameId(\"CSGO\");","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"        UserName userName \u003d new UserName(\"GoldNova\");","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"        assertParseSuccess(parser, userInput, new LinkFriendCommand(friendId, gameId, userName));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"    public void parse_compulsoryFieldsMissing_failure() {","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"        String userInput \u003d \" \" + LinkFriendCommand.COMMAND_WORD + \" --game CSGO --user SmurfLord\";","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"        assertParseFailure(parser, userInput, FriendId.MESSAGE_EMPTY_FRIEND_ID);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"    public void parse_noInput_failure() {","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"        // no input","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"        assertParseFailure(parser, \"\", invalidCommandFormatMessage);","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"        // whitespace only","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"        assertParseFailure(parser, \" \", invalidCommandFormatMessage);","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"LZher385":51}},{"path":"src/test/java/seedu/address/logic/parser/friends/ListFriendCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.ListFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.FriendIdContainsKeywordPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"public class ListFriendCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    private ListFriendCommandParser parser \u003d new ListFriendCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    public void parse_emptyArgs_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        ListFriendCommand expectedListFriendCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"                new ListFriendCommand(new FriendIdContainsKeywordPredicate(userInput));","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"        assertParseSuccess(parser, userInput, expectedListFriendCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    public void parse_validArgs_returnsListFriendCommand() {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        // filter by friend and keyword test","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        String userInput \u003d \" --list test\";","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        String expectedParsedKeyword \u003d \"test\";","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        ListFriendCommand expectedListFriendCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"                new ListFriendCommand(new FriendIdContainsKeywordPredicate(expectedParsedKeyword));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"        assertParseSuccess(parser, userInput, expectedListFriendCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        // with friend filter but without keyword (defaults to list all friends)","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        userInput \u003d \" --list\";","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        expectedListFriendCommand \u003d new ListFriendCommand(new FriendIdContainsKeywordPredicate(\"\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        assertParseSuccess(parser, userInput, expectedListFriendCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"MarcusTXK":37}},{"path":"src/test/java/seedu/address/logic/parser/friends/ScheduleFriendCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DAY_TIME_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FREE;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_PERIOD;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_SCHEDULE;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.friends.ScheduleFriendCommandParser.INVALID_PERIOD_OR_FREE_ARGUMENT;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.ScheduleFriendCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"class ScheduleFriendCommandParserTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    private ScheduleFriendCommandParser parser \u003d new ScheduleFriendCommandParser();","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    public void parse_validArgs_returnsScheduleFriendCommand() {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        String startTime \u003d \"0800\";","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        String endTime \u003d \"0900\";","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        String day \u003d \"1\";","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        String isFree \u003d \"1\";","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        String userInput \u003d \" \" + FLAG_SCHEDULE + \" \" + VALID_FRIEND_ID_AMY + \" \" + FLAG_PERIOD","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"                + \" \" + startTime + \" \" + endTime + \" \" + day + \" \" + FLAG_FREE","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"                + \" \" + isFree;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        ScheduleFriendCommand expected \u003d new ScheduleFriendCommand(new FriendId(VALID_FRIEND_ID_AMY),","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"                1, startTime, endTime, true);","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        assertParseSuccess(parser, userInput, expected);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    void parse_missingArgs_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        String startTime \u003d \"0800\";","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        String endTime \u003d \"0200\";","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        String day \u003d \"1\";","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        String isFree \u003d \"1\";","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        // missing isFree","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        String userInput \u003d \" \" + FLAG_SCHEDULE + \" \" + VALID_FRIEND_ID_AMY + \" \" + FLAG_PERIOD","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"                + \" \" + startTime + \" \" + endTime + \" \" + day;","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        assertParseFailure(parser, userInput, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"                ScheduleFriendCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        // missing endTime","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"        userInput \u003d \" \" + FLAG_SCHEDULE + VALID_FRIEND_ID_AMY + \" \" + FLAG_PERIOD","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"                + startTime + \" \" + day + \" \" + FLAG_FREE + isFree;","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"        assertParseFailure(parser, userInput, String.format(MESSAGE_INVALID_DAY_TIME_FORMAT,","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"                INVALID_PERIOD_OR_FREE_ARGUMENT));","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"MarcusTXK":59}},{"path":"src/test/java/seedu/address/logic/parser/friends/UnlinkFriendCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.friends.UnlinkFriendCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"public class UnlinkFriendCommandParserTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    private UnlinkFriendCommandParser parser \u003d new UnlinkFriendCommandParser();","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"    private final String invalidCommandFormatMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"            UnlinkFriendCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"    public void parse_validArgs_returnsUnlinkFriendCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"        String userInput \u003d \" \" + UnlinkFriendCommand.COMMAND_WORD + \" Draco --game CSGO\";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"        FriendId friendId \u003d new FriendId(\"Draco\");","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"        GameId gameId \u003d new GameId(\"CSGO\");","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"        assertParseSuccess(parser, userInput, new UnlinkFriendCommand(friendId, gameId));","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"        String userInput \u003d \" \" + UnlinkFriendCommand.COMMAND_WORD + \" Draco\";","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"        assertParseFailure(parser, userInput, invalidCommandFormatMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"    public void parse_noInput_failure() {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"        // no input","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"        assertParseFailure(parser, \"\", invalidCommandFormatMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"        // whitespace only","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"        assertParseFailure(parser, \" \", invalidCommandFormatMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"LZher385":41}},{"path":"src/test/java/seedu/address/logic/parser/games/AddGameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.parser.games;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GAME_DESC_CSGO;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GAME_DESC_VALORANT;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_ADD;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.CSGO;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.VALORANT;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.games.AddGameCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.GameBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"public class AddGameCommandParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    private final AddGameCommandParser parser \u003d new AddGameCommandParser();","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    private final String invalidCommandFormatMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"            AddGameCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        Game expectedGameCsgo \u003d new GameBuilder(CSGO).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        Game expectedGameValorant \u003d new GameBuilder(VALORANT).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        // normal command","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        assertParseSuccess(parser, GAME_DESC_VALORANT,","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"                new AddGameCommand(expectedGameValorant));","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        // with whitespace preamble","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GAME_DESC_CSGO,","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"                new AddGameCommand(expectedGameCsgo));","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    public void parse_compulsoryFieldsMissing_failure() {","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        // name id missing","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, NAME_DESC_AMY, invalidCommandFormatMessage);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    public void parse_wrongFormatName_failure() {","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        // --add without GAME_ID","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        String noNameInput \u003d FLAG_ADD + \" \";","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, noNameInput, invalidCommandFormatMessage);","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        // whitespace is not a valid GAME_ID","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, noNameInput + \"    \", invalidCommandFormatMessage);","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    public void parse_noInput_failure() {","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        // no input","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, \"\", invalidCommandFormatMessage);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        // whitespace only","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, \" \", invalidCommandFormatMessage);","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kevin9foong":63}},{"path":"src/test/java/seedu/address/logic/parser/games/DeleteGameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.parser.games;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalGames.CSGO;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.games.DeleteGameCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"public class DeleteGameCommandParserTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"    private DeleteGameCommandParser parser \u003d new DeleteGameCommandParser();","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"    public void parse_validArgs_returnsDeleteGameCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"        String userInput \u003d \" \" + DeleteGameCommand.COMMAND_WORD + \" \" + CSGO.getGameId();","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"        assertParseSuccess(parser, userInput,","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"                new DeleteGameCommand(CSGO.getGameId()));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"        assertParseFailure(parser, DeleteGameCommand.COMMAND_WORD, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"                DeleteGameCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tau-bar":27}},{"path":"src/test/java/seedu/address/logic/parser/games/GameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.logic.parser.games;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_ADD;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_DELETE;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GET;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_POSTFIX;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"class GameCommandParserTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    private GameCommandParser parser \u003d new GameCommandParser();","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_invalidFlag_exceptionThrown() {","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"        // unrecognised flag","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" --invalid\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        // empty input","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_validFlag_success() throws ParseException {","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        // add game flag","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        String addInput \u003d FLAG_POSTFIX.getFlag() + FLAG_ADD.getFlag() + VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(parser.parse(addInput), new AddGameCommandParser().parse(addInput));","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        // delete game flag","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        String deleteInput \u003d FLAG_POSTFIX.getFlag() + FLAG_DELETE.getFlag() + VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(parser.parse(deleteInput), new DeleteGameCommandParser().parse(deleteInput));","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        // get game flag","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        String getInput \u003d FLAG_POSTFIX.getFlag() + FLAG_GET.getFlag() + VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(parser.parse(getInput), new GetGameCommandParser().parse(getInput));","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        // list game flag","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        String listInput \u003d \" --list\";","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(parser.parse(listInput), new ListGameCommandParser().parse(listInput));","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"YeluriKetan":46}},{"path":"src/test/java/seedu/address/logic/parser/games/GetGameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.logic.parser.games;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GET;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.model.game.GameId.MESSAGE_INVALID_CHARACTERS_IN_GAME_ID;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.games.GetGameCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"public class GetGameCommandParserTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    private GetGameCommandParser parser \u003d new GetGameCommandParser();","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_emptyArgsWithNoFlag_throwsParseException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"        String emptyArgs1 \u003d \"\";","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"        String emptyArgs2 \u003d \"    \";","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        String emptyArgs3 \u003d \"--get\";","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetGameCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"        assertParseFailure(parser, emptyArgs1, expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        assertParseFailure(parser, emptyArgs2, expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        assertParseFailure(parser, emptyArgs3, expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_emptyArgsWithFlag_throwsParseException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        String emptyArgs1 \u003d \" \" + FLAG_GET.getFlag();","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        String emptyArgs2 \u003d \" \" + FLAG_GET.getFlag() + \"          \";","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        String expectedMessage \u003d MESSAGE_INVALID_CHARACTERS_IN_GAME_ID;","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        assertParseFailure(parser, emptyArgs1, expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        assertParseFailure(parser, emptyArgs2, expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_multipleWordArgsWithFlag_throwsParseException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        String emptyArgs \u003d \" \" + FLAG_GET.getFlag() + \"mine craft\";","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        String expectedMessage \u003d MESSAGE_INVALID_CHARACTERS_IN_GAME_ID;","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        assertParseFailure(parser, emptyArgs, expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_singleWordArgsWithFlag_correctCommand() {","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        String validArgs \u003d \"minecraft\";","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        GetGameCommand expectedCommand \u003d new GetGameCommand(new GameId(validArgs));","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        assertParseSuccess(parser, \" \" + FLAG_GET + \" \" + validArgs, expectedCommand);","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"YeluriKetan":54}},{"path":"src/test/java/seedu/address/logic/parser/games/ListGameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.parser.games;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.games.ListGameCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.game.GameIdContainsKeywordPredicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"public class ListGameCommandParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    private ListGameCommandParser parser \u003d new ListGameCommandParser();","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    public void parse_emptyArgs_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        ListGameCommand expectedListGameCommand \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"                new ListGameCommand(new GameIdContainsKeywordPredicate(userInput));","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"        assertParseSuccess(parser, userInput, expectedListGameCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    public void parse_validArgs_returnsListCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        // filter by gameId and keyword test","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        String userInput \u003d \" --list test\";","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        String expectedParsedKeyword \u003d \"test\";","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        ListGameCommand expectedListGameCommand \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"                new ListGameCommand(new GameIdContainsKeywordPredicate(expectedParsedKeyword));","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"        assertParseSuccess(parser, userInput, expectedListGameCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        // with game filter but without keyword (defaults to list all games)","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        userInput \u003d \" --list\";","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        expectedListGameCommand \u003d new ListGameCommand(new GameIdContainsKeywordPredicate(\"\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        assertParseSuccess(parser, userInput, expectedListGameCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"MarcusTXK":37}},{"path":"src/test/java/seedu/address/model/FriendsListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.exceptions.DuplicateFriendException;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"public class FriendsListTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    private final FriendsList friendsList \u003d new FriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public void constructor() {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(Collections.emptyList(), friendsList.getFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e friendsList.resetData(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        FriendsList newData \u003d getTypicalFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        friendsList.resetData(newData);","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(newData, friendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        Friend editedAlice \u003d new FriendBuilder(ALICE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        List\u003cFriend\u003e newFriends \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        FriendsListStub newData \u003d new FriendsListStub(newFriends);","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(DuplicateFriendException.class, () -\u003e friendsList.resetData(newData));","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e friendsList.hasFriend(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(friendsList.hasFriend(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        friendsList.addFriend(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(friendsList.hasFriend(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        friendsList.addFriend(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        Friend editedAlice \u003d new FriendBuilder(ALICE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(friendsList.hasFriend(editedAlice));","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e friendsList.getFriendsList().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"    private static class FriendsListStub implements ReadOnlyFriendsList {","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        private final ObservableList\u003cFriend\u003e friends \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"        FriendsListStub(Collection\u003cFriend\u003e friends) {","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"            this.friends.setAll(friends);","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"        public ObservableList\u003cFriend\u003e getFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"            return friends;","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kevin9foong":98}},{"path":"src/test/java/seedu/address/model/GamesListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.MINECRAFT;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.exceptions.DuplicateGameException;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.testutil.GameBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"public class GamesListTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    private final GamesList gamesList \u003d new GamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    public void constructor() {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Collections.emptyList(), gamesList.getGamesList());","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e gamesList.resetData(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    public void resetData_withValidReadOnlyGamesList_replacesData() {","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        GamesList newData \u003d getTypicalGamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        gamesList.resetData(newData);","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(newData, gamesList);","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    public void resetData_withDuplicateGames_throwsDuplicateGameException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        // Two games with the same identity fields","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        Game editedAlice \u003d new GameBuilder(MINECRAFT).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        List\u003cGame\u003e newGames \u003d Arrays.asList(MINECRAFT, editedAlice);","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        GamesListStub newData \u003d new GamesListStub(newGames);","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(DuplicateGameException.class, () -\u003e gamesList.resetData(newData));","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"    public void hasGame_nullGame_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e gamesList.hasGame(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"    public void hasGame_gameNotInGamesList_returnsFalse() {","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(gamesList.hasGame(MINECRAFT));","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"    public void hasGame_gameInGamesList_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"        gamesList.addGame(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(gamesList.hasGame(MINECRAFT));","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"    public void hasGame_gameWithSameIdentityFieldsInGamesList_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"        gamesList.addGame(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"        Game editedAlice \u003d new GameBuilder(MINECRAFT).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(gamesList.hasGame(editedAlice));","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"    public void hasGameId_nullGameId_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e gamesList.hasGameWithId(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"    public void hasGameId_gameNotInGamesList_returnsFalse() {","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(gamesList.hasGameWithId(MINECRAFT.getGameId()));","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"    public void hasGameId_gameInGamesList_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"        gamesList.addGame(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(gamesList.hasGameWithId(MINECRAFT.getGameId()));","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"    public void getGameList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e gamesList.getGamesList().remove(0));","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"     * A stub ReadOnlyGamesList whose games list can violate interface constraints.","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"    private static class GamesListStub implements ReadOnlyGamesList {","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"        private final ObservableList\u003cGame\u003e games \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"        GamesListStub(Collection\u003cGame\u003e games) {","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"            this.games.setAll(games);","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"        public ObservableList\u003cGame\u003e getGamesList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"            return games;","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"YeluriKetan":114}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FRIENDS;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GAMES;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.BENSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.MINECRAFT;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.VALORANT;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameIdContainsKeywordPredicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendsListBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.testutil.GamesListBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(new FriendsList(), new FriendsList(modelManager.getFriendsList()));","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        userPrefs.setFriendsListFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        userPrefs.setFriendsListFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"tau-bar"},"content":"    public void hasFriend_nullFriend_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasFriend(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"tau-bar"},"content":"    public void hasFriendId_nullFriendId_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasFriendWithId(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"    public void hasFriend_friendNotInFriendsList_returnsFalse() {","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(modelManager.hasFriend(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"    public void hasFriendId_friendIdNotInFriendsList_returnsFalse() {","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(modelManager.hasFriendWithId(ALICE.getFriendId()));","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"    public void hasFriend_friendInFriendsList_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"        modelManager.addFriend(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(modelManager.hasFriend(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"    public void hasFriendId_friendIdInFriendsList_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"tau-bar"},"content":"        modelManager.addFriend(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(modelManager.hasFriendWithId(ALICE.getFriendId()));","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"tau-bar"},"content":"    public void hasFriendId_sameIdDifferentName_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"tau-bar"},"content":"        FriendBuilder amyFriendBuilder \u003d new FriendBuilder();","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"tau-bar"},"content":"        modelManager.addFriend(amyFriendBuilder.build());","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"tau-bar"},"content":"        FriendBuilder amyNewNameFriendBuilder \u003d new FriendBuilder().withFriendName(\"Bob\");","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(modelManager.hasFriendWithId(amyNewNameFriendBuilder.build().getFriendId()));","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"    public void getFilteredFriendList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredFriendsList().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"    public void hasGame_nullGame_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasGame(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"    public void hasGameId_nullGameId_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasGameWithId(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"    public void hasGame_gameNotInGamesList_returnsFalse() {","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(modelManager.hasGame(MINECRAFT));","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"    public void hasGameId_gameIdNotInGamesList_returnsFalse() {","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(modelManager.hasGameWithId(MINECRAFT.getGameId()));","lastModifiedDate":"2021-10-14"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"    public void hasGame_gameInGamesList_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"        modelManager.addGame(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(modelManager.hasGame(MINECRAFT));","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"YeluriKetan"},"content":"    public void hasGameId_gameIdInGamesList_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"YeluriKetan"},"content":"        modelManager.addGame(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(modelManager.hasGameWithId(MINECRAFT.getGameId()));","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":158,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"YeluriKetan"},"content":"    public void getFilteredGamesList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredGamesList().remove(0));","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":165,"author":{"gitId":"kevin9foong"},"content":"        FriendsList friendsList \u003d new FriendsListBuilder().withFriend(ALICE).withFriend(BENSON).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"YeluriKetan"},"content":"        GamesList gamesList \u003d new GamesListBuilder().withGame(MINECRAFT).withGame(VALORANT).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":167,"author":{"gitId":"kevin9foong"},"content":"        FriendsList differentFriendsList \u003d new FriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"YeluriKetan"},"content":"        GamesList differentGamesList \u003d new GamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"YeluriKetan"},"content":"        modelManager \u003d new ModelManager(friendsList, gamesList, userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"YeluriKetan"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(friendsList, gamesList, userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(modelManager.equals(new FriendsList()));","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"YeluriKetan"},"content":"        // different friendsList -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":186,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentFriendsList, gamesList, userPrefs)));","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"YeluriKetan"},"content":"        // different gamesList -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(modelManager.equals(new ModelManager(friendsList, differentGamesList, userPrefs)));","lastModifiedDate":"2021-10-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":191,"author":{"gitId":"YeluriKetan"},"content":"        // different filteredFriendsList -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":192,"author":{"gitId":"MarcusTXK"},"content":"        String[] keywords \u003d ALICE.getFriendName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"kevin9foong"},"content":"        modelManager.updateFilteredFriendsList(new FriendNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(modelManager.equals(new ModelManager(friendsList, gamesList, userPrefs)));","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":196,"author":{"gitId":"YeluriKetan"},"content":"        // different filteredGamesList -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":197,"author":{"gitId":"YeluriKetan"},"content":"        modelManager.updateFilteredGamesList(new GameIdContainsKeywordPredicate(MINECRAFT.getGameId().value));","lastModifiedDate":"2021-10-14"},{"lineNumber":198,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(modelManager.equals(new ModelManager(friendsList, gamesList, userPrefs)));","lastModifiedDate":"2021-10-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":201,"author":{"gitId":"YeluriKetan"},"content":"        modelManager.updateFilteredFriendsList(PREDICATE_SHOW_ALL_FRIENDS);","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"YeluriKetan"},"content":"        modelManager.updateFilteredGamesList(PREDICATE_SHOW_ALL_GAMES);","lastModifiedDate":"2021-10-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"kevin9foong"},"content":"        differentUserPrefs.setFriendsListFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":207,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(modelManager.equals(new ModelManager(friendsList, gamesList, differentUserPrefs)));","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"tau-bar":18,"MarcusTXK":1,"YeluriKetan":67,"-":109,"kevin9foong":14}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setFriendsListFilePath(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":20,"kevin9foong":1}},{"path":"src/test/java/seedu/address/model/friend/DayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.exceptions.InvalidDayTimeException;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"class DayTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    void setTime() throws InvalidDayTimeException {","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"        Day day \u003d new Day(DayOfWeek.of(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"        // Valid timeslots","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        day.setTime(\"0200\", \"1200\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        day.setTime(\"0800\", \"2300\", false);","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        // Edge case of endTime being 0000","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        day.setTime(\"1000\", \"0000\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        day.setTime(\"0000\", \"0000\", false);","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"        //Invalid timeslots","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(InvalidDayTimeException.class, () -\u003e day.setTime(\"01\", \"02\", true));","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(InvalidDayTimeException.class, () -\u003e day.setTime(\"avb\", \"200!\", true));","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        // End time before start time","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(InvalidDayTimeException.class, () -\u003e day.setTime(\"1200\", \"1000\", true));","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        // Same time","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(InvalidDayTimeException.class, () -\u003e day.setTime(\"1200\", \"1200\", true));","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"    void getGroupedTimeSlots() throws InvalidDayTimeException {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        Day day \u003d new Day(DayOfWeek.of(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        day.setTime(\"0300\", \"1800\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        day.setTime(\"0900\", \"0000\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        ArrayList\u003cString[]\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        // Timeslots combined to 0300 - 0000","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        expected.add(new String[]{\"0300\", \"0000\"});","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        assertArrayEquals(expected.toArray(), day.getGroupedTimeSlots().toArray());","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        day.setTime(\"1000\", \"1200\", false);","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"        expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        // Timeslots split into two slots 0300 - 1000 and 1200 - 0000","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"        expected.add(new String[]{\"0300\", \"1000\"});","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"        expected.add(new String[]{\"1200\", \"0000\"});","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"        assertArrayEquals(expected.toArray(), day.getGroupedTimeSlots().toArray());","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"    void testEquals() throws InvalidDayTimeException {","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"        Day monday \u003d new Day(DayOfWeek.of(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        Day mondayTwo \u003d new Day(DayOfWeek.of(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        Day tuesday \u003d new Day(DayOfWeek.of(2));","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"        // Same day","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(monday.equals(mondayTwo));","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(monday.equals(monday));","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"        // Different day","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(monday.equals(tuesday));","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"        // Same day but different free timeslots","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"        mondayTwo.setTime(\"0300\", \"1800\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(monday.equals(mondayTwo));","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"MarcusTXK":72}},{"path":"src/test/java/seedu/address/model/friend/FriendGameFriendLinksContainsGamePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.model.util.SampleDataUtil.getSampleFriends;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.model.util.SampleDataUtil.getSampleGames;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"public class FriendGameFriendLinksContainsGamePredicateTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"    void getGame() {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"        Game game \u003d getSampleGames()[0];","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"        FriendGameFriendLinksContainsGamePredicate predicate \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"                new FriendGameFriendLinksContainsGamePredicate(game);","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"        assertTrue(predicate.getGame().equals(game));","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"    void equals() {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"        Game[] gameArr \u003d getSampleGames();","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"        FriendGameFriendLinksContainsGamePredicate firstPredicate \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"                new FriendGameFriendLinksContainsGamePredicate(gameArr[0]);","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"        FriendGameFriendLinksContainsGamePredicate secondPredicate \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"                new FriendGameFriendLinksContainsGamePredicate(gameArr[1]);","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"        FriendGameFriendLinksContainsGamePredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"                new FriendGameFriendLinksContainsGamePredicate(gameArr[0]);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"    void test_gflContainGame_returnsTrue() {","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        Game game \u003d getSampleGames()[1];","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"        Friend friend \u003d getSampleFriends()[0];","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"        // friend\u0027s gfl contains game -\u003e true","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"        FriendGameFriendLinksContainsGamePredicate predicate \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"                new FriendGameFriendLinksContainsGamePredicate(game);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"        assertTrue(predicate.test(friend));","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"    void test_gflDoesNotContainGame_returnsFalse() {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"        Game game \u003d getSampleGames()[2];","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"        Friend friend \u003d getSampleFriends()[0];","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"tau-bar"},"content":"        // friend\u0027s gfl does not contain game -\u003e false","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"        FriendGameFriendLinksContainsGamePredicate predicate \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"tau-bar"},"content":"                new FriendGameFriendLinksContainsGamePredicate(game);","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"tau-bar"},"content":"        assertFalse(predicate.test(friend));","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"tau-bar":68}},{"path":"src/test/java/seedu/address/model/friend/FriendIdContainsKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"public class FriendIdContainsKeywordPredicateTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"        String firstKeyword \u003d \"first\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"        String secondKeyword \u003d \"second\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        FriendIdContainsKeywordPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"                new FriendIdContainsKeywordPredicate(firstKeyword);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"        FriendIdContainsKeywordPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"                new FriendIdContainsKeywordPredicate(secondKeyword);","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        FriendIdContainsKeywordPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"                new FriendIdContainsKeywordPredicate(firstKeyword);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"    public void test_idContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        // No keyword (list all)","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        FriendIdContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"                new FriendIdContainsKeywordPredicate(\"\");","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendId(FriendBuilder.DEFAULT_FRIEND_ID).build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        // Matching partial keyword","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        predicate \u003d new FriendIdContainsKeywordPredicate(\"A\");","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendId(FriendBuilder.DEFAULT_FRIEND_ID).build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"        predicate \u003d new FriendIdContainsKeywordPredicate(\"a\");","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendId(FriendBuilder.DEFAULT_FRIEND_ID).build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"    public void test_idDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        FriendIdContainsKeywordPredicate predicate \u003d new FriendIdContainsKeywordPredicate(\"Carol\");","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"        assertFalse(predicate.test(new FriendBuilder().withFriendId(FriendBuilder.DEFAULT_FRIEND_ID).build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"        // Keywords match name, but does not match id","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"                new FriendIdContainsKeywordPredicate(\"Alice\");","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(predicate.test(new FriendBuilder().withFriendId(\"Ally\").withFriendName(\"Alice\")","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"                .build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":7,"MarcusTXK":62}},{"path":"src/test/java/seedu/address/model/friend/FriendIdMatchesKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"public class FriendIdMatchesKeywordPredicateTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"        String firstKeyword \u003d \"first\";","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"        String secondKeyword \u003d \"second\";","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"        FriendIdMatchesKeywordPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"                new FriendIdMatchesKeywordPredicate(firstKeyword);","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"        FriendIdMatchesKeywordPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"                new FriendIdMatchesKeywordPredicate(secondKeyword);","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        FriendIdMatchesKeywordPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"                new FriendIdMatchesKeywordPredicate(firstKeyword);","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    public void test_idMatchesKeywords_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        // Same case keyword","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        FriendIdMatchesKeywordPredicate predicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"                new FriendIdMatchesKeywordPredicate(\"AB\");","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendId(FriendBuilder.DEFAULT_FRIEND_ID).build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        // Mixed-case keyword","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        predicate \u003d new FriendIdMatchesKeywordPredicate(\"aB\");","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendId(FriendBuilder.DEFAULT_FRIEND_ID).build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    public void test_idDoesNotMatchKeywords_returnsFalse() {","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        FriendIdMatchesKeywordPredicate predicate \u003d new FriendIdMatchesKeywordPredicate(\"Carol\");","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(predicate.test(new FriendBuilder().withFriendId(FriendBuilder.DEFAULT_FRIEND_ID).build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"        // Keywords match name, but does not match id","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"                new FriendIdMatchesKeywordPredicate(\"Alice\");","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(predicate.test(new FriendBuilder().withFriendId(\"Ally\").withFriendName(\"Alice\")","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"                .build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"YeluriKetan":65}},{"path":"src/test/java/seedu/address/model/friend/FriendIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"public class FriendIdTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FriendId(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    public void constructor_invalidId_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"        String emptyId \u003d \"\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FriendId(emptyId));","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"        String idWithSpaces \u003d \"Id with spaces\";","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FriendId(idWithSpaces));","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    public void isValidFriendId() {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        // null id","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e FriendId.isValidFriendId(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        // invalid id","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(FriendId.isValidFriendId(\"\")); // empty string","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(FriendId.isValidFriendId(\" \")); // spaces only","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(FriendId.isValidFriendId(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(FriendId.isValidFriendId(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(FriendId.isValidFriendId(\"peter jack\")); // contains multiple spaced words","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        // valid id","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(FriendId.isValidFriendId(\"peter\")); // alphabets only","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(FriendId.isValidFriendId(\"12345\")); // numbers only","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(FriendId.isValidFriendId(\"peter24\")); // alphanumeric characters","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(FriendId.isValidFriendId(\"CapiTan\")); // with capital letters","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(FriendId.isValidFriendId(\"PeterFromSchoolWhoIs24yo\")); // long ids","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"YeluriKetan":44}},{"path":"src/test/java/seedu/address/model/friend/FriendNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"public class FriendNameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"        FriendNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"                new FriendNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        FriendNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"                new FriendNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        FriendNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"                new FriendNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(firstPredicateCopy, firstPredicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(secondPredicate, firstPredicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        // One keyword","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        FriendNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"                new FriendNameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        predicate \u003d new FriendNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        predicate \u003d new FriendNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        predicate \u003d new FriendNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        FriendNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"                new FriendNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(predicate.test(new FriendBuilder().withFriendName(\"Alice\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        predicate \u003d new FriendNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(predicate.test(new FriendBuilder().withFriendName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"                new FriendNameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(predicate.test(new FriendBuilder().withFriendName(\"Alice\").withFriendId(\"12345\")","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"                .build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"MarcusTXK":1,"kevin9foong":82}},{"path":"src/test/java/seedu/address/model/friend/FriendNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public class FriendNameTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    public void constructor_null_returnsFriendWithDefaultName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(FriendName.DEFAULT_FRIEND_NAME, new FriendName(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FriendName(invalidName));","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        // null name","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e FriendName.isValidName(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        // invalid name","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(FriendName.isValidName(\"\")); // empty string","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(FriendName.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(FriendName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(FriendName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        // valid name","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(FriendName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(FriendName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(FriendName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(FriendName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(FriendName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kevin9foong":41}},{"path":"src/test/java/seedu/address/model/friend/FriendTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGameFriendLinks.CSGO_AMY_DRACO_LINK;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"public class FriendTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"        Friend friend \u003d new FriendBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e friend.getGameFriendLinks().remove(0));","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    public void isSameFriendId() {","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(ALICE.isSameFriendId(ALICE));","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        Friend editedAlice \u003d new FriendBuilder(ALICE).withFriendName(VALID_NAME_BOB).withGameFriendLinks().build();","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(ALICE.isSameFriendId(editedAlice));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        // different id, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        editedAlice \u003d new FriendBuilder(ALICE).withFriendId(VALID_FRIEND_ID_BOB).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(ALICE.isSameFriendId(editedAlice));","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        // id differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        Friend editedBob \u003d new FriendBuilder(BOB).withFriendName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(BOB.isSameFriendId(editedBob));","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        Friend aliceCopy \u003d new FriendBuilder(ALICE).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(ALICE, aliceCopy);","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(ALICE, ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(null, ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(5, ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"        // different friend -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(BOB, ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        // different friendId -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        Friend editedAlice \u003d new FriendBuilder(ALICE).withFriendId(VALID_FRIEND_ID_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        editedAlice \u003d new FriendBuilder(ALICE).withFriendName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        // different games -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"        editedAlice \u003d new FriendBuilder(ALICE).withGameFriendLinks(CSGO_AMY_DRACO_LINK).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"YeluriKetan":15,"kevin9foong":59}},{"path":"src/test/java/seedu/address/model/friend/ScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.exceptions.InvalidDayTimeException;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"class ScheduleTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    void setScheduleDay_invalidDays_throwsInvalidDayTimeException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"        // Invalid day numbers (Only from 1 - 7 allowed)","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(InvalidDayTimeException.class, () -\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"                schedule.setScheduleDay(0, \"0000\", \"1200\", true));","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(InvalidDayTimeException.class, () -\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"                schedule.setScheduleDay(8, \"0000\", \"1200\", true));","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    void equals() throws InvalidDayTimeException {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        Schedule scheduleOne \u003d new Schedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        Schedule scheduleTwo \u003d new Schedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        // Same object","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(scheduleOne.equals(scheduleOne));","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"        // Same schedule","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(scheduleOne.equals(scheduleTwo));","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        // Different day schedules","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        scheduleOne.setScheduleDay(1, \"0000\", \"1200\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(scheduleOne.equals(scheduleTwo));","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"    void getSchedule() {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        // Unmodifiable","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e schedule.getSchedule().remove(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"MarcusTXK":44}},{"path":"src/test/java/seedu/address/model/friend/UniqueFriendsListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.exceptions.DuplicateFriendException;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.exceptions.FriendNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"public class UniqueFriendsListTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    private final UniqueFriendsList uniqueFriendsList \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    public void contains_nullFriend_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.contains(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    public void contains_friendNotInList_returnsFalse() {","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(uniqueFriendsList.contains(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    public void contains_friendInList_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(uniqueFriendsList.contains(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    public void contains_friendWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        Friend editedAlice \u003d new FriendBuilder(ALICE).withFriendName(\"Alice Pauline\")","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"                .withGameFriendLinks(ALICE.getGameFriendLinks().toArray(GameFriendLink[]::new)).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(uniqueFriendsList.contains(editedAlice));","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    public void containsId_nullFriendId_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.containsId(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"    public void containsId_friendWithSameIdNotInList_returnsFalse() {","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(uniqueFriendsList.containsId(ALICE.getFriendId()));","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    public void containsId_friendWithSameIdInList_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(uniqueFriendsList.containsId(ALICE.getFriendId()));","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"    public void add_nullFriend_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.add(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"    public void add_duplicateFriendWithEverythingSame_throwsDuplicateFriendException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(DuplicateFriendException.class, () -\u003e uniqueFriendsList.add(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"    public void add_duplicateFriendWithDifferentNonIdentityFields_throwsDuplicateFriendException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"        Friend editedAlice \u003d new FriendBuilder(ALICE).withFriendName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(DuplicateFriendException.class, () -\u003e uniqueFriendsList.add(editedAlice));","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"    public void setFriend_nullTargetFriend_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.setFriend(null, ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"    public void setFriend_nullEditedFriend_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.setFriend(ALICE, null));","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"    public void setFriend_targetFriendNotInList_throwsFriendNotFoundException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(FriendNotFoundException.class, () -\u003e uniqueFriendsList.setFriend(ALICE, ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"    public void setFriend_editedFriendIsSameFriend_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.setFriend(ALICE, ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"        UniqueFriendsList expectedUniqueFriendsList \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"        expectedUniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedUniqueFriendsList, uniqueFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"    public void setFriend_editedFriendHasSameIdentity_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"        Friend editedAlice \u003d new FriendBuilder(ALICE).withFriendName(VALID_NAME_BOB).withGameFriendLinks()","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"                .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.setFriend(ALICE, editedAlice);","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"        UniqueFriendsList expectedUniqueFriendsList \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"        expectedUniqueFriendsList.add(editedAlice);","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedUniqueFriendsList, uniqueFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"    public void setFriend_editedFriendHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.setFriend(ALICE, BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"        UniqueFriendsList expectedUniqueFriendsList \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"        expectedUniqueFriendsList.add(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedUniqueFriendsList, uniqueFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"    public void setFriend_editedFriendHasNonUniqueIdentity_throwsDuplicateFriendException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(DuplicateFriendException.class, () -\u003e uniqueFriendsList.setFriend(ALICE, BOB));","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"    public void remove_nullFriend_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.remove(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"    public void remove_friendDoesNotExist_throwsFriendNotFoundException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":142,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(FriendNotFoundException.class, () -\u003e uniqueFriendsList.remove(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"    public void remove_existingFriend_removesFriend() {","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.remove(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"kevin9foong"},"content":"        UniqueFriendsList expectedUniqueFriendsList \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedUniqueFriendsList, uniqueFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"YeluriKetan"},"content":"    public void setFriends_nullUniqueFriendList_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.setFriends((UniqueFriendsList) null));","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"YeluriKetan"},"content":"    public void setFriends_uniqueFriendList_replacesOwnListWithProvidedUniqueFriendList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"kevin9foong"},"content":"        UniqueFriendsList expectedUniqueFriendsList \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"kevin9foong"},"content":"        expectedUniqueFriendsList.add(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.setFriends(expectedUniqueFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedUniqueFriendsList, uniqueFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"YeluriKetan"},"content":"    public void setFriends_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":169,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.setFriends((List\u003cFriend\u003e) null));","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"YeluriKetan"},"content":"    public void setFriends_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"kevin9foong"},"content":"        List\u003cFriend\u003e friendList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.setFriends(friendList);","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"kevin9foong"},"content":"        UniqueFriendsList expectedUniqueFriendsList \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"kevin9foong"},"content":"        expectedUniqueFriendsList.add(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedUniqueFriendsList, uniqueFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"YeluriKetan"},"content":"    public void setFriends_listWithDuplicateFriends_throwsDuplicateFriendException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"kevin9foong"},"content":"        List\u003cFriend\u003e listWithDuplicateFriends \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(DuplicateFriendException.class, () -\u003e uniqueFriendsList.setFriends(listWithDuplicateFriends));","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"kevin9foong"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"kevin9foong"},"content":"            -\u003e uniqueFriendsList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":192,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":193,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"YeluriKetan":47,"kevin9foong":146}},{"path":"src/test/java/seedu/address/model/game/GameFriendLinksContainsGameIdPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.model.util.SampleDataUtil.getSampleFriends;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.model.util.SampleDataUtil.getSampleGames;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"class GameFriendLinksContainsGameIdPredicateTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"    void getFriend() {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"        Friend friend \u003d getSampleFriends()[0];","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"        GameFriendLinksContainsGameIdPredicate predicate \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"                new GameFriendLinksContainsGameIdPredicate(friend);","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"        assertTrue(predicate.getFriend().equals(friend));","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"    void equals() {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"        Friend friend \u003d getSampleFriends()[0];","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"        Friend otherFriend \u003d getSampleFriends()[1];","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"        GameFriendLinksContainsGameIdPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"                new GameFriendLinksContainsGameIdPredicate(friend);","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"        GameFriendLinksContainsGameIdPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"                new GameFriendLinksContainsGameIdPredicate(otherFriend);","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"        GameFriendLinksContainsGameIdPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"                new GameFriendLinksContainsGameIdPredicate(friend);","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"    void test_gflContainsGameId_returnsTrue() {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"        Game game \u003d getSampleGames()[1];","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"        Friend friend \u003d getSampleFriends()[0];","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"        // gfl contains game -\u003e true","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"        GameFriendLinksContainsGameIdPredicate predicate \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"                new GameFriendLinksContainsGameIdPredicate(friend);","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"        assertTrue(predicate.test(game));","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"tau-bar"},"content":"    void test_gflContainsGameId_returnsFalse() {","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"        Game game \u003d getSampleGames()[2];","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"tau-bar"},"content":"        Friend friend \u003d getSampleFriends()[0];","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"tau-bar"},"content":"        // gfl contains game -\u003e true","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"tau-bar"},"content":"        GameFriendLinksContainsGameIdPredicate predicate \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"tau-bar"},"content":"                new GameFriendLinksContainsGameIdPredicate(friend);","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"tau-bar"},"content":"        assertFalse(predicate.test(game));","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"tau-bar":72}},{"path":"src/test/java/seedu/address/model/game/GameIdContainsKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.testutil.GameBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"public class GameIdContainsKeywordPredicateTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"        String firstKeyword \u003d \"first\";","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"        String secondKeyword \u003d \"second\";","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"        GameIdContainsKeywordPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"                new GameIdContainsKeywordPredicate(firstKeyword);","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"        GameIdContainsKeywordPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"                new GameIdContainsKeywordPredicate(secondKeyword);","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        GameIdContainsKeywordPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"                new GameIdContainsKeywordPredicate(firstKeyword);","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    public void test_idContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        // No keyword (list all)","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        GameIdContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"                new GameIdContainsKeywordPredicate(\"\");","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(predicate.test(new GameBuilder().withGameId(GameBuilder.DEFAULT_GAME_ID).build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        // Matching partial keyword","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        predicate \u003d new GameIdContainsKeywordPredicate(\"A\");","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(predicate.test(new GameBuilder().withGameId(GameBuilder.DEFAULT_GAME_ID).build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        predicate \u003d new GameIdContainsKeywordPredicate(\"afT\");","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(predicate.test(new GameBuilder().withGameId(GameBuilder.DEFAULT_GAME_ID).build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"    public void test_idDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"        GameIdContainsKeywordPredicate predicate \u003d new GameIdContainsKeywordPredicate(\"Carol\");","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(predicate.test(new GameBuilder().withGameId(GameBuilder.DEFAULT_GAME_ID).build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"YeluriKetan":63}},{"path":"src/test/java/seedu/address/model/game/GameIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"public class GameIdTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GameId(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    public void constructor_invalidId_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"        String emptyId \u003d \"\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GameId(emptyId));","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"        String idWithSpaces \u003d \"Id with spaces\";","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GameId(idWithSpaces));","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    public void isValidGameId() {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        // null id","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e GameId.isValidGameId(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        // invalid id","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(GameId.isValidGameId(\"\")); // empty string","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(GameId.isValidGameId(\" \")); // spaces only","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(GameId.isValidGameId(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(GameId.isValidGameId(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(GameId.isValidGameId(\"peter jack\")); // contains multiple spaced words","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        // valid id","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(GameId.isValidGameId(\"minecraft\")); // alphabets only","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(GameId.isValidGameId(\"12345\")); // numbers only","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(GameId.isValidGameId(\"gta5\")); // alphanumeric characters","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(GameId.isValidGameId(\"AmongUs\")); // with capital letters","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(GameId.isValidGameId(\"RedDead2Redemption\")); // long ids","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"YeluriKetan":44}},{"path":"src/test/java/seedu/address/model/game/GameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_APEX_LEGENDS;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.CSGO;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.MINECRAFT;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.VALORANT;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.testutil.GameBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"public class GameTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Game(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    public void isSameGameId() {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(MINECRAFT.isSameGameId(MINECRAFT));","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        Game editedValorant \u003d new GameBuilder(CSGO).withGameId(VALID_GAME_ID_CSGO.toLowerCase()).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(CSGO.isSameGameId(editedValorant));","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        // different objects","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(CSGO.isSameGameId(MINECRAFT));","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        Game minecraftCopy \u003d new GameBuilder(MINECRAFT).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(MINECRAFT, minecraftCopy);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(MINECRAFT, MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        assertNotEquals(null, MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        assertNotEquals(MINECRAFT, new GameId(\"a\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        // different game -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"        assertNotEquals(VALORANT, MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        // different gameId -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        Game editedMinecraft \u003d new GameBuilder(MINECRAFT).withGameId(VALID_GAME_ID_APEX_LEGENDS).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"        assertNotEquals(MINECRAFT, editedMinecraft);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"    public void hashCode_sameHashCodeOnMultipleCalls() {","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        int expectedHashCode \u003d MINECRAFT.hashCode();","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedHashCode, MINECRAFT.hashCode());","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"YeluriKetan":46,"kevin9foong":3,"-":17}},{"path":"src/test/java/seedu/address/model/game/UniqueGamesListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.MINECRAFT;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.VALORANT;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.exceptions.DuplicateGameException;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.exceptions.GameNotFoundException;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"public class UniqueGamesListTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    private final UniqueGamesList uniqueGamesList \u003d new UniqueGamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    public void contains_nullGame_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGamesList.contains(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    public void contains_gameNotInList_returnsFalse() {","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(uniqueGamesList.contains(MINECRAFT));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    public void contains_gameInList_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        uniqueGamesList.add(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(uniqueGamesList.contains(MINECRAFT));","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    public void add_nullGame_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGamesList.add(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    public void add_duplicateGame_throwsDuplicateGameException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        uniqueGamesList.add(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(DuplicateGameException.class, () -\u003e uniqueGamesList.add(MINECRAFT));","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    public void setGame_nullTargetGame_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGamesList.setGame(null, MINECRAFT));","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"    public void setGame_nullEditedGame_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGamesList.setGame(MINECRAFT, null));","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    public void setGame_targetGameNotInList_throwsGameNotFoundException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(GameNotFoundException.class, () -\u003e uniqueGamesList.setGame(MINECRAFT, MINECRAFT));","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"    public void setGame_editedGameIsSameGame_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"        uniqueGamesList.add(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"        uniqueGamesList.setGame(MINECRAFT, MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"        UniqueGamesList expectedUniqueGamesList \u003d new UniqueGamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"        expectedUniqueGamesList.add(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedUniqueGamesList, uniqueGamesList);","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"    public void setGame_editedGameHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"        uniqueGamesList.add(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"        uniqueGamesList.setGame(MINECRAFT, VALORANT);","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        UniqueGamesList expectedUniqueGamesList \u003d new UniqueGamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"        expectedUniqueGamesList.add(VALORANT);","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedUniqueGamesList, uniqueGamesList);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"    public void setGame_editedGameHasNonUniqueIdentity_throwsDuplicateGameException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"        uniqueGamesList.add(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"        uniqueGamesList.add(VALORANT);","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(DuplicateGameException.class, () -\u003e uniqueGamesList.setGame(MINECRAFT, VALORANT));","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"    public void remove_nullGame_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGamesList.remove(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"    public void remove_gameDoesNotExist_throwsGameNotFoundException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(GameNotFoundException.class, () -\u003e uniqueGamesList.remove(MINECRAFT));","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"    public void remove_existingGame_removesGame() {","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"        uniqueGamesList.add(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"        uniqueGamesList.remove(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"        UniqueGamesList expectedUniqueGamesList \u003d new UniqueGamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedUniqueGamesList, uniqueGamesList);","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"    public void setGames_nullUniqueGameList_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGamesList.setGames((UniqueGamesList) null));","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"    public void setGames_uniqueGameList_replacesOwnListWithProvidedUniqueGameList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"        uniqueGamesList.add(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"        UniqueGamesList expectedUniqueGamesList \u003d new UniqueGamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"        expectedUniqueGamesList.add(VALORANT);","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"        uniqueGamesList.setGames(expectedUniqueGamesList);","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedUniqueGamesList, uniqueGamesList);","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"    public void setGames_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGamesList.setGames((List\u003cGame\u003e) null));","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"    public void setGames_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"        uniqueGamesList.add(MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"        List\u003cGame\u003e gameList \u003d Collections.singletonList(VALORANT);","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"        uniqueGamesList.setGames(gameList);","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"        UniqueGamesList expectedUniqueGamesList \u003d new UniqueGamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"        expectedUniqueGamesList.add(VALORANT);","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedUniqueGamesList, uniqueGamesList);","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"    public void setGames_listWithDuplicateGames_throwsDuplicateGameException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"        List\u003cGame\u003e listWithDuplicateGames \u003d Arrays.asList(MINECRAFT, MINECRAFT);","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(DuplicateGameException.class, () -\u003e uniqueGamesList.setGames(listWithDuplicateGames));","lastModifiedDate":"2021-10-14"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"                uniqueGamesList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"YeluriKetan":148}},{"path":"src/test/java/seedu/address/model/gamefriendlink/GameFriendLinkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.gamefriendlink;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USER_NAME_OMEGA;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGameFriendLinks.APEX_AMY_DRACO_LINK;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGameFriendLinks.CSGO_AMY_DRACO_LINK;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGameFriendLinks.CSGO_AMY_DRACO_SKILL_SIX_LINK;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGameFriendLinks.CSGO_AMY_DRACO_SKILL_TWO_LINK;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGameFriendLinks.CSGO_AMY_OMEGA_LINK;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGameFriendLinks.CSGO_BOB_DRACO_LINK;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"import java.util.BitSet;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.testutil.GameFriendLinkBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"public class GameFriendLinkTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GameFriendLink(null,","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"                new FriendId(VALID_FRIEND_ID_AMY), new UserName(VALID_USER_NAME_OMEGA)));","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GameFriendLink(new GameId(VALID_GAME_ID_CSGO),","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"                null, new UserName(VALID_USER_NAME_OMEGA)));","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GameFriendLink(new GameId(VALID_GAME_ID_CSGO),","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"                new FriendId(VALID_FRIEND_ID_AMY), null));","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        // same values -\u003e equals","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        GameFriendLink minecraftCopy \u003d new GameFriendLinkBuilder(CSGO_AMY_DRACO_LINK).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(CSGO_AMY_DRACO_LINK, minecraftCopy);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        // same object -\u003e equals","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(CSGO_AMY_DRACO_LINK, CSGO_AMY_DRACO_LINK);","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        // null -\u003e notEquals","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        assertNotEquals(null, CSGO_AMY_DRACO_LINK);","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        // different type -\u003e notEquals","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        assertNotEquals(CSGO_AMY_DRACO_LINK, new BitSet());","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        // different friendId -\u003e notEquals","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"        assertNotEquals(CSGO_AMY_DRACO_LINK, CSGO_BOB_DRACO_LINK);","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        // different gameId -\u003e notEquals","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        assertNotEquals(CSGO_AMY_DRACO_LINK, APEX_AMY_DRACO_LINK);","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        // different username -\u003e notEquals","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"        assertNotEquals(CSGO_AMY_DRACO_LINK, CSGO_AMY_OMEGA_LINK);","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        // different skill value -\u003e notEquals","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(CSGO_AMY_DRACO_SKILL_SIX_LINK, CSGO_AMY_DRACO_SKILL_TWO_LINK);","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"YeluriKetan":53,"kevin9foong":12}},{"path":"src/test/java/seedu/address/model/gamefriendlink/SkillLevelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.gamefriendlink;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public class SkillLevelTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    public void constructor_invalidSkillValue_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"        Integer outsideLowerBounds \u003d -1;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new SkillValue(outsideLowerBounds));","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"        Integer outsideUpperBounds \u003d 11;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new SkillValue(outsideUpperBounds));","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    public void validateSkillValue_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"        // null skillValue","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e SkillValue.validateSkillValue(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    // test near the boundaries of equivalence partitions","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    public void validateSkillValue_invalidSkillValues_returnsFalse() {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(SkillValue.validateSkillValue(-1));","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(SkillValue.validateSkillValue(-12));","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(SkillValue.validateSkillValue(11));","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(SkillValue.validateSkillValue(100));","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    public void validateSkillValue_validSkillValues_returnsTrue() {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(SkillValue.validateSkillValue(0));","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(SkillValue.validateSkillValue(10));","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(SkillValue.validateSkillValue(5));","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(SkillValue.validateSkillValue(7));","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    public void equals() {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        // same skillValue is equal","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(new SkillValue(10), new SkillValue(10));","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        // different skillValue not equal","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(new SkillValue(10), new SkillValue(9));","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        // not equals to null","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(new SkillValue(10), null);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        // different type and different from int","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(new SkillValue(10), 10);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kevin9foong":55}},{"path":"src/test/java/seedu/address/model/gamefriendlink/UserNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.gamefriendlink;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"public class UserNameTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"        String emptyUsername \u003d \"\";","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new UserName(emptyUsername));","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"        String spaceUsername \u003d \"    \";","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new UserName(spaceUsername));","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        // null name","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e UserName.isValidUserName(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"        // invalid name","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(UserName.isValidUserName(\"\")); // empty string","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(UserName.isValidUserName(\"  \")); // spaces only","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        // valid name","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(UserName.isValidUserName(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(UserName.isValidUserName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(UserName.isValidUserName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(UserName.isValidUserName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(UserName.isValidUserName(\"!@#$%^\")); // special characters only","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(UserName.isValidUserName(\"peter@123.!?\")); // alphabets with special characters","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(UserName.isValidUserName(\"Roger@Jackson#1111\")); // long names","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"YeluriKetan":38}},{"path":"src/test/java/seedu/address/model/util/DayTimeUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.model.util;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.exceptions.InvalidDayTimeException;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"class DayTimeUtilTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    void getTimeFromIndex() throws InvalidDayTimeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"        // Valid index","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(\"0000\", DayTimeUtil.getTimeFromIndex(0));","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(\"0900\", DayTimeUtil.getTimeFromIndex(9));","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(\"2300\", DayTimeUtil.getTimeFromIndex(23));","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"        // Invalid index","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(InvalidDayTimeException.class, () -\u003e DayTimeUtil.getTimeFromIndex(-1));","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(InvalidDayTimeException.class, () -\u003e DayTimeUtil.getTimeFromIndex(24));","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    void getIndexFromTime() throws InvalidDayTimeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        // Valid time string","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(0, DayTimeUtil.getIndexFromTime(\"0000\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(9, DayTimeUtil.getIndexFromTime(\"0900\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(23, DayTimeUtil.getIndexFromTime(\"2300\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        // Invalid time string","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(NullPointerException.class, () -\u003e DayTimeUtil.getIndexFromTime(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(InvalidDayTimeException.class, () -\u003e DayTimeUtil.getIndexFromTime(\"\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(InvalidDayTimeException.class, () -\u003e DayTimeUtil.getIndexFromTime(\"20\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(InvalidDayTimeException.class, () -\u003e DayTimeUtil.getIndexFromTime(\"22000\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        // Invalid time stamp","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(InvalidDayTimeException.class, () -\u003e DayTimeUtil.getIndexFromTime(\"2400\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        // Invalid time containing minutes","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(InvalidDayTimeException.class, () -\u003e DayTimeUtil.getIndexFromTime(\"2202\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(InvalidDayTimeException.class, () -\u003e DayTimeUtil.getIndexFromTime(\"2220\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"MarcusTXK":42}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedFriendTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.storage.JsonAdaptedFriend.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.BENSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.Schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"// TODO: Update tests for FriendId and Games based on UG specs","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"public class JsonAdaptedFriendTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    private static final String INVALID_GAME \u003d \"R@staurantC!ty\";","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    private static final String VALID_FRIEND_ID \u003d BENSON.getFriendId().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    private static final String VALID_NAME_BENSON \u003d BENSON.getFriendName().toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    private static final List\u003cJsonAdaptedGameFriendLink\u003e VALID_GAME_FRIEND_LINK \u003d BENSON.getGameFriendLinks().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"            .map(JsonAdaptedGameFriendLink::new)","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    private static final Schedule VALID_SCHEDULE \u003d BENSON.getSchedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_validPersonDetails_returnsFriend() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        JsonAdaptedFriend person \u003d new JsonAdaptedFriend(BENSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        JsonAdaptedFriend person \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"                new JsonAdaptedFriend(VALID_FRIEND_ID, INVALID_NAME, VALID_GAME_FRIEND_LINK, VALID_SCHEDULE);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d FriendName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_friendIdNull_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        JsonAdaptedFriend person \u003d new JsonAdaptedFriend(null, BENSON.getFriendName().toString(),","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"                VALID_GAME_FRIEND_LINK, VALID_SCHEDULE);","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, FriendId.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"        JsonAdaptedFriend person \u003d new JsonAdaptedFriend(VALID_FRIEND_ID, null, VALID_GAME_FRIEND_LINK, VALID_SCHEDULE);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, FriendName.class.getSimpleName());","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    // TODO: Check if there can be an invalid gameFriendLink.","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    //    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    //    public void toModelType_invalidGameFriendLink_throwsIllegalValueException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    //        List\u003cJsonAdaptedGameFriendLink\u003e invalidGameFriendLinks \u003d new ArrayList\u003c\u003e(VALID_GAME_FRIEND_LINK);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    //        invalidGameFriendLinks.add(new JsonAdaptedGameFriendLink(INVALID_GAME));","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    //        JsonAdaptedFriend friend \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    //                new JsonAdaptedFriend(VALID_FRIEND_ID, VALID_NAME, invalidGameFriendLinks);","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    //        assertThrows(IllegalValueException.class, friend::toModelType);","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    //    }","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"MarcusTXK":7,"kevin9foong":63}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedGameFriendLinkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.ALICE;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.BENSON;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.GENSHIN_IMPACT;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.VALORANT;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.SkillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.UserName;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"public class JsonAdaptedGameFriendLinkTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    private static final String VALID_FRIEND_USERNAME_RACHEL \u003d \"R@chel\";","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    private static final String VALID_FRIEND_USERNAME_JAMIE \u003d \"JAMIEFLAMIE\";","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    private static final String INVALID_FRIEND_USERNAME \u003d \"R@staurantC! \\n next line\";","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    private static final String VALID_FRIEND_ID_BENSON \u003d BENSON.getFriendId().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    private static final String VALID_FRIEND_ID_ALICE \u003d ALICE.getFriendId().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    private static final String INVALID_FRIEND_ID \u003d \"id with spaces\";","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    private static final String VALID_GAME_ID_VALORANT \u003d VALORANT.getGameId().value;","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    private static final String VALID_GAME_ID_GENSHIN \u003d GENSHIN_IMPACT.getGameId().value;","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    private static final String INVALID_GAME_ID \u003d \"GAMEWITH***SPECIALCH@R\";","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    private static final List\u003cJsonAdaptedGameFriendLink\u003e VALID_GAME_FRIEND_LINK \u003d BENSON.getGameFriendLinks().stream()","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"            .map(JsonAdaptedGameFriendLink::new)","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    private static final String VALID_SKILL_VALUE_STRING_ONE \u003d \"1\";","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    private static final String VALID_SKILL_VALUE_STRING_TEN \u003d \"10\";","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    private static final String VALID_SKILL_VALUE_STRING_ZERO \u003d \"0\";","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    private static final String INVALID_SKILL_VALUE_STRING_OUT_LOWER_BOUNDS \u003d \"-1\";","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    public void sourceConstructorWorks_validGameFriendLinkSourceInstance_createsCorrectJsonAdaptedGameFriendLink()","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"            throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        GameFriendLink gameFriendLinkSource \u003d new GameFriendLink(new GameId(VALID_GAME_ID_VALORANT),","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"                new FriendId(VALID_FRIEND_ID_BENSON), new UserName(VALID_FRIEND_USERNAME_RACHEL));","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        JsonAdaptedGameFriendLink gameFriendLink \u003d new JsonAdaptedGameFriendLink(gameFriendLinkSource);","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(new GameFriendLink(new GameId(VALID_GAME_ID_VALORANT), new FriendId(VALID_FRIEND_ID_BENSON),","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"                new UserName(VALID_FRIEND_USERNAME_RACHEL)), gameFriendLink.toModelType());","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_validGameFriendLinkDetails_returnsCorrectGameFriendLink() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        JsonAdaptedGameFriendLink gameFriendLink \u003d new JsonAdaptedGameFriendLink(VALID_GAME_ID_VALORANT,","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"                VALID_FRIEND_ID_BENSON, VALID_FRIEND_USERNAME_RACHEL, VALID_SKILL_VALUE_STRING_ZERO);","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(new GameFriendLink(new GameId(VALID_GAME_ID_VALORANT), new FriendId(VALID_FRIEND_ID_BENSON),","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"                new UserName(VALID_FRIEND_USERNAME_RACHEL), new SkillValue(0)), gameFriendLink.toModelType());","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        JsonAdaptedGameFriendLink gameFriendLinkTwo \u003d new JsonAdaptedGameFriendLink(VALID_GAME_ID_GENSHIN,","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"                VALID_FRIEND_ID_ALICE, VALID_FRIEND_USERNAME_JAMIE, VALID_SKILL_VALUE_STRING_TEN);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        assertNotEquals(new GameFriendLink(new GameId(VALID_GAME_ID_VALORANT), new FriendId(VALID_FRIEND_ID_BENSON),","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"                new UserName(VALID_FRIEND_USERNAME_RACHEL)), gameFriendLinkTwo.toModelType());","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(new GameFriendLink(new GameId(VALID_GAME_ID_GENSHIN), new FriendId(VALID_FRIEND_ID_ALICE),","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"                new UserName(VALID_FRIEND_USERNAME_JAMIE), new SkillValue(10)), gameFriendLinkTwo.toModelType());","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_invalidFriendId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        JsonAdaptedGameFriendLink gameFriendLink \u003d new JsonAdaptedGameFriendLink(VALID_GAME_ID_VALORANT,","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"                INVALID_FRIEND_ID, VALID_FRIEND_USERNAME_RACHEL, VALID_SKILL_VALUE_STRING_ONE);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d FriendId.MESSAGE_INVALID_CHARACTERS;","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, gameFriendLink::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_invalidFriendUsername_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        JsonAdaptedGameFriendLink gameFriendLink \u003d new JsonAdaptedGameFriendLink(VALID_GAME_ID_VALORANT,","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"                VALID_FRIEND_ID_BENSON, INVALID_FRIEND_USERNAME, VALID_SKILL_VALUE_STRING_ZERO);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d UserName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, gameFriendLink::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_invalidGameId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"        JsonAdaptedGameFriendLink gameFriendLink \u003d new JsonAdaptedGameFriendLink(INVALID_GAME_ID,","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"                VALID_FRIEND_ID_BENSON, INVALID_FRIEND_USERNAME, VALID_SKILL_VALUE_STRING_ONE);","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d GameId.MESSAGE_INVALID_CHARACTERS_IN_GAME_ID;","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, gameFriendLink::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_invalidSkillValue_throwsIllegalValueException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kevin9foong":94}},{"path":"src/test/java/seedu/address/storage/JsonFriendsListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.HOON;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.IDA;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"public class JsonFriendsListStorageTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"            \"JsonFriendsListStorageTest\");","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    public void readFriendsList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e readFriendsList(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    private java.util.Optional\u003cReadOnlyFriendsList\u003e readFriendsList(String filePath) throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        return new JsonFriendsListStorage(Paths.get(filePath)).readFriendsList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(readFriendsList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendsList(\"notJsonFormatFriendsList.json\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    public void readFriendsList_invalidFriendsList_throwDataConversionException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendsList(\"invalidFriendsList.json\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"    public void readFriendsList_invalidAndValidFriendsList_throwDataConversionException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendsList(\"invalidAndValidFriendsList.json\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    public void readAndSaveFriendsList_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        Path filePath \u003d testFolder.resolve(\"TempFriendsList.json\");","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        FriendsList original \u003d getTypicalFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        JsonFriendsListStorage jsonFriendsListStorage \u003d new JsonFriendsListStorage(filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        jsonFriendsListStorage.saveFriendsList(original, filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        ReadOnlyFriendsList readBack \u003d jsonFriendsListStorage.readFriendsList(filePath).get();","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(original, new FriendsList(readBack));","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        original.addFriend(HOON);","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        original.removeFriend(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        jsonFriendsListStorage.saveFriendsList(original, filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        readBack \u003d jsonFriendsListStorage.readFriendsList(filePath).get();","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(original, new FriendsList(readBack));","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"        original.addFriend(IDA);","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"        jsonFriendsListStorage.saveFriendsList(original); // file path not specified","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"        readBack \u003d jsonFriendsListStorage.readFriendsList().get(); // file path not specified","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(original, new FriendsList(readBack));","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"    public void saveFriendsList_nullFriendsList_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFriendsList(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"     * Saves {@code friendsList} at the specified {@code filePath}.","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"    private void saveFriendsList(ReadOnlyFriendsList friendsList, String filePath) {","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"            new JsonFriendsListStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"                    .saveFriendsList(friendsList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"    public void saveFriendsList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFriendsList(new FriendsList(), null));","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":68,"kevin9foong":43}},{"path":"src/test/java/seedu/address/storage/JsonGamesListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.APEX_LEGENDS;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.VALORANT;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.GamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"public class JsonGamesListStorageTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"            \"JsonGamesListStorageTest\");","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    @TempDir","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    public Path testFolder;","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    public void getGamesListFilePath_validFilePath_returnsCorrectFilePath() {","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        JsonGamesListStorage jsonGamesListStorage \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"                new JsonGamesListStorage(TEST_DATA_FOLDER.resolve(\"testFilePath.json\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(TEST_DATA_FOLDER.resolve(\"testFilePath.json\"), jsonGamesListStorage.getGamesListFilePath());","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    public void readGamesList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e readGamesList(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    private java.util.Optional\u003cReadOnlyGamesList\u003e readGamesList(String filePath) throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        return new JsonGamesListStorage(Paths.get(filePath)).readGamesList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"                : null;","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(readGamesList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(DataConversionException.class, () -\u003e readGamesList(\"notJsonFormatGamesList.json\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    public void readGamesList_invalidGamesList_throwDataConversionException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(DataConversionException.class, () -\u003e readGamesList(\"invalidGamesList.json\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    public void readGamesList_invalidAndValidGamesList_throwDataConversionException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(DataConversionException.class, () -\u003e readGamesList(\"invalidAndValidGamesList.json\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"    public void readTwoGamesWithDefinedFilePath_validGamesListWithTwoGames_success() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        Path filePath \u003d TEST_DATA_FOLDER.resolve(\"validGamesList.json\");","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        JsonGamesListStorage jsonGamesListStorage \u003d new JsonGamesListStorage(filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        Optional\u003cReadOnlyGamesList\u003e readResult \u003d jsonGamesListStorage.readGamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        ReadOnlyGamesList actualList \u003d readResult.get();","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(\"2 games\", actualList.toString());","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"    public void readAndSaveGamesList_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"        Path filePath \u003d testFolder.resolve(\"TempGamesList.json\");","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"        GamesList original \u003d getTypicalGamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"        JsonGamesListStorage jsonGamesListStorage \u003d new JsonGamesListStorage(filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"        jsonGamesListStorage.saveGamesList(original, filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"        ReadOnlyGamesList readBack \u003d jsonGamesListStorage.readGamesList(filePath).get();","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(original, new GamesList(readBack));","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"        original.addGame(APEX_LEGENDS);","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"        original.removeGame(VALORANT);","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"        jsonGamesListStorage.saveGamesList(original, filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"        readBack \u003d jsonGamesListStorage.readGamesList(filePath).get();","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(original, new GamesList(readBack));","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"        original.addGame(VALORANT);","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"        jsonGamesListStorage.saveGamesList(original); // file path not specified","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"        readBack \u003d jsonGamesListStorage.readGamesList().get(); // file path not specified","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(original, new GamesList(readBack));","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"    public void saveGamesList_nullGamesList_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveGamesList(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"     * Saves {@code gamesList} at the specified {@code filePath}.","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"    private void saveGamesList(ReadOnlyGamesList gamesList, String filePath) {","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"            new JsonGamesListStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"                    .saveGamesList(gamesList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"    public void saveGamesList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveGamesList(new GamesList(), null));","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"kevin9foong":127}},{"path":"src/test/java/seedu/address/storage/JsonSerializableFriendsListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.TypicalFriends;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"public class JsonSerializableFriendsListTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"            \"JsonSerializableFriendsListTest\");","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    private static final Path TYPICAL_FRIENDS_LIST_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalFriendsList.json\");","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    private static final Path INVALID_FRIENDS_LIST_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidFriendsList.json\");","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    private static final Path DUPLICATE_FRIENDS_IN_FRIENDS_LIST_FILE \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateFriendsInFriendsList.json\");","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        JsonSerializableFriendsList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_FRIENDS_LIST_FILE,","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"                JsonSerializableFriendsList.class).get();","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        FriendsList friendsListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        FriendsList typicalPersonsFriendsList \u003d TypicalFriends.getTypicalFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(friendsListFromFile, typicalPersonsFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        JsonSerializableFriendsList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_FRIENDS_LIST_FILE,","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"                JsonSerializableFriendsList.class).get();","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        JsonSerializableFriendsList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_FRIENDS_IN_FRIENDS_LIST_FILE,","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"                JsonSerializableFriendsList.class).get();","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableFriendsList.MESSAGE_DUPLICATE_FRIEND_ID,","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":30,"kevin9foong":19}},{"path":"src/test/java/seedu/address/storage/JsonSerializableGamesListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.GamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.TypicalGames;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"public class JsonSerializableGamesListTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"            \"JsonSerializableGamesListTest\");","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    private static final Path TYPICAL_GAMES_LIST_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalGamesList.json\");","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    private static final Path INVALID_GAMES_LIST_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidGamesList.json\");","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    private static final Path DUPLICATE_GAMES_IN_GAMES_LIST_FILE \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateGameIdsInGamesList.json\");","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        JsonSerializableGamesList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_GAMES_LIST_FILE,","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"                JsonSerializableGamesList.class).get();","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        GamesList gamesListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        GamesList typicalPersonsGamesList \u003d TypicalGames.getTypicalGamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(gamesListFromFile, typicalPersonsGamesList);","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        JsonSerializableGamesList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_GAMES_LIST_FILE,","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"                JsonSerializableGamesList.class).get();","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        JsonSerializableGamesList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_GAMES_IN_GAMES_LIST_FILE,","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"                JsonSerializableGamesList.class).get();","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableGamesList.MESSAGE_DUPLICATE_GAME,","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"kevin9foong":47}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        userPrefs.setFriendsListFilePath(Paths.get(\"data/friendsList.json\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":122,"kevin9foong":1}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.GamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    private static final String FILE_PATH_USER_PREFS \u003d \"prefs\";","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    private static final String FILE_PATH_GAMES_LIST \u003d \"gameslist\";","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    private static final String FILE_PATH_FRIENDS_LIST \u003d \"friendslist\";","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        JsonFriendsListStorage friendsListStorage \u003d new JsonFriendsListStorage(getTempFilePath(FILE_PATH_FRIENDS_LIST));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        JsonGamesListStorage gamesListStorage \u003d new JsonGamesListStorage(getTempFilePath(FILE_PATH_GAMES_LIST));","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(FILE_PATH_USER_PREFS));","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        storageManager \u003d new StorageManager(friendsListStorage, gamesListStorage, userPrefsStorage);","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    public void friendsListReadSave() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"         * {@link JsonFriendsListStorage} class.","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"         * More extensive testing of FriendsList saving/reading is done in {@link JsonFriendsListStorageTest} class.","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        FriendsList original \u003d getTypicalFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"        storageManager.saveFriendsList(original);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        ReadOnlyFriendsList retrieved \u003d storageManager.readFriendsList().get();","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(original, new FriendsList(retrieved));","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    public void gamesListReadSave() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        /*","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"         * {@link JsonGamesListStorage} class.","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"         * More extensive testing of GamesList saving/reading is done in {@link JsonGamesListStorageTest} class.","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"         */","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        GamesList original \u003d getTypicalGamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        storageManager.saveGamesList(original);","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        ReadOnlyGamesList retrieved \u003d storageManager.readGamesList().get();","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(original, new GamesList(retrieved));","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"    public void getFriendsListFilePath() {","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"        assertNotNull(storageManager.getFriendsListFilePath());","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(getTempFilePath(FILE_PATH_FRIENDS_LIST), storageManager.getFriendsListFilePath());","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"    public void getGamesListFilePath() {","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"        assertNotNull(storageManager.getGamesListFilePath());","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(getTempFilePath(FILE_PATH_GAMES_LIST), storageManager.getGamesListFilePath());","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"    public void getUserPrefFilePath() {","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"        assertNotNull(storageManager.getUserPrefsFilePath());","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(getTempFilePath(FILE_PATH_USER_PREFS), storageManager.getUserPrefsFilePath());","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":53,"kevin9foong":48}},{"path":"src/test/java/seedu/address/testutil/EditFriendDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.friends.EditFriendCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.friends.EditFriendCommand.EditFriendDescriptor;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public class EditFriendDescriptorBuilder {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    private EditFriendDescriptor descriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    public EditFriendDescriptorBuilder() {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"        descriptor \u003d new EditFriendCommand.EditFriendDescriptor();","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public EditFriendDescriptorBuilder(EditFriendCommand.EditFriendDescriptor descriptor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        this.descriptor \u003d new EditFriendCommand.EditFriendDescriptor(descriptor);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public EditFriendDescriptorBuilder(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        descriptor \u003d new EditFriendCommand.EditFriendDescriptor();","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        descriptor.setFriendName(friend.getFriendName());","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     * Sets the {@code FriendId} of the {@code EditFriendDescriptor} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    public EditFriendDescriptorBuilder withFriendId(String friendId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"     * Sets the {@code Name} of the {@code EditFriendDescriptor} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    public EditFriendDescriptorBuilder withFriendName(String name) {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        descriptor.setFriendName(new FriendName(name));","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    public EditFriendCommand.EditFriendDescriptor build() {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        return descriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"MarcusTXK":1,"kevin9foong":48}},{"path":"src/test/java/seedu/address/testutil/FriendBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.Schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"public class FriendBuilder {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public static final String DEFAULT_FRIEND_ID \u003d \"AB\";","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    private FriendName friendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    private FriendId friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    private Set\u003cGameFriendLink\u003e games;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    private Schedule schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    public FriendBuilder() {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        friendId \u003d new FriendId(DEFAULT_FRIEND_ID);","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        friendName \u003d new FriendName(DEFAULT_NAME);","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        games \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        schedule \u003d new Schedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    public FriendBuilder(Friend friendToCopy) {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        friendId \u003d friendToCopy.getFriendId();","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        friendName \u003d friendToCopy.getFriendName();","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        games \u003d new HashSet\u003c\u003e(friendToCopy.getGameFriendLinks());","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        schedule \u003d friendToCopy.getSchedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    public FriendBuilder withFriendName(String friendName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        this.friendName \u003d new FriendName(friendName);","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"     * Parses the {@code games} into a {@code Set\u003cGameFriendLink\u003e} and set it to the {@code Person} that we are","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"     * building.","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    public FriendBuilder withGameFriendLinks(GameFriendLink... gameFriendLinks) {","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        this.games \u003d SampleDataUtil.getGameFriendLinkSet(gameFriendLinks);","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"     * Sets the {@code FriendId} of the {@code Friend} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    public FriendBuilder withFriendId(String friendId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        this.friendId \u003d new FriendId(friendId);","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"     * Sets the {@code Schedule} of the {@code Friend} that we are building.","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"    public FriendBuilder withSchedule(Schedule schedule) {","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"        return this;","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"    public Friend build() {","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"        return new Friend(friendId, friendName, games, schedule);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"MarcusTXK":13,"YeluriKetan":3,"kevin9foong":66}},{"path":"src/test/java/seedu/address/testutil/FriendUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GAME_OLD;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.AddFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.friends.EditFriendCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":" * A utility class for Friend.","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"public class FriendUtil {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"    public static String getAddFriendCommand(Friend friend) {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"        return AddFriendCommand.COMMAND_WORD + \" \" + getFriendDetails(friend);","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     * Returns the part of command string for the given {@code friend}\u0027s details.","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    public static String getFriendDetails(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"        sb.append(friend.getFriendId().value + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        sb.append(FLAG_FRIEND_NAME + friend.getFriendName().fullName + \" \");","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        friend.getGameFriendLinks().stream().forEach(","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"            game -\u003e sb.append(FLAG_GAME_OLD + game.getGameId().value + \" \")","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        );","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     * Returns the part of command string for the given {@code EditFriendDescriptor}\u0027s details.","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public static String getEditFriendDescriptorDetails(EditFriendCommand.EditFriendDescriptor descriptor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"        descriptor.getFriendName().ifPresent(name -\u003e sb.append(FLAG_FRIEND_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tau-bar":7,"MarcusTXK":3,"kevin9foong":33}},{"path":"src/test/java/seedu/address/testutil/FriendsListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * A utility class to help with building FriendsList objects.","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" *     {@code FriendsList fl \u003d new FriendsList().withFriend(new Friend(friendId, friendName, gameFriendLinks)).build();}","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public class FriendsListBuilder {","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    private FriendsList friendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    public FriendsListBuilder() {","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"        friendsList \u003d new FriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public FriendsListBuilder(FriendsList friendsList) {","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        this.friendsList \u003d friendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     * Adds a new {@code Friend} to the {@code FriendsList} that we are building.","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public FriendsListBuilder withFriend(Friend friend) {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        friendsList.addFriend(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public FriendsList build() {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        return friendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"YeluriKetan":1,"-":19,"kevin9foong":14}},{"path":"src/test/java/seedu/address/testutil/GameBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" * A utility class to help with building Game objects.","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"public class GameBuilder {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    public static final String DEFAULT_GAME_ID \u003d \"Minecraft\";","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    private GameId gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"     * Creates a {@code GameBuilder} with the default details.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    public GameBuilder() {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"        gameId \u003d new GameId(DEFAULT_GAME_ID);","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * Initializes the {@code GameBuilder} with the data of {@code gameToCopy}.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    public GameBuilder(Game gameToCopy) {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        gameId \u003d gameToCopy.getGameId();","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"     * Sets the {@code GameId} of the {@code Game} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    public GameBuilder withGameId(String gameId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        this.gameId \u003d new GameId(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    public Game build() {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        return new Game(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":41}},{"path":"src/test/java/seedu/address/testutil/GameFriendLinkBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USER_NAME_OMEGA;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.SkillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.gamefriendlink.UserName;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":" * A utility class to help with building GameFriendLink objects.","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"public class GameFriendLinkBuilder {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    public static final String DEFAULT_GAME_ID \u003d VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    public static final String DEFAULT_FRIEND_ID \u003d VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    public static final String DEFAULT_USERNAME \u003d VALID_USER_NAME_OMEGA;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    private GameId gameId;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    private FriendId friendId;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    private UserName userName;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    private SkillValue skillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"     * Creates a {@code GameFriendLinkBuilder} with the default details.","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    public GameFriendLinkBuilder() {","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        gameId \u003d new GameId(DEFAULT_GAME_ID);","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        friendId \u003d new FriendId(DEFAULT_FRIEND_ID);","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        userName \u003d new UserName(DEFAULT_USERNAME);","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"     * Initializes the {@code GameFriendLinkBuilder} with the data of {@code gameFriendLinkToCopy}.","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    public GameFriendLinkBuilder(GameFriendLink gameFriendLinkToCopy) {","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        gameId \u003d gameFriendLinkToCopy.getGameId();","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        friendId \u003d gameFriendLinkToCopy.getFriendId();","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        userName \u003d gameFriendLinkToCopy.getUserName();","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"     * Sets the {@code GameId} of the {@code GameFriendLink} that we are building.","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    public GameFriendLinkBuilder withGameId(String gameId) {","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        this.gameId \u003d new GameId(gameId);","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        return this;","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"     * Sets the {@code FriendId} of the {@code GameFriendLink} that we are building.","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"    public GameFriendLinkBuilder withFriendId(String friendId) {","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        this.friendId \u003d new FriendId(friendId);","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"        return this;","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"     * Sets the {@code UserName} of the {@code GameFriendLink} that we are building.","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"    public GameFriendLinkBuilder withUserName(String userName) {","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        this.userName \u003d new UserName(userName);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"        return this;","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"     * Sets the {@code SkillLevel} of the {@code GameFriendLink} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"    public GameFriendLinkBuilder withSkillValue(SkillValue skillValue) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        this.skillValue \u003d skillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"    public GameFriendLink build() {","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        return new GameFriendLink(gameId, friendId, userName, skillValue);","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"YeluriKetan":69,"kevin9foong":11}},{"path":"src/test/java/seedu/address/testutil/GamesListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.GamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" * A utility class to help with building GamesList objects.","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" *     {@code GamesList fl \u003d new GamesList().withGame(new Game(gameId).build();}","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"public class GamesListBuilder {","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    private GamesList gamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    public GamesListBuilder() {","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"        gamesList \u003d new GamesList();","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    public GamesListBuilder(GamesList gamesList) {","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"        this.gamesList \u003d gamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     * Adds a new {@code Game} to the {@code GamesList} that we are building.","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    public GamesListBuilder withGame(Game game) {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        gamesList.addGame(game);","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        return this;","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    public GamesList build() {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        return gamesList;","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"YeluriKetan":34}},{"path":"src/test/java/seedu/address/testutil/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    public ReadOnlyFriendsList getFriendsList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    public void setFriendsList(ReadOnlyFriendsList readOnlyFriendsList) {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    public boolean hasFriend(Friend friend) {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    public boolean hasFriendWithId(FriendId friendId) {","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"    public void deleteFriend(FriendId targetId) {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"    public void addFriend(Friend friend) {","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"    public Friend getFriend(FriendId friendId) {","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"    public void setFriend(Friend target, Friend editedFriend) {","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"    public ObservableList\u003cFriend\u003e getFilteredFriendsList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"    public void updateFilteredFriendsList(Predicate\u003cFriend\u003e predicate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"    public void linkFriend(Friend toLink, GameFriendLink gameFriendLink) {","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"LZher385"},"content":"    public void unlinkFriend(Friend toUnlink, Game game) {","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"LZher385"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"    public ReadOnlyGamesList getGamesList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"    public void setGamesList(ReadOnlyGamesList readOnlyGamesList) {","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"    public boolean hasGame(Game game) {","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"    public boolean hasGameWithId(GameId gameId) {","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"    public void deleteGame(GameId targetId) {","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"kevin9foong"},"content":"    public void addGame(Game game) {","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"kevin9foong"},"content":"    public Game getGame(GameId gameId) {","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"kevin9foong"},"content":"    public void setGame(Game target, Game editedGame) {","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"kevin9foong"},"content":"    public ObservableList\u003cGame\u003e getFilteredGamesList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"kevin9foong"},"content":"    public void updateFilteredGamesList(Predicate\u003cGame\u003e predicate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"kevin9foong"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"LZher385":5,"kevin9foong":156}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        return Index.fromOneBased(model.getFilteredFriendsList().size() / 2);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        return Index.fromOneBased(model.getFilteredFriendsList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    public static Friend getPerson(Model model, Index index) {","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        return model.getFilteredFriendsList().get(index.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":50,"kevin9foong":5}},{"path":"src/test/java/seedu/address/testutil/TypicalFriends.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGameFriendLinks.ALICE_CSGO_SKILL_VALUE_EIGHT_LINK;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalGameFriendLinks.BOB_CSGO_SKILL_VALUE_NULL_LINK;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.Schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"public class TypicalFriends {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    public static final String ALICE_FRIEND_ID \u003d \"94351253\";","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    public static final String BENSON_FRIEND_ID \u003d \"98765432\";","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend ALICE \u003d new FriendBuilder().withFriendName(\"Alice Pauline\")","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"            .withFriendId(ALICE_FRIEND_ID)","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"            .withGameFriendLinks(ALICE_CSGO_SKILL_VALUE_EIGHT_LINK).withSchedule(new Schedule()).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend BENSON \u003d new FriendBuilder().withFriendName(\"Benson Meier\")","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"            .withFriendId(BENSON_FRIEND_ID)","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"            .withGameFriendLinks(BOB_CSGO_SKILL_VALUE_NULL_LINK).withSchedule(new Schedule()).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend CARL \u003d new FriendBuilder().withFriendName(\"Carl Kurz\").withFriendId(\"95352563\")","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend DANIEL \u003d new FriendBuilder().withFriendName(\"Daniel Meier\").withFriendId(\"87652533\")","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend ELLE \u003d new FriendBuilder().withFriendName(\"Elle Meyer\").withFriendId(\"9482224\")","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend FIONA \u003d new FriendBuilder().withFriendName(\"Fiona Kunz\").withFriendId(\"9482427\")","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend GEORGE \u003d new FriendBuilder().withFriendName(\"George Best\").withFriendId(\"9482442\")","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    // Manually added","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend HOON \u003d new FriendBuilder().withFriendName(\"Hoon Meier\").withFriendId(\"8482424\")","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend IDA \u003d new FriendBuilder().withFriendName(\"Ida Mueller\").withFriendId(\"8482131\")","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend AMY \u003d new FriendBuilder().withFriendName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"            .withFriendId(VALID_FRIEND_ID_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend BOB \u003d new FriendBuilder().withFriendName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"            .withFriendId(VALID_FRIEND_ID_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    private TypicalFriends() {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    public static FriendsList getTypicalFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        FriendsList ab \u003d new FriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        for (Friend friend : getTypicalFriends()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"            ab.addFriend(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        return ab;","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    public static List\u003cFriend\u003e getTypicalFriends() {","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tau-bar":2,"MarcusTXK":3,"kevin9foong":65}},{"path":"src/test/java/seedu/address/testutil/TypicalGameFriendLinks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_BOB;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_APEX_LEGENDS;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USER_NAME_DRACO;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USER_NAME_OMEGA;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.ALICE_FRIEND_ID;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.BENSON_FRIEND_ID;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.SkillValue;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.gamefriendlink.UserName;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":" * A utility class containing a list of {@code GameFriendLink} objects to be used in tests.","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"public class TypicalGameFriendLinks {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    // for testing skill value persistence","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    public static final GameFriendLink ALICE_CSGO_SKILL_VALUE_EIGHT_LINK \u003d new GameFriendLink(","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"            TypicalGames.CSGO.getGameId(), new FriendId(ALICE_FRIEND_ID),","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"            new UserName(VALID_USER_NAME_OMEGA), new SkillValue(8));","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    public static final GameFriendLink BOB_CSGO_SKILL_VALUE_NULL_LINK \u003d new GameFriendLink(","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"            TypicalGames.CSGO.getGameId(), new FriendId(BENSON_FRIEND_ID),","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"            new UserName(VALID_USER_NAME_OMEGA), null);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    public static final GameFriendLink CSGO_AMY_DRACO_LINK \u003d new GameFriendLinkBuilder().withGameId(VALID_GAME_ID_CSGO)","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"            .withFriendId(VALID_FRIEND_ID_AMY).withUserName(VALID_USER_NAME_DRACO).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    public static final GameFriendLink CSGO_AMY_OMEGA_LINK \u003d new GameFriendLinkBuilder().withGameId(VALID_GAME_ID_CSGO)","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"            .withFriendId(VALID_FRIEND_ID_AMY).withUserName(VALID_USER_NAME_OMEGA).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    public static final GameFriendLink CSGO_AMY_DRACO_SKILL_SIX_LINK \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"            new GameFriendLinkBuilder().withGameId(VALID_GAME_ID_CSGO)","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"            .withFriendId(VALID_FRIEND_ID_AMY).withUserName(VALID_USER_NAME_DRACO)","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"            .withSkillValue(new SkillValue(6)).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    public static final GameFriendLink CSGO_AMY_DRACO_SKILL_TWO_LINK \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"            new GameFriendLinkBuilder().withGameId(VALID_GAME_ID_CSGO)","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"            .withFriendId(VALID_FRIEND_ID_AMY).withUserName(VALID_USER_NAME_DRACO)","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"            .withSkillValue(new SkillValue(2)).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    public static final GameFriendLink APEX_AMY_DRACO_LINK \u003d new GameFriendLinkBuilder()","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"            .withGameId(VALID_GAME_ID_APEX_LEGENDS).withFriendId(VALID_FRIEND_ID_AMY)","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"            .withUserName(VALID_USER_NAME_DRACO).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    public static final GameFriendLink APEX_AMY_OMEGA_LINK \u003d new GameFriendLinkBuilder()","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"            .withGameId(VALID_GAME_ID_APEX_LEGENDS).withFriendId(VALID_FRIEND_ID_AMY)","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"            .withUserName(VALID_USER_NAME_OMEGA).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"    public static final GameFriendLink CSGO_BOB_DRACO_LINK \u003d new GameFriendLinkBuilder().withGameId(VALID_GAME_ID_CSGO)","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"            .withFriendId(VALID_FRIEND_ID_BOB).withUserName(VALID_USER_NAME_DRACO).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    public static final GameFriendLink CSGO_BOB_OMEGA_LINK \u003d new GameFriendLinkBuilder().withGameId(VALID_GAME_ID_CSGO)","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"            .withFriendId(VALID_FRIEND_ID_BOB).withUserName(VALID_USER_NAME_OMEGA).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    public static final GameFriendLink APEX_BOB_DRACO_LINK \u003d new GameFriendLinkBuilder()","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"            .withGameId(VALID_GAME_ID_APEX_LEGENDS).withFriendId(VALID_FRIEND_ID_BOB)","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"            .withUserName(VALID_USER_NAME_DRACO).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"    public static final GameFriendLink APEX_BOB_OMEGA_LINK \u003d new GameFriendLinkBuilder()","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"            .withGameId(VALID_GAME_ID_APEX_LEGENDS).withFriendId(VALID_FRIEND_ID_BOB)","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"            .withUserName(VALID_USER_NAME_OMEGA).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"    private TypicalGameFriendLinks() {","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"    public static Set\u003cGameFriendLink\u003e getTypicalGameFriendLinksList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"        Set\u003cGameFriendLink\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"        for (GameFriendLink game : getTypicalGameFriendLinks()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"            set.add(game);","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"        return set;","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"    public static List\u003cGameFriendLink\u003e getTypicalGameFriendLinks() {","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CSGO_AMY_DRACO_LINK, CSGO_AMY_OMEGA_LINK, APEX_AMY_DRACO_LINK,","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"                APEX_AMY_OMEGA_LINK, CSGO_BOB_DRACO_LINK, CSGO_BOB_OMEGA_LINK, APEX_BOB_DRACO_LINK,","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"                APEX_BOB_OMEGA_LINK));","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"YeluriKetan":66,"kevin9foong":21}},{"path":"src/test/java/seedu/address/testutil/TypicalGames.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.GamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":" * A utility class containing a list of {@code Game} objects to be used in tests.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"public class TypicalGames {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game MINECRAFT \u003d new GameBuilder().withGameId(\"Minecraft\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game LEAGUE_OF_LEGENDS \u003d new GameBuilder().withGameId(\"LeagueOfLegends\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game FORTNITE \u003d new GameBuilder().withGameId(\"Fortnite\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game GENSHIN_IMPACT \u003d new GameBuilder().withGameId(\"GenshinImpact\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game GTA_V \u003d new GameBuilder().withGameId(\"GTAV\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game ANIMAL_CROSSING \u003d new GameBuilder().withGameId(\"AnimalCrossing\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game VALORANT \u003d new GameBuilder().withGameId(\"Valorant\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    // Manually added","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game FIFA22 \u003d new GameBuilder().withGameId(\"Fifa22\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game ROCKET_LEAGUE \u003d new GameBuilder().withGameId(\"RocketLeague\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    // Manually added - Game\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game CSGO \u003d new GameBuilder().withGameId(CommandTestUtil.VALID_GAME_ID_CSGO).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game APEX_LEGENDS \u003d new GameBuilder().withGameId(CommandTestUtil.VALID_GAME_ID_APEX_LEGENDS)","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"            .build();","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    private TypicalGames() {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    public static GamesList getTypicalGamesList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        GamesList ab \u003d new GamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        for (Game game : getTypicalGames()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"            ab.addGame(game);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        return ab;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    public static List\u003cGame\u003e getTypicalGames() {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MINECRAFT, LEAGUE_OF_LEGENDS, FORTNITE, GENSHIN_IMPACT, GTA_V,","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"                ANIMAL_CROSSING, VALORANT));","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":51}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"    public static final Index INDEX_FIRST_ITEM \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"    public static final Index INDEX_SECOND_ITEM \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    public static final Index INDEX_THIRD_ITEM \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"YeluriKetan":3,"-":9}}]
