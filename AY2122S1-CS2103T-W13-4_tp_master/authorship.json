[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-W13-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W13-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"![gitGud](docs/images/gitgud.png)","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"## What is gitGud?","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"gitGud is a desktop application for managing friends\u0027 gaming information.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"\u003cbr /\u003eIt uses a simple Graphical User Interface (GUI) combined with an optimized Command Line Interface (CLI) to give you a smooth and efficient experience.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"\u003cbr /\u003eIf you can type fast enough, gitGud can get you contact management tasks done faster than traditional GUI-based applications.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"## Product Screenshot(s):","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"* For the detailed documentation of this project, please visit the **[gitGud Product Website](https://ay2122s1-cs2103t-w13-4.github.io/tp/)**.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"## Acknowledgements","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"tau-bar":4,"YeluriKetan":2,"kevin9foong":10,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"    archiveName \u003d \u0027gitGud.jar\u0027","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"YeluriKetan":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"We are a team based in the [School of Computing, National University of Singapore](https://www.comp.nus.edu.sg).","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"For any inquiries, please reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"### Kevin Foong Wei Tong","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"\u003cimg src\u003d\"images/kevin9foong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"[[github](https://github.com/kevin9foong)]","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"[[portfolio](team/kevin9foong.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"* Role: Team Lead, Deadlines \u0026 Delivery","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"* Responsibilities: In charge of the `add` feature.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"### Marcus Tang Xin Kye","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"\u003cimg src\u003d\"images/marcustxk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"[[github](https://github.com/marcustxk)]","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"[[portfolio](team/marcustxk.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"* Role: Integration, Code Quality","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"* Responsibilities: In charge of `list` feature","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"### Taufiq Bin Abdul Rahman","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"\u003cimg src\u003d\"images/tau-bar.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"[[github](https://github.com/tau-bar)]","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"[[portfolio](team/tau-bar.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"* Role: Scheduling","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"* Responsibilities: In charge of `delete` feature","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"### Lim Yu Zher","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"\u003cimg src\u003d\"images/lzher385.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"[[github](https://github.com/lzher385)]","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"[[portfolio](team/lzher385.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"* Role: Documentation","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"* Responsibilities: In charge of `link` feature","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"### Yeluri Ketan","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"\u003cimg src\u003d\"images/yeluriketan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"[[github](https://github.com/YeluriKetan)]","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"[[portfolio](team/yeluriketan.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"* Role: Testing","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"* Responsibilities: In charge of the `get` feature.","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"tau-bar":6,"MarcusTXK":6,"YeluriKetan":9,"LZher385":5,"-":28,"kevin9foong":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2021-09-29"},{"lineNumber":259,"author":{"gitId":"MarcusTXK"},"content":"* Gamer who plays competitive games","lastModifiedDate":"2021-09-29"},{"lineNumber":260,"author":{"gitId":"MarcusTXK"},"content":"* Student in a University","lastModifiedDate":"2021-09-29"},{"lineNumber":261,"author":{"gitId":"MarcusTXK"},"content":"* Busy (can only play at specific times based on a weekly schedule)","lastModifiedDate":"2021-09-29"},{"lineNumber":262,"author":{"gitId":"MarcusTXK"},"content":"* Plays multiple online competitive multiplayer games (e.g., Apex legends, Minecraft, Valorant, etc)","lastModifiedDate":"2021-09-29"},{"lineNumber":263,"author":{"gitId":"MarcusTXK"},"content":"* Has a group of similar persona gamer friends who like him are busy","lastModifiedDate":"2021-09-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":265,"author":{"gitId":"MarcusTXK"},"content":"University student gamer who is busy but wants to keep track of equally busy friends who want to play online competitive multiplayer games together.","lastModifiedDate":"2021-09-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"kevin9foong"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-29"},{"lineNumber":269,"author":{"gitId":"kevin9foong"},"content":"#### Problem:","lastModifiedDate":"2021-09-29"},{"lineNumber":270,"author":{"gitId":"kevin9foong"},"content":"For busy university student gamers who love playing multiplayer competitive games with their friends, it can","lastModifiedDate":"2021-09-29"},{"lineNumber":271,"author":{"gitId":"kevin9foong"},"content":"often be challenging scheduling times to play games with friends out of a packed schedule.","lastModifiedDate":"2021-09-29"},{"lineNumber":272,"author":{"gitId":"kevin9foong"},"content":"Additionally, it can be challenging to make the most out of the limited time available by choosing","lastModifiedDate":"2021-09-29"},{"lineNumber":273,"author":{"gitId":"kevin9foong"},"content":"the right friends to play with - those you have the most fun playing with or have great performance at the game.","lastModifiedDate":"2021-09-29"},{"lineNumber":274,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":275,"author":{"gitId":"kevin9foong"},"content":"#### How gitGud solves the problem and make users\u0027 life easier:","lastModifiedDate":"2021-09-29"},{"lineNumber":276,"author":{"gitId":"kevin9foong"},"content":"gitGud allows users to store both yours and your friends\u0027 available timeslots and find matching times to play multiplayer","lastModifiedDate":"2021-09-29"},{"lineNumber":277,"author":{"gitId":"kevin9foong"},"content":"competitive games together - allowing users to identify and coordinate gaming sessions with friends.","lastModifiedDate":"2021-09-29"},{"lineNumber":278,"author":{"gitId":"kevin9foong"},"content":"It also allows users to keep track of each friend\u0027s competitive gaming performance and rate how much fun they had gaming with a friend","lastModifiedDate":"2021-09-29"},{"lineNumber":279,"author":{"gitId":"kevin9foong"},"content":"after each gaming session. These factors are used for gitGud to recommend and help users to decide which friends to play with","lastModifiedDate":"2021-09-29"},{"lineNumber":280,"author":{"gitId":"kevin9foong"},"content":"for future multiplayer competitive gaming sessions.","lastModifiedDate":"2021-09-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"tau-bar"},"content":"| Priority | As a (describes user) | I want to (functionality)                                          | So that I can (rationale)                                 |","lastModifiedDate":"2021-09-28"},{"lineNumber":287,"author":{"gitId":"tau-bar"},"content":"|----------|-----------------------|--------------------------------------------------------------------|-----------------------------------------------------------|","lastModifiedDate":"2021-09-28"},{"lineNumber":288,"author":{"gitId":"kevin9foong"},"content":"| ***      | user                  | be able to easily add my friends personal info/data (name, userid) | store a list of friends who I can possibly play with      |","lastModifiedDate":"2021-09-29"},{"lineNumber":289,"author":{"gitId":"kevin9foong"},"content":"| ***      | user                  | be able to link my friends to the games they play                  | associate my friends with a particular game               |","lastModifiedDate":"2021-09-29"},{"lineNumber":290,"author":{"gitId":"kevin9foong"},"content":"| ***      | user                  | be able to view a list of my friends information                   | see who my friends are                                    |","lastModifiedDate":"2021-09-29"},{"lineNumber":291,"author":{"gitId":"kevin9foong"},"content":"| ***      | user                  | be able to delete a friend from the contact list                   | remove friends that were mistakenly added                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"kevin9foong"},"content":"| ***      | user                  | be able to see full information of a friend from the contact list  | get any information I want about the friend               |","lastModifiedDate":"2021-09-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"tau-bar"},"content":"(For all use cases below, the **System** is the `gitGud` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-28"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"YeluriKetan"},"content":"**Use case: UC01 - Add a friend** ","lastModifiedDate":"2021-09-30"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":304,"author":{"gitId":"kevin9foong"},"content":"1. User requests to add a friend and specifies a `FRIEND_ID`.","lastModifiedDate":"2021-09-29"},{"lineNumber":305,"author":{"gitId":"kevin9foong"},"content":"2. gitGud adds a friend into the friends list and informs user of successful addition of friend.","lastModifiedDate":"2021-09-29"},{"lineNumber":306,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":307,"author":{"gitId":"YeluriKetan"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":308,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":309,"author":{"gitId":"kevin9foong"},"content":"**Extensions** ","lastModifiedDate":"2021-09-29"},{"lineNumber":310,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":311,"author":{"gitId":"kevin9foong"},"content":"* 1a. gitGud detects that the `FRIEND_ID` provided already exists and is not unique.","lastModifiedDate":"2021-09-29"},{"lineNumber":312,"author":{"gitId":"kevin9foong"},"content":"    * 1a1. gitGud informs user that it has failed to add a friend.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":313,"author":{"gitId":"kevin9foong"},"content":"      1a2. User makes another request to add a friend with a different `FRIEND_ID`.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":314,"author":{"gitId":"kevin9foong"},"content":"      Use case continues from step 2.","lastModifiedDate":"2021-09-29"},{"lineNumber":315,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":316,"author":{"gitId":"YeluriKetan"},"content":"**Use case: UC02 - Delete a friend**","lastModifiedDate":"2021-09-30"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"tau-bar"},"content":"1. User requests to delete a friend using the friend\u0027s `FRIEND_ID`","lastModifiedDate":"2021-09-28"},{"lineNumber":321,"author":{"gitId":"tau-bar"},"content":"2. gitGud deletes the person","lastModifiedDate":"2021-09-28"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"tau-bar"},"content":"* 2a. The given `FRIEND_ID` is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"tau-bar"},"content":"    * 2a1. gitGud shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"tau-bar"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":334,"author":{"gitId":"YeluriKetan"},"content":"**Use case: UC03 - List friends whose `FRIEND_ID` contains a keyword**","lastModifiedDate":"2021-09-30"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":336,"author":{"gitId":"MarcusTXK"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":338,"author":{"gitId":"MarcusTXK"},"content":"1. User requests to list friends in gitGud using a keyword filter.","lastModifiedDate":"2021-09-29"},{"lineNumber":339,"author":{"gitId":"MarcusTXK"},"content":"2. gitGud shows a filtered list of friends whose `FRIEND_ID` contains the keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":341,"author":{"gitId":"MarcusTXK"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":343,"author":{"gitId":"MarcusTXK"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":344,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":345,"author":{"gitId":"MarcusTXK"},"content":"* 2a. The user does not provide a keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":346,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":347,"author":{"gitId":"MarcusTXK"},"content":"    * 2a1. All friends are listed.","lastModifiedDate":"2021-09-29"},{"lineNumber":348,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":349,"author":{"gitId":"MarcusTXK"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":350,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":351,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":352,"author":{"gitId":"YeluriKetan"},"content":"**Use case: UC04 - List games whose `GAME_NAME` contains a keyword**","lastModifiedDate":"2021-09-30"},{"lineNumber":353,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":354,"author":{"gitId":"MarcusTXK"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":355,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":356,"author":{"gitId":"MarcusTXK"},"content":"1. User requests to list games in gitGud using a keyword filter.","lastModifiedDate":"2021-09-29"},{"lineNumber":357,"author":{"gitId":"MarcusTXK"},"content":"2. gitGud shows a filtered list of games whose `GAME_NAME` contains the keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":358,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":359,"author":{"gitId":"MarcusTXK"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":360,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":361,"author":{"gitId":"MarcusTXK"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":362,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":363,"author":{"gitId":"MarcusTXK"},"content":"* 2a. The user does not provide a keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":364,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":365,"author":{"gitId":"MarcusTXK"},"content":"    * 2a1. All games are listed.","lastModifiedDate":"2021-09-29"},{"lineNumber":366,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":367,"author":{"gitId":"MarcusTXK"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":368,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":369,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":370,"author":{"gitId":"YeluriKetan"},"content":"**Use case: UC05 - Link a friend to a particular game**","lastModifiedDate":"2021-09-30"},{"lineNumber":371,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":372,"author":{"gitId":"LZher385"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":373,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":374,"author":{"gitId":"LZher385"},"content":"1. User links a friend (using `FRIEND_ID`) with a particular game (using `GAME_NAME`).","lastModifiedDate":"2021-09-29"},{"lineNumber":375,"author":{"gitId":"LZher385"},"content":"2. gitGud associates the friend with the game provided.","lastModifiedDate":"2021-09-29"},{"lineNumber":376,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":377,"author":{"gitId":"YeluriKetan"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":378,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":379,"author":{"gitId":"LZher385"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":380,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":381,"author":{"gitId":"LZher385"},"content":"* 2a. The given `FRIEND_ID` is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":382,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":383,"author":{"gitId":"LZher385"},"content":"    * 2a1. gitGud shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":384,"author":{"gitId":"LZher385"},"content":"    * 2a2. User can list friends currently in gitGud or add new friends.","lastModifiedDate":"2021-09-29"},{"lineNumber":385,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":386,"author":{"gitId":"LZher385"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-29"},{"lineNumber":387,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":388,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":389,"author":{"gitId":"LZher385"},"content":"* 2b. The given `GAME_NAME` is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":390,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":391,"author":{"gitId":"LZher385"},"content":"    * 2b1. gitGud shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":392,"author":{"gitId":"LZher385"},"content":"    * 2b2. User can list games currently in gitGud or add new games.","lastModifiedDate":"2021-09-29"},{"lineNumber":393,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":394,"author":{"gitId":"LZher385"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-29"},{"lineNumber":395,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":396,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":397,"author":{"gitId":"YeluriKetan"},"content":"**Use case: UC06 - Get a friend\u0027s complete information**","lastModifiedDate":"2021-09-30"},{"lineNumber":398,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":399,"author":{"gitId":"YeluriKetan"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":400,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":401,"author":{"gitId":"YeluriKetan"},"content":"1. User \u003cu\u003elist friends (UC03)\u003c/u\u003e and chooses a `FRIEND_ID`.","lastModifiedDate":"2021-09-30"},{"lineNumber":402,"author":{"gitId":"YeluriKetan"},"content":"2. User requests for complete information about `FRIEND_ID`.","lastModifiedDate":"2021-09-30"},{"lineNumber":403,"author":{"gitId":"YeluriKetan"},"content":"3. gitGud displays the complete information related to  `FRIEND_ID`.","lastModifiedDate":"2021-09-30"},{"lineNumber":404,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":405,"author":{"gitId":"YeluriKetan"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":406,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":407,"author":{"gitId":"YeluriKetan"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":408,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":409,"author":{"gitId":"YeluriKetan"},"content":"* 3a. The given `FRIEND_ID` is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":410,"author":{"gitId":"YeluriKetan"},"content":"    * 3a1. gitGud shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":411,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":412,"author":{"gitId":"YeluriKetan"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"YeluriKetan"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2021-09-30"},{"lineNumber":417,"author":{"gitId":"YeluriKetan"},"content":"2. Should be able to hold up to 100 friends or games without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-30"},{"lineNumber":418,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"YeluriKetan"},"content":"4. Does not require internet connection.","lastModifiedDate":"2021-09-30"},{"lineNumber":420,"author":{"gitId":"YeluriKetan"},"content":"5. The code should be open source.","lastModifiedDate":"2021-09-30"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"LZher385"},"content":"* **Competitive Game/s**: Multiplayer games with a ranking system","lastModifiedDate":"2021-09-29"},{"lineNumber":425,"author":{"gitId":"LZher385"},"content":"* **Busy**: Maximum of 7hrs/week to play games","lastModifiedDate":"2021-09-29"},{"lineNumber":426,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tau-bar":8,"MarcusTXK":35,"YeluriKetan":31,"LZher385":25,"-":352,"kevin9foong":28}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"![gitGud](images/gitgud.png)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"gitGud is a **desktop application for managing friends\u0027 gaming information**. gitGud uses a simple **Graphical User Interface ","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"(GUI) combined with an optimized Command Line Interface (CLI)** to give you a smooth and efficient experience. If you can ","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"type fast enough, gitGud can get you contact management tasks done faster than traditional GUI-based applications.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"  {:toc}","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"2. Download the latest `gitgud.jar` from [here](https://github.com/AY2122S1-CS2103T-W13-4/tp/releases).","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your gitGud application.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"5. Type the command in the command box and press `Enter` to execute it. e.g. typing **`help`** and pressing `Enter` will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"   * **`list --friend`** : Lists all friends.","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"   * **`friend`**`Draco --name Marcus` : Adds a friend __Marcus__ with gitGud FRIEND_ID of __Draco__ to the application.","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"   * **`friend --delete`**`Draco` : Deletes friend with gitGud FRIEND_ID of __Draco__.","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"  e.g. in `get --game GAME_NAME`, `GAME_NAME` is a parameter which can be used as `get --game CSGO`.","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"  e.g `friend FRIEND_ID [--name NAME]` can be used as `friend Draco --name “Marcus Tang”` or as `friend Draco`.","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"* Items with `…` after them can be used one or more times.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"  e.g. `GAME_NAME:IN_GAME_USERNAME…` can be used as `Valorant:biscuitismydog`, `Valorant:biscuitismydog Minecraft:Draco` etc.","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"  e.g. if you specify `--name “Marcus Tang” --name Taufiq`, only `--name Taufiq` will be taken.","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"* If a name provided has spaces in-between, use double quotation marks to wrap the name in the command e.g. wrap the name","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"  \u0027Apex Legends\u0027 as `\"Apex Legends\"`.","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Viewing help: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"### Adding a friend: `friend`","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"Adds a new friend to gitGud friend’s list with an associated **unique** friend identifier.","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"Format: `friend FRIEND_ID [--name NAME]`","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"* `friend Draco` Adds a brand-new friend into the friends list with the identifier \u0027Draco\u0027 and","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"  which does not currently have an associated real-life name.","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"* `friend tau_bar --name Taufiq` Adds a brand-new friend into the friends list with the identifier \u0027tau-bar\u0027 and","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"  has the real-life name \u0027Taufiq\u0027.","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"### Deleting a friend: `friend --delete`","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"Deletes a friend from gitGud’s friend’s list using gitGud’s unique friend identifier.","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"Format: `friend --delete FRIEND_ID`","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"* Deletes the person with the specified `FRIEND_ID`.","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"* The `FRIEND_ID` must currently exist in the database.","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"* `friend --delete Draco` Deletes friend with gitGud FRIEND_ID of Draco and all their data from the database","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"### Adding a game: `game`","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"Adds a game into the gitGud game list.","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"Format: `game GAME_NAME`","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"* `game Valorant` Adds a brand-new game into the game list with the name \u0027Valorant\u0027.","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"### Deleting a game: `game --delete`","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"Deletes a game from the gitGud game list.","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"Format: `game --delete GAME_NAME`","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"* `game --delete Valorant` Deletes the game record ‘Valorant’ from the game list if it exists.","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"### Link games with a friend: `link`","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"Links game(s) and the associated in-game username(s) for each game to a friend for the provided gitGud FRIEND_ID to","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"kevin9foong"},"content":"his/her friend information.","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"Format: `link FRIEND_ID GAME_NAME:IN_GAME_USERNAME1 GAME2_NAME:IN_GAME_USERNAME2...`","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"* Add multiple games and in-game usernames for a friend by listing the game:in-game-username pairs separated by a space.","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"* For game names or in-game usernames with spaces in-between, wrap the name string with double quotation marks.","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"  For example, the game \u0027Apex Legends\u0027 linked to an in-game username \u0027tau-bar\u0027 would be represented as the pair","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"  `\"Apex Legends\":tau-bar`.","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"* `link Draco Valorant:biscuitismydog Minecraft:Draco`","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"  Links two games, ‘Valorant’ with the in-game username ‘biscuitismydog’ and ‘Minecraft’ with the","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"  in-game username ‘Draco’, to the friend with the gitGud FRIEND_ID ‘Draco’.","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"* `link tau-bar “Apex Legends”:tau-dominator`","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"  Links a single game, “Apex Legends” with the in-game username ‘tau-dominator’,","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"  to the friend with the gitGud FRIEND_ID ‘tau-bar’.","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"### Listing multiple friends data: `list --friend`","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"Lists all friends stored in gitGud whose friend id contains any of the given keywords.","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"MarcusTXK"},"content":"Format: `list [--friend [KEYWORD]]`","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"MarcusTXK"},"content":"* The `--friend` flag is optional, if no flag is added or if `KEYWORD` is left empty, all friends stored in gitGud will be listed","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"* The filter keyword is case insensitive e.g `Tau_bar` will match `tau_bar`","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"MarcusTXK"},"content":"* Only the `FRIEND_ID` of friends is filtered","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"MarcusTXK"},"content":"* Partial matches will be displayed e.g. `tau` will match `tau_bar`","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"MarcusTXK"},"content":"* `list` or  `list --friend` Lists all friends stored in gitGud","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"MarcusTXK"},"content":"* `list --friend ta` Lists all friends stored in gitGud that have `ta` in their name","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"MarcusTXK"},"content":"![result for \u0027list --game\u0027](images/UiListFriend.png)","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"YeluriKetan"},"content":"### Listing multiple games data: `list --game`","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"Lists all games stored in gitGud whose friend id contains any of the given keywords.","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"MarcusTXK"},"content":"Format: `list --game [KEYWORD]`","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"MarcusTXK"},"content":"* If `KEYWORD` is left empty, all games stored in gitGud will be listed","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"MarcusTXK"},"content":"* The filter keyword is case insensitive e.g `valorant` will match `Valorant`","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"MarcusTXK"},"content":"* Only the `GAME_NAME` of games is filtered","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"MarcusTXK"},"content":"* Partial matches will be displayed e.g. `Valo` will match `Valorant`","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"MarcusTXK"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":166,"author":{"gitId":"MarcusTXK"},"content":"* `list --game` Lists all games stored in gitGud","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"MarcusTXK"},"content":"* `list --game Valo` Lists all friends stored in gitGud that have `Valo` in their name","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"MarcusTXK"},"content":"![result for \u0027list --game\u0027](images/UiListGame.png)","lastModifiedDate":"2021-09-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"YeluriKetan"},"content":"### Getting a single friend\u0027s complete data: `get --friend`","lastModifiedDate":"2021-09-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"LZher385"},"content":"Takes a look at a particular friend\u0027s complete data by searching their `FRIEND_ID`. A friend\u0027s complete data includes:","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"LZher385"},"content":"* List of games the friend plays","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"LZher385"},"content":"* In-game username for each game","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"LZher385"},"content":"Format: `get [--friend] FRIEND_ID`","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"LZher385"},"content":"* The `FRIEND_ID` must currently exist in the database","lastModifiedDate":"2021-09-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"LZher385"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"LZher385"},"content":"* `get --friend Draco` Gets the complete data for friend \"Draco\", which includes the list of games he plays and his username for each game","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"LZher385"},"content":"* `get kev` Gets the complete data for friend \"kev\"","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"YeluriKetan"},"content":"### Getting a single game\u0027s complete data: `get --game`","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"LZher385"},"content":"Gets all the relevant information for a game that was previously added, this includes:","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"LZher385"},"content":"* All the friends (represented by their `FRIEND_ID`) that play the game","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":189,"author":{"gitId":"LZher385"},"content":"Format: `get --game GAME_NAME`","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"LZher385"},"content":"* The `GAME_NAME` must currently exist in the database","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":192,"author":{"gitId":"LZher385"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"LZher385"},"content":"* `get --game CSGO` Gets all the relevant information for the game \"CSGO\". This includes all the friends in your database that play the game","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"YeluriKetan"},"content":"**Q**: How do I **_transfer_** my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"YeluriKetan"},"content":"**Q**: What happens if I add _**multiple flags**_ that clash? e.g. `list --friend tau --game Val`  ","lastModifiedDate":"2021-09-30"},{"lineNumber":203,"author":{"gitId":"MarcusTXK"},"content":"**A**: Only the first valid flag is taken and subsequent flags will be ignored.","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"YeluriKetan"},"content":"**Q**: How do I _**update**_ a friend’s data that is already on the database?\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":206,"author":{"gitId":"YeluriKetan"},"content":"**A**: You can delete the friend and then add the friend with the new data.","lastModifiedDate":"2021-09-30"},{"lineNumber":207,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"YeluriKetan"},"content":"**Viewing Help** | `help`","lastModifiedDate":"2021-09-30"},{"lineNumber":215,"author":{"gitId":"kevin9foong"},"content":"**Add friend** | `friend FRIEND_ID [--name \"NAME\"]` \u003cbr\u003e e.g., `friend Draco --name \"Marcus Tang\"`","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"YeluriKetan"},"content":"**Delete friend** | `friend --delete FRIEND_ID`\u003cbr\u003e e.g., `friend --delete Draco`","lastModifiedDate":"2021-09-30"},{"lineNumber":217,"author":{"gitId":"kevin9foong"},"content":"**Add game** | `game GAME_NAME` \u003cbr\u003e e.g., `game Valorant`, `game \"Apex Legends\"` ","lastModifiedDate":"2021-09-29"},{"lineNumber":218,"author":{"gitId":"kevin9foong"},"content":"**Delete game** | `game --delete GAME_NAME` \u003cbr\u003e e.g., `game --delete Valorant`","lastModifiedDate":"2021-09-29"},{"lineNumber":219,"author":{"gitId":"kevin9foong"},"content":"**Link game and friend** | `link FRIEND_ID “GAME_NAME”:”IN_GAME_USERNAME”…`\u003cbr\u003e e.g., `link tau_bar “Apex Legends”:taufiq007 Minecraft:taufMC`","lastModifiedDate":"2021-09-29"},{"lineNumber":220,"author":{"gitId":"MarcusTXK"},"content":"**List Friend** | `list [--friend [KEYWORD]]`\u003cbr\u003e e.g., `list`, `list --friend`, `list --friend Tau`","lastModifiedDate":"2021-09-29"},{"lineNumber":221,"author":{"gitId":"MarcusTXK"},"content":"**List Games** | `list --game [KEYWORD]`\u003cbr\u003e e.g., `list --game`, `list --game Valorant`","lastModifiedDate":"2021-09-29"},{"lineNumber":222,"author":{"gitId":"LZher385"},"content":"**Get friend** | `get --friend FRIEND_ID`\u003cbr\u003e e.g., `get --friend Draco`","lastModifiedDate":"2021-09-29"},{"lineNumber":223,"author":{"gitId":"LZher385"},"content":"**Get game** | `get --game GAME_NAME`\u003cbr\u003e e.g., `get --game Valorant`","lastModifiedDate":"2021-09-29"},{"lineNumber":224,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"MarcusTXK":30,"YeluriKetan":27,"LZher385":16,"-":107,"kevin9foong":44}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"LZher385"},"content":"    content: \"gitGud\";","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"LZher385":1,"-":294}},{"path":"docs/team/kevin9foong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"kevin9foong.md---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"title: Kevin Foong\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"### Project: gitGud","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"#### What is gitGud?","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"gitGud is a desktop application for managing friends\u0027 gaming information. gitGud uses a simple Graphical User Interface","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"(GUI) combined with an optimized Command Line Interface (CLI) to give you a smooth and efficient experience. If you can","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"type fast enough, gitGud can get you contact management tasks done faster than traditional GUI-based applications.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"* **New Features**","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"  1. Project-wide refactoring of codebase to support gitGud. ","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     1. Refactored Persons and Tags to Friends and Games classes. ","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dkevin9foong\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"* **Project management**:","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"  * User Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    1. Added the documentation for the features `add friend`, `add game`, `delete game` and `link game and friend`.","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    1. Added the value proposition for gitGud.","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    2. Added use case for `add friend`.","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"  * README:","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    1. Updated Github Actions build status badge to reflect status of gitGud team repository.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    2. Updated description and organised layout of README.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"* **Community**:","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"* **Tools**:","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"  1. Integrated the Github plugin (codecov) to the team repo.","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"* **Miscellaneous**","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"  1. Set up initial project website.","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"  2. Initial set up for team repo \u0026 organization.","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kevin9foong":43}},{"path":"docs/team/lzher385.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"title: Lim Yu Zher\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"### Project: gitGud","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"gitGud is a desktop application for managing friends\u0027 gaming information. gitGud uses a simple Graphical User Interface (GUI) combined with an optimized Command Line Interface (CLI) to give you a smooth and efficient experience. If you can type fast enough, gitGud can get you contact management tasks done faster than traditional GUI-based applications.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"* **New Feature**:","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"  1. Added the ability to link a friend with a game he/she plays.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"     1. What it does: allows the user to associate a friend in his contact list with a game that was previously recorded.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"     2. Justification: This feature improves the product significantly because a user is able to note down what games his/her friends play.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"  * User Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"    * Added documentation for the features `get --friend` and `get --game`.","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"    * Added glossary for gitGud.","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"    * Added user story for `link` feature.","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"LZher385":24}},{"path":"docs/team/marcustxk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"marcustxk.md---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"title: Marcus Tang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"### Project: gitGud","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"gitGud is a desktop application for managing friends\u0027 gaming information. gitGud uses a simple Graphical User Interface","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"(GUI) combined with an optimized Command Line Interface (CLI) to give you a smooth and efficient experience. If you can","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"type fast enough, gitGud can get you contact management tasks done faster than traditional GUI-based applications.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"* **New Feature**: Added the ability to list friends.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"  * What it does: allows the user to list all friends stored in gitGud, with the ability to filter by friend id containing any of the given keywords.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"  * Justification: This feature improves the product significantly because a user can easily view all friends they have and apply any filters to easily find specific friends.","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dMarcusTXK\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dMarcusTXK\u0026tabRepo\u003dAY2122S1-CS2103T-W13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"  * User Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    * Added documentation for the features `list --friend` and `list --game` .","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    * Created mockup GUI for gitGud `v1.1` - `v1.2`.","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    * Added command format notes.","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    * Added personas for gitGud.","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    * Added user story for `list` feature.","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"MarcusTXK":28}},{"path":"docs/team/tau-bar.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"tau-bar.md---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"title: Taufiq\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"### Project: gitGud","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"gitGud is a desktop application for managing friends\u0027 gaming information. gitGud uses a simple Graphical User Interface","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"(GUI) combined with an optimized Command Line Interface (CLI) to give you a smooth and efficient experience. If you can","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"type fast enough, gitGud can get you contact management tasks done faster than traditional GUI-based applications.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"* **New Feature**:","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"  1. Added the ability to add friends.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"      1. What it does: allows the user to add a friend to gitGud by adding the friend\u0027s unique `FRIEND_ID` and","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"         optionally, `FRIEND_NAME`.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"      2. Justification: This feature improves the product significantly, as it is a core feature, which allows the","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"         user to add the friend to gitGud to start planning their gaming schedule with that friend.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"  2. Added the ability to delete friends.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"     1. What it does: allows the user to delete a friend from gitGud using the friend\u0027s unique `FRIEND_ID`.","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"     2. Justification: This feature improves the product significantly because a user can easily delete a friend from","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"           gitGud in the event that they made a mistake in the details or simply wishes to remove a friend.","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"  ","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"* **Testing**","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"  1. Adapted the previous tests for our implementation of AddFriendCommand and DeleteFriendCommand.","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"  ","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dtau-bar\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dMarcusTXK\u0026tabRepo\u003dAY2122S1-CS2103T-W13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"    * User Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"        * Added documentation for the features `friend --delete`.","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"        * Added user story for gitGud.","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"        * Added use case for `delete` feature.","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"    * README:","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"        * Added acknowledgements section and acknowledgements for project. ","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"tau-bar":39}},{"path":"docs/team/yeluriketan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"layout: page","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"title: Yeluri Ketan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"### Project: gitGud","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"#### What is gitGud?","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"gitGud is a desktop application for managing friends\u0027 gaming information. gitGud uses a simple Graphical User Interface","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"(GUI) combined with an optimized Command Line Interface (CLI) to give you a smooth and efficient experience. If you can","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"type fast enough, gitGud can get you contact management tasks done faster than traditional GUI-based applications.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"* **New Feature**: Added the ability to get a friend contact.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    * What it does: allows the user to get all information linked to a friend contact.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    * Justification: This feature improves the product significantly because a user is now able to view all the information","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"      about a friend at one place, which includes all the games and the respective in-game ids.","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dYeluriKetan\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dYeluriKetan\u0026tabRepo\u003dAY2122S1-CS2103T-W13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"* **Project management**:","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    * User Guide:","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        * Added the Introduction, Quick start, FAQ and Command Summary to complement the rest of the documentation.","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        * Added use case for the `get` feature.","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        * Added the Non-Functional Requirements (NFR) section.","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    * README:","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        * Created and added the product logo.","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"* **Community**:","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"* **Tools**:","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"YeluriKetan":36}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":" * object that maps flags to their respective argument values. Only the","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":" * given flags will be recognized in the arguments string.","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"MarcusTXK"},"content":" * {@code preamble \u003cflag\u003evalue \u003cflag\u003evalue ...}","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"MarcusTXK"},"content":" * @param flags   Prefixes to tokenize the arguments string with","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"MarcusTXK"},"content":" * @return           ArgumentMultimap object that maps flags to their","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"MarcusTXK"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new flag `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"MarcusTXK"},"content":" * Returns the last value of {@code flag}.","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"MarcusTXK"},"content":"public Optional\u003cString\u003e getValue(Prefix flag) {","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"MarcusTXK"},"content":"    List\u003cString\u003e values \u003d getAllValues(flag);","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"MarcusTXK":9,"-":392}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.GamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.storage.FriendsListStorage;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.storage.JsonFriendsListStorage;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        FriendsListStorage friendsListStorage \u003d new JsonFriendsListStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        storage \u003d new StorageManager(friendsListStorage, userPrefsStorage);","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        Optional\u003cReadOnlyFriendsList\u003e addressBookOptional;","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"        ReadOnlyFriendsList initialFriendData;","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"            initialFriendData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleFriendsList);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"            initialFriendData \u003d new FriendsList();","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"            initialFriendData \u003d new FriendsList();","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"        // TODO - Kevin","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"        // Read and load initialGameData","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"        ReadOnlyGamesList initialGameData \u003d new GamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"        return new ModelManager(initialFriendData, initialGameData, userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"YeluriKetan":11,"-":171,"kevin9foong":7}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_UNKNOWN_FRIEND_FLAG \u003d \"Unknown friend flag\";","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_UNKNOWN_GAME_FLAG \u003d \"Unknown game flag\";","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"    public static final String MESSAGE_NONEXISTENT_FRIEND_ID \u003d \"That friend is not found with the current list!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    public static final String MESSAGE_INVALID_FRIEND_ID \u003d \"No friend found with the FRIEND_ID - %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tau-bar":1,"MarcusTXK":2,"YeluriKetan":1,"-":13}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"     *   Ignores case, partial match is allowed.","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"CD\") \u003d\u003d false // no match","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"    public static boolean containsPartialWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"        requireNonNull(word);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"                .anyMatch(wordInPreppedSentence -\u003e wordInPreppedSentence.contains(preppedWord));","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MarcusTXK":27,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the FriendsBook.","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     * @see seedu.address.model.Model#getFriendsList()","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    ReadOnlyFriendsList getFriendsBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the GamesBook.","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"     * @see seedu.address.model.Model#getGamesList()","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    ReadOnlyGamesList getGamesBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    /** Returns an unmodifiable view of the filtered list of friends */","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    ObservableList\u003cFriend\u003e getFilteredFriendsList();","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    /** Returns an unmodifiable view of the filtered list of games */","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    ObservableList\u003cGame\u003e getFilteredGamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"YeluriKetan":16,"-":43,"kevin9foong":3}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"            // TODO - Kevin","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"            // update storage with games list","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"            storage.saveAddressBook(model.getFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"    public ReadOnlyFriendsList getFriendsBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        return model.getFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"    public ReadOnlyGamesList getGamesBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"        return model.getGamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"    public ObservableList\u003cFriend\u003e getFilteredFriendsList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        return model.getFilteredFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"    public ObservableList\u003cGame\u003e getFilteredGamesList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        return model.getFilteredGamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"YeluriKetan":14,"-":76,"kevin9foong":5}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":" * Clears the gitGud friend\u0027s list.","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"gitGud friend\u0027s list has been cleared!\";","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"        model.setFriendsList(new FriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"        // temporary use of clear command to test gameMainCard","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandType.GAME_GET, new Game(new GameId(\"csgo\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"        // return new CommandResult(MESSAGE_SUCCESS, CommandType.CLEAR);","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tau-bar":6,"-":18,"kevin9foong":4}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"    /** The command is a {@Code friend} command. */","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"    private final CommandType commandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"     * The friend to get during {@Code get} commands or if the {@Code list} command","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"     * only returns one friend.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"    private final Friend friendToGet;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"     * The game to get during {@Code get} commands or if the {@Code list} command","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"     * only returns one game.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"    private final Game gameToGet;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"    //TODO : Remove this once merged with main code.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"        this.friendToGet \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"        this.commandType \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        this.gameToGet \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"    public CommandResult(String feedbackToUser, CommandType commandType) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"        this.exit \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"        this.friendToGet \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"        this.gameToGet \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"tau-bar"},"content":"    public CommandResult(String feedbackToUser, CommandType commandType, Friend friendToGet) {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"tau-bar"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"tau-bar"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"tau-bar"},"content":"        this.exit \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"tau-bar"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"tau-bar"},"content":"        this.friendToGet \u003d friendToGet;","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"tau-bar"},"content":"        this.gameToGet \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"tau-bar"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"tau-bar"},"content":"    public CommandResult(String feedbackToUser, CommandType commandType, Game gameToGet) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"tau-bar"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"tau-bar"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"tau-bar"},"content":"        this.exit \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"tau-bar"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"tau-bar"},"content":"        this.friendToGet \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"tau-bar"},"content":"        this.gameToGet \u003d gameToGet;","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"tau-bar"},"content":"    public Friend getFriendToGet() {","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"tau-bar"},"content":"        return friendToGet;","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"tau-bar"},"content":"    public Game getGameToGet() {","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"tau-bar"},"content":"        return gameToGet;","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"tau-bar"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"tau-bar"},"content":"        return commandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"tau-bar"},"content":"    /** Returns true if the command is a {@Code help} command. */","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"tau-bar"},"content":"    /** Returns true if the command is a {@Code help} command. */","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"tau-bar"},"content":"    /** Returns true if the command is a {@Code friend --get} command. */","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"tau-bar"},"content":"    public boolean isFriendGet() {","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"tau-bar"},"content":"        return commandType.equals(CommandType.FRIEND_GET);","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"tau-bar"},"content":"    /** Returns true if the command is a {@Code game --get} command. */","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"tau-bar"},"content":"    public boolean isGameGet() {","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"tau-bar"},"content":"        return commandType.equals(CommandType.GAME_GET);","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tau-bar":82,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/CommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"public enum CommandType {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"    FRIEND_ADD, FRIEND_DELETE, FRIEND_GET, FRIEND_LIST, GAME_ADD, GAME_DELETE, GAME_GET, GAME_LIST, HELP, EXIT, LINK,","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"    CLEAR","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tau-bar":6}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GAME_OLD;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FRIENDS;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":" * Edits the details of an existing friend in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the friend identified \"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"            + \"by the index number used in the displayed friends list. \"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"            + \"[\" + FLAG_FRIEND_ID + \"FRIEND_ID] \"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"            + \"[\" + FLAG_FRIEND_NAME + \"NAME] \"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"            + \"[\" + FLAG_GAME_OLD + \"GAME]...\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"            + FLAG_GAME_OLD + \"Apex Legends \"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"            + FLAG_GAME_OLD + \"CSGO \"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"            + FLAG_FRIEND_NAME + \"John Lim\";","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_EDIT_FRIEND_SUCCESS \u003d \"Edited Friend: %1$s\";","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_DUPLICATE_FRIEND \u003d \"A friend with this friendId already exists in the\"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"            + \"gitGud friend\u0027s list.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    private final EditFriendDescriptor editFriendDescriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"     * @param editFriendDescriptor details to edit the person with","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    public EditCommand(Index index, EditFriendDescriptor editFriendDescriptor) {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(editFriendDescriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        this.editFriendDescriptor \u003d new EditFriendDescriptor(editFriendDescriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        List\u003cFriend\u003e lastShownList \u003d model.getFilteredFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        Friend friendToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        Friend editedFriend \u003d createEditedPerson(friendToEdit, editFriendDescriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        if (!friendToEdit.equals(editedFriend) \u0026\u0026 model.hasFriend(editedFriend)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FRIEND);","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        model.setFriend(friendToEdit, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"        model.updateFilteredFriendsList(PREDICATE_SHOW_ALL_FRIENDS);","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_FRIEND_SUCCESS, editedFriend));","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"     * Creates and returns a {@code Friend} with the details of {@code friendToEdit}","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"     * edited with {@code EditFriendDescriptor}.","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"    private static Friend createEditedPerson(Friend friendToEdit, EditFriendDescriptor editFriendDescriptor) {","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"        assert friendToEdit !\u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"        FriendId updatedFriendId \u003d editFriendDescriptor.getFriendId().orElse(friendToEdit.getFriendId());","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"        FriendName updatedFriendName \u003d editFriendDescriptor.getFriendName().orElse(friendToEdit.getName());","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"        Set\u003cGameFriendLink\u003e updatedGames \u003d editFriendDescriptor.getGames().orElse(friendToEdit.getGames());","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"        return new Friend(updatedFriendId, updatedFriendName, updatedGames);","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 editFriendDescriptor.equals(e.editFriendDescriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"     * Stores the details to edit the friend with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"     * corresponding field value of the friend.","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"    public static class EditFriendDescriptor {","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"        private FriendName friendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"        private FriendId friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"        private Set\u003cGameFriendLink\u003e games;","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"        public EditFriendDescriptor() {}","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"        public EditFriendDescriptor(EditFriendDescriptor toCopy) {","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"            setFriendId(toCopy.friendId);","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"            setFriendName(toCopy.friendName);","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"            setGames(toCopy.games);","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"kevin9foong"},"content":"            return CollectionUtil.isAnyNonNull(friendId, friendName, games);","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"kevin9foong"},"content":"        public void setFriendId(FriendId friendId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"kevin9foong"},"content":"            this.friendId \u003d friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"kevin9foong"},"content":"        public Optional\u003cFriendId\u003e getFriendId() {","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"kevin9foong"},"content":"            return Optional.ofNullable(friendId);","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"kevin9foong"},"content":"        public void setFriendName(FriendName friendName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"kevin9foong"},"content":"            this.friendName \u003d friendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"kevin9foong"},"content":"        public Optional\u003cFriendName\u003e getFriendName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"kevin9foong"},"content":"            return Optional.ofNullable(friendName);","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"YeluriKetan"},"content":"        public void setGames(Set\u003cGameFriendLink\u003e gameSet) {","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"kevin9foong"},"content":"            this.games \u003d (gameSet !\u003d null) ? new HashSet\u003c\u003e(gameSet) : null;","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"YeluriKetan"},"content":"        public Optional\u003cSet\u003cGameFriendLink\u003e\u003e getGames() {","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"kevin9foong"},"content":"            return (games !\u003d null) ? Optional.of(Collections.unmodifiableSet(games)) : Optional.empty();","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":186,"author":{"gitId":"kevin9foong"},"content":"            if (!(other instanceof EditFriendDescriptor)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":191,"author":{"gitId":"kevin9foong"},"content":"            EditFriendDescriptor e \u003d (EditFriendDescriptor) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"kevin9foong"},"content":"            return getFriendId().equals(e.getFriendId())","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"kevin9foong"},"content":"                    \u0026\u0026 getFriendName().equals(e.getFriendName())","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"kevin9foong"},"content":"                    \u0026\u0026 getGames().equals(e.getGames());","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"tau-bar":2,"MarcusTXK":7,"YeluriKetan":7,"-":127,"kevin9foong":55}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, CommandType.EXIT);","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tau-bar":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    private final FriendNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    public FindCommand(FriendNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        model.updateFilteredFriendsList(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"        Friend friend \u003d new Friend(new FriendId(\"bobiscool\"), new FriendName(\"Bob\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"                // TODO: get the actual friend","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredFriendsList().size()),","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"                CommandType.FRIEND_GET, friend);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tau-bar":7,"YeluriKetan":1,"-":36,"kevin9foong":4}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, CommandType.HELP);","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tau-bar":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/LinkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":" * Links an existing friend to an existing game, associating them.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"public class LinkCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"    public static final String COMMAND_WORD \u003d \"link\";","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"            + \": Links game(s) and the associated in-game username(s) \"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"            + \"for each game to a friend. \\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"            + \"Parameters: FRIEND_ID --g GAME_NAME:IN_GAME_USERNAME...\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"            + \"Example: \" + COMMAND_WORD + \" Draco --g Valorant:SmurfLord\";","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"    private final FriendId friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"    private final HashMap\u003cString, String\u003e games;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"     * Constructor for LinkCommand.","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"    public LinkCommand(FriendId friendId, HashMap\u003cString, String\u003e games) {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"        requireAllNonNull(friendId, games);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"        this.friendId \u003d friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"        this.games \u003d games;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"        if (!model.hasFriendWithId(friendId)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"            throw new CommandException(Messages.MESSAGE_NONEXISTENT_FRIEND_ID);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"        // check if game(s) are in model, else throw exception","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"        List\u003cFriend\u003e lastShownList \u003d model.getFilteredFriendsList();","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"        // get list of games from model","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"        Friend friendToEdit \u003d lastShownList // obtain Friend object from the model that matches friendId","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"                .stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"                .filter(friend -\u003e friend.getFriendId().equals(friendId))","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"                .findFirst()","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"LZher385"},"content":"                .get();","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"LZher385"},"content":"        // update the game(s) in the model (since the usernames for them have been changed)","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        model.linkFriend(friendToEdit, new HashSet\u003c\u003e());","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"        model.updateFilteredFriendsList(Model.PREDICATE_SHOW_ALL_FRIENDS);","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"LZher385"},"content":"        return new CommandResult(generateSuccessMessage(friendToEdit));","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"LZher385"},"content":"     * Generates a success message referencing the friend and the games linked to him.","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"LZher385"},"content":"    public String generateSuccessMessage(Friend friend) {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"LZher385"},"content":"        String successMessage \u003d friend.getFriendId() + \" is now linked to: \";","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"LZher385"},"content":"        List\u003cString\u003e gameNames \u003d new ArrayList\u003c\u003e(games.keySet());","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"LZher385"},"content":"        for (int i \u003d 0; i \u003c gameNames.size(); i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"LZher385"},"content":"            String gameName \u003d gameNames.get(i);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"LZher385"},"content":"            if (i \u003d\u003d gameNames.size() - 1) {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"LZher385"},"content":"                successMessage +\u003d gameName + \" (\" + games.get(gameName) + \")\";","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"LZher385"},"content":"            } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"LZher385"},"content":"                successMessage +\u003d gameName + \" (\" + games.get(gameName) + \"), \";","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"LZher385"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"LZher385"},"content":"        return successMessage;","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"LZher385"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"LZher385"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"LZher385"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"LZher385"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"LZher385"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"LZher385"},"content":"        if (!(other instanceof LinkCommand)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"LZher385"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"LZher385"},"content":"        // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"LZher385"},"content":"        LinkCommand e \u003d (LinkCommand) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"LZher385"},"content":"        return friendId.equals(e.friendId)","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"LZher385"},"content":"                \u0026\u0026 games.equals(e.games);","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"LZher385":100,"YeluriKetan":3}},{"path":"src/main/java/seedu/address/logic/commands/friends/AddFriendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"public class AddFriendCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    public static final String COMMAND_WORD \u003d \"--add\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New friend added: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This friend already exists in the gitGud friends list.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"    public static final FriendName DEFAULT_FRIEND_NAME \u003d new FriendName(\"No name assigned\");","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_USAGE \u003d \"To add a friend: \\n\" + COMMAND_WORD","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"            + \" FRIEND_ID [--name \\\"NAME\\\"]\" + \": Adds a friend to \"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"            + \"the \" + \"gitGud friends \" + \"list. \\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"            + \" FRIEND_ID \"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"            + CliSyntax.FLAG_FRIEND_NAME + \" NAME\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"            + \"myfeely923 \"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"            + FLAG_FRIEND_NAME + \"Yu Zher \";","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"    private final Friend toAdd;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"     * Constructor for AddFriendCommand that takes in the friend to add as the argument.","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"     * @param friend The friend to be added.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"    public AddFriendCommand(Friend friend) {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"        requireNonNull(friend);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"        this.toAdd \u003d friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"        if (model.hasFriendId(toAdd.getFriendId())) {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"        model.addFriend(toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"                || (other instanceof AddFriendCommand // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"                \u0026\u0026 toAdd.equals(((AddFriendCommand) other).toAdd));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":43,"MarcusTXK":14}},{"path":"src/main/java/seedu/address/logic/commands/friends/DeleteFriendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"public class DeleteFriendCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    public static final String COMMAND_WORD \u003d \"--delete\";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes the person identified by the friend id\"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"            + \".\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"            + \"Parameters: FRIEND_ID (must be an existing friend id)\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"            + \"Example: \" + COMMAND_WORD + \" Draco\";","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"    private FriendId friendToDeleteId;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"    private Friend friendToDelete;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"     * Command to delete a friend using the unique FRIEND_ID.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"     * @param friendId The friend id to identify the friend to be deleted.","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"    public DeleteFriendCommand(FriendId friendId) {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"        requireNonNull(friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"        friendToDeleteId \u003d friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"        if (model.hasFriendId(friendToDeleteId)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"            model.deleteFriend(friendToDeleteId);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, friendToDeleteId));","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"            throw new CommandException(Messages.MESSAGE_NONEXISTENT_FRIEND_ID);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"                || (other instanceof DeleteFriendCommand // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"                \u0026\u0026 friendToDeleteId.equals(((DeleteFriendCommand) other).friendToDeleteId)); // state","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"                // check","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"     * Finds and returns a friend if the friendId is found inside the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"     * @param list The list to search for the friend.","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"     * @param friendId The friendId used to search for the friend.","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"     * @return The friend with the friend id.","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"     * @throws CommandException Thrown when no friend with the friendId is found inside the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"    public Friend findFriendInList(List\u003cFriend\u003e list, FriendId friendId) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"tau-bar"},"content":"            if (list.get(i).getFriendId().equals(friendId)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"                return list.get(i);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"tau-bar"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"tau-bar"},"content":"        throw new CommandException(Messages.MESSAGE_NONEXISTENT_FRIEND_ID);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":66,"MarcusTXK":3}},{"path":"src/main/java/seedu/address/logic/commands/friends/GetFriendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.FriendIdMatchesKeywordPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":" * Gets and displays the complete information of a friend from the address book whose FRIEND_ID matches the given","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":" * argument keywords.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"public class GetFriendCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    public static final String COMMAND_WORD \u003d \"--get\";","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Gets all the information about a friend whose \"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"            + \"FRIEND_ID matches the given keyword(s) exactly (case-insensitive) and displays them in a \"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"            + \"easy-to-read format.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"            + \"Example: \" + COMMAND_WORD + \" Draco\";","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    public static final String MESSAGE_FRIEND_FULL_INFORMATION \u003d \"Showing the complete information of %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    private final FriendIdMatchesKeywordPredicate predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    public GetFriendCommand(FriendIdMatchesKeywordPredicate predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        model.updateFilteredFriendsList(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        if (model.getFilteredFriendsList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"            throw new CommandException(","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"                    String.format(Messages.MESSAGE_INVALID_FRIEND_ID, predicate.getKeyword()));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"                String.format(MESSAGE_FRIEND_FULL_INFORMATION, predicate.getKeyword()));","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"                || (other instanceof GetFriendCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 predicate.equals(((GetFriendCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"MarcusTXK":8,"YeluriKetan":46}},{"path":"src/main/java/seedu/address/logic/commands/friends/ListFriendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.FriendIdContainsKeywordPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"public class ListFriendCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    public static final String COMMAND_WORD \u003d \"--list\";","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_SUCCESS_PREPEND \u003d \"Listed all %s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    public static final String FRIEND_LIST \u003d \"friends\";","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_UNKNOWN_PREDICATE \u003d \"Unknown search filter entered\";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all friends/games whose id contain any of \"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"            + \"Parameters: --friend/--game KEYWORD \\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"            + \"Example: \" + COMMAND_WORD + \"--friend alice\";","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    private final Predicate\u003cFriend\u003e predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    public ListFriendCommand(Predicate\u003cFriend\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        if (predicate instanceof FriendIdContainsKeywordPredicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"            FriendIdContainsKeywordPredicate friendIdContainsKeywordPredicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"                    (FriendIdContainsKeywordPredicate) predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"            model.updateFilteredFriendsList(friendIdContainsKeywordPredicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"            //TODO: get the actual friend being listed if only one friend","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"            if (model.getFilteredFriendsList().size() \u003d\u003d 1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"                return new CommandResult(getMessageSuccess(), CommandType.FRIEND_GET,","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"                        model.getFilteredFriendsList().get(0));","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"                return new CommandResult(getMessageSuccess(), CommandType.FRIEND_LIST);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"        // ListCommand initialized with unknown predicate","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"        throw new CommandException(MESSAGE_UNKNOWN_PREDICATE);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"     * Returns success message to display after running list","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"     * @return String containing success message","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"    public String getMessageSuccess() {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"        if (predicate instanceof FriendIdContainsKeywordPredicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"            FriendIdContainsKeywordPredicate friendIdContainsKeywordPredicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"                    (FriendIdContainsKeywordPredicate) predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"            String keyword \u003d friendIdContainsKeywordPredicate.getKeyword();","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"            String messageEnd \u003d keyword.isEmpty()","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"                    ? \"\"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"                    : \" whose id contains the keyword: \" + keyword;","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"            return String.format(MESSAGE_SUCCESS_PREPEND, FRIEND_LIST) + messageEnd;","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"        return String.format(MESSAGE_SUCCESS_PREPEND, FRIEND_LIST);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"                || (other instanceof ListFriendCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 predicate.equals(((ListFriendCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tau-bar":9,"MarcusTXK":58,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.LinkCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.friends.FriendCommandParser;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.games.GameCommandParser;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        case FriendCommandParser.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"            return new FriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"        case GameCommandParser.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"            return new GameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"        case LinkCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"            return new LinkCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tau-bar":2,"MarcusTXK":7,"LZher385":1,"-":65}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    private final Map\u003cFlag, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"     * @param flag   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    public void put(Flag flag, String argValue) {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(flag);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        argMultimap.put(flag, argValues);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    public Optional\u003cString\u003e getValue(Flag flag) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cString\u003e values \u003d getAllValues(flag);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"    public List\u003cString\u003e getAllValues(Flag flag) {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        if (!argMultimap.containsKey(flag)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(flag));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"        return getValue(new Flag(\"\")).orElse(\"\");","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"MarcusTXK":11,"-":49}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"     * @param flags   Prefixes to tokenize the arguments string with","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    public static ArgumentMultimap tokenize(String argsString, Flag... flags) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, flags);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"     * @param flags   Prefixes to find in the arguments string","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Flag... flags) {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        return Arrays.stream(flags)","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Flag flag) {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, flag.getFlag(), 0);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(flag, prefixPosition);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, flag.getFlag(), prefixPosition);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Flag(\"\"), 0);","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Flag(\"\"), argsString.length());","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"            Flag argFlag \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"            argMultimap.put(argFlag, argValue);","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"MarcusTXK"},"content":"        Flag flag \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"MarcusTXK"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + flag.getFlag().length();","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":"        private final Flag flag;","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"MarcusTXK"},"content":"        PrefixPosition(Flag flag, int startPosition) {","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"            this.flag \u003d flag;","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"MarcusTXK"},"content":"        Flag getPrefix() {","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"            return flag;","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"MarcusTXK":21,"-":127}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"    /* Flag definitions */","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"    // command flags:","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_FRIEND \u003d new Flag(\"--friend \");","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_GAME \u003d new Flag(\"--game \");","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_ADD \u003d new Flag(\"--add \");","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_DELETE \u003d new Flag(\"--delete \");","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_GET \u003d new Flag(\"--get \");","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_LIST \u003d new Flag(\"--list \");","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_POSTFIX \u003d new Flag(\" \"); // for flags with optional fields","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    // data flags","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_FRIEND_NAME \u003d new Flag(\"--name \");","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_FRIEND_ID \u003d new Flag(\"--id \");","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    // TODO remove once commands are updated","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_GAME_OLD \u003d new Flag(\"--g\");","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    public static final Flag FLAG_FRIEND_SPACE \u003d new Flag(\"--friend \");","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"MarcusTXK":20,"-":9}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GAME_OLD;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"                ArgumentTokenizer.tokenize(args, FLAG_FRIEND_ID, FLAG_FRIEND_NAME, FLAG_GAME_OLD);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        EditCommand.EditFriendDescriptor editFriendDescriptor \u003d new EditCommand.EditFriendDescriptor();","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"        if (argMultimap.getValue(FLAG_FRIEND_ID).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"            editFriendDescriptor.setFriendId(ParserUtil.parseFriendId(argMultimap.getValue(FLAG_FRIEND_ID).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        if (argMultimap.getValue(FLAG_FRIEND_NAME).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"            editFriendDescriptor.setFriendName(ParserUtil.parseFriendName(argMultimap.getValue(FLAG_FRIEND_NAME)","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"                    .get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"        parseGamesForEdit(argMultimap.getAllValues(FLAG_GAME_OLD)).ifPresent(editFriendDescriptor::setGames);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        if (!editFriendDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        return new EditCommand(index, editFriendDescriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"     * Parses {@code Collection\u003cString\u003e games} into a {@code Set\u003cGameFriendLink\u003e} if {@code games} is non-empty.","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"     * If {@code games} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"     * {@code Set\u003cGameFriendLink\u003e} containing zero games.","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"    private Optional\u003cSet\u003cGameFriendLink\u003e\u003e parseGamesForEdit(Collection\u003cString\u003e games) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        assert games !\u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        if (games.isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        Collection\u003cString\u003e gameSet \u003d games.size() \u003d\u003d 1 \u0026\u0026 games.contains(\"\") ? Collections.emptySet() : games;","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        return Optional.of(ParserUtil.parseGames(gameSet));","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tau-bar":6,"MarcusTXK":3,"YeluriKetan":4,"-":51,"kevin9foong":12}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        return new FindCommand(new FriendNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":31,"kevin9foong":2}},{"path":"src/main/java/seedu/address/logic/parser/Flag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"public class Flag {","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"    private final String flag;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"    public Flag(String flag) {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"        this.flag \u003d flag;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    public String getFlag() {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"        return flag;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"        return getFlag();","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        return flag \u003d\u003d null ? 0 : flag.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"        if (!(obj instanceof Flag)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        Flag otherFlag \u003d (Flag) obj;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"        return otherFlag.getFlag().equals(getFlag());","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"MarcusTXK":11,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/LinkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GAME_OLD;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.LinkCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"public class LinkCommandParser implements Parser\u003cLinkCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"     * Parses the given {@code String} of arguments in the context of the LinkCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"     * and returns an LinkCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"    public LinkCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"                ArgumentTokenizer.tokenize(args, FLAG_GAME_OLD);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"        if (!arePrefixesPresent(argMultimap, FLAG_GAME_OLD)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LinkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"        List\u003cString\u003e commandSegments \u003d Arrays.asList(args.split(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"        FriendId friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"            // first element is whitespace, FRIEND_ID is at the second element","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"            friendId \u003d ParserUtil.parseFriendId(commandSegments.get(1));","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"                    LinkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"        HashMap\u003cString, String\u003e games \u003d ParserUtil.parseGamesAndUsernames(","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"                argMultimap.getAllValues(FLAG_GAME_OLD));","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"        return new LinkCommand(friendId, games);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"MarcusTXK":4,"LZher385":48}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     * Private constructor to hide implicit public constructor since","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     * {@code ParserUtil} is a utility class.","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    private ParserUtil() {}","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"     * Parses a {@code String friendId} into a {@code FriendId}.","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"     * @throws ParseException if the given {@code friendId} is invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    public static FriendId parseFriendId(String friendId) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friendId);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        String trimmedName \u003d friendId.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        if (!FriendId.isValidFriendId(trimmedName)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"            throw new ParseException(FriendId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"        } else if (friendId.contains(FLAG_FRIEND_NAME.toString().trim())) {","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"            // TODO set a different message if preferred","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FriendId.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        return new FriendId(trimmedName);","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"     * Parses a {@code String friendName} into a {@code FriendName}.","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"     * @throws ParseException if the given {@code friendName} is invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"    public static FriendName parseFriendName(String friendName) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friendName);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        String trimmedName \u003d friendName.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        if (!FriendName.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"            throw new ParseException(FriendName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        return new FriendName(trimmedName);","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"    //    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"    //     * Parses a {@code String gameName} into a {@code Game}.","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"    //     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"    //     *","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"    //     * @throws ParseException if the given {@code gameName} is invalid.","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"    //     */","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"    //    public static Game parseGame(String gameName) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"    //        requireNonNull(gameName);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"    //        String trimmedGameName \u003d gameName.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"    //        if (!Game.isValidGameName(trimmedGameName)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"    //            throw new ParseException(Game.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"    //        }","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"    //        return new Game(trimmedGameName);","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"    //    }","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"     * Parses {@code Collection\u003cString\u003e games} into a {@code Set\u003cGameFriendLink\u003e}.","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"    public static Set\u003cGameFriendLink\u003e parseGames(Collection\u003cString\u003e games) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(games);","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"        final Set\u003cGameFriendLink\u003e gameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"        for (String gameName : games) {","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"            // TODO - Edit command","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"            // gameSet.add(parseGame(gameName));","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"        return gameSet;","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"LZher385"},"content":"     * Parses {@code Collection\u003cString\u003e games} into a {@code Hashmap\u003cString, String\u003e}.","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"LZher385"},"content":"     * The key of the Hashmap is the game name, while the value is the username for that key.","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"LZher385"},"content":"    public static HashMap\u003cString, String\u003e parseGamesAndUsernames(Collection\u003cString\u003e games) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"LZher385"},"content":"        requireNonNull(games);","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"LZher385"},"content":"        final HashMap\u003cString, String\u003e gamesHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"LZher385"},"content":"        games.stream().forEach(segment -\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"LZher385"},"content":"            String[] gameAndUsername \u003d segment.split(\":\");","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"LZher385"},"content":"            String gameName \u003d gameAndUsername[0];","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"LZher385"},"content":"            String inGameUsername \u003d gameAndUsername[1];","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"LZher385"},"content":"            gamesHashMap.put(gameName, inGameUsername);","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"LZher385"},"content":"        });","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"LZher385"},"content":"        return gamesHashMap;","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"LZher385"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"LZher385"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"MarcusTXK"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Flag... flags) {","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"MarcusTXK"},"content":"        return Stream.of(flags).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tau-bar":3,"MarcusTXK":4,"LZher385":16,"YeluriKetan":20,"-":60,"kevin9foong":27}},{"path":"src/main/java/seedu/address/logic/parser/friends/AddFriendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.AddFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"public class AddFriendCommandParser implements Parser\u003cAddFriendCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"    private FriendId friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"    private FriendName friendName;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"     * Parses the given {@code String} of arguments in the context of the AddFriendCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"     * and returns an AddFriendCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    public AddFriendCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"        if (args.contains(FLAG_FRIEND_NAME.toString())) {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, FLAG_FRIEND_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"            friendName \u003d ParserUtil.parseFriendName(argMultimap.getValue(FLAG_FRIEND_NAME).get());","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"            friendName \u003d AddFriendCommand.DEFAULT_FRIEND_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"        friendId \u003d getFriendId(args);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"        return new AddFriendCommand(new Friend(friendId, friendName));","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"    private FriendId getFriendId(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        String[] splitCommand \u003d args.split(\" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"            String friendId \u003d splitCommand[1];","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"            return ParserUtil.parseFriendId(friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"            // TODO set a different message if preferred","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FriendId.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":46,"MarcusTXK":5}},{"path":"src/main/java/seedu/address/logic/parser/friends/DeleteFriendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_DELETE;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.DeleteFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"public class DeleteFriendCommandParser implements Parser\u003cDeleteFriendCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"    private FriendId friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"    private ArgumentMultimap argMultimap;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    public DeleteFriendCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"            argMultimap \u003d ArgumentTokenizer.tokenize(args, FLAG_DELETE);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"            friendId \u003d ParserUtil.parseFriendId(argMultimap.getValue(FLAG_DELETE).get());","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"            return new DeleteFriendCommand(friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"        } catch (ParseException | NoSuchElementException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteFriendCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":28,"MarcusTXK":3}},{"path":"src/main/java/seedu/address/logic/parser/friends/FriendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_FRIEND_FLAG;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.AddFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.DeleteFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.GetFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.ListFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":" * Parses user input for friends.","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"public class FriendCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    public static final String COMMAND_WORD \u003d \"friend\";","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"     * Parses the given {@code String} of arguments in the context of the FriendCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"     * and returns a FriendCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    public Command parse(String arguments) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"        String[] userInput \u003d arguments.strip().split(\" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"        if (userInput.length \u003c\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        switch (userInput[0]) {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        case AddFriendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"            return new AddFriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        case DeleteFriendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"            return new DeleteFriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        case GetFriendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"            return new GetFriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        case ListFriendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"            return new ListFriendCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        default:","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_FRIEND_FLAG);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":16,"MarcusTXK":36}},{"path":"src/main/java/seedu/address/logic/parser/friends/GetFriendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_SPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.GetFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.FriendIdMatchesKeywordPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":" * Parses input arguments and creates a new GetCommand object","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"public class GetFriendCommandParser implements Parser\u003cGetFriendCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"     * Parses the given {@code String} of arguments in the context of the GetCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     * and returns a GetCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    public GetFriendCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"                ArgumentTokenizer.tokenize(args, FLAG_FRIEND_SPACE);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        if (argMultimap.getValue(FLAG_FRIEND_SPACE).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"            String keyword \u003d argMultimap.getValue(FLAG_FRIEND_SPACE).get();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetFriendCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"            return new GetFriendCommand(new FriendIdMatchesKeywordPredicate(keyword));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        // TODO add functionality for FLAG_GAME in the next iteration","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        // default to friendId if there are no recognizable flags","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetFriendCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        return new GetFriendCommand(new FriendIdMatchesKeywordPredicate(trimmedArgs));","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"MarcusTXK":11,"YeluriKetan":36}},{"path":"src/main/java/seedu/address/logic/parser/friends/ListFriendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_LIST;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_POSTFIX;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.ListFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.FriendIdContainsKeywordPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"public class ListFriendCommandParser implements Parser\u003cListFriendCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    public ListFriendCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"                ArgumentTokenizer.tokenize(args + FLAG_POSTFIX, FLAG_LIST);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        if (argMultimap.getValue(FLAG_LIST).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"            return new ListFriendCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"                    new FriendIdContainsKeywordPredicate(argMultimap.getValue(FLAG_LIST).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        // no tags present, default to friend search","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        return new ListFriendCommand(new FriendIdContainsKeywordPredicate(args));","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"MarcusTXK":35}},{"path":"src/main/java/seedu/address/logic/parser/games/GameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.parser.games;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_GAME_FLAG;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":" * Parses user input for games.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"public class GameCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    public static final String COMMAND_WORD \u003d \"game\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"     * Parses the given {@code String} of arguments in the context of the GameCommand","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"     * and returns a GameCommand object for execution.","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    public Command parse(String arguments) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        String[] userInput \u003d arguments.split(\" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        if (userInput.length \u003c\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"        // TODO For respective command implementers to uncomment when done:","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        switch (userInput[0]) {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        // case AddGameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        //     return new AddGameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        // case DeleteGameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        //     return new DeleteGameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        // case GetGameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        //     return new GetGameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        // case ListGameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        //     return new ListGameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        default:","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_GAME_FLAG);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"MarcusTXK":49}},{"path":"src/main/java/seedu/address/model/FriendsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.UniqueFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"public class FriendsList implements ReadOnlyFriendsList {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    private final UniqueFriendsList friends;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    /*","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     *   among constructors.","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        friends \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    public FriendsList() {}","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public FriendsList(ReadOnlyFriendsList toBeCopied) {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        this();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    public void setFriends(List\u003cFriend\u003e friends) {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        this.friends.setFriends(friends);","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    public void resetData(ReadOnlyFriendsList newData) {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        setFriends(newData.getFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    //// person-level operations","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"     * Returns true if a friend with the same identity as {@code friend} exists in the friends list.","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    public boolean hasFriend(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        return friends.contains(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"LZher385"},"content":"     * Returns true if a friend with the same FriendId as (@code friendId} exists in the friends list.","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"LZher385"},"content":"    public boolean hasFriendWithId(FriendId friendId) {","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"LZher385"},"content":"        requireNonNull(friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"LZher385"},"content":"        return friends.containsId(friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"     * Adds a friend to the friends list.","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"     * The friend must not already exist in the friends list.","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"    public void addFriend(Friend p) {","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"        friends.add(p);","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"     * Replaces the given friend {@code target} in the list with {@code editedFriend}.","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"     * {@code target} must exist in the friends list.","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"     * The friend identity of {@code editedFriend} must not be the same as another existing friend in the friends list.","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"    public void setFriend(Friend target, Friend editedFriend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"        friends.setFriend(target, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"    public void linkFriend(Friend toLink, HashSet\u003cGameFriendLink\u003e gameFriendLinks) {","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"        friends.link(toLink, gameFriendLinks);","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"     * Removes {@code key} from this {@code FriendsList}.","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"     * {@code key} must exist in the friends list.","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"    public void removeFriend(Friend key) {","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"        friends.remove(key);","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"kevin9foong"},"content":"    // util methods","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"        return friends.asUnmodifiableObservableList().size() + \" friends\";","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"        // TODO: refine later","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"kevin9foong"},"content":"    public ObservableList\u003cFriend\u003e getFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"        return friends.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"                || (other instanceof FriendsList // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 friends.equals(((FriendsList) other).friends));","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"        return friends.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"YeluriKetan":4,"LZher385":11,"kevin9foong":120}},{"path":"src/main/java/seedu/address/model/GamesList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.UniqueGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":" * Wraps all data at the games-book level","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":" * Duplicates are not allowed (by .isSameGame comparison)","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"public class GamesList implements ReadOnlyGamesList {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    private final UniqueGamesList games;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    /*","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"     *   among constructors.","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        games \u003d new UniqueGamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    public GamesList() {}","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"     * Creates an GamesBook using the Games in the {@code toBeCopied}","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    public GamesList(ReadOnlyGamesList toBeCopied) {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        this();","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces the contents of the games list with {@code games}.","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"     * {@code games} must not contain duplicate games.","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    public void setGames(List\u003cGame\u003e games) {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        this.games.setGames(games);","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"     * Resets the existing data of this {@code GamesBook} with {@code newData}.","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"    public void resetData(ReadOnlyGamesList newData) {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        setGames(newData.getGamesList());","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"    //// game-level operations","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a game with the same identity as {@code game} exists in the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"    public boolean hasGame(Game game) {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(game);","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"        return games.contains(game);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a game with the same GameId as {@code gameId} exists in the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"    public boolean hasGameWithId(GameId gameId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"        return games.containsId(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"     * Adds a game to the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"     * The game must not already exist in the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"    public void addGame(Game p) {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"        games.add(p);","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces the given game {@code target} in the list with {@code editedGame}.","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"     * {@code target} must exist in the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"     * The game identity of {@code editedGame} must not be the same as another existing game in the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"    public void setGame(Game target, Game editedGame) {","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(editedGame);","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"        games.setGame(target, editedGame);","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"     * Removes {@code key} from this {@code GamesList}.","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"     * {@code key} must exist in the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"    public void removeGame(Game key) {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"        games.remove(key);","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"    // util methods","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"        return games.asUnmodifiableObservableList().size() + \" games\";","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"        // TODO: refine later","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"    public ObservableList\u003cGame\u003e getGamesList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"        return games.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"                || (other instanceof GamesList // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 games.equals(((GamesList) other).games));","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"        return games.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":129}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    Predicate\u003cFriend\u003e PREDICATE_SHOW_ALL_FRIENDS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    Predicate\u003cGame\u003e PREDICATE_SHOW_ALL_GAMES \u003d unused -\u003e true;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FriendsBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces friends book data with the data in {@code readOnlyFriendsList}.","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    void setFriendsList(ReadOnlyFriendsList readOnlyFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    /** Returns the FriendsBook */","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    ReadOnlyFriendsList getFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a friend with the same identity as {@code friend} exists in the friends book.","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    boolean hasFriend(Friend friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a friend with the same friendId as {@code friendId} exists in the friends book.","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"LZher385"},"content":"    boolean hasFriendWithId(FriendId friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"     * Deletes the given friend.","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"     * The friend must exist in the friends book.","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"tau-bar"},"content":"    void deleteFriend(FriendId targetId);","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"     * Adds the given friend.","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"     * {@code friend} must not already exist in the friends book.","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"    void addFriend(Friend friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces the given friend {@code target} with {@code editedFriend}.","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"     * {@code target} must exist in the friends book.","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"     * The friend identity of {@code editedFriend} must not be the same as another existing friend in the friends book.","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"    void setFriend(Friend target, Friend editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"    /** Returns an unmodifiable view of the filtered friend list */","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"    ObservableList\u003cFriend\u003e getFilteredFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"     * Updates the filter of the filtered friend list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"    void updateFilteredFriendsList(Predicate\u003cFriend\u003e predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"LZher385"},"content":"     * Links the friend {@code toLink} with the games in the HashMap.","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"LZher385"},"content":"     * The key in the HashMap represents a {@code GAME_NAME}, while the value represents","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"LZher385"},"content":"     * the {@code IN_GAME_USERNAME} for that game.","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"    void linkFriend(Friend toLink, HashSet\u003cGameFriendLink\u003e gameFriendLinks);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"tau-bar"},"content":"    boolean hasFriendId(FriendId idToFind);","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d GamesBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces games book data with the data in {@code readOnlyGamesList}.","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"    void setGamesList(ReadOnlyGamesList readOnlyGamesList);","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"    /** Returns the GamesBook */","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"    ReadOnlyGamesList getGamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a game with the same identity as {@code game} exists in the games book.","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"    boolean hasGame(Game game);","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a game with the same gameId as {@code gameId} exists in the games book.","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"    boolean hasGameWithId(GameId gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"     * Deletes the given game based on the {@code targetId}.","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"     * The game must exist in the games book.","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"    void deleteGame(GameId targetId);","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"     * Adds the given game.","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"     * {@code game} must not already exist in the games book.","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"    void addGame(Game game);","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces the given game {@code target} with {@code editedGame}.","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"     * {@code target} must exist in the games book.","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"     * The game identity of {@code editedGame} must not be the same as another existing game in the games book.","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"    void setGame(Game target, Game editedGame);","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"YeluriKetan"},"content":"    /** Returns an unmodifiable view of the filtered game list */","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"YeluriKetan"},"content":"    ObservableList\u003cGame\u003e getFilteredGamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"YeluriKetan"},"content":"     * Updates the filter of the filtered game list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"YeluriKetan"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"YeluriKetan"},"content":"    void updateFilteredGamesList(Predicate\u003cGame\u003e predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"YeluriKetan"},"content":"    boolean hasGameId(GameId idToFind);","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tau-bar":2,"YeluriKetan":72,"LZher385":10,"-":68,"kevin9foong":8}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":" * Represents the in-memory model of the gitGud friends and games list data.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    private final FriendsList friendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    private final FilteredList\u003cFriend\u003e filteredFriends;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    private final GamesList gamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    private final FilteredList\u003cGame\u003e filteredGames;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"     * Initializes a ModelManager with the given friends list and userPrefs.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    public ModelManager(ReadOnlyFriendsList readOnlyFriendsList, ReadOnlyGamesList readOnlyGamesList,","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        requireAllNonNull(readOnlyFriendsList, readOnlyGamesList, userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        logger.fine(\"Initializing with friends book: \" + readOnlyFriendsList","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"                + \" games book: \" + readOnlyGamesList","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        this.friendsList \u003d new FriendsList(readOnlyFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        filteredFriends \u003d new FilteredList\u003c\u003e(this.friendsList.getFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        this.gamesList \u003d new GamesList(readOnlyGamesList);","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        filteredGames \u003d new FilteredList\u003c\u003e(this.gamesList.getGamesList());","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        this(new FriendsList(), new GamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FriendsBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"    public void setFriendsList(ReadOnlyFriendsList readOnlyFriendsList) {","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"        this.friendsList.resetData(readOnlyFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"    public ReadOnlyFriendsList getFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"        return friendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"    public boolean hasFriend(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"        return friendsList.hasFriend(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"LZher385"},"content":"    public boolean hasFriendWithId(FriendId friendId) {","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"LZher385"},"content":"        requireNonNull(friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"LZher385"},"content":"        return friendsList.hasFriendWithId(friendId);","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"tau-bar"},"content":"    public void deleteFriend(FriendId targetId) {","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"tau-bar"},"content":"        Friend friendToDelete \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"tau-bar"},"content":"                this.getFriendsList().getFriendsList()","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"tau-bar"},"content":"                        .stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"tau-bar"},"content":"                        .filter(friend -\u003e friend.getFriendId().equals(targetId))","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"tau-bar"},"content":"                        .findFirst()","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"tau-bar"},"content":"                        .get();","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"tau-bar"},"content":"        friendsList.removeFriend(friendToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"    public void addFriend(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"        friendsList.addFriend(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"        updateFilteredFriendsList(PREDICATE_SHOW_ALL_FRIENDS);","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"    public void setFriend(Friend target, Friend editedFriend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"        requireAllNonNull(target, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"kevin9foong"},"content":"        friendsList.setFriend(target, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"    public void linkFriend(Friend toLink, HashSet\u003cGameFriendLink\u003e gameFriendLinks) {","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"        friendsList.linkFriend(toLink, gameFriendLinks);","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Friend List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"kevin9foong"},"content":"    public ObservableList\u003cFriend\u003e getFilteredFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"kevin9foong"},"content":"        return filteredFriends;","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"kevin9foong"},"content":"    public void updateFilteredFriendsList(Predicate\u003cFriend\u003e predicate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":158,"author":{"gitId":"kevin9foong"},"content":"        filteredFriends.setPredicate(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":161,"author":{"gitId":"tau-bar"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"tau-bar"},"content":"    public boolean hasFriendId(FriendId idToFind) {","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"tau-bar"},"content":"        requireNonNull(idToFind);","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"tau-bar"},"content":"        return this.getFriendsList().getFriendsList().stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"tau-bar"},"content":"                .anyMatch(friend -\u003e friend.getFriendId().equals(idToFind));","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"YeluriKetan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d GamesBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"YeluriKetan"},"content":"    public void setGamesList(ReadOnlyGamesList readOnlyGamesList) {","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"YeluriKetan"},"content":"        this.gamesList.resetData(readOnlyGamesList);","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"YeluriKetan"},"content":"    public ReadOnlyGamesList getGamesList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"YeluriKetan"},"content":"        return gamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"YeluriKetan"},"content":"    public boolean hasGame(Game game) {","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(game);","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"YeluriKetan"},"content":"        return gamesList.hasGame(game);","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"YeluriKetan"},"content":"    public boolean hasGameWithId(GameId gameId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"YeluriKetan"},"content":"        return gamesList.hasGameWithId(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"YeluriKetan"},"content":"    public void deleteGame(GameId targetId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"YeluriKetan"},"content":"        Game gameToDelete \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"YeluriKetan"},"content":"                this.getGamesList().getGamesList()","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"YeluriKetan"},"content":"                        .stream()","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"YeluriKetan"},"content":"                        .filter(game -\u003e game.getGameId().equals(targetId))","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"YeluriKetan"},"content":"                        .findFirst()","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"YeluriKetan"},"content":"                        .get();","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"YeluriKetan"},"content":"        gamesList.removeGame(gameToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"YeluriKetan"},"content":"    public void addGame(Game game) {","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"YeluriKetan"},"content":"        gamesList.addGame(game);","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"YeluriKetan"},"content":"        updateFilteredGamesList(PREDICATE_SHOW_ALL_GAMES);","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"YeluriKetan"},"content":"    public void setGame(Game target, Game editedGame) {","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"YeluriKetan"},"content":"        requireAllNonNull(target, editedGame);","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"YeluriKetan"},"content":"        gamesList.setGame(target, editedGame);","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"YeluriKetan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Game List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"YeluriKetan"},"content":"    public ObservableList\u003cGame\u003e getFilteredGamesList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"YeluriKetan"},"content":"        return filteredGames;","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":224,"author":{"gitId":"YeluriKetan"},"content":"    public void updateFilteredGamesList(Predicate\u003cGame\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"YeluriKetan"},"content":"        filteredGames.setPredicate(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"YeluriKetan"},"content":"    public boolean hasGameId(GameId idToFind) {","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(idToFind);","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"YeluriKetan"},"content":"        return this.getGamesList().getGamesList().stream()","lastModifiedDate":"2021-10-10"},{"lineNumber":233,"author":{"gitId":"YeluriKetan"},"content":"                .anyMatch(game -\u003e game.getGameId().equals(idToFind));","lastModifiedDate":"2021-10-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"kevin9foong"},"content":"        return friendsList.equals(other.friendsList)","lastModifiedDate":"2021-10-06"},{"lineNumber":251,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 filteredFriends.equals(other.filteredFriends)","lastModifiedDate":"2021-10-10"},{"lineNumber":252,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 gamesList.equals(other.gamesList)","lastModifiedDate":"2021-10-10"},{"lineNumber":253,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 filteredGames.equals(other.filteredGames)","lastModifiedDate":"2021-10-10"},{"lineNumber":254,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tau-bar":15,"YeluriKetan":91,"LZher385":5,"-":123,"kevin9foong":23}},{"path":"src/main/java/seedu/address/model/ReadOnlyFriendsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"public interface ReadOnlyFriendsList {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"     * Returns an unmodifiable view of the friends list.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"     * This list will not contain any duplicate friends.","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    ObservableList\u003cFriend\u003e getFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kevin9foong":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyGamesList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" * Unmodifiable view of a games-book","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"public interface ReadOnlyGamesList {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"     * Returns an unmodifiable view of the games list.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"     * This list will not contain any duplicate games.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    ObservableList\u003cGame\u003e getGamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":17}},{"path":"src/main/java/seedu/address/model/friend/Friend.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":" * Represents a Friend in the gitGud friend\u0027s list.","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"public class Friend {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    // Identity fields","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    // used to uniquely identify each Friend.","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"    private FriendId friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"    private FriendName friendName;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    // Data fields","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    private final Set\u003cGameFriendLink\u003e games \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a {@code Friend}.","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"     * @param friendId a valid friend id.","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"     * @param friendName a valid friend name.","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"     * @param games a set of game-friend links of this friend.","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    public Friend(FriendId friendId, FriendName friendName, Set\u003cGameFriendLink\u003e games) {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        requireAllNonNull(friendId, friendName, games);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        this.friendId \u003d friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        this.friendName \u003d friendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        this.games.addAll(games);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"     * Overloaded constructor using only friendId and friendName.","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"     * @param friendId Unique id of friend.","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"     * @param friendName Name of friend.","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"    public Friend(FriendId friendId, FriendName friendName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        requireAllNonNull(friendId, friendName);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        this.friendId \u003d friendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"        this.friendName \u003d friendName;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    public FriendId getFriendId() {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        return friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    public FriendName getName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        return friendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"     * Returns an immutable game set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"    public Set\u003cGameFriendLink\u003e getGames() {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        return Collections.unmodifiableSet(games);","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"     * Returns true if both friends have the same friendId, name and games.","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        if (!(other instanceof Friend)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"        Friend otherFriend \u003d (Friend) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"        return otherFriend.getFriendId().equals(getFriendId())","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 otherFriend.getGames().equals(getGames())","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 otherFriend.getName().equals(getName());","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"        return Objects.hash(friendId);","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"                .append(\"; Friend ID: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"                .append(getFriendId())","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"                .append(getName());","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"        Set\u003cGameFriendLink\u003e gameSet \u003d getGames();","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"        if (!gameSet.isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"            builder.append(\"; Games: \");","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"            gameSet.forEach(builder::append);","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tau-bar":12,"YeluriKetan":13,"kevin9foong":86}},{"path":"src/main/java/seedu/address/model/friend/FriendId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * Represents a Friend\u0027s unique friend identifier in the gitGud friend\u0027s list.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFriendId(String)}","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public class FriendId {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"            \"Friend IDs should be unique for each friend in the friend\u0027s list.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9._-]+$\";","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    public final String value;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code FriendId}.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     * @param friendId A valid friendId.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    public FriendId(String friendId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friendId);","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"        checkArgument(isValidFriendId(friendId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        value \u003d friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     * Returns true if a given string is a valid friendId.","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public static boolean isValidFriendId(String friendId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"        return friendId.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        return value;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"                || (other instanceof FriendId // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 value.equals(((FriendId) other).value)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tau-bar":2,"kevin9foong":49}},{"path":"src/main/java/seedu/address/model/friend/FriendIdContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":" * Tests that a {@code Friend}\u0027s {@code FriendId} matches any of the keywords given.","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"public class FriendIdContainsKeywordPredicate implements Predicate\u003cFriend\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"    private final String keyword;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    public FriendIdContainsKeywordPredicate(String keyword) {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    public String getKeyword() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"        return keyword;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    public boolean test(Friend friend) {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        // if no keyword is specified, all friends will be listed","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        return StringUtil.containsPartialWordIgnoreCase(friend.getFriendId().value, keyword);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"                || (other instanceof FriendIdContainsKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 keyword.equals(((FriendIdContainsKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"MarcusTXK":37}},{"path":"src/main/java/seedu/address/model/friend/FriendIdMatchesKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":" * Tests that a {@code Friend}\u0027s {@code FriendId} matches the keywords given.","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"public class FriendIdMatchesKeywordPredicate implements Predicate\u003cFriend\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"    private final String keyword;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    public FriendIdMatchesKeywordPredicate(String keyword) {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    public String getKeyword() {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"        return keyword;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    public boolean test(Friend friend) {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"        return keyword.equalsIgnoreCase(friend.getFriendId().value);","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"                || (other instanceof FriendIdMatchesKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 keyword.equalsIgnoreCase(((FriendIdMatchesKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"YeluriKetan":31}},{"path":"src/main/java/seedu/address/model/friend/FriendName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * Represents a Friend\u0027s name in the gitGud friend\u0027s list.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public class FriendName {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code FriendName}.","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     * @param name A valid friend\u0027s name.","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public FriendName(String name) {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"                || (other instanceof FriendName // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 fullName.equals(((FriendName) other).fullName)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kevin9foong":8,"-":51}},{"path":"src/main/java/seedu/address/model/friend/FriendNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" * Tests that a {@code Friend}\u0027s {@code FriendName} matches any of the keywords given.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public class FriendNameContainsKeywordsPredicate implements Predicate\u003cFriend\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    public FriendNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public boolean test(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(friend.getName().fullName, keyword));","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"                || (other instanceof FriendNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 keywords.equals(((FriendNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kevin9foong":31}},{"path":"src/main/java/seedu/address/model/friend/UniqueFriendsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.exceptions.DuplicateFriendException;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.exceptions.FriendNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":" * A list of friends that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":" * A friends is considered unique by comparing using {@code Friend#equals(Object)}. As such, adding and updating","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":" * of friends uses Friend#equals(Object) for equality so as to ensure that the friend being added or updated","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":" * is unique in terms of identity in the UniqueFriendsList. The removal of a friend also uses","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":" * Friend#equals(Object) so as to ensure that the friend with exactly the same friendId will be removed.","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":" * @see Friend#equals(Object)","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"public class UniqueFriendsList implements Iterable\u003cFriend\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    private final ObservableList\u003cFriend\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    private final ObservableList\u003cFriend\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     * Returns true if the list contains an equivalent friend as the given argument.","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public boolean contains(Friend toCheck) {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"     * Returns true if the list contains a friend with idToCheck.","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"    public boolean containsId(FriendId idToCheck) {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"        requireNonNull(idToCheck);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"        return internalList.stream().anyMatch(friend -\u003e friend.getFriendId().equals(idToCheck));","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"     * Adds a friend to the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"     * The friend must not already exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    public void add(Friend friendToAdd) {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(friendToAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        if (contains(friendToAdd)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"            throw new DuplicateFriendException();","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        internalList.add(friendToAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"     * Replaces the friend {@code friendToEdit} in the list with {@code editedFriend}.","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"     * {@code friendToEdit} must exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"     * The friend identity of {@code editedFriend} must not be the same as another existing friend in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    public void setFriend(Friend friendToEdit, Friend editedFriend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        requireAllNonNull(friendToEdit, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        int index \u003d internalList.indexOf(friendToEdit);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"            throw new FriendNotFoundException();","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        // guard against if editedFriend already exists in the UniqueFriendsList.","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        if (!friendToEdit.equals(editedFriend) \u0026\u0026 contains(editedFriend)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"            throw new DuplicateFriendException();","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"        internalList.set(index, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"     * Removes the equivalent friend from the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"     * The friend must exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"    public void remove(Friend toRemove) {","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"            throw new FriendNotFoundException();","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"LZher385"},"content":"     * Links a friend with the games he plays.","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"    public void link(Friend toLink, HashSet\u003cGameFriendLink\u003e gameFriendLinks) {","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"        requireAllNonNull(toLink, gameFriendLinks);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"        Set\u003cGameFriendLink\u003e newGameList \u003d new HashSet\u003c\u003e(toLink.getGames());","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"        // TODO - Yu Zher","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"        // Temporary fix. Change as deemed necessary.","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"        newGameList.addAll(gameFriendLinks);","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"LZher385"},"content":"        Friend editedFriend \u003d new Friend(toLink.getFriendId(), toLink.getName(), newGameList);","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"LZher385"},"content":"        this.setFriend(toLink, editedFriend);","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"    public void setFriends(UniqueFriendsList replacement) {","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"kevin9foong"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"     * Replaces the contents of this list with {@code friends}.","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"     * {@code friends} must not contain duplicate friends.","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"    public void setFriends(List\u003cFriend\u003e friends) {","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"kevin9foong"},"content":"        requireAllNonNull(friends);","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"        if (!friendsAreUnique(friends)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"            throw new DuplicateFriendException();","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"        internalList.setAll(friends);","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"kevin9foong"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"    public ObservableList\u003cFriend\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"kevin9foong"},"content":"    public Iterator\u003cFriend\u003e iterator() {","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"kevin9foong"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"kevin9foong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"kevin9foong"},"content":"                || (other instanceof UniqueFriendsList // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 internalList.equals(((UniqueFriendsList) other).internalList));","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"kevin9foong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"kevin9foong"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"kevin9foong"},"content":"     * Returns true if {@code friends} contains only unique friends.","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"kevin9foong"},"content":"    private boolean friendsAreUnique(List\u003cFriend\u003e friends) {","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"kevin9foong"},"content":"        for (int i \u003d 0; i \u003c friends.size() - 1; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"kevin9foong"},"content":"            for (int j \u003d i + 1; j \u003c friends.size(); j++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"kevin9foong"},"content":"                if (friends.get(i).equals(friends.get(j))) {","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"kevin9foong"},"content":"                    return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"kevin9foong"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"kevin9foong"},"content":"        return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"LZher385":19,"YeluriKetan":9,"kevin9foong":137}},{"path":"src/main/java/seedu/address/model/friend/exceptions/DuplicateFriendException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":" * Signals that the operation will result in duplicate Friends (Friends are considered duplicates if they have the same","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":" * friendId).","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"public class DuplicateFriendException extends RuntimeException {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"    public DuplicateFriendException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"        super(\"Operation would result in duplicate friends\");","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kevin9foong":11}},{"path":"src/main/java/seedu/address/model/friend/exceptions/FriendNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":" * Signals that the operation is unable to find the specified friend.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"public class FriendNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":2,"kevin9foong":5}},{"path":"src/main/java/seedu/address/model/friend/gamefriendlink/GameFriendLink.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.friend.gamefriendlink;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":" * Represents an association between a {@code Friend} and a {@code Game} that are present in the gitGud database.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"public class GameFriendLink {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    private GameId gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    private FriendId friendId;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    private UserName userName;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a {@code GameFriendLink}.","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     * @param gameId the valid game id of an existing {@code Game}.","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"     * @param friendId the valid friend id of an existing {@code Friend}.","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     * @param userName a valid username.","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    public GameFriendLink(GameId gameId, FriendId friendId, UserName userName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        requireAllNonNull(gameId, friendId, userName);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        this.gameId \u003d gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        this.friendId \u003d friendId;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        this.userName \u003d userName;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    public GameId getGameId() {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        return gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    public FriendId getFriendId() {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        return friendId;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    public UserName getUserName() {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        return userName;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        if (!(other instanceof GameFriendLink)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        GameFriendLink otherLink \u003d (GameFriendLink) other;","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"        return otherLink.getGameId().equals(getGameId())","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 otherLink.getFriendId().equals(getFriendId())","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 otherLink.getUserName().equals(getUserName());","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        return Objects.hash(gameId, friendId, userName);","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"        builder.append(\"Game ID: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"                .append(getGameId())","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"                .append(\"Username: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"                .append(getUserName());","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":80}},{"path":"src/main/java/seedu/address/model/friend/gamefriendlink/UserName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.friend.gamefriendlink;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" * Represents an in-game username of a {@code Friend} in a {@code Game} both of which are in the gitGud database.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidUserName(String)}","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"public class UserName {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"In-game usernames cannot be empty.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    /*","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"     * The first character of the username must not be a whitespace,","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\S.*$\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    public final String value;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a {@code UserName}.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"     * @param userName A valid username.","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    public UserName(String userName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(userName);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        checkArgument(isValidUserName(userName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        value \u003d userName;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    public static boolean isValidUserName(String test) {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        return value;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"                || (other instanceof UserName // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 value.equals(((UserName) other).value)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":58}},{"path":"src/main/java/seedu/address/model/game/Game.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * Represents a Game in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public class Game {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    // Identity field","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    // used to uniquely identify each Game.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    public final GameId gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code Game}.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     * @param gameId A valid game name.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    public Game (GameId gameId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        this.gameId \u003d gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    public GameId getGameId() {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        return gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        if (!(other instanceof Game)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        Game otherGame \u003d (Game) other;","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        return otherGame.getGameId().equals(getGameId());","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        return Objects.hash(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        builder.append(\"Game ID: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"                .append(getGameId());","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"YeluriKetan":28,"kevin9foong":33}},{"path":"src/main/java/seedu/address/model/game/GameId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" * Represents a Game\u0027s unique identifier in the gitGud game\u0027s list.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGameId(String)}","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"public class GameId {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"            \"Game IDs should be unique for each game in the game\u0027s list.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9._-]+$\";","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    public final String value;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a {@code GameId}.","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     * @param gameId A valid gameId.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    public GameId(String gameId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        checkArgument(isValidGameId(gameId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"        value \u003d gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if a given string is a valid gameId.","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    public static boolean isValidGameId(String gameId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        return gameId.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        return value;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"                || (other instanceof GameId // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 value.equals(((GameId) other).value)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":51}},{"path":"src/main/java/seedu/address/model/game/GameIdContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" * Tests that a {@code Game}\u0027s {@code GameId} matches any of the keywords given.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"public class GameIdContainsKeywordPredicate implements Predicate\u003cGame\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    private final String keyword;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    public GameIdContainsKeywordPredicate(String keyword) {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    public String getKeyword() {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"        return keyword;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    public boolean test(Game game) {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        // if no keyword is specified, all games will be listed","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        return StringUtil.containsPartialWordIgnoreCase(game.getGameId().value, keyword);","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"                || (other instanceof GameIdContainsKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 keyword.equals(((GameIdContainsKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":37}},{"path":"src/main/java/seedu/address/model/game/UniqueGamesList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.exceptions.DuplicateGameException;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.exceptions.GameNotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" * A list of games that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":" * Games is considered unique by comparing using {@code Game#equals(Object)}. As such, adding and updating","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":" * of games uses Game#equals(Object) for equality to ensure that the game being added or updated","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":" * is unique in terms of identity in the UniqueGamesList. The removal of a game also uses","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":" * Game#equals(Object) to ensure that the game with exactly the same gameId will be removed.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":" * @see Game#equals(Object)","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"public class UniqueGamesList implements Iterable\u003cGame\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    private final ObservableList\u003cGame\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    private final ObservableList\u003cGame\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if the list contains an equivalent game as the given argument.","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    public boolean contains(Game toCheck) {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if the list contains a game with idToCheck.","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    public boolean containsId(GameId idToCheck) {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(idToCheck);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        return internalList.stream().anyMatch(game -\u003e game.getGameId().equals(idToCheck));","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"     * Adds a game to the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"     * The game must not already exist in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    public void add(Game gameToAdd) {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(gameToAdd);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"        if (contains(gameToAdd)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"            throw new DuplicateGameException();","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        internalList.add(gameToAdd);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces the game {@code gameToEdit} in the list with {@code editedGame}.","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"     * {@code gameToEdit} must exist in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"     * The game identity of {@code editedGame} must not be the same as another existing game in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"    public void setGame(Game gameToEdit, Game editedGame) {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"        requireAllNonNull(gameToEdit, editedGame);","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"        int index \u003d internalList.indexOf(gameToEdit);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"            throw new GameNotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"        // guard against if editedGame already exists in the UniqueGamesList.","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"        if (!gameToEdit.equals(editedGame) \u0026\u0026 contains(editedGame)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"            throw new DuplicateGameException();","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        internalList.set(index, editedGame);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"     * Removes the equivalent game from the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"     * The game must exist in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"    public void remove(Game toRemove) {","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"            throw new GameNotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"    public void setGames(UniqueGamesList replacement) {","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"     * Replaces the contents of this list with {@code games}.","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"     * {@code games} must not contain duplicate games.","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"    public void setGames(List\u003cGame\u003e games) {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"        requireAllNonNull(games);","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"        if (!gamesAreUnique(games)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"            throw new DuplicateGameException();","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"        internalList.setAll(games);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"    public ObservableList\u003cGame\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"    public Iterator\u003cGame\u003e iterator() {","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"                || (other instanceof UniqueGamesList // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"                \u0026\u0026 internalList.equals(((UniqueGamesList) other).internalList));","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if {@code games} contains only unique games.","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"    private boolean gamesAreUnique(List\u003cGame\u003e games) {","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"        for (int i \u003d 0; i \u003c games.size() - 1; i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"            for (int j \u003d i + 1; j \u003c games.size(); j++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"                if (games.get(i).equals(games.get(j))) {","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"                    return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"        return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":147}},{"path":"src/main/java/seedu/address/model/game/exceptions/DuplicateGameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.game.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":" * Signals that the operation will result in duplicate Games (Games are considered duplicates if they have the same","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":" * gameId).","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"public class DuplicateGameException extends RuntimeException {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"    public DuplicateGameException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"        super(\"Operation would result in duplicate games\");","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":12}},{"path":"src/main/java/seedu/address/model/game/exceptions/GameNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.model.game.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":" * Signals that the operation is unable to find the specified game.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"public class GameNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":7}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    public static Friend[] getSampleFriends() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"        return new Friend[] {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"            new Friend(new FriendId(\"AlexY123\"), new FriendName(\"Alex Yeoh\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"                getGameSet(\"Valorant\", \"Minecraft\")),","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"            new Friend(new FriendId(\"BernieSanders\"), new FriendName(\"Bernice Yu\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"                getGameSet(\"Rocket League\", \"Doom\")),","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"            new Friend(new FriendId(\"ChickenTender\"), new FriendName(\"Charlotte Oliveiro\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"                getGameSet(\"Halo\", \"Valorant\")),","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"            new Friend(new FriendId(\"Davidz\"), new FriendName(\"David Li\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"                getGameSet(\"Apex Legends\")),","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"            new Friend(new FriendId(\"II3\"), new FriendName(\"Irfan Ibrahim\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"                getGameSet(\"CSGO\")),","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"            new Friend(new FriendId(\"RoyJoy\"), new FriendName(\"Roy Balakrishnan\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"                getGameSet(\"Valorant\", \"CSGO\"))","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    public static ReadOnlyFriendsList getSampleFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        FriendsList sampleAb \u003d new FriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        for (Friend sampleFriend : getSampleFriends()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"            sampleAb.addFriend(sampleFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    public static Set\u003cGameFriendLink\u003e getGameSet(String... strings) {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        //        return Arrays.stream(strings)","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        //                .map(Game)","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        //                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        return new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"YeluriKetan":7,"-":22,"kevin9foong":23}},{"path":"src/main/java/seedu/address/storage/FriendsListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" * Represents a storage for {@link FriendsList}.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"public interface FriendsListStorage {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     * Returns AddressBook data as a {@link ReadOnlyFriendsList}.","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    Optional\u003cReadOnlyFriendsList\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    Optional\u003cReadOnlyFriendsList\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     * Saves the given {@link ReadOnlyFriendsList} to the storage.","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    void saveAddressBook(ReadOnlyFriendsList addressBook) throws IOException;","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"     * @see #saveAddressBook(ReadOnlyFriendsList)","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    void saveAddressBook(ReadOnlyFriendsList addressBook, Path filePath) throws IOException;","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":35,"kevin9foong":11}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedFriend.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":" * Jackson-friendly version of {@link Friend}.","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"class JsonAdaptedFriend {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Friend\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    private final String friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    private final String friendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    private final List\u003cJsonAdaptedGame\u003e games \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    public JsonAdaptedFriend(@JsonProperty(\"friendId\") String friendId,","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"                             @JsonProperty(\"friendName\") String friendName,","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"                             @JsonProperty(\"games\") List\u003cJsonAdaptedGame\u003e games) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        this.friendId \u003d friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        this.friendName \u003d friendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        if (games !\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"            this.games.addAll(games);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    public JsonAdaptedFriend(Friend sourceInstance) {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        friendId \u003d sourceInstance.getFriendId().value;","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        friendName \u003d sourceInstance.getName().fullName;","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        //        games.addAll(sourceInstance.getGames().stream()","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        //                .map(JsonAdaptedGame::new)","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        //                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    public Friend toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        final List\u003cGame\u003e friendGames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        for (JsonAdaptedGame game : games) {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"            friendGames.add(game.toModelType());","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"        if (friendId \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"                    FriendId.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        if (!FriendId.isValidFriendId(friendId)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"            throw new IllegalValueException(FriendId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        if (friendName \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"                    FriendName.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        if (!FriendName.isValidName(friendName)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"            throw new IllegalValueException(FriendName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        final FriendId modelFriendId \u003d new FriendId(friendId);","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"        final FriendName modelFriendName \u003d new FriendName(friendName);","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"        final Set\u003cGameFriendLink\u003e modelGames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"        return new Friend(modelFriendId, modelFriendName, modelGames);","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"YeluriKetan":5,"kevin9foong":81}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGame.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":" * Jackson-friendly version of {@link Game}.","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"class JsonAdaptedGame {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    private final String gameName;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    public JsonAdaptedGame(String gameName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"        this.gameName \u003d gameName;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public JsonAdaptedGame(Game sourceInstance) {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        gameName \u003d sourceInstance.getGameId().value;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    public String getGameName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        return gameName;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    public Game toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        if (!GameId.isValidGameId(gameName)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"            throw new IllegalValueException(GameId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        return new Game(new GameId(gameName));","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"YeluriKetan":5,"-":34,"kevin9foong":10}},{"path":"src/main/java/seedu/address/storage/JsonFriendsListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"public class JsonFriendsListStorage implements FriendsListStorage {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonFriendsListStorage.class);","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public JsonFriendsListStorage(Path filePath) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    public Optional\u003cReadOnlyFriendsList\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    public Optional\u003cReadOnlyFriendsList\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    public void saveAddressBook(ReadOnlyFriendsList addressBook) throws IOException {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyFriendsList)}.","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"    public void saveAddressBook(ReadOnlyFriendsList addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":71,"kevin9foong":9}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    private final List\u003cJsonAdaptedFriend\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedFriend\u003e persons) {","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    public JsonSerializableAddressBook(ReadOnlyFriendsList source) {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        persons.addAll(source.getFriendsList().stream().map(JsonAdaptedFriend::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    public FriendsList toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        FriendsList friendsList \u003d new FriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        for (JsonAdaptedFriend jsonAdaptedFriend : persons) {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"            Friend friend \u003d jsonAdaptedFriend.toModelType();","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"            if (friendsList.hasFriend(friend)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"            friendsList.addFriend(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        return friendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":46,"kevin9foong":14}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"public interface Storage extends FriendsListStorage, UserPrefsStorage {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    Optional\u003cReadOnlyFriendsList\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    void saveAddressBook(ReadOnlyFriendsList addressBook) throws IOException;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":28,"kevin9foong":4}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    private FriendsListStorage friendsListStorage;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public StorageManager(FriendsListStorage friendsListStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        this.friendsListStorage \u003d friendsListStorage;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        return friendsListStorage.getAddressBookFilePath();","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    public Optional\u003cReadOnlyFriendsList\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        return readAddressBook(friendsListStorage.getAddressBookFilePath());","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    public Optional\u003cReadOnlyFriendsList\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"        return friendsListStorage.readAddressBook(filePath);","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    public void saveAddressBook(ReadOnlyFriendsList addressBook) throws IOException {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        saveAddressBook(addressBook, friendsListStorage.getAddressBookFilePath());","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"    public void saveAddressBook(ReadOnlyFriendsList addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        friendsListStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":66,"kevin9foong":13}},{"path":"src/main/java/seedu/address/ui/FriendCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"public class FriendCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    public final Friend friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    private Label friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    private Label friendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    private Label id;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    private FlowPane games;","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    public FriendCard(Friend friend, int displayedIndex) {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        this.friend \u003d friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        friendId.setText(friend.getFriendId().value);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        friendName.setText(friend.getName().fullName);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        friend.getGames().stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"                .sorted(Comparator.comparing(game -\u003e game.getGameId().value))","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"                .forEach(game -\u003e games.getChildren().add(new Label(game.getGameId().value + \" \")));","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        if (!(other instanceof FriendCard)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        FriendCard card \u003d (FriendCard) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"                \u0026\u0026 friend.equals(card.friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"YeluriKetan":2,"-":54,"kevin9foong":15}},{"path":"src/main/java/seedu/address/ui/FriendMainCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"public class FriendMainCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"    private static final String FXML \u003d \"FriendMainCard.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"    private static final String FRIEND_TITLE \u003d \"%s \\n Friend ID: %s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FriendMainCard.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"    private Label friendTitle;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"    private ListView\u003cGame\u003e gameListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"    private Friend currentFriend;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"     * Creates a {@code FriendMainCard} with the given {@Code Friend} and {@code ObservableList}.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"    public FriendMainCard(Friend friend, ObservableList\u003cGame\u003e gameList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"        friendTitle.setText(String.format(FRIEND_TITLE, friend.getName(), friend.getFriendId()));","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"        gameListView.setItems(gameList);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"        gameListView.setCellFactory(listView -\u003e new GameListViewCell());","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"        this.currentFriend \u003d friend;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"    public Friend getCurrentFriend() {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"        return currentFriend;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Game} using a {@code GameCard}.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"    class GameListViewCell extends ListCell\u003cGame\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        protected void updateItem(Game game, boolean empty) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"            super.updateItem(game, empty);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"            if (empty || game \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"                setText(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"                Label gameList \u003d new Label();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"                gameList.setText(game.getGameId().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"                setGraphic(gameList);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tau-bar":61}},{"path":"src/main/java/seedu/address/ui/GameMainCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"public class GameMainCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"    private static final String FXML \u003d \"GameMainCard.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"    private static final String GAME_TITLE \u003d \"Game: %s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GameMainCard.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"    private Label gameTitle;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":"    private ListView\u003cFriend\u003e friendListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"    private Game currentGame;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"     * Creates a {@code GameMainCard} with the given {@Code Game} and {@code ObservableList}.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"    public GameMainCard(Game game, ObservableList\u003cFriend\u003e friendList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"        gameTitle.setText(String.format(GAME_TITLE, game.getGameId()));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"        friendListView.setItems(friendList);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"        friendListView.setCellFactory(listView -\u003e new FriendListViewCell());","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"        this.currentGame \u003d game;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"    public Game getCurrentGame() {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        return currentGame;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Friend} using a {@code FriendCard}.","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"    class FriendListViewCell extends ListCell\u003cFriend\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        protected void updateItem(Friend friend, boolean empty) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"            super.updateItem(friend, empty);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"            if (empty || friend \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"                setText(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"                Label gameList \u003d new Label();","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"                gameList.setText(friend.getFriendId().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"                setGraphic(gameList);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tau-bar":62}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"    private FriendMainCard friendMainCard;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"    private GameMainCard gameMainCard;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredFriendsList());","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"tau-bar"},"content":"        showFriendList();","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"tau-bar"},"content":"    private void removePersonListPanel() {","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"tau-bar"},"content":"        personListPanelPlaceholder.getChildren().removeAll(personListPanel.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"tau-bar"},"content":"    private void removeFriendMainCard() {","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"tau-bar"},"content":"        if (friendMainCard !\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"tau-bar"},"content":"            personListPanelPlaceholder.getChildren().removeAll(friendMainCard.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"tau-bar"},"content":"            friendMainCard \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"tau-bar"},"content":"    private void removeGameMainCard() {","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"tau-bar"},"content":"        if (gameMainCard !\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"tau-bar"},"content":"            personListPanelPlaceholder.getChildren().removeAll(gameMainCard.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"tau-bar"},"content":"            gameMainCard \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"tau-bar"},"content":"     * Shows the {@Code FriendMainCard} when the {@Code find} command is run.","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"tau-bar"},"content":"     * @param commandResult The {@Code commandResult} from the find command.","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"tau-bar"},"content":"    private void handleShowFriendMainCard(CommandResult commandResult) {","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"tau-bar"},"content":"        // only mounts the friend main card if it is not already mounted or if friend different","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"tau-bar"},"content":"        if (friendMainCard \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"tau-bar"},"content":"            removePersonListPanel();","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"tau-bar"},"content":"            removeGameMainCard();","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"tau-bar"},"content":"            friendMainCard \u003d new FriendMainCard(commandResult.getFriendToGet(), logic.getFilteredGamesList());","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"tau-bar"},"content":"            personListPanelPlaceholder.getChildren().add(friendMainCard.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"tau-bar"},"content":"        } else if (!friendMainCard.getCurrentFriend().equals(commandResult.getFriendToGet())) {","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"tau-bar"},"content":"            removeFriendMainCard();","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"tau-bar"},"content":"            friendMainCard \u003d new FriendMainCard(commandResult.getFriendToGet(), logic.getFilteredGamesList());","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"tau-bar"},"content":"            personListPanelPlaceholder.getChildren().add(friendMainCard.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"tau-bar"},"content":"     * Shows the {@Code GameMainCard} when the {@Code find} command is run.","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"tau-bar"},"content":"     * @param commandResult The {@Code commandResult} from the find command.","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"tau-bar"},"content":"    private void handleShowGameMainCard(CommandResult commandResult) {","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"tau-bar"},"content":"        // only mounts the friend main card if it is not already mounted","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"tau-bar"},"content":"        if (gameMainCard \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"tau-bar"},"content":"            // add code to removeGameListPanel","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"tau-bar"},"content":"            removeFriendMainCard();","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"tau-bar"},"content":"            removePersonListPanel();","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"tau-bar"},"content":"            //TODO: the friend list that is retrieved should contain friends that play that game only","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"tau-bar"},"content":"            gameMainCard \u003d new GameMainCard(commandResult.getGameToGet(), logic.getFilteredFriendsList());","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"tau-bar"},"content":"            personListPanelPlaceholder.getChildren().add(gameMainCard.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"tau-bar"},"content":"        } else if (!gameMainCard.getCurrentGame().equals(commandResult.getGameToGet())) {","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"tau-bar"},"content":"            removePersonListPanel();","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"tau-bar"},"content":"            gameMainCard \u003d new GameMainCard(commandResult.getGameToGet(), logic.getFilteredFriendsList());","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"tau-bar"},"content":"            personListPanelPlaceholder.getChildren().add(gameMainCard.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"tau-bar"},"content":"     * Shows the {@Code PersonListPanel} when the {@Code friend --list} command is run.","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"tau-bar"},"content":"    private void showFriendList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"tau-bar"},"content":"        // only shows friend list if not already being shown","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"tau-bar"},"content":"        if (!personListPanelPlaceholder.getChildren().contains(personListPanel.getRoot())) {","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"tau-bar"},"content":"            personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"tau-bar"},"content":"     * Handles the mounting and dismounting of UI Regions when a {@Code friend}","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"tau-bar"},"content":"     * command is run.","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"tau-bar"},"content":"     * @param commandResult The {@Code commandResult} from the {@Code friend} command.","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"tau-bar"},"content":"    private void handleFriendCommand(CommandResult commandResult) {","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"tau-bar"},"content":"        if (commandResult.isFriendGet()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"tau-bar"},"content":"            handleShowFriendMainCard(commandResult);","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"tau-bar"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"tau-bar"},"content":"            // TODO: remove the friend main card and show the friend list","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"tau-bar"},"content":"            removeFriendMainCard();","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"tau-bar"},"content":"            removeGameMainCard();","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"tau-bar"},"content":"            showFriendList();","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"tau-bar"},"content":"     * Handles the mounting and dismounting of UI Regions when a {@Code game}","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"tau-bar"},"content":"     * command is run.","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"tau-bar"},"content":"     * @param commandResult The {@Code commandResult} from the {@Code game} command.","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"tau-bar"},"content":"    // TODO: Handle the game command to list or get","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"tau-bar"},"content":"    private void handleGameCommand(CommandResult commandResult) {","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"tau-bar"},"content":"        if (commandResult.isGameGet()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"tau-bar"},"content":"            // TODO: hide the personlist panel","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"tau-bar"},"content":"            //TODO: show the game detailed card","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"tau-bar"},"content":"            handleShowGameMainCard(commandResult);","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"tau-bar"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"tau-bar"},"content":"            // TODO: temporary, replace with showGameList","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"tau-bar"},"content":"            showFriendList();","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"tau-bar"},"content":"            // removes everything else","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"tau-bar"},"content":"            //TODO: Add code to remove friend list","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"tau-bar"},"content":"            removeFriendMainCard();","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"tau-bar"},"content":"            removeGameMainCard();","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"tau-bar"},"content":"     * Executes the command based on the {@Code CommandType}","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"tau-bar"},"content":"     * enumeration.","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":288,"author":{"gitId":"tau-bar"},"content":"            switch (commandResult.getCommandType()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"tau-bar"},"content":"            case FRIEND_GET: case FRIEND_ADD: case FRIEND_LIST: case FRIEND_DELETE:","lastModifiedDate":"2021-10-12"},{"lineNumber":290,"author":{"gitId":"tau-bar"},"content":"                handleFriendCommand(commandResult);","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"tau-bar"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"tau-bar"},"content":"            case GAME_ADD: case GAME_GET: case GAME_DELETE: case GAME_LIST:","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"tau-bar"},"content":"                handleGameCommand(commandResult);","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"tau-bar"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"tau-bar"},"content":"            case HELP:","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":297,"author":{"gitId":"tau-bar"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"tau-bar"},"content":"            case EXIT:","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":300,"author":{"gitId":"tau-bar"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"tau-bar"},"content":"            default:","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"tau-bar"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tau-bar":122,"YeluriKetan":1,"-":188}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    private ListView\u003cFriend\u003e personListView;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public PersonListPanel(ObservableList\u003cFriend\u003e friendList) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        personListView.setItems(friendList);","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    class PersonListViewCell extends ListCell\u003cFriend\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        protected void updateItem(Friend friend, boolean empty) {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"            super.updateItem(friend, empty);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"            if (empty || friend \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"                setGraphic(new FriendCard(friend, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":40,"kevin9foong":9}},{"path":"src/main/resources/view/FriendMainCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"   \u003cLabel fx:id\u003d\"friendTitle\" text\u003d\"Friend Name\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"  \u003cListView fx:id\u003d\"gameListView\" prefHeight\u003d\"226.0\" prefWidth\u003d\"248.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tau-bar":10}},{"path":"src/main/resources/view/GameMainCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"    \u003cLabel fx:id\u003d\"gameTitle\" text\u003d\"Game Name\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"    \u003cListView fx:id\u003d\"friendListView\" prefHeight\u003d\"226.0\" prefWidth\u003d\"248.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tau-bar":10}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        \u003cVBox fx:id\u003d\"friendList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":60,"kevin9foong":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        \u003cLabel fx:id\u003d\"friendName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"      \u003cFlowPane fx:id\u003d\"games\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"      \u003cLabel fx:id\u003d\"friendId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$friendId\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":31,"kevin9foong":3}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\": \"123\",","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\": \"kevin\",","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"    \"games\": [","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"      \"Valorant\"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"    ]","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"  },","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"      \"friendId\": \"123\",","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"      \"friendName\": \"kevin\",","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"      \"games\": [","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"        \"Valorant\"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"      ]","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    ]","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":3,"kevin9foong":14}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"    \"friendId\": \"94351253\",","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"    \"friendName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"    \"games\": [","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"      \"CSGO\"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"    ]","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"  },","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"      \"friendId\": \"98765432\",","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"      \"friendName\": \"Benson Meier\",","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"      \"games\": [","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"        \"CSGO\",","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"        \"Valorant\"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"      ]","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    },","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"      \"friendId\": \"95352563\",","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"      \"friendName\": \"Carl Kurz\",","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"      \"games\": []","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    },","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"      \"friendId\": \"87652533\",","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"      \"friendName\": \"Daniel Meier\",","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"      \"games\": []","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    },","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"      \"friendId\": \"9482224\",","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"      \"friendName\": \"Elle Meyer\",","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"      \"games\": []","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    },","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"      \"friendId\": \"9482427\",","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"      \"friendName\": \"Fiona Kunz\",","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"      \"games\": []","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    },","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"      \"friendId\": \"9482442\",","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"      \"friendName\": \"George Best\",","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"      \"games\": []","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"  ]","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":4,"kevin9foong":40}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"MarcusTXK"},"content":"    //---------------- Tests for containsPartialWordIgnoreCase --------------------------------------","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"MarcusTXK"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"MarcusTXK"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"MarcusTXK"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"MarcusTXK"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"    public void containsPartialWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"MarcusTXK"},"content":"                StringUtil.containsPartialWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"MarcusTXK"},"content":"    public void containsPartialWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"MarcusTXK"},"content":"                StringUtil.containsPartialWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"MarcusTXK"},"content":"    public void containsPartialWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"MarcusTXK"},"content":"                StringUtil.containsPartialWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"MarcusTXK"},"content":"    public void containsPartialWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsPartialWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"MarcusTXK"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"MarcusTXK"},"content":"     *   - any word","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"MarcusTXK"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"MarcusTXK"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"MarcusTXK"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"MarcusTXK"},"content":"     *   - empty string","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"MarcusTXK"},"content":"     *   - one word","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"MarcusTXK"},"content":"     *   - multiple words","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"MarcusTXK"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"MarcusTXK"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"MarcusTXK"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"MarcusTXK"},"content":"     *   - last word in sentence","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"MarcusTXK"},"content":"     *   - middle word in sentence","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"MarcusTXK"},"content":"     *   - matches multiple words","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"MarcusTXK"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"MarcusTXK"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"MarcusTXK"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"MarcusTXK"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"MarcusTXK"},"content":"    public void containsPartialWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"MarcusTXK"},"content":"        // Empty sentence","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"MarcusTXK"},"content":"        // Wrong matches","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"MarcusTXK"},"content":"        // Query word bigger than sentence word","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"MarcusTXK"},"content":"        // Query word not in sentence word","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"aaa bbb ccc\", \"zzz\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"MarcusTXK"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"MarcusTXK"},"content":"        // Partial word present","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bbb ccc\", \"bb\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"MarcusTXK"},"content":"        // First word (boundary case)","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"MarcusTXK"},"content":"        // Last word (boundary case)","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"MarcusTXK"},"content":"        // Sentence has extra spaces","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"MarcusTXK"},"content":"        // Only one word in sentence (boundary case)","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"Aaa\", \"aaa\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"MarcusTXK"},"content":"        // Leading/trailing spaces","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"MarcusTXK"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"MarcusTXK":88,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FRIEND_ID_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.AddFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.DeleteFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"import seedu.address.storage.JsonFriendsListStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        JsonFriendsListStorage addressBookStorage \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"                new JsonFriendsListStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"        String deleteCommand \u003d DeleteFriendCommand.COMMAND_WORD + \" daksjhdkjashdjkashkdjashjkaskjdjkasdhkas\";","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        // TODO Update after delete command is updated","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        // assertCommandException(deleteCommand, MESSAGE_NONEXISTENT_FRIEND_ID);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"        // no flag will default to listing all friends","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"        // TODO Update after list command is updated","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"        // String listCommand \u003d ListFriendCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"        // assertCommandSuccess(listCommand,","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"        //         String.format(ListFriendCommand.MESSAGE_SUCCESS_PREPEND, ListFriendCommand.FRIEND_LIST), model);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        JsonFriendsListStorage addressBookStorage \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"                new JsonFriendsListIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"tau-bar"},"content":"        String addFriendCommand \u003d AddFriendCommand.COMMAND_WORD + FRIEND_ID_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"        Friend expectedFriend \u003d new FriendBuilder(AMY).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        expectedModel.addFriend(expectedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"        // TODO Update after add command is updated","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"        // assertCommandFailure(addFriendCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredFriendsList().remove(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"kevin9foong"},"content":"    private static class JsonFriendsListIoExceptionThrowingStub extends JsonFriendsListStorage {","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"kevin9foong"},"content":"        private JsonFriendsListIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"kevin9foong"},"content":"        public void saveAddressBook(ReadOnlyFriendsList addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tau-bar":10,"MarcusTXK":14,"YeluriKetan":2,"-":132,"kevin9foong":10}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        Model model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        expectedModel.setFriendsList(new FriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"YeluriKetan":3,"-":27,"kevin9foong":3}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GAME_OLD;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.EditFriendDescriptorBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public static final String VALID_FRIEND_ID_AMY \u003d \"123\";","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    public static final String VALID_FRIEND_ID_BOB \u003d \"456\";","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    public static final String VALID_GAME_ID_CSGO \u003d \"CSGO\";","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    public static final String VALID_GAME_ID_APEX_LEGENDS \u003d \"ApexLegends\";","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"    public static final String FRIEND_ID_DESC_AMY \u003d \" \" + VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"    public static final String FRIEND_ID_DESC_BOB \u003d \" \" + VALID_FRIEND_ID_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + FLAG_FRIEND_NAME + \" \" + VALID_NAME_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + FLAG_FRIEND_NAME + \" \" + VALID_NAME_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    public static final String GAME_DESC_AMY \u003d \" \" + FLAG_GAME_OLD + VALID_GAME_ID_APEX_LEGENDS;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    public static final String GAME_DESC_BOB \u003d \" \" + FLAG_GAME_OLD + VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"    public static final String GAME_DESC_CSGO \u003d \" \" + FLAG_GAME_OLD + VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"    public static final String GAME_DESC_APEX_LEGENDS \u003d \" \" + FLAG_GAME_OLD + VALID_GAME_ID_APEX_LEGENDS;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + FLAG_FRIEND_NAME + \" \" + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"    public static final String INVALID_GAME_DESC \u003d \" \" + FLAG_GAME_OLD + \"kickstar*\"; // \u0027*\u0027 not allowed in games","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  --name\";","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    public static final EditCommand.EditFriendDescriptor DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    public static final EditCommand.EditFriendDescriptor DESC_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        DESC_AMY \u003d new EditFriendDescriptorBuilder().withFriendId(VALID_FRIEND_ID_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"                .withFriendName(VALID_NAME_AMY).withGames(VALID_GAME_ID_APEX_LEGENDS).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        DESC_BOB \u003d new EditFriendDescriptorBuilder().withFriendId(VALID_FRIEND_ID_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"                .withFriendName(VALID_NAME_BOB).withGames(VALID_GAME_ID_CSGO).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"        FriendsList expectedFriendsList \u003d new FriendsList(actualModel.getFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"        List\u003cFriend\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedFriendsList, actualModel.getFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredFriendsList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"        Friend friend \u003d model.getFilteredFriendsList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"        final String[] splitName \u003d friend.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"        model.updateFilteredFriendsList(new FriendNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(1, model.getFilteredFriendsList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tau-bar":7,"MarcusTXK":6,"YeluriKetan":4,"-":76,"kevin9foong":22}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.EditCommand.EditFriendDescriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.EditFriendDescriptorBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    private final Model model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        Friend editedFriend \u003d new FriendBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        EditCommand.EditFriendDescriptor descriptor \u003d new EditFriendDescriptorBuilder(editedFriend).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FRIEND_SUCCESS, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        Model expectedModel \u003d new ModelManager(new FriendsList(model.getFriendsList()), getTypicalGamesList(),","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"                new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        expectedModel.setFriend(model.getFilteredFriendsList().get(0), editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredFriendsList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        Friend lastFriend \u003d model.getFilteredFriendsList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        FriendBuilder personInList \u003d new FriendBuilder(lastFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        Friend editedFriend \u003d personInList.withFriendName(VALID_NAME_BOB).withFriendId(VALID_FRIEND_ID_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"                .withGames(VALID_GAME_ID_CSGO).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        EditCommand.EditFriendDescriptor descriptor \u003d new EditFriendDescriptorBuilder().withFriendName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"                .withFriendId(VALID_FRIEND_ID_BOB).withGames(VALID_GAME_ID_CSGO).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FRIEND_SUCCESS, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"        Model expectedModel \u003d new ModelManager(new FriendsList(model.getFriendsList()), getTypicalGamesList(),","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"                new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        expectedModel.setFriend(lastFriend, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditCommand.EditFriendDescriptor());","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        Friend editedFriend \u003d model.getFilteredFriendsList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FRIEND_SUCCESS, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"        Model expectedModel \u003d new ModelManager(new FriendsList(model.getFriendsList()), getTypicalGamesList(),","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"                new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"        Friend friendInFilteredList \u003d model.getFilteredFriendsList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"        Friend editedFriend \u003d new FriendBuilder(friendInFilteredList).withFriendName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"                new EditFriendDescriptorBuilder().withFriendName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FRIEND_SUCCESS, editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"        Model expectedModel \u003d new ModelManager(new FriendsList(model.getFriendsList()), getTypicalGamesList(),","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"                new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"        expectedModel.setFriend(model.getFilteredFriendsList().get(0), editedFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"        Friend firstFriend \u003d model.getFilteredFriendsList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"        EditFriendDescriptor descriptor \u003d new EditFriendDescriptorBuilder(firstFriend).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_FRIEND);","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"kevin9foong"},"content":"        Friend friendInList \u003d model.getFriendsList().getFriendsList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"                new EditFriendDescriptorBuilder(friendInList).build());","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_FRIEND);","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"kevin9foong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredFriendsList().size() + 1);","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"        EditCommand.EditFriendDescriptor descriptor \u003d new EditFriendDescriptorBuilder()","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"                .withFriendName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getFriendsList().getFriendsList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"kevin9foong"},"content":"                new EditFriendDescriptorBuilder().withFriendName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"kevin9foong"},"content":"        EditFriendDescriptor copyDescriptor \u003d new EditFriendDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"YeluriKetan":13,"-":128,"kevin9foong":38}},{"path":"src/test/java/seedu/address/logic/commands/EditFriendDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.EditFriendDescriptorBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"public class EditFriendDescriptorTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"        EditCommand.EditFriendDescriptor descriptorWithSameValues \u003d new EditCommand.EditFriendDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        // different friendId -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        EditCommand.EditFriendDescriptor editedAmy \u003d new EditFriendDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"                .withFriendId(VALID_FRIEND_ID_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        editedAmy \u003d new EditFriendDescriptorBuilder(DESC_AMY).withFriendName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        // different games -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        //        editedAmy \u003d new EditFriendDescriptorBuilder(DESC_AMY).withGames(VALID_GAME_ID_CSGO).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        //        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"YeluriKetan":2,"kevin9foong":45}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, CommandType.EXIT);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tau-bar":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.CARL;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.ELLE;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.FIONA;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    private final Model model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(),","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        FriendNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"                new FriendNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        FriendNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"                new FriendNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        FriendNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        expectedModel.updateFilteredFriendsList(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        FriendNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        expectedModel.updateFilteredFriendsList(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"    private FriendNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"        return new FriendNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"YeluriKetan":4,"-":64,"kevin9foong":17}},{"path":"src/test/java/seedu/address/logic/commands/GetFriendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_FRIEND_ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalFriends.BENSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.GetFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.FriendIdMatchesKeywordPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":" * Contains integration tests (interaction with the Model) for {@code GetCommand}.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"public class GetFriendCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    private final Model model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(),","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        FriendIdMatchesKeywordPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"                new FriendIdMatchesKeywordPredicate(\"first\");","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        FriendIdMatchesKeywordPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"                new FriendIdMatchesKeywordPredicate(\"second\");","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        GetFriendCommand getFirstCommand \u003d new GetFriendCommand(firstPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        GetFriendCommand getSecondCommand \u003d new GetFriendCommand(secondPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(getFirstCommand.equals(getFirstCommand));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        GetFriendCommand getFirstCommandCopy \u003d new GetFriendCommand(firstPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(getFirstCommand.equals(getFirstCommandCopy));","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(getFirstCommand.equals(1));","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(getFirstCommand.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(getFirstCommand.equals(getSecondCommand));","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"    public void execute_emptyKeyword_throwsCommandException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"        String emptyString \u003d \" \";","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_FRIEND_ID, emptyString);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        FriendIdMatchesKeywordPredicate predicate \u003d new FriendIdMatchesKeywordPredicate(emptyString);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"        GetFriendCommand getFriendCommand \u003d new GetFriendCommand(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e getFriendCommand.execute(model));","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"    public void execute_existingFriendId_correctFriendFound() {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"        String friendId \u003d \"98765432\";","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"        String expectedMessage \u003d String.format(GetFriendCommand.MESSAGE_FRIEND_FULL_INFORMATION, friendId);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"        FriendIdMatchesKeywordPredicate predicate \u003d new FriendIdMatchesKeywordPredicate(friendId);","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"        GetFriendCommand command \u003d new GetFriendCommand(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"        expectedModel.updateFilteredFriendsList(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(List.of(BENSON), model.getFilteredFriendsList());","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"MarcusTXK":9,"YeluriKetan":71}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, CommandType.HELP);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tau-bar":1,"-":17,"kevin9foong":2}},{"path":"src/test/java/seedu/address/logic/commands/LinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import static seedu.address.testutil.TypicalFriends.AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":" * {@code DeleteFriendCommand}.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"public class LinkCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    private final Model model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    //    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    //    public void execute_validIdUnfilteredList_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    //        HashMap\u003cString, String\u003e games \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    //        games.put(\"CSGO\", \"GoldNova\");","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    //        games.put(\"Valorant\", \"PlatSmurf\");","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    //        Friend friendToLink \u003d model.getFilteredFriendsList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    //        LinkCommand linkCommand \u003d new LinkCommand(friendToLink.getFriendId(), games);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    //","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    //        ModelManager expectedModel \u003d new ModelManager(model.getFriendsList(), new GamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    //        expectedModel.linkFriend(friendToLink, new HashSet\u003c\u003e());","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    //        assertCommandSuccess(linkCommand, model, linkCommand.generateSuccessMessage(friendToLink), expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    //    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"    public void execute_nonExistentIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"        HashMap\u003cString, String\u003e games \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"        games.put(\"CSGO\", \"GoldNova\");","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"        games.put(\"Valorant\", \"PlatSmurf\");","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"        LinkCommand linkCommand \u003d new LinkCommand(AMY.getFriendId(), games);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"        assertCommandFailure(linkCommand, model, Messages.MESSAGE_NONEXISTENT_FRIEND_ID);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"LZher385":33,"YeluriKetan":15}},{"path":"src/test/java/seedu/address/logic/commands/ListFriendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.ListFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.FriendIdContainsKeywordPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"public class ListFriendCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        expectedModel \u003d new ModelManager(model.getFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    public void execute_listFriendNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        assertCommandSuccess(new ListFriendCommand(preparePredicate(\"\")), model,","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"                String.format(ListFriendCommand.MESSAGE_SUCCESS_PREPEND, ListFriendCommand.FRIEND_LIST), expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    public void execute_listFriendIsFiltered_showsEverything() {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        // Set up expected filtered list by Ali","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        expectedModel.updateFilteredFriendsList(preparePredicate(\"Ali\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        ListFriendCommand listFriendCommand \u003d new ListFriendCommand(preparePredicate(\"Ali\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        assertCommandSuccess(listFriendCommand, model,","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"                listFriendCommand.getMessageSuccess(), expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"    private FriendIdContainsKeywordPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        return new FriendIdContainsKeywordPredicate(userInput);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"MarcusTXK":25,"YeluriKetan":3,"-":23,"kevin9foong":1}},{"path":"src/test/java/seedu/address/logic/commands/friends/AddFriendCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":" * {@code seedu.address.logic.commands.friends.AddFriendCommand}.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"public class AddFriendCommandIntegrationTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        Friend validFriend \u003d new FriendBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        expectedModel.addFriend(validFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"        assertCommandSuccess(new AddFriendCommand(validFriend), model,","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"                String.format(AddFriendCommand.MESSAGE_SUCCESS, validFriend), expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        Friend friendInList \u003d model.getFriendsList().getFriendsList().get(0);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"        assertCommandFailure(new AddFriendCommand(friendInList), model, AddFriendCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tau-bar":7,"YeluriKetan":3,"-":31,"kevin9foong":6}},{"path":"src/test/java/seedu/address/logic/commands/friends/AddFriendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.ReadOnlyGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"public class AddFriendCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddFriendCommand(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        Friend validFriend \u003d new FriendBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"        CommandResult commandResult \u003d new AddFriendCommand(validFriend).execute(modelStub);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"        assertEquals(String.format(AddFriendCommand.MESSAGE_SUCCESS, validFriend), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(Arrays.asList(validFriend), modelStub.personsAdded);","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        Friend validFriend \u003d new FriendBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"        AddFriendCommand addFriendCommand \u003d new AddFriendCommand(validFriend);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validFriend);","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"        assertThrows(CommandException.class, AddFriendCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"                addFriendCommand.execute(modelStub));","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        Friend alice \u003d new FriendBuilder().withFriendName(\"Alice\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        Friend bob \u003d new FriendBuilder().withFriendName(\"Bob\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"tau-bar"},"content":"        AddFriendCommand addAliceCommand \u003d new AddFriendCommand(alice);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tau-bar"},"content":"        AddFriendCommand addBobCommand \u003d new AddFriendCommand(bob);","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"tau-bar"},"content":"        AddFriendCommand addAliceCommandCopy \u003d new AddFriendCommand(alice);","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"kevin9foong"},"content":"        public ReadOnlyFriendsList getFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"        public void setFriendsList(ReadOnlyFriendsList readOnlyFriendsList) {","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"        public boolean hasFriend(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"LZher385"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"LZher385"},"content":"        public boolean hasFriendWithId(FriendId friendId) {","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"LZher385"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"tau-bar"},"content":"        public void deleteFriend(FriendId targetId) {","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"kevin9foong"},"content":"        public void addFriend(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"kevin9foong"},"content":"        public void setFriend(Friend target, Friend editedFriend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"kevin9foong"},"content":"        public ObservableList\u003cFriend\u003e getFilteredFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"kevin9foong"},"content":"        public void updateFilteredFriendsList(Predicate\u003cFriend\u003e predicate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"LZher385"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"YeluriKetan"},"content":"        public void linkFriend(Friend toLink, HashSet\u003cGameFriendLink\u003e gameFriendLinks) {","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"LZher385"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"tau-bar"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"tau-bar"},"content":"        public boolean hasFriendId(FriendId idToFind) {","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"tau-bar"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"YeluriKetan"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"YeluriKetan"},"content":"        public void setGamesList(ReadOnlyGamesList readOnlyGamesList) {","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"YeluriKetan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"YeluriKetan"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"YeluriKetan"},"content":"        public ReadOnlyGamesList getGamesList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"YeluriKetan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"YeluriKetan"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"YeluriKetan"},"content":"        public boolean hasGame(Game game) {","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"YeluriKetan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"YeluriKetan"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"YeluriKetan"},"content":"        public boolean hasGameWithId(GameId gameId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"YeluriKetan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"YeluriKetan"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"YeluriKetan"},"content":"        public void deleteGame(GameId targetId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"YeluriKetan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"YeluriKetan"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"YeluriKetan"},"content":"        public void addGame(Game game) {","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"YeluriKetan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"YeluriKetan"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"YeluriKetan"},"content":"        public void setGame(Game target, Game editedGame) {","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"YeluriKetan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"YeluriKetan"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"YeluriKetan"},"content":"        public ObservableList\u003cGame\u003e getFilteredGamesList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"YeluriKetan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"YeluriKetan"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"YeluriKetan"},"content":"        public void updateFilteredGamesList(Predicate\u003cGame\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"YeluriKetan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"YeluriKetan"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"YeluriKetan"},"content":"        public boolean hasGameId(GameId idToFind) {","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"YeluriKetan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"kevin9foong"},"content":"        private final Friend friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"kevin9foong"},"content":"        ModelStubWithPerson(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":232,"author":{"gitId":"kevin9foong"},"content":"            requireNonNull(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":233,"author":{"gitId":"kevin9foong"},"content":"            this.friend \u003d friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"kevin9foong"},"content":"        public boolean hasFriend(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":238,"author":{"gitId":"kevin9foong"},"content":"            requireNonNull(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":239,"author":{"gitId":"kevin9foong"},"content":"            return this.friend.equals(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":242,"author":{"gitId":"tau-bar"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":243,"author":{"gitId":"tau-bar"},"content":"        public boolean hasFriendId(FriendId idToFind) {","lastModifiedDate":"2021-10-08"},{"lineNumber":244,"author":{"gitId":"tau-bar"},"content":"            return this.friend.getFriendId().equals(friend.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":245,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":246,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"kevin9foong"},"content":"        final ArrayList\u003cFriend\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"kevin9foong"},"content":"        public boolean hasFriend(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":257,"author":{"gitId":"kevin9foong"},"content":"            requireNonNull(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":258,"author":{"gitId":"kevin9foong"},"content":"            return personsAdded.stream().anyMatch(friend::equals);","lastModifiedDate":"2021-10-06"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"tau-bar"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":262,"author":{"gitId":"tau-bar"},"content":"        public boolean hasFriendId(FriendId idToFind) {","lastModifiedDate":"2021-10-08"},{"lineNumber":263,"author":{"gitId":"tau-bar"},"content":"            return personsAdded.stream().anyMatch(friend -\u003e friend.getFriendId().equals(idToFind));","lastModifiedDate":"2021-10-08"},{"lineNumber":264,"author":{"gitId":"tau-bar"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":265,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"kevin9foong"},"content":"        public void addFriend(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":268,"author":{"gitId":"kevin9foong"},"content":"            requireNonNull(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":269,"author":{"gitId":"kevin9foong"},"content":"            personsAdded.add(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":273,"author":{"gitId":"kevin9foong"},"content":"        public ReadOnlyFriendsList getFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":274,"author":{"gitId":"kevin9foong"},"content":"            return new FriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"tau-bar":30,"YeluriKetan":56,"LZher385":11,"-":146,"kevin9foong":35}},{"path":"src/test/java/seedu/address/logic/commands/friends/DeleteFriendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.commands.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.testutil.TypicalGames.getTypicalGamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tau-bar"},"content":" * {@code DeleteFriendCommand}.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"public class DeleteFriendCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    private final Model model \u003d new ModelManager(getTypicalFriendsList(), getTypicalGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"    public void execute_validIdUnfilteredList_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"        // command can delete friend by friend id","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"        Friend friendToDelete \u003d model.getFilteredFriendsList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"        DeleteFriendCommand deleteCommand \u003d new DeleteFriendCommand(friendToDelete.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"        String expectedMessage \u003d String.format(DeleteFriendCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"                friendToDelete.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"        expectedModel.deleteFriend(friendToDelete.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"    public void execute_nonExistentIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"        // command fails if friend id does not exist in unfiltered list","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        DeleteFriendCommand deleteFriendCommand \u003d new DeleteFriendCommand(AMY.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        assertCommandFailure(deleteFriendCommand, model, Messages.MESSAGE_NONEXISTENT_FRIEND_ID);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"    public void execute_validIdFilteredList_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"        // can delete friend by friendid even if not in the currently filtered list","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"        Friend friendToDelete \u003d model.getFilteredFriendsList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"        DeleteFriendCommand deleteCommand \u003d new DeleteFriendCommand(friendToDelete.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"        String expectedMessage \u003d String.format(DeleteFriendCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"                friendToDelete.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendsList(), model.getGamesList(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"        // show no one","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"tau-bar"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"tau-bar"},"content":"        // should still be able to delete","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tau-bar"},"content":"        expectedModel.deleteFriend(friendToDelete.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"tau-bar"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tau-bar"},"content":"    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tau-bar"},"content":"        Friend friendAmy \u003d new FriendBuilder(AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tau-bar"},"content":"        Friend friendBob \u003d new FriendBuilder(BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tau-bar"},"content":"        DeleteFriendCommand deleteFirstCommand \u003d new DeleteFriendCommand(friendAmy.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"tau-bar"},"content":"        DeleteFriendCommand deleteSecondCommand \u003d new DeleteFriendCommand(friendBob.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"tau-bar"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tau-bar"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"tau-bar"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"tau-bar"},"content":"        DeleteFriendCommand deleteFirstCommandCopy \u003d new DeleteFriendCommand(friendAmy.getFriendId());","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tau-bar"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"tau-bar"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"tau-bar"},"content":"        assertFalse(deleteFirstCommand.equals(\"123\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"tau-bar"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"tau-bar"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"tau-bar"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"tau-bar"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"tau-bar"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"tau-bar"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"tau-bar"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"tau-bar"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"tau-bar"},"content":"        model.updateFilteredFriendsList(p -\u003e false);","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"tau-bar"},"content":"        assertTrue(model.getFilteredFriendsList().isEmpty());","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":98,"YeluriKetan":4}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    private final Flag unknownFlag \u003d new Flag(\"--u\");","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    private final Flag pSlash \u003d new Flag(\"p/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    private final Flag dashT \u003d new Flag(\"-t\");","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    private final Flag hatQ \u003d new Flag(\"^Q\");","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Flag flag, String... expectedValues) {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(flag).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(flag).size());","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(flag).get(i));","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Flag flag) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(argMultimap.getValue(flag).isPresent());","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"        argsString \u003d unknownFlag + \"some value\";","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"MarcusTXK"},"content":"        assertArgumentAbsent(argMultimap, unknownFlag);","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"MarcusTXK"},"content":"        Flag aaa \u003d new Flag(\"aaa\");","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(aaa, new Flag(\"aaa\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"MarcusTXK"},"content":"        assertNotEquals(aaa, new Flag(\"aab\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"MarcusTXK":15,"-":135}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GAME_OLD;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.EditCommand.EditFriendDescriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.EditFriendDescriptorBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    private static final String GAME_EMPTY \u003d \" \" + FLAG_GAME_OLD;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, FriendName.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        //        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        //        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        //        assertParseFailure(parser, \"1\"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        //              + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        //        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        //","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"        //        // invalid phone followed by valid email","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        //        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        //","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        //        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        //        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        //        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        //","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        //        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        //        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        //        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        //        + TAG_DESC_HUSBAND + GAME_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        //        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        //        + GAME_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        //        assertParseFailure(parser, \"1\" + GAME_EMPTY","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        //        + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        //","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"        //        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"        //        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"        //        + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"        //                FriendName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    //    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"    //    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"    //        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"    //        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"    //                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"    //        EditCommand.EditFriendDescriptor descriptor \u003d new EditFriendDescriptorBuilder()","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"    //                .withFriendName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"    //                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"    //                .withTags(VALID_GAME_CSGO, VALID_GAME_APEX_LEGENDS).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"    //    }","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"    //    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"    //    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"    //        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"    //        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"    //        EditCommand.EditFriendDescriptor descriptor \u003d new EditFriendDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"    //                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"kevin9foong"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"    //    }","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"    //    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"    //    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"    //        // name","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"    //        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"    //        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"    //        EditCommand.EditFriendDescriptor descriptor \u003d new EditFriendDescriptorBuilder()","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"kevin9foong"},"content":"    //              .withFriendName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"    //        // phone","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"    //        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"    //        descriptor \u003d new EditFriendDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"    //        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"    //        // email","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"    //        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"    //        descriptor \u003d new EditFriendDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"    //        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"kevin9foong"},"content":"    //        // address","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"kevin9foong"},"content":"    //        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"kevin9foong"},"content":"    //        descriptor \u003d new EditFriendDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"kevin9foong"},"content":"    //        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"kevin9foong"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"kevin9foong"},"content":"    //        // tags","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"kevin9foong"},"content":"    //        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"kevin9foong"},"content":"    //        descriptor \u003d new EditFriendDescriptorBuilder().withGames(VALID_GAME_APEX_LEGENDS).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"kevin9foong"},"content":"    //        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"kevin9foong"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"kevin9foong"},"content":"    //    }","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"kevin9foong"},"content":"    //    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"kevin9foong"},"content":"    //    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"kevin9foong"},"content":"    //        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"kevin9foong"},"content":"    //        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"kevin9foong"},"content":"    //                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"kevin9foong"},"content":"    //                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"kevin9foong"},"content":"    //        EditCommand.EditFriendDescriptor descriptor \u003d new EditFriendDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"kevin9foong"},"content":"    //                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"kevin9foong"},"content":"    //                .withTags(VALID_GAME_APEX_LEGENDS, VALID_GAME_CSGO)","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"kevin9foong"},"content":"    //                .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"kevin9foong"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"kevin9foong"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"kevin9foong"},"content":"    //    }","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"kevin9foong"},"content":"    //    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"kevin9foong"},"content":"    //    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"kevin9foong"},"content":"    //        // no other valid values specified","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"kevin9foong"},"content":"    //        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":169,"author":{"gitId":"kevin9foong"},"content":"    //        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"kevin9foong"},"content":"    //        EditCommand.EditFriendDescriptor descriptor \u003d new EditFriendDescriptorBuilder()","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"kevin9foong"},"content":"    //              .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"kevin9foong"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"kevin9foong"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"kevin9foong"},"content":"    //","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"kevin9foong"},"content":"    //        // other valid values specified","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"kevin9foong"},"content":"    //        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"kevin9foong"},"content":"    //                + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"kevin9foong"},"content":"    //        descriptor \u003d new EditFriendDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"kevin9foong"},"content":"    //                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"kevin9foong"},"content":"    //        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"kevin9foong"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"kevin9foong"},"content":"    //    }","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"kevin9foong"},"content":"        String userInput \u003d targetIndex.getOneBased() + GAME_EMPTY;","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"kevin9foong"},"content":"        EditFriendDescriptor descriptor \u003d new EditFriendDescriptorBuilder().withGames().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"MarcusTXK":2,"-":63,"kevin9foong":129}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"                new FindCommand(new FriendNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":32,"kevin9foong":2}},{"path":"src/test/java/seedu/address/logic/parser/FriendsListParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.EditCommand.EditFriendDescriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.EditFriendDescriptorBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendUtil;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"public class FriendsListParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"    public void parseCommand_addFriend() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        // TODO Update after add command is updated","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        // Friend friend \u003d new FriendBuilder().build();","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"        // AddFriendCommand command \u003d (AddFriendCommand) parser.parseCommand(FriendUtil.getAddFriendCommand(friend));","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        // assertEquals(new AddFriendCommand(friend), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"        // TODO Update after delete command is updated","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        // DeleteFriendCommand command \u003d (DeleteFriendCommand) parser.parseCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"        //      DeleteFriendCommand.COMMAND_WORD + \" \" + AMY.getFriendId().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"        // assertEquals(new DeleteFriendCommand(AMY.getFriendId()), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        Friend friend \u003d new FriendBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        EditFriendDescriptor descriptor \u003d new EditFriendDescriptorBuilder(friend).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + FriendUtil.getEditFriendDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(new FindCommand(new FriendNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"        // TODO Update after list command is updated","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"        // assertTrue(parser.parseCommand(ListFriendCommand.COMMAND_WORD) instanceof ListFriendCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"        // assertTrue(parser.parseCommand(ListFriendCommand.COMMAND_WORD + \" 3\") instanceof ListFriendCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tau-bar":1,"MarcusTXK":11,"-":78,"kevin9foong":11}},{"path":"src/test/java/seedu/address/logic/parser/GetFriendCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_SPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.GetFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.friends.GetFriendCommandParser;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.FriendIdMatchesKeywordPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"public class GetFriendCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    private GetFriendCommandParser parser \u003d new GetFriendCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetFriendCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_validArgsNoFlag_returnsGetCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        String friendId \u003d \"95352563\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        GetFriendCommand expectedGetFriendCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"                new GetFriendCommand(new FriendIdMatchesKeywordPredicate(friendId));","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"        assertParseSuccess(parser, friendId, expectedGetFriendCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        // leading and trailing whitespaces","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        assertParseSuccess(parser, \"    \" + friendId + \"    \\t\", expectedGetFriendCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_validArgsFriendFlag_returnsGetCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        // no additional whitespaces","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        String friendId \u003d \"95352563\";","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        GetFriendCommand expectedGetFriendCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"                new GetFriendCommand(new FriendIdMatchesKeywordPredicate(friendId));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        assertParseSuccess(parser, \" \" + FLAG_FRIEND_SPACE + friendId, expectedGetFriendCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        // leading, within and trailing whitespaces","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        assertParseSuccess(parser, \"    \" + FLAG_FRIEND_SPACE + \"    \" + friendId","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"                + \"    \\t\", expectedGetFriendCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"MarcusTXK":15,"YeluriKetan":34}},{"path":"src/test/java/seedu/address/logic/parser/LinkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import seedu.address.logic.commands.LinkCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"class LinkCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"    private LinkCommandParser parser \u003d new LinkCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"    public void parse_validArgs_returnsLinkCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"        String userInput \u003d \" Draco --g CSGO:Silver1\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"        HashMap\u003cString, String\u003e games \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"        games.put(\"CSGO\", \"Silver1\");","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"        assertParseSuccess(parser, userInput, new LinkCommand(new FriendId(\"Draco\"), games));","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"LZher385":22}},{"path":"src/test/java/seedu/address/logic/parser/ListFriendCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.commands.friends.ListFriendCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.logic.parser.friends.ListFriendCommandParser;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.FriendIdContainsKeywordPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"public class ListFriendCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    private ListFriendCommandParser parser \u003d new ListFriendCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    public void parse_emptyArgs_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        String userInput \u003d \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"        ListFriendCommand expectedListFriendCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"                new ListFriendCommand(new FriendIdContainsKeywordPredicate(userInput));","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"        assertParseSuccess(parser, userInput, expectedListFriendCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    public void parse_validArgs_returnsListCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        // filter by friend and keyword test","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        String userInput \u003d \" --friend test\";","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        String expectedParsedKeyword \u003d \"test\";","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        ListFriendCommand expectedListFriendCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"                new ListFriendCommand(new FriendIdContainsKeywordPredicate(expectedParsedKeyword));","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"        // TODO Update after list command is updated","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        // assertParseSuccess(parser, userInput, expectedListFriendCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        // with friend filter but without keyword (defaults to list all friends)","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        // userInput \u003d \" --friend\";","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        // expectedListFriendCommand \u003d new ListFriendCommand(new FriendIdContainsKeywordPredicate(\"\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"        // assertParseSuccess(parser, userInput, expectedListFriendCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        // without friend filter (defaults to friend) but with keyword test","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        userInput \u003d \"test\";","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        expectedListFriendCommand \u003d new ListFriendCommand(new FriendIdContainsKeywordPredicate(\"test\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        assertParseSuccess(parser, userInput, expectedListFriendCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"MarcusTXK":47}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"    private static final String VALID_GAME_NAME \u003d \"Counter Strike\";","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"    private static final String VALID_IN_GAME_USERNAME \u003d \"Ferrari_peek\";","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    public void parseFriendName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseFriendName((String) null));","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    public void parseFriendName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFriendName(INVALID_NAME));","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    public void parseFriendName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        FriendName expectedFriendName \u003d new FriendName(VALID_NAME);","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedFriendName, ParserUtil.parseFriendName(VALID_NAME));","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"    public void parseFriendName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        FriendName expectedFriendName \u003d new FriendName(VALID_NAME);","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedFriendName, ParserUtil.parseFriendName(nameWithWhitespace));","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"LZher385"},"content":"    public void parseGamesAndUsernames_validInput_success() throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"LZher385"},"content":"        List\u003cString\u003e games \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"LZher385"},"content":"        games.add(VALID_GAME_NAME + \":\" + VALID_IN_GAME_USERNAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"LZher385"},"content":"        HashMap\u003cString, String\u003e expectedGamesHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"LZher385"},"content":"        expectedGamesHashMap.put(VALID_GAME_NAME, VALID_IN_GAME_USERNAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"LZher385"},"content":"        assertEquals(expectedGamesHashMap, ParserUtil.parseGamesAndUsernames(games));","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    // TODO: Add tests for parseFriendId and parseGame","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"LZher385":11,"-":65,"kevin9foong":12}},{"path":"src/test/java/seedu/address/logic/parser/friends/AddFriendCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FRIEND_ID_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FRIEND_ID_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.AddFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"public class AddFriendCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tau-bar"},"content":"    private final AddFriendCommandParser parser \u003d new AddFriendCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    // TODO set a different message if preferred","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"    private final String invalidCommandFormatMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"           FriendId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"        Friend expectedFriend \u003d new FriendBuilder(BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tau-bar"},"content":"        assertParseSuccess(parser, FRIEND_ID_DESC_BOB + PREAMBLE_WHITESPACE + NAME_DESC_BOB,","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tau-bar"},"content":"                new AddFriendCommand(expectedFriend));","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tau-bar"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tau-bar"},"content":"        assertParseSuccess(parser, FRIEND_ID_DESC_BOB + NAME_DESC_AMY + NAME_DESC_BOB ,","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tau-bar"},"content":"                new AddFriendCommand(expectedFriend));","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"    public void parse_compulsoryFieldsMissing_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"        // id missing","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"        assertParseFailure(parser, NAME_DESC_AMY, invalidCommandFormatMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"    public void parse_wrongFormatName_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tau-bar"},"content":"        // --name without FRIEND_NAME","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tau-bar"},"content":"        String noNameInput \u003d FRIEND_ID_DESC_AMY + \" \" + FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"        assertParseFailure(parser, noNameInput, FriendName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tau-bar"},"content":"        // whitespace is not a valid name","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tau-bar"},"content":"        assertParseFailure(parser, noNameInput + \"  \", FriendName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tau-bar"},"content":"    public void parse_noInput_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"        // no input","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"tau-bar"},"content":"        assertParseFailure(parser, \"\", invalidCommandFormatMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"tau-bar"},"content":"        // whitespace only","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tau-bar"},"content":"        assertParseFailure(parser, \" \", invalidCommandFormatMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tau-bar"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"tau-bar"},"content":"        // no friend name","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tau-bar"},"content":"        Friend expectedFriend \u003d new FriendBuilder().withFriendId(AMY.getFriendId()","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tau-bar"},"content":"                .toString()).buildNoName();","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tau-bar"},"content":"        assertParseSuccess(parser, FRIEND_ID_DESC_AMY,","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tau-bar"},"content":"                new AddFriendCommand(expectedFriend));","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":72,"MarcusTXK":3}},{"path":"src/test/java/seedu/address/logic/parser/friends/DeleteFriendCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tau-bar"},"content":"package seedu.address.logic.parser.friends;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.DeleteFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tau-bar"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tau-bar"},"content":" * outside of the DeleteFriendCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tau-bar"},"content":" * same path through the DeleteFriendCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tau-bar"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tau-bar"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tau-bar"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tau-bar"},"content":"public class DeleteFriendCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tau-bar"},"content":"    private DeleteFriendCommandParser parser \u003d new DeleteFriendCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"    public void parse_validArgs_returnsDeleteFriendCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        // TODO Update after delete command is updated","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        // assertParseSuccess(parser, DeleteFriendCommand.COMMAND_WORD + \" \" + AMY.getFriendId().toString(),","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        //         new DeleteFriendCommand(AMY.getFriendId()));","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tau-bar"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tau-bar"},"content":"        assertParseFailure(parser, DeleteFriendCommand.COMMAND_WORD, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"                DeleteFriendCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tau-bar"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":30,"MarcusTXK":3}},{"path":"src/test/java/seedu/address/model/FriendsListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.exceptions.DuplicateFriendException;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"public class FriendsListTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    private final FriendsList friendsList \u003d new FriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    public void constructor() {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(Collections.emptyList(), friendsList.getFriendsList());","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e friendsList.resetData(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        FriendsList newData \u003d getTypicalFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        friendsList.resetData(newData);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(newData, friendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        Friend editedAlice \u003d new FriendBuilder(ALICE).withGames(VALID_GAME_ID_CSGO)","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"                .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        List\u003cFriend\u003e newFriends \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        FriendsListStub newData \u003d new FriendsListStub(newFriends);","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(DuplicateFriendException.class, () -\u003e friendsList.resetData(newData));","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e friendsList.hasFriend(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(friendsList.hasFriend(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        friendsList.addFriend(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(friendsList.hasFriend(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        friendsList.addFriend(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"        Friend editedAlice \u003d new FriendBuilder(ALICE).withGames(VALID_GAME_ID_CSGO)","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"                .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(friendsList.hasFriend(editedAlice));","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e friendsList.getFriendsList().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"    private static class FriendsListStub implements ReadOnlyFriendsList {","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"        private final ObservableList\u003cFriend\u003e friends \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"        FriendsListStub(Collection\u003cFriend\u003e friends) {","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"            this.friends.setAll(friends);","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"        public ObservableList\u003cFriend\u003e getFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"            return friends;","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"YeluriKetan":3,"kevin9foong":98}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FRIENDS;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.testutil.TypicalFriends.BENSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"tau-bar"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(new FriendsList(), new FriendsList(modelManager.getFriendsList()));","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"tau-bar"},"content":"    public void hasFriend_nullFriend_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasFriend(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tau-bar"},"content":"    public void hasFriendId_nullFriendId_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"tau-bar"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasFriendId(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(modelManager.hasFriend(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"tau-bar"},"content":"    public void hasFriendId_friendIdNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"tau-bar"},"content":"        assertFalse(modelManager.hasFriendId(ALICE.getFriendId()));","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"        modelManager.addFriend(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(modelManager.hasFriend(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"tau-bar"},"content":"    public void hasFriendId_friendIdInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"tau-bar"},"content":"        modelManager.addFriend(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"tau-bar"},"content":"        assertTrue(modelManager.hasFriend(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"tau-bar"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"tau-bar"},"content":"    public void hasFriendId_sameIdDifferentName_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"tau-bar"},"content":"        FriendBuilder amyFriendBuilder \u003d new FriendBuilder();","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"tau-bar"},"content":"        modelManager.addFriend(amyFriendBuilder.build());","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"tau-bar"},"content":"        FriendBuilder amyNewNameFriendBuilder \u003d new FriendBuilder().withFriendName(\"Bob\");","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"tau-bar"},"content":"        assertTrue(modelManager.hasFriendId(amyNewNameFriendBuilder.build().getFriendId()));","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredFriendsList().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"        FriendsList friendsList \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"        FriendsList differentFriendsList \u003d new FriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"        GamesList gamesList \u003d new GamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"        modelManager \u003d new ModelManager(friendsList, gamesList, userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(friendsList, gamesList, userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentFriendsList, gamesList, userPrefs)));","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":147,"author":{"gitId":"kevin9foong"},"content":"        modelManager.updateFilteredFriendsList(new FriendNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(modelManager.equals(new ModelManager(friendsList, gamesList, userPrefs)));","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":151,"author":{"gitId":"YeluriKetan"},"content":"        modelManager.updateFilteredFriendsList(PREDICATE_SHOW_ALL_FRIENDS);","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":156,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(modelManager.equals(new ModelManager(friendsList, gamesList, differentUserPrefs)));","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"tau-bar":22,"YeluriKetan":8,"-":118,"kevin9foong":10}},{"path":"src/test/java/seedu/address/model/friend/FriendIdContainsKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"public class FriendIdContainsKeywordPredicateTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"        String firstKeyword \u003d \"first\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"        String secondKeyword \u003d \"second\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        FriendIdContainsKeywordPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"                new FriendIdContainsKeywordPredicate(firstKeyword);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"        FriendIdContainsKeywordPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"                new FriendIdContainsKeywordPredicate(secondKeyword);","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        FriendIdContainsKeywordPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"                new FriendIdContainsKeywordPredicate(firstKeyword);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"    public void test_idContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        // No keyword (list all)","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        FriendIdContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"                new FriendIdContainsKeywordPredicate(\"\");","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendId(FriendBuilder.DEFAULT_FRIEND_ID).build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        // Matching partial keyword","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"tau-bar"},"content":"        predicate \u003d new FriendIdContainsKeywordPredicate(\"A\");","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tau-bar"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendId(FriendBuilder.DEFAULT_FRIEND_ID).build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"tau-bar"},"content":"        predicate \u003d new FriendIdContainsKeywordPredicate(\"a\");","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tau-bar"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendId(FriendBuilder.DEFAULT_FRIEND_ID).build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"    public void test_idDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        FriendIdContainsKeywordPredicate predicate \u003d new FriendIdContainsKeywordPredicate(\"Carol\");","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"tau-bar"},"content":"        assertFalse(predicate.test(new FriendBuilder().withFriendId(FriendBuilder.DEFAULT_FRIEND_ID).build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"        // Keywords match name, but does not match id","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"                new FriendIdContainsKeywordPredicate(\"Alice\");","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(predicate.test(new FriendBuilder().withFriendId(\"Ally\").withFriendName(\"Alice\")","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"                .build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tau-bar":7,"MarcusTXK":62}},{"path":"src/test/java/seedu/address/model/friend/FriendNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"public class FriendNameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"        FriendNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"                new FriendNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"        FriendNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"                new FriendNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        FriendNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"                new FriendNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        // One keyword","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        FriendNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"                new FriendNameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        predicate \u003d new FriendNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        predicate \u003d new FriendNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        predicate \u003d new FriendNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(predicate.test(new FriendBuilder().withFriendName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        FriendNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"                new FriendNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(predicate.test(new FriendBuilder().withFriendName(\"Alice\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        predicate \u003d new FriendNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(predicate.test(new FriendBuilder().withFriendName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"                new FriendNameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(predicate.test(new FriendBuilder().withFriendName(\"Alice\").withFriendId(\"12345\")","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"                .build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"MarcusTXK":1,"kevin9foong":80}},{"path":"src/test/java/seedu/address/model/friend/FriendNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"public class FriendNameTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FriendName(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FriendName(invalidName));","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"        // null name","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e FriendName.isValidName(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        // invalid name","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(FriendName.isValidName(\"\")); // empty string","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(FriendName.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(FriendName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(FriendName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        // valid name","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(FriendName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(FriendName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(FriendName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(FriendName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(FriendName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kevin9foong":40}},{"path":"src/test/java/seedu/address/model/friend/FriendTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"public class FriendTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        Friend friend \u003d new FriendBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e friend.getGames().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    public void isSamePerson() {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        Friend editedAlice \u003d new FriendBuilder(ALICE).withGames(VALID_GAME_ID_CSGO).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        editedAlice \u003d new FriendBuilder(ALICE).withFriendName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        Friend editedBob \u003d new FriendBuilder(BOB).withFriendName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        editedBob \u003d new FriendBuilder(BOB).withFriendName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        Friend aliceCopy \u003d new FriendBuilder(ALICE).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        // different friendId -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        Friend editedAlice \u003d new FriendBuilder(ALICE).withFriendId(VALID_FRIEND_ID_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        editedAlice \u003d new FriendBuilder(ALICE).withFriendName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        // different games -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"        //        editedAlice \u003d new FriendBuilder(ALICE).withGames(VALID_GAME_ID_APEX_LEGENDS).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        //        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"YeluriKetan":4,"kevin9foong":76}},{"path":"src/test/java/seedu/address/model/friend/UniqueFriendListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.exceptions.DuplicateFriendException;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.exceptions.FriendNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.FriendBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"public class UniqueFriendListTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    private final UniqueFriendsList uniqueFriendsList \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.contains(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        assertFalse(uniqueFriendsList.contains(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(uniqueFriendsList.contains(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        Friend editedAlice \u003d new FriendBuilder(ALICE).withGames(VALID_GAME_ID_CSGO)","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"                .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        assertTrue(uniqueFriendsList.contains(editedAlice));","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.add(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(DuplicateFriendException.class, () -\u003e uniqueFriendsList.add(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.setFriend(null, ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.setFriend(ALICE, null));","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(FriendNotFoundException.class, () -\u003e uniqueFriendsList.setFriend(ALICE, ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.setFriend(ALICE, ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        UniqueFriendsList expectedUniqueFriendsList \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        expectedUniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedUniqueFriendsList, uniqueFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"        Friend editedAlice \u003d new FriendBuilder(ALICE).withGames(VALID_GAME_ID_CSGO)","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"                .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.setFriend(ALICE, editedAlice);","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"        UniqueFriendsList expectedUniqueFriendsList \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"        expectedUniqueFriendsList.add(editedAlice);","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedUniqueFriendsList, uniqueFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.setFriend(ALICE, BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"        UniqueFriendsList expectedUniqueFriendsList \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"        expectedUniqueFriendsList.add(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedUniqueFriendsList, uniqueFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(DuplicateFriendException.class, () -\u003e uniqueFriendsList.setFriend(ALICE, BOB));","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.remove(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(FriendNotFoundException.class, () -\u003e uniqueFriendsList.remove(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.remove(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"        UniqueFriendsList expectedUniqueFriendsList \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedUniqueFriendsList, uniqueFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.setFriends((UniqueFriendsList) null));","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"kevin9foong"},"content":"        UniqueFriendsList expectedUniqueFriendsList \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"kevin9foong"},"content":"        expectedUniqueFriendsList.add(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.setFriends(expectedUniqueFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedUniqueFriendsList, uniqueFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"kevin9foong"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFriendsList.setFriends((List\u003cFriend\u003e) null));","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"kevin9foong"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"kevin9foong"},"content":"        List\u003cFriend\u003e friendList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"kevin9foong"},"content":"        uniqueFriendsList.setFriends(friendList);","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"kevin9foong"},"content":"        UniqueFriendsList expectedUniqueFriendsList \u003d new UniqueFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"kevin9foong"},"content":"        expectedUniqueFriendsList.add(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedUniqueFriendsList, uniqueFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"kevin9foong"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"kevin9foong"},"content":"        List\u003cFriend\u003e listWithDuplicateFriends \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(DuplicateFriendException.class, () -\u003e uniqueFriendsList.setFriends(listWithDuplicateFriends));","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"kevin9foong"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"kevin9foong"},"content":"            -\u003e uniqueFriendsList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":169,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"YeluriKetan":3,"kevin9foong":166}},{"path":"src/test/java/seedu/address/model/game/GameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.model.game;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"public class GameTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Game(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Game(new GameId(invalidTagName)));","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        assertThrows(NullPointerException.class, () -\u003e GameId.isValidGameId(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"YeluriKetan":2,"kevin9foong":3,"-":21}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedFriendTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.storage.JsonAdaptedFriend.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.BENSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"// TODO: Update tests for FriendId and Games based on UG specs","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"public class JsonAdaptedFriendTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    private static final String INVALID_GAME \u003d \"R@staurantC!ty\";","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    private static final String VALID_FRIEND_ID \u003d BENSON.getFriendId().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    private static final List\u003cJsonAdaptedGame\u003e VALID_GAMES \u003d BENSON.getGames().stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"            .map(gameFriendLink -\u003e gameFriendLink.getGameId().value)","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"            .map(JsonAdaptedGame::new)","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        JsonAdaptedFriend person \u003d new JsonAdaptedFriend(BENSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        JsonAdaptedFriend person \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"                new JsonAdaptedFriend(VALID_FRIEND_ID, INVALID_NAME, VALID_GAMES);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d FriendName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        JsonAdaptedFriend person \u003d new JsonAdaptedFriend(VALID_FRIEND_ID, null, VALID_GAMES);","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, FriendName.class.getSimpleName());","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"    public void toModelType_invalidGames_throwsIllegalValueException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        List\u003cJsonAdaptedGame\u003e invalidGames \u003d new ArrayList\u003c\u003e(VALID_GAMES);","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        invalidGames.add(new JsonAdaptedGame(INVALID_GAME));","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        JsonAdaptedFriend person \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"                new JsonAdaptedFriend(VALID_FRIEND_ID, VALID_NAME, invalidGames);","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"YeluriKetan":1,"kevin9foong":58}},{"path":"src/test/java/seedu/address/storage/JsonFriendsListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.HOON;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.IDA;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"public class JsonFriendsListStorageTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    private java.util.Optional\u003cReadOnlyFriendsList\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        return new JsonFriendsListStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        FriendsList original \u003d getTypicalFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        JsonFriendsListStorage jsonAddressBookStorage \u003d new JsonFriendsListStorage(filePath);","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        ReadOnlyFriendsList readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(original, new FriendsList(readBack));","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        original.addFriend(HOON);","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        original.removeFriend(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(original, new FriendsList(readBack));","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"        original.addFriend(IDA);","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(original, new FriendsList(readBack));","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"    private void saveAddressBook(ReadOnlyFriendsList addressBook, String filePath) {","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"            new JsonFriendsListStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new FriendsList(), null));","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":89,"kevin9foong":21}},{"path":"src/test/java/seedu/address/storage/JsonSerializableFriendsListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.testutil.TypicalFriends;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"public class JsonSerializableFriendsListTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        FriendsList friendsListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        FriendsList typicalPersonsFriendsList \u003d TypicalFriends.getTypicalFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(friendsListFromFile, typicalPersonsFriendsList);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":41,"kevin9foong":6}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.testutil.TypicalFriends.getTypicalFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.ReadOnlyFriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        JsonFriendsListStorage addressBookStorage \u003d new JsonFriendsListStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        FriendsList original \u003d getTypicalFriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        ReadOnlyFriendsList retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(original, new FriendsList(retrieved));","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":61,"kevin9foong":7}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    private FriendsList friendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"        friendsList \u003d new FriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public AddressBookBuilder(FriendsList friendsList) {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        this.friendsList \u003d friendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public AddressBookBuilder withPerson(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        friendsList.addFriend(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public FriendsList build() {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        return friendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":24,"kevin9foong":10}},{"path":"src/test/java/seedu/address/testutil/EditFriendDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.EditCommand.EditFriendDescriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"public class EditFriendDescriptorBuilder {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    private EditFriendDescriptor descriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    public EditFriendDescriptorBuilder() {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"        descriptor \u003d new EditCommand.EditFriendDescriptor();","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    public EditFriendDescriptorBuilder(EditCommand.EditFriendDescriptor descriptor) {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        this.descriptor \u003d new EditCommand.EditFriendDescriptor(descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public EditFriendDescriptorBuilder(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        descriptor \u003d new EditCommand.EditFriendDescriptor();","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        descriptor.setFriendId(friend.getFriendId());","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        descriptor.setFriendName(friend.getName());","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        descriptor.setGames(friend.getGames());","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"     * Sets the {@code FriendId} of the {@code EditFriendDescriptor} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    public EditFriendDescriptorBuilder withFriendId(String friendId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        descriptor.setFriendId(new FriendId(friendId));","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"     * Sets the {@code Name} of the {@code EditFriendDescriptor} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    public EditFriendDescriptorBuilder withFriendName(String name) {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        descriptor.setFriendName(new FriendName(name));","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"     * Parses the {@code games} into a {@code Set\u003cGameFriendLink\u003e} and set it to the {@code EditFriendDescriptor}","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"     * that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    public EditFriendDescriptorBuilder withGames(String... games) {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"        //        Set\u003cGameFriendLink\u003e gameSet \u003d Stream.of(games).map(Game::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"        Set\u003cGameFriendLink\u003e gameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        descriptor.setGames(gameSet);","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    public EditCommand.EditFriendDescriptor build() {","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        return descriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"YeluriKetan":5,"kevin9foong":63}},{"path":"src/test/java/seedu/address/testutil/FriendBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.AddFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.FriendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"public class FriendBuilder {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public static final String DEFAULT_FRIEND_ID \u003d \"AB\";","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    private FriendName friendName;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    private FriendId friendId;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    private Set\u003cGameFriendLink\u003e games;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public FriendBuilder() {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        friendId \u003d new FriendId(DEFAULT_FRIEND_ID);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        friendName \u003d new FriendName(DEFAULT_NAME);","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        games \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    public FriendBuilder(Friend friendToCopy) {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        friendId \u003d friendToCopy.getFriendId();","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        friendName \u003d friendToCopy.getName();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        games \u003d new HashSet\u003c\u003e(friendToCopy.getGames());","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    public FriendBuilder withFriendName(String friendName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        this.friendName \u003d new FriendName(friendName);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"     * Parses the {@code games} into a {@code Set\u003cGameFriendLink\u003e} and set it to the {@code Person} that we are","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"     * building.","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    public FriendBuilder withGames(String ... games) {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        this.games \u003d SampleDataUtil.getGameSet(games);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"     * Sets the {@code FriendId} of the {@code Friend} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    public FriendBuilder withFriendId(String friendId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        this.friendId \u003d new FriendId(friendId);","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    public Friend build() {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        return new Friend(friendId, friendName, games);","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tau-bar"},"content":"    public Friend buildNoName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tau-bar"},"content":"        return new Friend(friendId, AddFriendCommand.DEFAULT_FRIEND_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"tau-bar"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tau-bar":6,"YeluriKetan":4,"kevin9foong":67}},{"path":"src/test/java/seedu/address/testutil/FriendUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tau-bar"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_FRIEND_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import static seedu.address.logic.parser.CliSyntax.FLAG_GAME_OLD;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tau-bar"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"tau-bar"},"content":"import seedu.address.logic.commands.friends.AddFriendCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.friend.gamefriendlink.GameFriendLink;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" * A utility class for Friend.","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"public class FriendUtil {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"tau-bar"},"content":"    public static String getAddFriendCommand(Friend friend) {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tau-bar"},"content":"        return AddFriendCommand.COMMAND_WORD + \" \" + getFriendDetails(friend);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     * Returns the part of command string for the given {@code friend}\u0027s details.","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    public static String getFriendDetails(Friend friend) {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"tau-bar"},"content":"        sb.append(friend.getFriendId().value + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tau-bar"},"content":"        sb.append(FLAG_FRIEND_NAME + friend.getName().fullName + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        friend.getGames().stream().forEach(","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"            game -\u003e sb.append(FLAG_GAME_OLD + game.getGameId().value + \" \")","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        );","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"     * Returns the part of command string for the given {@code EditFriendDescriptor}\u0027s details.","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    public static String getEditFriendDescriptorDetails(EditCommand.EditFriendDescriptor descriptor) {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"tau-bar"},"content":"        descriptor.getFriendName().ifPresent(name -\u003e sb.append(FLAG_FRIEND_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"        descriptor.getFriendId().ifPresent(friendId -\u003e sb.append(FLAG_FRIEND_ID).append(friendId.value).append(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        if (descriptor.getGames().isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"            Set\u003cGameFriendLink\u003e games \u003d descriptor.getGames().get();","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"            if (games.isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"                sb.append(FLAG_GAME_OLD);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"            } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"                games.forEach(game -\u003e sb.append(FLAG_GAME_OLD).append(game.getGameId().value).append(\" \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tau-bar":10,"MarcusTXK":4,"YeluriKetan":2,"kevin9foong":40}},{"path":"src/test/java/seedu/address/testutil/GameBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.GameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"public class GameBuilder {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    public static final String DEFAULT_GAME_ID \u003d \"Minecraft\";","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    private GameId gameId;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"     * Creates a {@code GameBuilder} with the default details.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    public GameBuilder() {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"        gameId \u003d new GameId(DEFAULT_GAME_ID);","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * Initializes the {@code GameBuilder} with the data of {@code gameToCopy}.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    public GameBuilder(Game gameToCopy) {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        gameId \u003d gameToCopy.getGameId();","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"     * Sets the {@code GameId} of the {@code Game} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    public GameBuilder withGameId(String gameId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        this.gameId \u003d new GameId(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    public Game build() {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        return new Game(gameId);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":41}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        return Index.fromOneBased(model.getFilteredFriendsList().size() / 2);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        return Index.fromOneBased(model.getFilteredFriendsList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    public static Friend getPerson(Model model, Index index) {","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        return model.getFilteredFriendsList().get(index.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":50,"kevin9foong":5}},{"path":"src/test/java/seedu/address/testutil/TypicalFriends.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIEND_ID_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.FriendsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import seedu.address.model.friend.Friend;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"public class TypicalFriends {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend ALICE \u003d new FriendBuilder().withFriendName(\"Alice Pauline\").withFriendId(\"94351253\")","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"            .withGames(\"CSGO\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend BENSON \u003d new FriendBuilder().withFriendName(\"Benson Meier\").withFriendId(\"98765432\")","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"            .withGames(\"CSGO\", \"Valorant\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend CARL \u003d new FriendBuilder().withFriendName(\"Carl Kurz\").withFriendId(\"95352563\")","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend DANIEL \u003d new FriendBuilder().withFriendName(\"Daniel Meier\").withFriendId(\"87652533\")","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend ELLE \u003d new FriendBuilder().withFriendName(\"Elle Meyer\").withFriendId(\"9482224\")","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend FIONA \u003d new FriendBuilder().withFriendName(\"Fiona Kunz\").withFriendId(\"9482427\")","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend GEORGE \u003d new FriendBuilder().withFriendName(\"George Best\").withFriendId(\"9482442\")","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    // Manually added","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend HOON \u003d new FriendBuilder().withFriendName(\"Hoon Meier\").withFriendId(\"8482424\")","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend IDA \u003d new FriendBuilder().withFriendName(\"Ida Mueller\").withFriendId(\"8482131\")","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend AMY \u003d new FriendBuilder().withFriendName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"tau-bar"},"content":"            .withFriendId(VALID_FRIEND_ID_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    public static final Friend BOB \u003d new FriendBuilder().withFriendName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"tau-bar"},"content":"            .withFriendId(VALID_FRIEND_ID_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    private TypicalFriends() {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    public static FriendsList getTypicalFriendsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        FriendsList ab \u003d new FriendsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        for (Friend friend : getTypicalFriends()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"            ab.addFriend(friend);","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        return ab;","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    public static List\u003cFriend\u003e getTypicalFriends() {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tau-bar":2,"kevin9foong":64}},{"path":"src/test/java/seedu/address/testutil/TypicalGames.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_APEX_LEGENDS;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GAME_ID_CSGO;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.GamesList;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import seedu.address.model.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":" * A utility class containing a list of {@code Game} objects to be used in tests.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"public class TypicalGames {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game MINECRAFT \u003d new GameBuilder().withGameId(\"Minecraft\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game LEAGUE_OF_LEGENDS \u003d new GameBuilder().withGameId(\"LeagueOfLegends\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game FORTNITE \u003d new GameBuilder().withGameId(\"Fortnite\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game GENSHIN_IMPACT \u003d new GameBuilder().withGameId(\"GenshinImpact\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game GTA_V \u003d new GameBuilder().withGameId(\"GTAV\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game ANIMAL_CROSSING \u003d new GameBuilder().withGameId(\"AnimalCrossing\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game VALORANT \u003d new GameBuilder().withGameId(\"Valorant\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    // Manually added","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game FIFA22 \u003d new GameBuilder().withGameId(\"Fifa22\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game ROCKET_LEAGUE \u003d new GameBuilder().withGameId(\"RocketLeague\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    // Manually added - Game\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game CSGO \u003d new GameBuilder().withGameId(VALID_GAME_ID_CSGO).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    public static final Game APEX_LEGENDS \u003d new GameBuilder().withGameId(VALID_GAME_ID_APEX_LEGENDS).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Legends\"; // A keyword that matches MEIER","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    private TypicalGames() {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    public static GamesList getTypicalGamesList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        GamesList ab \u003d new GamesList();","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        for (Game game : getTypicalGames()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"            ab.addGame(game);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        return ab;","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    public static List\u003cGame\u003e getTypicalGames() {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MINECRAFT, LEAGUE_OF_LEGENDS, FORTNITE, GENSHIN_IMPACT, GTA_V,","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"                ANIMAL_CROSSING, VALORANT));","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YeluriKetan":54}}]
