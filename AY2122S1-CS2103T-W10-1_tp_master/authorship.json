[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wz27"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W10-1/tp/actions)","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"wz27"},"content":"* This is **ContactSh**, a **CLI-based contacts manager for NUS Student Entrepreneurs proficient in Unix CLI**.\u003cbr\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"wz27"},"content":"  Benefits:","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"wz27"},"content":"  * users familiar with Unix commands can quickly master using the app efficiently","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"wz27"},"content":"  * keeps track of tasks/meetings associated with contacts","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"wz27"},"content":"  * enhanced contact searchability and organisation","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"wz27"},"content":"  * eliminates the need to remember and recall interpersonal details of contacts","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"wz27"},"content":"* It is named `ContactSh` (`Contacts`+`Shell`) because it was created as a contact management software designed with common Shell interfaces in mind.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"* For the detailed documentation of this project, see the **[ContactSh Product Website](https://ay2122s1-cs2103t-w10-1.github.io/tp/)**.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"* This project is a **part of the AY2122S1-CS2103T-W10-2 Developers** initiative.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"kflim":2,"-":6,"wz27":9}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"//noinspection GroovyAssignabilityCheck","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"run {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"    archiveName \u003d \u0027ContactSh.jar\u0027","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"    manifest {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"        attributes \u0027Main-Class\u0027: \u0027seedu.address.Main\u0027","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"run {","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"limzk126":10,"-":73,"eugenecsa":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"### Lim Zhe Kang","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"\u003cimg src\u003d\"images/limzk126.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"[[github](http://github.com/limzk126)]","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"[[portfolio](team/limzk126.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"* Role: Testing","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"* Responsibilities: Ensure the testing of the project is done properly and on time.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"### Chan Sze Ann, Eugene","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"\u003cimg src\u003d\"images/eugenecsa.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"[[github](http://github.com/eugenecsa)] [[portfolio](team/eugenecsa.md)]","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"* Role: Code Quality","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"* Responsibilities: Looks after code quality, ensures adherence to coding standards, etc.","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"wz27"},"content":"### Ho Wen Zhong","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"wz27"},"content":"\u003cimg src\u003d\"images/wz27.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"wz27"},"content":"[[github](http://github.com/wz27)]","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"wz27"},"content":"[[portfolio](team/wz27.md)]","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"wz27"},"content":"* Role: Integration, Scheduling and Tracking","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"wz27"},"content":"* Responsibilities: In charge of versioning of the code, maintaining the code repository, integrating various parts of","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"wz27"},"content":"  the software to create a whole. In charge of defining, assigning, and tracking project tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"### Andrew Baruch","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"\u003cimg src\u003d\"images/leopardmerkava.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"[[github](https://github.com/LeopardMerkava)]","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"[[portfolio](team/leopardmerkava.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"* Role: Deliverable and Deadline, UI","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format. In charge of UI ensuring it fits the use case.","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"### Lim Kai Fang","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"\u003cimg src\u003d\"images/kflim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"[[GitHub page](https://github.com/kflim)]","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"[Portfolio](team/kflim.md)","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"* Role: Documentation","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"* Responsibilities: Responsible for the quality of various project documents.","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"LeopardMerkava":6,"limzk126":5,"kflim":6,"-":29,"eugenecsa":6,"wz27":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"LeopardMerkava"},"content":"* stores the previous user input into the `UserCommandCache`","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"limzk126"},"content":"### View Task list feature","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"limzk126"},"content":"Displays the task list associated to the specified person onto the `taskListPanel` of the GUI.","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"limzk126"},"content":"The view task list feature is facilitated by :","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"limzk126"},"content":"`TaskListManager` :","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"limzk126"},"content":"- It serves as a archive to track the task lists reference of every `Person`.","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"limzk126"},"content":"- It maintains an `ObservableList` which encapsulates a `Person`\u0027s task list, and is referenced by the `UI ` for display on the GUI.","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"limzk126"},"content":"- It implements the following operation that support the view task list feature:","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"limzk126"},"content":"  - `TaskListManager#setToDisplayTaskList` — set the currently displayed task list to the task list of the specified person.","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"limzk126"},"content":"This operation is exposed in the `Model` interface as `Model#displayPersonTaskList`.","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"limzk126"},"content":"Given below is the example usage scenario:","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"limzk126"},"content":"Step 1. The user launches the ContactSh application. Data will be loaded from the storage to the application memory. The `TaskListManager` will populate itself with the references of every `Person`\u0027s task list.","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"limzk126"},"content":"Step 2. The user executes `cat 2` command to view the task list of the 2nd `Person` that is shown on the currently displayed person list.","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"limzk126"},"content":"step 3. If the parameters entered by the user is valid, the application will retrieve the task list reference of the specified `Person` from the archive. The task list reference currently encapsulated by the `ObservableList` is cleared and is then replaced by the specified `Person`\u0027s task list reference. Else, ContactSh will display an error message indicating that the user did not type in the parameters correctly.","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"limzk126"},"content":"The following sequence diagram show how the view task list operation works:","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"limzk126"},"content":"![ViewTaskListSequenceDiagram](images/ViewTaskListSequenceDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"limzk126"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the parameters provided by the user is of non-integer form, ParseException will be thrown and an error message providing the correct format will be shown. Also, if the provided INDEX does not exists within the indices of the displayed person list, CommandException is thrown and an error message that warns of invalid INDEX will be shown.","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"limzk126"},"content":"The following activity diagram summarises what happens when a user executes a `cat` command:","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"limzk126"},"content":"![ViewTaskListActivityDiagram](images/ViewTaskListActivityDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"LeopardMerkava"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":193,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"limzk126"},"content":"#### Design consideration:","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"limzk126"},"content":"##### Aspect: How to display the task list on the GUI","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"limzk126"},"content":"- **Alternative 1 (current choice):** Have two side-by-side panels, left for person list and right for task list.","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"LeopardMerkava"},"content":"  * Pros:","lastModifiedDate":"2021-10-29"},{"lineNumber":201,"author":{"gitId":"LeopardMerkava"},"content":"    * User is able to concurrently view more information.","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"LeopardMerkava"},"content":"  * Cons:","lastModifiedDate":"2021-10-29"},{"lineNumber":204,"author":{"gitId":"LeopardMerkava"},"content":"    * More work to create and optimize the split panel.","lastModifiedDate":"2021-10-29"},{"lineNumber":205,"author":{"gitId":"LeopardMerkava"},"content":"    * Content wrapping can was tricky since there is a slider in the middle to resize either panels.","lastModifiedDate":"2021-10-29"},{"lineNumber":206,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"LeopardMerkava"},"content":"* **Alternative 2:** Have only one panel. The person list gets replaced by task list when cat is executed.","lastModifiedDate":"2021-10-29"},{"lineNumber":208,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"LeopardMerkava"},"content":"  * Pros: More convenient to implement.","lastModifiedDate":"2021-10-29"},{"lineNumber":210,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"LeopardMerkava"},"content":"  * Cons:","lastModifiedDate":"2021-10-29"},{"lineNumber":212,"author":{"gitId":"LeopardMerkava"},"content":"    * `list` has to be executed again if user wants to redirect back to the person list (extra overhead","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"limzk126"},"content":"      which reduces efficiency).","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"LeopardMerkava"},"content":"    * Lesser view of information.","lastModifiedDate":"2021-10-29"},{"lineNumber":215,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"LeopardMerkava"},"content":"### Command Cache","lastModifiedDate":"2021-10-29"},{"lineNumber":217,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"LeopardMerkava"},"content":"The command Cache is the aspect of the program which stores the previous user input. This allows the user to browse","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"LeopardMerkava"},"content":"through the previous input using the up and down arrow key which simulates the Linux experience.","lastModifiedDate":"2021-10-29"},{"lineNumber":220,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"LeopardMerkava"},"content":"This function is facilitated by 3 aspects of the program:","lastModifiedDate":"2021-10-29"},{"lineNumber":222,"author":{"gitId":"LeopardMerkava"},"content":"1. CommandBox in GUI","lastModifiedDate":"2021-10-29"},{"lineNumber":223,"author":{"gitId":"LeopardMerkava"},"content":"2. InternalCommand in Logic","lastModifiedDate":"2021-10-29"},{"lineNumber":224,"author":{"gitId":"LeopardMerkava"},"content":"3. UserCommandCache in Model","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":226,"author":{"gitId":"LeopardMerkava"},"content":"#### Caching the command","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"LeopardMerkava"},"content":"The following sequence diagram demonstrates how the caching mechanism in the Model and Logic unit:","lastModifiedDate":"2021-10-29"},{"lineNumber":228,"author":{"gitId":"LeopardMerkava"},"content":"![CachingModelAndLogic](images/CachingModelAndLogic.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":230,"author":{"gitId":"LeopardMerkava"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The execution of the command happens after the caching","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"LeopardMerkava"},"content":"(and is omitted in the above diagram). This means invalid commands are also stored.","lastModifiedDate":"2021-10-29"},{"lineNumber":232,"author":{"gitId":"LeopardMerkava"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":233,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":234,"author":{"gitId":"LeopardMerkava"},"content":"The following activity diagram illustrates how the storage in the cache is handled:","lastModifiedDate":"2021-10-29"},{"lineNumber":235,"author":{"gitId":"LeopardMerkava"},"content":"![CacheAddCommandActivityDiagram](images/CacheAddCommandActivityDiagram.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":236,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":237,"author":{"gitId":"LeopardMerkava"},"content":"With the current iteration, the cache may hold up to 50 most recent command. However, only the newest 25 command is","lastModifiedDate":"2021-10-29"},{"lineNumber":238,"author":{"gitId":"LeopardMerkava"},"content":"guaranteed to be saved at all times. The user is not blocked from accessing older commands as it provides additional","lastModifiedDate":"2021-10-29"},{"lineNumber":239,"author":{"gitId":"LeopardMerkava"},"content":"functionality without too much loss.","lastModifiedDate":"2021-10-29"},{"lineNumber":240,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":241,"author":{"gitId":"LeopardMerkava"},"content":"#### Accessing the Cache","lastModifiedDate":"2021-10-29"},{"lineNumber":242,"author":{"gitId":"LeopardMerkava"},"content":"As mentioned before, the caching feature utilises a different kind of command as with other features. The reason will be","lastModifiedDate":"2021-10-29"},{"lineNumber":243,"author":{"gitId":"LeopardMerkava"},"content":"explored in the design consideration section. Nonetheless, both command type are handled by the Logic unit almost","lastModifiedDate":"2021-10-29"},{"lineNumber":244,"author":{"gitId":"LeopardMerkava"},"content":"exactly the same way.","lastModifiedDate":"2021-10-29"},{"lineNumber":245,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":246,"author":{"gitId":"LeopardMerkava"},"content":"The diagram below shws the generation of the internal command in the GUI:","lastModifiedDate":"2021-10-29"},{"lineNumber":247,"author":{"gitId":"LeopardMerkava"},"content":"![AccessingCacheSequenceDiagram](images/AccessingCacheSequenceDiagram.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":248,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":249,"author":{"gitId":"LeopardMerkava"},"content":"The cache, stored in the Model, is implemented using the Singleton design pattern as there should, at all times,","lastModifiedDate":"2021-10-29"},{"lineNumber":250,"author":{"gitId":"LeopardMerkava"},"content":"be only one cache existing.","lastModifiedDate":"2021-10-29"},{"lineNumber":251,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":252,"author":{"gitId":"LeopardMerkava"},"content":"#### Design Consideration","lastModifiedDate":"2021-10-29"},{"lineNumber":253,"author":{"gitId":"LeopardMerkava"},"content":"##### Aspect: Accessing cache","lastModifiedDate":"2021-10-29"},{"lineNumber":254,"author":{"gitId":"LeopardMerkava"},"content":"* **Alternative 1** : Have cache stored in model and piggyback on existing command code.","lastModifiedDate":"2021-10-29"},{"lineNumber":255,"author":{"gitId":"LeopardMerkava"},"content":"    * Pros:","lastModifiedDate":"2021-10-29"},{"lineNumber":256,"author":{"gitId":"LeopardMerkava"},"content":"        * A relatively simple design with less possibility of bug","lastModifiedDate":"2021-10-29"},{"lineNumber":257,"author":{"gitId":"LeopardMerkava"},"content":"        * Less effort needed","lastModifiedDate":"2021-10-29"},{"lineNumber":258,"author":{"gitId":"LeopardMerkava"},"content":"        * Still maintain cohesion and separation of responsibility","lastModifiedDate":"2021-10-29"},{"lineNumber":259,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":260,"author":{"gitId":"LeopardMerkava"},"content":"    * Cons:","lastModifiedDate":"2021-10-29"},{"lineNumber":261,"author":{"gitId":"LeopardMerkava"},"content":"        * Could not differentiate between internal and external input command. This leads to either the possibility","lastModifiedDate":"2021-10-29"},{"lineNumber":262,"author":{"gitId":"LeopardMerkava"},"content":"          for user to input the internal commands accidentally, causing bug, or some commands being blocked from running","lastModifiedDate":"2021-10-29"},{"lineNumber":263,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":264,"author":{"gitId":"LeopardMerkava"},"content":"* **Alternative 2 (current choice):** Have cache stored in model and create new internal command.","lastModifiedDate":"2021-10-29"},{"lineNumber":265,"author":{"gitId":"LeopardMerkava"},"content":"    * Pros:","lastModifiedDate":"2021-10-29"},{"lineNumber":266,"author":{"gitId":"LeopardMerkava"},"content":"        * No need for command blocking and no possibility for user to accidentally type in the command","lastModifiedDate":"2021-10-29"},{"lineNumber":267,"author":{"gitId":"LeopardMerkava"},"content":"        * Still maintain cohesion and separation of responsibility","lastModifiedDate":"2021-10-29"},{"lineNumber":268,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":269,"author":{"gitId":"LeopardMerkava"},"content":"    * Cons:","lastModifiedDate":"2021-10-29"},{"lineNumber":270,"author":{"gitId":"LeopardMerkava"},"content":"        * Increased avenue for bugs","lastModifiedDate":"2021-10-29"},{"lineNumber":271,"author":{"gitId":"LeopardMerkava"},"content":"        * More coding to be done","lastModifiedDate":"2021-10-29"},{"lineNumber":272,"author":{"gitId":"LeopardMerkava"},"content":"        * Relatively worse in terms of \"repeating yourself\"","lastModifiedDate":"2021-10-29"},{"lineNumber":273,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":274,"author":{"gitId":"LeopardMerkava"},"content":"* **Alternative 3:** Have cache stored in UI.","lastModifiedDate":"2021-10-29"},{"lineNumber":275,"author":{"gitId":"LeopardMerkava"},"content":"    * Pros:","lastModifiedDate":"2021-10-29"},{"lineNumber":276,"author":{"gitId":"LeopardMerkava"},"content":"        * No need for extraction using commands","lastModifiedDate":"2021-10-29"},{"lineNumber":277,"author":{"gitId":"LeopardMerkava"},"content":"        * Simple implementation","lastModifiedDate":"2021-10-29"},{"lineNumber":278,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":279,"author":{"gitId":"LeopardMerkava"},"content":"    * Cons:","lastModifiedDate":"2021-10-29"},{"lineNumber":280,"author":{"gitId":"LeopardMerkava"},"content":"        * Breaks the MVC pattern as UI now saves things","lastModifiedDate":"2021-10-29"},{"lineNumber":281,"author":{"gitId":"LeopardMerkava"},"content":"        * Decreased cohesion","lastModifiedDate":"2021-10-29"},{"lineNumber":282,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":283,"author":{"gitId":"kflim"},"content":"### Find people feature","lastModifiedDate":"2021-10-26"},{"lineNumber":284,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":285,"author":{"gitId":"kflim"},"content":"Displays the people associated with the specified search keywords onto the `PersonListPanel` of the GUI.","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":287,"author":{"gitId":"kflim"},"content":"Given below is the example usage scenario:","lastModifiedDate":"2021-10-26"},{"lineNumber":288,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":289,"author":{"gitId":"kflim"},"content":"Step 1. The user launches the ContactSh application. Data will be loaded from the storage to the application memory. The `PersonListPanel` will be populated with a `PersonCard` for every person from memory.","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"kflim"},"content":"Step 2. The user executes `find -n Alex` command to find anyone whose name could be abbreviated to be `Alex` on the currently displayed person list.","lastModifiedDate":"2021-10-26"},{"lineNumber":292,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"kflim"},"content":"Step 3. If the parameters entered by the user is valid, the application will retrieve any `Person` that matches the keywords given. The person list reference currently encapsulated by the `FilteredList` will then be filtered based on whether a person has an attribute that matches the keywords. The updated `FilteredList` is then shown to the user with all matching persons via the `PersonListPanel`. Else, ContactSh will display an error message indicating that the user did not type in the parameters correctly.","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"kflim"},"content":"The following sequence diagram show how the find operation works:","lastModifiedDate":"2021-10-28"},{"lineNumber":296,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"kflim"},"content":"![ViewTaskListSequenceDiagram](images/FindSequenceDiagram.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":298,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"kflim"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the user does not provide any keywords or uses an invalid flag, ParseException will be thrown and an error message providing the correct format will be shown.","lastModifiedDate":"2021-10-29"},{"lineNumber":300,"author":{"gitId":"LeopardMerkava"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":301,"author":{"gitId":"kflim"},"content":"The following activity diagram summarises what happens when a user executes a `find -n Alex` command:","lastModifiedDate":"2021-10-29"},{"lineNumber":302,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"kflim"},"content":"![ViewTaskListActivityDiagram](images/FindActivityDiagram.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":304,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"kflim"},"content":"#### Design consideration:","lastModifiedDate":"2021-10-26"},{"lineNumber":306,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"kflim"},"content":"##### Aspect: How to find based on the keywords","lastModifiedDate":"2021-10-29"},{"lineNumber":308,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":309,"author":{"gitId":"kflim"},"content":"- **Alternative 1 (current choice):** Check that the order of the keywords matches the order they appear in for any person\u0027s attribute (e.g. name) and whether each separate word of a person\u0027s attribute starts with the keywords, ignoring case.","lastModifiedDate":"2021-10-29"},{"lineNumber":310,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"kflim"},"content":"    - Pros: The user is able to use abbreviations for certain attributes to find people and not have to worry about exact matching","lastModifiedDate":"2021-10-29"},{"lineNumber":312,"author":{"gitId":"limzk126"},"content":"    - Cons:","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"kflim"},"content":"        - The user can no longer find multiple people (using different keywords) and even if at least one of the keywords matches a person\u0027s attribute, it will not display the person if the keywords are out of order and do not all appear in the person\u0027s attribute.","lastModifiedDate":"2021-10-29"},{"lineNumber":314,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"kflim"},"content":"- **Alternative 2:** Use exact matching and check if any of the keywords matches a person\u0027s attribute","lastModifiedDate":"2021-10-29"},{"lineNumber":316,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":317,"author":{"gitId":"kflim"},"content":"    - Pros: Easier to implement.","lastModifiedDate":"2021-10-29"},{"lineNumber":318,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":319,"author":{"gitId":"limzk126"},"content":"    - Cons:","lastModifiedDate":"2021-10-21"},{"lineNumber":320,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":321,"author":{"gitId":"kflim"},"content":"        - Keywords provided must be exact, so even if the user is missing one letter, it will not display the expected person","lastModifiedDate":"2021-10-29"},{"lineNumber":322,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":413,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":415,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":416,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"limzk126"},"content":"* NUS Student Entrepreneurs","lastModifiedDate":"2021-09-28"},{"lineNumber":427,"author":{"gitId":"limzk126"},"content":"* Proficient in Unix CLI","lastModifiedDate":"2021-09-28"},{"lineNumber":428,"author":{"gitId":"limzk126"},"content":"* Has many meetings and is in contact with different people (students, mentors,","lastModifiedDate":"2021-09-28"},{"lineNumber":429,"author":{"gitId":"limzk126"},"content":"  stakeholders, clients, partners)","lastModifiedDate":"2021-09-28"},{"lineNumber":430,"author":{"gitId":"limzk126"},"content":"* Carries Laptop around (prefers Laptop)","lastModifiedDate":"2021-09-28"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"limzk126"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-28"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"limzk126"},"content":"* Users familiar with Unix commands can quickly master using the app efficiently.","lastModifiedDate":"2021-09-28"},{"lineNumber":435,"author":{"gitId":"limzk126"},"content":"* Allow users to keep track of tasks/meetings associated with contacts.","lastModifiedDate":"2021-09-28"},{"lineNumber":436,"author":{"gitId":"limzk126"},"content":"* Enhanced contact searchability and organisation.","lastModifiedDate":"2021-09-28"},{"lineNumber":437,"author":{"gitId":"limzk126"},"content":"* Eliminates the need to remember and recall interpersonal details of contacts.","lastModifiedDate":"2021-09-28"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"kflim"},"content":"| `***` | user | update contact details | keep track of their details |","lastModifiedDate":"2021-10-24"},{"lineNumber":446,"author":{"gitId":"kflim"},"content":"| `***` | user | delete contacts | get rid of contacts who are no longer relevant |","lastModifiedDate":"2021-10-24"},{"lineNumber":447,"author":{"gitId":"kflim"},"content":"| | **general user** | | |","lastModifiedDate":"2021-10-24"},{"lineNumber":448,"author":{"gitId":"kflim"},"content":"| `**` | general CLI user| use commands from cli | exclude the need to learn new commands |","lastModifiedDate":"2021-10-24"},{"lineNumber":449,"author":{"gitId":"kflim"},"content":"| `**` | student entrepreneur | categorize my business contacts | organize them better |","lastModifiedDate":"2021-10-24"},{"lineNumber":450,"author":{"gitId":"kflim"},"content":"| `**` | student entrepreneur | differentiate between business and student contacts | differentiate easily |","lastModifiedDate":"2021-10-24"},{"lineNumber":451,"author":{"gitId":"kflim"},"content":"| `***` | student entrepreneur | view my contacts in an organized manner | have a better overview |","lastModifiedDate":"2021-10-24"},{"lineNumber":452,"author":{"gitId":"kflim"},"content":"| `***` | new user | save contacts | keep track of them |","lastModifiedDate":"2021-10-24"},{"lineNumber":453,"author":{"gitId":"kflim"},"content":"| `***` | new user | purge all example contacts | start adding my own contacts |","lastModifiedDate":"2021-10-24"},{"lineNumber":454,"author":{"gitId":"limzk126"},"content":"| | **beginner user** | **learn commands fast** | **spend less time on learning** |","lastModifiedDate":"2021-09-28"},{"lineNumber":455,"author":{"gitId":"limzk126"},"content":"| `***` | beginner user | view the user guide easily | learn the commands as and when I need |","lastModifiedDate":"2021-09-28"},{"lineNumber":456,"author":{"gitId":"limzk126"},"content":"| `***` | beginner user | view the list of instructions | know what instructions are available |","lastModifiedDate":"2021-09-28"},{"lineNumber":457,"author":{"gitId":"limzk126"},"content":"| `***` | beginner user | see examples of contacts | have an idea of how contacts will be presented |","lastModifiedDate":"2021-09-28"},{"lineNumber":458,"author":{"gitId":"limzk126"},"content":"| | **student entrepreneur** | **organise my contacts according to specific groups** | **find the ones i want easily** |","lastModifiedDate":"2021-09-28"},{"lineNumber":459,"author":{"gitId":"limzk126"},"content":"| | **intermediate user** | **sort and filter my contacts** | **sieve out irrelevant contacts** |","lastModifiedDate":"2021-09-28"},{"lineNumber":460,"author":{"gitId":"limzk126"},"content":"| `***` | intermediate user | look through the list of contacts| see the contacts I have added |","lastModifiedDate":"2021-09-28"},{"lineNumber":461,"author":{"gitId":"limzk126"},"content":"| `***` | intermediate user | search for contact names | directly find the contact of a person in mind |","lastModifiedDate":"2021-09-28"},{"lineNumber":462,"author":{"gitId":"limzk126"},"content":"| `***` | intermediate user | assign tasks to contacts | know what I should contact them for |","lastModifiedDate":"2021-09-28"},{"lineNumber":463,"author":{"gitId":"limzk126"},"content":"| `***` | intermediate user | delete tasks from contacts | remove task which are done |","lastModifiedDate":"2021-09-28"},{"lineNumber":464,"author":{"gitId":"limzk126"},"content":"| `**` | intermediate user | sort contacts by tasks | identify connections between contacts |","lastModifiedDate":"2021-09-28"},{"lineNumber":465,"author":{"gitId":"limzk126"},"content":"| `**` | intermediate user | choose what information about my contacts to view | read the information easier |","lastModifiedDate":"2021-09-28"},{"lineNumber":466,"author":{"gitId":"limzk126"},"content":"| `***` | intermediate user | view task from contacts | see what tasks are connected to said contact |","lastModifiedDate":"2021-09-28"},{"lineNumber":467,"author":{"gitId":"kflim"},"content":"| | **experienced user** |\t**manipulate multiple contacts with one command** | **improve my work efficiency** |","lastModifiedDate":"2021-10-24"},{"lineNumber":468,"author":{"gitId":"kflim"},"content":"| `**` | experienced user | delete multiple contacts using only one command | improve my work efficiency |","lastModifiedDate":"2021-10-24"},{"lineNumber":469,"author":{"gitId":"kflim"},"content":"| `**` | experienced user |\tmove multiple contacts using only one command | improve my work efficiency |","lastModifiedDate":"2021-10-24"},{"lineNumber":470,"author":{"gitId":"kflim"},"content":"| `**` | experienced user |\tadd multiple contacts using only one command | improve my work efficiency |","lastModifiedDate":"2021-10-24"},{"lineNumber":471,"author":{"gitId":"kflim"},"content":"| `**` | experienced user |\tsearch for contacts using abbreviations | improve my work efficiency |","lastModifiedDate":"2021-10-24"},{"lineNumber":472,"author":{"gitId":"limzk126"},"content":"| | **experienced user** | **update large number of contacts at once** | **exclude manually adding them myself** |","lastModifiedDate":"2021-09-28"},{"lineNumber":473,"author":{"gitId":"limzk126"},"content":"| `**` | experienced user | import a list of contacts | add a large number of contacts at once |","lastModifiedDate":"2021-09-28"},{"lineNumber":474,"author":{"gitId":"limzk126"},"content":"| `**` | experienced user | export a list of contacts | send them to other people |","lastModifiedDate":"2021-09-28"},{"lineNumber":475,"author":{"gitId":"kflim"},"content":"| | **expert CL user** | **use high-level CLI instructions** | **directly use the app at a high-level** |","lastModifiedDate":"2021-10-24"},{"lineNumber":476,"author":{"gitId":"kflim"},"content":"| `**` | expert CL user | make command combinations | execute multiple instructions in one line |","lastModifiedDate":"2021-10-24"},{"lineNumber":477,"author":{"gitId":"kflim"},"content":"| `**` | expert CL user | redirect input/output | input/output from/to files instead of stdin |","lastModifiedDate":"2021-10-24"},{"lineNumber":478,"author":{"gitId":"kflim"},"content":"| `**` | expert CL user | create scripts | automate specific tasks |","lastModifiedDate":"2021-10-24"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"eugenecsa"},"content":"(For all use cases below, the **System** is the `ContactSH` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-28"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"eugenecsa"},"content":"**Use case: Add a contact**","lastModifiedDate":"2021-09-28"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"eugenecsa"},"content":"1. User requests to add a contact.","lastModifiedDate":"2021-09-28"},{"lineNumber":489,"author":{"gitId":"eugenecsa"},"content":"2. ContactSH adds the contact","lastModifiedDate":"2021-09-28"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":493,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":495,"author":{"gitId":"eugenecsa"},"content":"* 1a. The given contact is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":496,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":497,"author":{"gitId":"eugenecsa"},"content":"    * 1a1. ContactSH shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":498,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":499,"author":{"gitId":"eugenecsa"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":500,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":501,"author":{"gitId":"wz27"},"content":"**Use case: Edit a contact**","lastModifiedDate":"2021-10-22"},{"lineNumber":502,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":503,"author":{"gitId":"wz27"},"content":"**MSS**","lastModifiedDate":"2021-10-22"},{"lineNumber":504,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":505,"author":{"gitId":"wz27"},"content":"1. User requests a list of contacts.","lastModifiedDate":"2021-10-22"},{"lineNumber":506,"author":{"gitId":"wz27"},"content":"2. ContactSH shows a list of contacts.","lastModifiedDate":"2021-10-22"},{"lineNumber":507,"author":{"gitId":"wz27"},"content":"3. User requests to edit a specific contact in the list.","lastModifiedDate":"2021-10-22"},{"lineNumber":508,"author":{"gitId":"wz27"},"content":"4. ContactSH edits the contact.","lastModifiedDate":"2021-10-22"},{"lineNumber":509,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":510,"author":{"gitId":"wz27"},"content":"   Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":511,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":512,"author":{"gitId":"wz27"},"content":"**Extensions**","lastModifiedDate":"2021-10-22"},{"lineNumber":513,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":514,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-10-22"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":516,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":518,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-10-22"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":520,"author":{"gitId":"wz27"},"content":"    * 3a1. ContactSH shows an error message.","lastModifiedDate":"2021-10-22"},{"lineNumber":521,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":522,"author":{"gitId":"wz27"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-22"},{"lineNumber":523,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":524,"author":{"gitId":"wz27"},"content":"* 3b. The given edit information is invalid.","lastModifiedDate":"2021-10-22"},{"lineNumber":525,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":526,"author":{"gitId":"wz27"},"content":"    * 3b1. ContactSH shows an error message.","lastModifiedDate":"2021-10-22"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":528,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-22"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":530,"author":{"gitId":"eugenecsa"},"content":"**Use case: Delete a contact**","lastModifiedDate":"2021-09-28"},{"lineNumber":531,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":532,"author":{"gitId":"eugenecsa"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":533,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":534,"author":{"gitId":"eugenecsa"},"content":"1.  User requests to list contacts","lastModifiedDate":"2021-09-28"},{"lineNumber":535,"author":{"gitId":"eugenecsa"},"content":"2.  ContactSH shows a list of contacts","lastModifiedDate":"2021-09-28"},{"lineNumber":536,"author":{"gitId":"eugenecsa"},"content":"3.  User requests to delete a specific contact in the list","lastModifiedDate":"2021-09-28"},{"lineNumber":537,"author":{"gitId":"eugenecsa"},"content":"4.  ContactSH deletes the contact","lastModifiedDate":"2021-09-28"},{"lineNumber":538,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":539,"author":{"gitId":"eugenecsa"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":540,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":541,"author":{"gitId":"eugenecsa"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":542,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":543,"author":{"gitId":"eugenecsa"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":544,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":545,"author":{"gitId":"eugenecsa"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":546,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":547,"author":{"gitId":"eugenecsa"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":548,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":549,"author":{"gitId":"eugenecsa"},"content":"    * 3a1. ContactSH shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":550,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":551,"author":{"gitId":"eugenecsa"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":552,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":553,"author":{"gitId":"eugenecsa"},"content":"**Use case: Find contact(s) by a criterion**","lastModifiedDate":"2021-09-28"},{"lineNumber":554,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":555,"author":{"gitId":"eugenecsa"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":556,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":557,"author":{"gitId":"eugenecsa"},"content":"1. User requests for contacts satisfying a criterion.","lastModifiedDate":"2021-09-28"},{"lineNumber":558,"author":{"gitId":"eugenecsa"},"content":"2. ContactSH searches for contacts that satisfy the criterion.","lastModifiedDate":"2021-09-28"},{"lineNumber":559,"author":{"gitId":"eugenecsa"},"content":"3. ContactSH displays the list of contacts that satisfy the criterion.","lastModifiedDate":"2021-09-28"},{"lineNumber":560,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":561,"author":{"gitId":"eugenecsa"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":562,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":563,"author":{"gitId":"eugenecsa"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":564,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":565,"author":{"gitId":"eugenecsa"},"content":"* 1a. The given criterion is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":566,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":567,"author":{"gitId":"eugenecsa"},"content":"    * 1a1. ContactSH shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":568,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":569,"author":{"gitId":"eugenecsa"},"content":"      Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":570,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":571,"author":{"gitId":"eugenecsa"},"content":"* 2a. No result matches the criterion.","lastModifiedDate":"2021-09-28"},{"lineNumber":572,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":573,"author":{"gitId":"eugenecsa"},"content":"    * 2a1. ContactSH returns message stating no contact found.","lastModifiedDate":"2021-09-28"},{"lineNumber":574,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":575,"author":{"gitId":"eugenecsa"},"content":"      Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":576,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":577,"author":{"gitId":"eugenecsa"},"content":"**Use case: Find command and its usage**","lastModifiedDate":"2021-09-28"},{"lineNumber":578,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":579,"author":{"gitId":"eugenecsa"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":580,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":581,"author":{"gitId":"eugenecsa"},"content":"1. User requests for a list of commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":582,"author":{"gitId":"eugenecsa"},"content":"2. ContactSH returns a list of commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":583,"author":{"gitId":"eugenecsa"},"content":"3. User requests for details of a specific command in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":584,"author":{"gitId":"eugenecsa"},"content":"4. ContactSH returns the details of the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":585,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":586,"author":{"gitId":"eugenecsa"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":587,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":588,"author":{"gitId":"eugenecsa"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":589,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":590,"author":{"gitId":"eugenecsa"},"content":"* 3a. The given command is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":591,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":592,"author":{"gitId":"eugenecsa"},"content":"    * 3a1. ContactSH shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"wz27"},"content":"**Use case: Sort contacts by name**","lastModifiedDate":"2021-10-22"},{"lineNumber":597,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":598,"author":{"gitId":"wz27"},"content":"**MSS**","lastModifiedDate":"2021-10-22"},{"lineNumber":599,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":600,"author":{"gitId":"wz27"},"content":"1. User requests to sort contacts by name.","lastModifiedDate":"2021-10-22"},{"lineNumber":601,"author":{"gitId":"wz27"},"content":"2. ContactSH returns a sorted list of contacts.","lastModifiedDate":"2021-10-22"},{"lineNumber":602,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":603,"author":{"gitId":"wz27"},"content":"    Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":604,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":605,"author":{"gitId":"wz27"},"content":"**Extensions**","lastModifiedDate":"2021-10-22"},{"lineNumber":606,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":607,"author":{"gitId":"wz27"},"content":"* 1a. The reverse flag is given.","lastModifiedDate":"2021-10-22"},{"lineNumber":608,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":609,"author":{"gitId":"wz27"},"content":"    * 1a1. ContactSH returns a reverse sorted list of contacts.","lastModifiedDate":"2021-10-22"},{"lineNumber":610,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":611,"author":{"gitId":"wz27"},"content":"    Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":612,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":613,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"kflim"},"content":"4. Any changes to the data should be saved permanently and automatically.","lastModifiedDate":"2021-09-28"},{"lineNumber":621,"author":{"gitId":"kflim"},"content":"5. Should be easy to learn and use at all times regardless of the user\u0027s skill with the user interface.","lastModifiedDate":"2021-09-28"},{"lineNumber":622,"author":{"gitId":"kflim"},"content":"6. The project is expected to push deliverables according to the module schedule.","lastModifiedDate":"2021-09-28"},{"lineNumber":623,"author":{"gitId":"kflim"},"content":"7. Should be compliant with the coding standards of the module.","lastModifiedDate":"2021-09-28"},{"lineNumber":624,"author":{"gitId":"kflim"},"content":"8. Documentation for the project, such as the user and developer guides, should be effective and concise.","lastModifiedDate":"2021-09-28"},{"lineNumber":625,"author":{"gitId":"kflim"},"content":"9. Should be logging useful information and tracking sources of errors as they are identified.","lastModifiedDate":"2021-09-28"},{"lineNumber":626,"author":{"gitId":"kflim"},"content":"10. Should be easily testable from different testing approaches (e.g. Integration testing, System testing, automated","lastModifiedDate":"2021-09-28"},{"lineNumber":627,"author":{"gitId":"kflim"},"content":"    functional tests, manual tests etc.)","lastModifiedDate":"2021-09-28"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"LeopardMerkava"},"content":"    1. Test case: `rm 1`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":671,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"LeopardMerkava"},"content":"    1. Test case: `rm 0`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":674,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"LeopardMerkava"},"content":"    1. Other incorrect delete commands to try: `rm`, `rm x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":677,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LeopardMerkava":85,"limzk126":81,"kflim":57,"-":354,"eugenecsa":75,"wz27":35}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"![Logo](images/ContactSh_Ug_logo.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"As a student entrepreneur with a busy schedule, do you always find yourself missing an appointment/meeting with","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"your clients or friends? Or can\u0027t seem to find a way to easily recall details of a certain someone","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"who is probably stored as one of your many contacts in your Excel sheet? Fret not,","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"as we have designed an application called **ContactSh** just for you! It is a Desktop application for managing your contacts","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"as well as tasks related to each of them. It boasts a highly effective search function and contact-task tracking system.","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"It is also optimized for use via a Command Line Interface(CLI) that is similar in style as Linux CLIs,","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you can type fast, you will be able to manage","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"business tasks related to your contacts more efficiently than using other traditional GUI apps.","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"The [Quick Start](#quick-start) section shows you how to quickly get ContactSh up and running on your computer.","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"If you are a new user, it is recommended to go through the instructions under [Features](#features) one by one.","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"If you are an experienced user, and just want to refer to the list of features, you may use the [Table of contents](#table-of-contents)","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"to quickly navigate to the command of your choice.","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"---","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"## Table of Contents","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"[Quick Start](#quick-start) \u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"[Features](#features)","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"* [Viewing details of instructions : `man`](#viewing-details-of-instructions-man)","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"* [Adding a person : `add`](#adding-a-person-add)","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"* [Editing a person : `edit`](#editing-a-person-edit)","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"* [Deleting a person : `rm`](#deleting-a-person-rm)","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"wz27"},"content":"* [Listing all persons : `ls`](#listing-all-persons-ls)","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"* [Sorting persons by name: `sort`](#sorting-persons-by-name-sort)","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"wz27"},"content":"* [Locating persons by name : `find`](#locating-persons-by-name-find)","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"wz27"},"content":"* [Adding a task : `add`](#adding-a-task-add)","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"wz27"},"content":"* [Editing a task : `edit`](#editing-a-task-edit)","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"wz27"},"content":"* [Deleting a task : `rm`](#deleting-a-task-rm)","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"wz27"},"content":"* [Marking a task as done : `donetask`](#marking-a-task-as-done-donetask)","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"wz27"},"content":"* [Marking a task as not done : `undotask`](#marking-a-task-as-not-done-undotask)","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"wz27"},"content":"* [Viewing tasks : `cat`](#viewing-tasks-cat)","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"wz27"},"content":"* [Setting the number of days before tasks are considered due soon : `reminder `](#setting-the-number-of-days-before-tasks-are-considered-due-soon-reminder)","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"wz27"},"content":"* [Clearing the screen : `clear`](#clearing-the-screen-clear)","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"* [Accessing the cache](#accessing-the-cache)","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"* [Saving the data](#saving-the-data)","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"* [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"* [Archiving data files `[coming in v2.0]`](#archiving-data-files-coming-in-v20)","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"[FAQ](#faq)\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"[Command Summary](#command-summary)","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"---","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"1. Download the latest `ContactSH.jar` from [here](https://github.com/AY2122S1-CS2103T-W10-1/tp/releases).","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your ContactSH.","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`man`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"   * **`ls`** : Lists all contacts.","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"   * **`add`**`-n John Doe -p 98765432 -e johnd@example.com -a John street, block 123, #01-01` : Adds a contact named `John Doe` to ContactSH.","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"   * **`rm`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"wz27"},"content":"   * **`rm`**`-A` : Deletes all contacts.","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"---","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by you.\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"wz27"},"content":"  e.g. in `add -n NAME`, `NAME` is a parameter to be specified: `add -n John Doe`.","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"wz27"},"content":"* Items in square brackets are optional parameters.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"wz27"},"content":"  e.g `-n NAME [-l LABEL]` can be specified as `-n John Doe -l friend` or `-n John Doe`.","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"wz27"},"content":"* Items with `…`​ after them can be specified multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"wz27"},"content":"  e.g. `[-l LABEL]…​` can be specified as `` (i.e. 0 times), `-l friend`, `-l friend -l family` etc.","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"wz27"},"content":"  e.g. if the command format is `-n NAME -p PHONE_NUMBER`, `-p PHONE_NUMBER -n NAME` is also acceptable.","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"wz27"},"content":"* If a parameter is expected only once in the command format but you specified it multiple times, only the last occurrence of the parameter will be accepted.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"wz27"},"content":"  e.g. if you specify `-p 12341234 -p 56785678`, only `-p 56785678` will be accepted.","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":98,"author":{"gitId":"LeopardMerkava"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `ls`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"wz27"},"content":"  e.g. if you specifiy `ls 123`, the command will be interpreted as `ls`.","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"kflim"},"content":"### Viewing details of instructions: `man`","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"kflim"},"content":"Shows you details of instructions that can be used to navigate the app.","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"Format: `man [COMMAND_NAME]`","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"wz27"},"content":"* If no `[COMMAND_NAME]` is entered, you will see a table of instructions, in a new window, that can be used to navigate the app.","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"wz27"},"content":"* If you enter a valid `[COMMAND_NAME]`, you will see the details of that command, which includes the format and taskName of the command.","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"Examples:","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"wz27"},"content":"* `man sort` Shows the full details of `sort` command as below.","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"kflim"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"kflim"},"content":"sort: Sorts the list of persons by the alphabetical order of their name.","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"kflim"},"content":"Parameters: [-r]","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"kflim"},"content":"Example: sort -r","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"kflim"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"eugenecsa"},"content":"Adds a person to ContactSH.","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"LeopardMerkava"},"content":"Format: `add -n NAME -p PHONE_NUMBER -e EMAIL -a ADDRESS [-d Description] [-l LABEL]... [-impt IMPORTANCE]`","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"eugenecsa"},"content":"A person can have any number of labels (including 0)","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"LeopardMerkava"},"content":"Notes:","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"LeopardMerkava"},"content":"*`IMPORTANCE` is either \"true\" or \"false\" (Case insensitive)","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"eugenecsa"},"content":"* `add -n John Doe -p 98765432 -e johnd@example.com -a John street, block 123, #01-01` Adds a person with name `John Doe`, phone number `98765432`, email `johnd@example.com`, address `John street, block 123, #01-01`.","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"eugenecsa"},"content":"* `add -n Betsy Crowe -l friend -e betsycrowe@example.com -a Newgate Prison -p 1234567 -d Bald -l criminal` Adds a person with name `Betsy Crowe`, phone number `1234567`, email `betsycrowe@example.com`, address `Newgate Prison`, label `criminal` and `friend`, description `Bald`.","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Editing a person: `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"eugenecsa"},"content":"Edits an existing person in ContactSH.","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"LeopardMerkava"},"content":"Format: `edit INDEX [-n NAME] [-p PHONE] [-e EMAIL] [-a ADDRESS] [-d DESCRIPTION] [-l LABEL]… [-impt IMPORTANCE]`","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"wz27"},"content":"* Edits the person at the specified `INDEX`. `INDEX` refers to the index number shown in the displayed person list. `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"wz27"},"content":"* When editing labels, the existing labels of the person will be removed (i.e editing labels overwrites previous labels).","lastModifiedDate":"2021-10-29"},{"lineNumber":152,"author":{"gitId":"LeopardMerkava"},"content":"* You can remove all the person’s labels by typing `-l` without","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"eugenecsa"},"content":"    specifying any labels after it.","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"LeopardMerkava"},"content":"* `IMPORTANCE` is either \"true\" or \"false\" (Case insensitive)","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"LeopardMerkava"},"content":"* `edit 1 -p 91234567 -e johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"wz27"},"content":"* `edit 2 -n Betsy Crower -l` Edits the name of the 2nd person to be `Betsy Crower` and removes all their existing labels.","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":161,"author":{"gitId":"wz27"},"content":"### Deleting a person: `rm`","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":163,"author":{"gitId":"wz27"},"content":"1. Deletes a specified person from ContactSH.","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"wz27"},"content":"   Format: `rm INDEX`","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"wz27"},"content":"   * Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"wz27"},"content":"   * `INDEX` refers to the index number shown in the persons list displayed.","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"wz27"},"content":"   * `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"wz27"},"content":"   Examples:","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"wz27"},"content":"   * `ls` followed by `rm 2` deletes the 2nd person listed in ContactSH.","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"wz27"},"content":"   * `find Betsy` followed by `rm 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"wz27"},"content":"2. Deletes all persons from ContactSH.","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"wz27"},"content":"   Format: `rm -A`","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"wz27"},"content":"### Listing all persons: `ls`","lastModifiedDate":"2021-10-29"},{"lineNumber":182,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"wz27"},"content":"Shows a list of all persons in ContactSH.","lastModifiedDate":"2021-10-29"},{"lineNumber":184,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":185,"author":{"gitId":"wz27"},"content":"Format: `ls`","lastModifiedDate":"2021-10-29"},{"lineNumber":186,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":187,"author":{"gitId":"wz27"},"content":"### Sorting persons by name: `sort`","lastModifiedDate":"2021-10-29"},{"lineNumber":188,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":189,"author":{"gitId":"wz27"},"content":"Sorts persons by the alphabetical order of their name.","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":191,"author":{"gitId":"wz27"},"content":"Format: `sort [-r]`","lastModifiedDate":"2021-10-29"},{"lineNumber":192,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":193,"author":{"gitId":"wz27"},"content":"* The default sort with no options provided displays a list of persons sorted in ascending ASCII alphabetical order of their name.","lastModifiedDate":"2021-10-29"},{"lineNumber":194,"author":{"gitId":"wz27"},"content":"* If the optional `-r` flag is provided, a list of persons sorted in reverse order is displayed.","lastModifiedDate":"2021-10-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"kflim"},"content":"Format: `find [-n NAME] [-p PHONE] [-e EMAIL] [-a ADDRESS] [-d DESCRIPTION] [-l LABEL] [-tn TASK_NAME]`","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"kflim"},"content":"* The search is case-insensitive. e.g. hans will match Hans","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"kflim"},"content":"* The order of the keywords matters. e.g. Hans Bo will not match Bo Hans","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"kflim"},"content":"* Only the specified attribute is searched.","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"kflim"},"content":"* Abbreviations will be matched e.g. Han will match Hans","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"kflim"},"content":"* Persons matching all the keywords will be returned. e.g. A Y will return Alex Yeoh, Alexandra Yee","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"kflim"},"content":"find [-n] Alex Finds all people whose name matches the keyword \"Alex\".","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"kflim"},"content":"![result for find -n Alex](images/findResult.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"wz27"},"content":"### Adding a task: `add`","lastModifiedDate":"2021-10-29"},{"lineNumber":214,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":215,"author":{"gitId":"wz27"},"content":"Adds a task to the current list of tasks attached to a person.","lastModifiedDate":"2021-10-29"},{"lineNumber":216,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":217,"author":{"gitId":"wz27"},"content":"Format: `add INDEX -tn TASK_NAME [-td TASK_DATE] [-tt TASK_TIME] [-ta TASK_ADDRESS]`","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":219,"author":{"gitId":"wz27"},"content":"* Adds a task to the person at the specified `INDEX`. `INDEX` refers to the index number shown in the persons list displayed. `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":220,"author":{"gitId":"LeopardMerkava"},"content":"* `TASK_DATE` should follow the format of `YYYY-MM-DD`.","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"LeopardMerkava"},"content":"* `TASK_TIME` should follow the format of `HH:MM`.","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":223,"author":{"gitId":"LeopardMerkava"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":224,"author":{"gitId":"wz27"},"content":"* `add 1 -tn call for meeting -td 2021-12-03 -tt 14:30` Adds the task `call for meeting` with date `2021-12-03` and time `14:30` to the task list of the 1st person listed.","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"wz27"},"content":"### Editing a task: `edit`","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":228,"author":{"gitId":"wz27"},"content":"Edits an existing task in ContactSH.","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":230,"author":{"gitId":"wz27"},"content":"Format: `edit INDEX -ti TASK_INDEX [-tn TASK_NAME] [-td TASK_DATE] [-tt TASK_TIME] [-ta TASK_ADDRESS]…​`","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":232,"author":{"gitId":"wz27"},"content":"* Edits a task attached to the person at the specified `INDEX`. `INDEX` refers to the index number shown in the persons list displayed. `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":233,"author":{"gitId":"wz27"},"content":"* The tasks edited  is specified by the `TASK_INDEX`. `TASK_INDEX` refers to the index number shown in the task list displayed. `TASK_INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":234,"author":{"gitId":"wz27"},"content":"* Multiple tasks of one person can be edited in one command. All fields provided after a `TASK_INDEX` are taken to be edited fields for the task at the `TASK_INDEX`.","lastModifiedDate":"2021-10-29"},{"lineNumber":235,"author":{"gitId":"wz27"},"content":"* Existing values will be updated to the input value.","lastModifiedDate":"2021-10-29"},{"lineNumber":236,"author":{"gitId":"wz27"},"content":"* For each `TASK_INDEX` provided, at least one of the optional fields must be provided.","lastModifiedDate":"2021-10-29"},{"lineNumber":237,"author":{"gitId":"wz27"},"content":"* `TASK_DATE` should follow the format of `YYYY-MM-DD`.","lastModifiedDate":"2021-10-29"},{"lineNumber":238,"author":{"gitId":"wz27"},"content":"* `TASK_TIME` should follow the format of `HH:MM`.","lastModifiedDate":"2021-10-29"},{"lineNumber":239,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":240,"author":{"gitId":"LeopardMerkava"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":241,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"wz27"},"content":"* `edit 3 -ti 2 -tn Group Project Meeting` Changes the name of the 2nd task attached to the 3rd person in the list to `Group Project Meeting`.","lastModifiedDate":"2021-10-29"},{"lineNumber":243,"author":{"gitId":"wz27"},"content":"* `edit 2 -ti 3 -tn Presentation Meeting -ta Zoom -ti 5 -td 2021-12-20` Changes the 3rd and 5th task of the 2nd person in the list. Name and address of the 3rd task is changed to`Presentation Meeting` and `Zoom` respectively. Date of the 5th task is changed to `2021-12-20`.","lastModifiedDate":"2021-10-29"},{"lineNumber":244,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":245,"author":{"gitId":"wz27"},"content":"### Deleting a task: `rm`","lastModifiedDate":"2021-10-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":247,"author":{"gitId":"wz27"},"content":"Deletes a task attached to a specified person.","lastModifiedDate":"2021-10-29"},{"lineNumber":248,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":249,"author":{"gitId":"wz27"},"content":"Format: `rm INDEX -ti TASK_INDEX…​`","lastModifiedDate":"2021-10-29"},{"lineNumber":250,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":251,"author":{"gitId":"wz27"},"content":"* Deletes a task attached to the person at the specified `INDEX`. `INDEX` refers to the index number shown in the persons list displayed. `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":252,"author":{"gitId":"wz27"},"content":"* The task deleted is specified by `TASK_INDEX`. `TASK_INDEX` refers to the index number shown in the task list displayed. `TASK_INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":253,"author":{"gitId":"wz27"},"content":" If the same `TASK_INDEX` is specified more than once, the task will only be deleted once.","lastModifiedDate":"2021-10-29"},{"lineNumber":254,"author":{"gitId":"wz27"},"content":"* Multiple tasks of one person can be deleted in one command.","lastModifiedDate":"2021-10-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"wz27"},"content":"* `rm 2 -ti 2` Deletes the 2nd task attached to the 2nd person listed.","lastModifiedDate":"2021-10-29"},{"lineNumber":259,"author":{"gitId":"wz27"},"content":"* `rm 1 -ti 2 -ti 3` Deletes the 2nd and 3rd task attached to the 1st person listed.","lastModifiedDate":"2021-10-29"},{"lineNumber":260,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"wz27"},"content":"### Marking a task as done: `donetask`","lastModifiedDate":"2021-10-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":263,"author":{"gitId":"wz27"},"content":"Marks an existing task in ContactSH as done.","lastModifiedDate":"2021-10-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"eugenecsa"},"content":"Format: `donetask INDEX -ti TASK_INDEX…​`","lastModifiedDate":"2021-10-24"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":267,"author":{"gitId":"wz27"},"content":"* Marks tasks attached to the person at the specified `INDEX` as done. `INDEX` refers to the index number shown in the displayed person list. `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":268,"author":{"gitId":"wz27"},"content":"* The tasks marked is specified by the `TASK_INDEX`. `TASK_INDEX` refers to the index number displayed in the tasklist of said person. `TASK_INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":269,"author":{"gitId":"LeopardMerkava"},"content":"* Multiple tasks of one person can be marked as done in one command.","lastModifiedDate":"2021-10-28"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"LeopardMerkava"},"content":"* `donetask 4 -ti 1 -ti 5` Marks the 1st and 5th task of the 4th person in the list as done.","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":275,"author":{"gitId":"wz27"},"content":"### Marking a task as not done: `undotask`","lastModifiedDate":"2021-10-29"},{"lineNumber":276,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":277,"author":{"gitId":"eugenecsa"},"content":"Marks existing tasks in ContactSH as not done.","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":279,"author":{"gitId":"eugenecsa"},"content":"Format: `undotask INDEX -ti TASK_INDEX…​`","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"wz27"},"content":"* Marks tasks attached to the person at the specified `INDEX` as not done. `INDEX` refers to the index number shown in the displayed person list. `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":282,"author":{"gitId":"wz27"},"content":"* The tasks marked is specified by the `TASK_INDEX`. `TASK_INDEX` refers to the index number displayed in the tasklist of said person. `TASK_INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":283,"author":{"gitId":"eugenecsa"},"content":"* Multiple tasks of one person can be marked as not done in one command.","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"eugenecsa"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"eugenecsa"},"content":"* `undotask 4 -ti 1 -ti 5` Marks the 1st and 5th task of the 4th person in the list as not done.","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"limzk126"},"content":"### Viewing tasks: `cat`","lastModifiedDate":"2021-10-24"},{"lineNumber":289,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":290,"author":{"gitId":"wz27"},"content":"1. Displays a list of tasks that has been attached to a specific person.","lastModifiedDate":"2021-10-29"},{"lineNumber":291,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":292,"author":{"gitId":"limzk126"},"content":"   Format: `cat INDEX`","lastModifiedDate":"2021-10-24"},{"lineNumber":293,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":294,"author":{"gitId":"LeopardMerkava"},"content":"   * Displays the list of tasks attached to the person at the specified `INDEX`.","lastModifiedDate":"2021-10-28"},{"lineNumber":295,"author":{"gitId":"wz27"},"content":"   * `INDEX` refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-29"},{"lineNumber":296,"author":{"gitId":"wz27"},"content":"   * `INDEX` **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-10-29"},{"lineNumber":297,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":298,"author":{"gitId":"limzk126"},"content":"   Examples:","lastModifiedDate":"2021-10-24"},{"lineNumber":299,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":300,"author":{"gitId":"eugenecsa"},"content":"   * `ls` followed by delete 2 deletes the 2nd person in the address book.","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"limzk126"},"content":"   * `find` Betsy followed by `delete 1` deletes the 1st person in the results of the `find`command.","lastModifiedDate":"2021-10-24"},{"lineNumber":302,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":303,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":304,"author":{"gitId":"wz27"},"content":"2. Displays a filtered list of tasks that has been attached to a specific person.","lastModifiedDate":"2021-10-29"},{"lineNumber":305,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"kflim"},"content":"   Format: `cat INDEX -f KEYWORDS…`","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"kflim"},"content":"   * Displays a filtered lists of tasks for a specific person according to the keywords provided.","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"kflim"},"content":"   * Only tasks that matches the keywords will be shown.","lastModifiedDate":"2021-10-28"},{"lineNumber":310,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"kflim"},"content":"   Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"kflim"},"content":"   * Alex is the first person in the address book and has the tasks [Work, project meeting at NUS]. `cat 1 -f nus` will display the task \"project meeting at NUS\"","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":316,"author":{"gitId":"wz27"},"content":"3. Displays the task list of all persons in ContactSh.","lastModifiedDate":"2021-10-29"},{"lineNumber":317,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":318,"author":{"gitId":"limzk126"},"content":"   Format: `cat -A`","lastModifiedDate":"2021-10-24"},{"lineNumber":319,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":320,"author":{"gitId":"LeopardMerkava"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-10-27"},{"lineNumber":321,"author":{"gitId":"LeopardMerkava"},"content":"    Alternatively, you could also click on the person in the GUI to open said person\u0027s tasks!","lastModifiedDate":"2021-10-27"},{"lineNumber":322,"author":{"gitId":"LeopardMerkava"},"content":"    \u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":323,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":324,"author":{"gitId":"wz27"},"content":"### Setting the number of days before tasks are considered due soon: `reminder`","lastModifiedDate":"2021-10-29"},{"lineNumber":325,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":326,"author":{"gitId":"wz27"},"content":"1. Displays the current number of days prior to a task\u0027s date for the task to be considered due soon.","lastModifiedDate":"2021-10-29"},{"lineNumber":327,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":328,"author":{"gitId":"wz27"},"content":"   Format: `reminder`","lastModifiedDate":"2021-10-29"},{"lineNumber":329,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":330,"author":{"gitId":"wz27"},"content":"    * The default value is 3 days.","lastModifiedDate":"2021-10-29"},{"lineNumber":331,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":332,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":333,"author":{"gitId":"wz27"},"content":"2. Sets the number of days prior to a task\u0027s date to remind that it is due soon.","lastModifiedDate":"2021-10-29"},{"lineNumber":334,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":335,"author":{"gitId":"wz27"},"content":"   Format: `reminder -s DAYS`","lastModifiedDate":"2021-10-29"},{"lineNumber":336,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":337,"author":{"gitId":"wz27"},"content":"   * `DAYS` refer to the number of days prior to a task\u0027s date.","lastModifiedDate":"2021-10-29"},{"lineNumber":338,"author":{"gitId":"wz27"},"content":"     The day **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-10-29"},{"lineNumber":339,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":340,"author":{"gitId":"wz27"},"content":"   Example:","lastModifiedDate":"2021-10-29"},{"lineNumber":341,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":342,"author":{"gitId":"wz27"},"content":"   * reminder -s 10","lastModifiedDate":"2021-10-29"},{"lineNumber":343,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":344,"author":{"gitId":"limzk126"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":345,"author":{"gitId":"wz27"},"content":":memo:**Note**: A task will turn orange in colour as a reminder that it is due soon","lastModifiedDate":"2021-10-29"},{"lineNumber":346,"author":{"gitId":"wz27"},"content":"when the system date is later than or the same as (task\u0027s date - `DAYS`), and earlier than task\u0027s date.","lastModifiedDate":"2021-10-29"},{"lineNumber":347,"author":{"gitId":"limzk126"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":348,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":349,"author":{"gitId":"wz27"},"content":"### Clearing the screen: `clear`","lastModifiedDate":"2021-10-29"},{"lineNumber":350,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":351,"author":{"gitId":"wz27"},"content":"Clears the persons list and task list displayed. Does not delete any persons or tasks.","lastModifiedDate":"2021-10-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-10-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":355,"author":{"gitId":"LeopardMerkava"},"content":"### Accessing the cache","lastModifiedDate":"2021-10-27"},{"lineNumber":356,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":357,"author":{"gitId":"LeopardMerkava"},"content":"* ContactSH guarantees it saves up to the last 25 `commands` (both valid and invalid) that you input. You can browse through the previous input using the up and down arrow key on your keyboard when typing in the command box.","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":359,"author":{"gitId":"wz27"},"content":"* ContactSH may save up to 50 newest `commands`. However, once the cache is full, half (25) of the oldest `command` will be deleted. Hence, the oldest 25 `commands` is not guaranteed to be saved.","lastModifiedDate":"2021-10-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":361,"author":{"gitId":"wz27"},"content":"* Cache will be emptied once you end the session (the application is closed). Hence, `commands` from previous sessions cannot be retrieved.","lastModifiedDate":"2021-10-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":363,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"LeopardMerkava"},"content":"* ContactSH data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-28"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":369,"author":{"gitId":"LeopardMerkava"},"content":"* ContactSH data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-28"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":371,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":372,"author":{"gitId":"eugenecsa"},"content":"If your changes to the data file makes its format invalid, ContactSH will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":375,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"limzk126"},"content":"---","lastModifiedDate":"2021-10-24"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"eugenecsa"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ContactSH home folder.","lastModifiedDate":"2021-09-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"limzk126"},"content":"---","lastModifiedDate":"2021-10-24"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"eugenecsa"},"content":"**Add** | `add -n NAME -p PHONE_NUMBER -e EMAIL -a ADDRESS [-d Description] [-l LABEL]…​` \u003cbr\u003e e.g., `add -n James Ho -p 22224444 -e jamesho@example.com -a 123, Clementi Rd, 1234665 -d Rich -l friend -l colleague`","lastModifiedDate":"2021-10-24"},{"lineNumber":393,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"eugenecsa"},"content":"**Delete** | `rm INDEX`\u003cbr\u003e e.g., `rm 3`","lastModifiedDate":"2021-10-28"},{"lineNumber":395,"author":{"gitId":"eugenecsa"},"content":"**Edit** | `edit INDEX [-n NAME] [-p PHONE_NUMBER] [-e EMAIL] [-a ADDRESS] [-d Description] [-l LABEL]…​`\u003cbr\u003e e.g.,`edit 2 -n James Lee -e jameslee@example.com`","lastModifiedDate":"2021-10-24"},{"lineNumber":396,"author":{"gitId":"kflim"},"content":"**Find** | `find [-n NAME] [-p PHONE_NUMBER] [-e EMAIL] [-a ADDRESS] [-d Description] [-l LABEL] [-tn TASK_NAME]`\u003cbr\u003e e.g., `find -n Alex`","lastModifiedDate":"2021-10-28"},{"lineNumber":397,"author":{"gitId":"eugenecsa"},"content":"**List** | `ls`","lastModifiedDate":"2021-10-28"},{"lineNumber":398,"author":{"gitId":"wz27"},"content":"**Sort** | `sort [-r]`","lastModifiedDate":"2021-09-28"},{"lineNumber":399,"author":{"gitId":"eugenecsa"},"content":"**Help** | `man`","lastModifiedDate":"2021-10-28"},{"lineNumber":400,"author":{"gitId":"eugenecsa"},"content":"**Add Task** | `add INDEX -tn TASKNAME` \u003cbr\u003e e.g., `addtask 2 -tn celebrate $1 million revenue -tn Contact Professor to get help`","lastModifiedDate":"2021-10-28"},{"lineNumber":401,"author":{"gitId":"eugenecsa"},"content":"**Delete Task** | `rm INDEX -ti TASK_INDEX` \u003cbr\u003e e.g., `deletetask 2 -ti 2 -ti 3`","lastModifiedDate":"2021-10-28"},{"lineNumber":402,"author":{"gitId":"eugenecsa"},"content":"**Edit Task** | `edit INDEX -ti TASK_INDEX [-tn TASK_NAME] [-td TASK_DATE] [-tt TASK_TIME] [-ta TASK_ADDRESS]…​` \u003cbr\u003e e.g., `edittask 1 -ti 2 -tn Internship Interview -tt 15:45 -ti 4 -td 2022-09-20`","lastModifiedDate":"2021-10-28"},{"lineNumber":403,"author":{"gitId":"limzk126"},"content":"**Mark Task Done** | `donetask INDEX -ti TASK_INDEX…​` \u003cbr\u003e e.g., `donetask 3 -ti 2 -ti 5`","lastModifiedDate":"2021-10-28"},{"lineNumber":404,"author":{"gitId":"limzk126"},"content":"**Undo Mark Task Done** | `undotask INDEX -ti TASK_INDEX…​` \u003cbr\u003e e.g., `undotask 3 -ti 2 -ti 5`","lastModifiedDate":"2021-10-28"},{"lineNumber":405,"author":{"gitId":"limzk126"},"content":"**View Tasks** | `cat INDEX`\u003cbr\u003ee.g.,`cat 4`\u003cbr\u003e\u003cbr\u003e`cat -A`","lastModifiedDate":"2021-10-28"},{"lineNumber":406,"author":{"gitId":"limzk126"},"content":"**View Reminder Days** | `reminder`","lastModifiedDate":"2021-10-28"},{"lineNumber":407,"author":{"gitId":"limzk126"},"content":"**Set Reminder Days** | `reminder -s DAYS`\u003cbr\u003ee.g., reminder -s 21","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"LeopardMerkava":50,"limzk126":48,"kflim":26,"-":116,"eugenecsa":37,"wz27":130}},{"path":"docs/diagrams/AccessingCacheSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"participant \":CommandBox\" as CommandBox UI_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"participant \":Logic\" as Logic LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"user -\u003e CommandBox : clicks up or down arrow key","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"activate CommandBox","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"CommandBox -\u003e MainWindow: executeInternal(\"access -qqUP\")","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"activate MainWindow","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"MainWindow -\u003e Logic: executeInternal(\"access -qqUP\")","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"activate Logic","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"Logic -\u003e Model : getBefore()","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"activate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"Model -\u003e Logic","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"deactivate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"Logic -\u003e MainWindow : CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"deactivate Logic","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"MainWindow -\u003e CommandBox : setText(Result)","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"deactivate MainWindow","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"CommandBox -\u003e user : display result","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"LeopardMerkava":41}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"user -[USER_COLOR]\u003e ui : \"rm 1\"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"rm 1\")","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"logic -[LOGIC_COLOR]\u003e model : addCommand(\"rm 1\")","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"deactivate model","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LeopardMerkava":8,"-":36}},{"path":"docs/diagrams/CacheAddCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"start","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":":addCommand is called;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"if () then ([size is bigger than 50])","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"    :Copy 25 newest command to a new list;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"    :Set temporary list as new list;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"    :Set index pointer to 25;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"else ([else])","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"endif","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":":Add command to list;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":":Add pointer by 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"stop","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"LeopardMerkava":14}},{"path":"docs/diagrams/CachingLogic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"participant \":UserCommandCache\" as UserCommandCache MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"[-\u003e LogicManager : execute(\"rm 1\")","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"activate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"LogicManager -\u003e ModelManager: addCommand(\"rm 1\")","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"activate ModelManager","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"ModelManager -\u003e UserCommandCache: addCommand(\"rm 1\")","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"activate UserCommandCache","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"UserCommandCache -\u003e ModelManager:","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"deactivate UserCommandCache","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"ModelManager -\u003e LogicManager:","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"deactivate ModelManager","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"LeopardMerkava":27}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"start","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":":User enters find -n Alex command;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"if () then ([Valid command format])","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"  :Create a predicate based on the flag and keywords;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"  :Filter the person list with the predicate;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"  :UI updates the GUI to display the new person list;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"else ([else])","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"  :Show invalid format error message;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"endif","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"stop","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"kflim":15}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"!include style.puml","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"participant \"predicate:AttributeContainsKeywords\" as AttributeContainsKeywords LOGIC_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"[-\u003e LogicManager : execute(\"find -n Alex\")","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"activate LogicManager","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find -n Alex\")","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"create FindCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"activate FindCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"-n Alex\")","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"activate FindCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"create AttributeContainsKeywords","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"FindCommandParser -\u003e AttributeContainsKeywords","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"activate AttributeContainsKeywords","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"AttributeContainsKeywords --\u003e FindCommandParser : predicate","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"deactivate AttributeContainsKeywords","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"create FindCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(predicate)","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"activate FindCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"FindCommand --\u003e FindCommandParser : f","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"deactivate FindCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"FindCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"destroy FindCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"activate FindCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"activate Model","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"deactivate Model","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"destroy AttributeContainsKeywords","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"create CommandResult","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"activate CommandResult","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"deactivate FindCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"kflim"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"kflim"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kflim":80}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"Class AddressBookInternalParser","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"Class XYZInternalCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"LogicManager .up..|\u003e Logic","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"LogicManager -\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"LogicManager -\u003e\"1\" AddressBookInternalParser","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"AddressBookInternalParser ..\u003e XYZInternalCommand : creates \u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"XYZInternalCommand -up-|\u003e Command","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LeopardMerkava":7,"-":44}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"Class UserCommandCache","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"Class Task","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"Class Description","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"Person *--\u003e \"*\" Task","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"Person --\u003e \"1\" Description","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"ModelManager -down--\u003e \"1\" UserCommandCache","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LeopardMerkava":11,"-":48}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"Class JsonAdaptedTask","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"JsonAdaptedPerson --\u003e JsonAdaptedTask","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LeopardMerkava":2,"-":42}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"Class TaskListPanel","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"Class TaskCard","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"MainWindow *-down--\u003e \"1\" TaskListPanel","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"TaskListPanel --\u003e \"*\" TaskCard","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"MainWindow -down-|\u003e UiPart","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"LeopardMerkava"},"content":"TaskListPanel ---|\u003e UiPart","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"TaskCard ---|\u003e UiPart","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"TaskCard ..\u003e Model","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LeopardMerkava":8,"-":59}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LeopardMerkava":1,"-":19}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LeopardMerkava":1,"-":21}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LeopardMerkava":1,"-":19}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LeopardMerkava":1,"-":19}},{"path":"docs/diagrams/ViewTaskListActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"start","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":":User enters cat command;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"if () then ([Valid command format])","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"  :Retrieve the last shown Person list;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"  if () then ([Valid Index])","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"  :Retrieve the task list reference of the Person at INDEX;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"  :Set the task list as the ObservableList referenced by","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"  the UI;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"  :UI is signaled that the contents of the ObservableList\\nit is referencing has changed;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"  :UI updates the GUI to display the new task list;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"  else ([else])","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"  :Show invalid INDEX error message;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"  endif","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"else ([else])","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"  :Show invalid format error message;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"endif","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"stop","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"limzk126":22}},{"path":"docs/diagrams/ViewTaskListSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"participant \":ViewTaskListCommandParser\" as ViewTaskListCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"participant \":ViewTaskListCommand\" as ViewTaskListCommand LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"participant \":TaskListManager\" as TaskListManager MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"[-\u003e LogicManager : execute(\"cat 2\")","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"activate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"cat 2\")","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"create ViewTaskListCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"AddressBookParser -\u003e ViewTaskListCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"activate ViewTaskListCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"ViewTaskListCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"deactivate ViewTaskListCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"AddressBookParser -\u003e ViewTaskListCommandParser : parse(\"2\")","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"activate ViewTaskListCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"create ViewTaskListCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"ViewTaskListCommandParser -\u003e ViewTaskListCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"activate ViewTaskListCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"ViewTaskListCommand --\u003e ViewTaskListCommandParser : v","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"deactivate ViewTaskListCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"ViewTaskListCommandParser --\u003e AddressBookParser : v","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"deactivate ViewTaskListCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"ViewTaskListCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"destroy ViewTaskListCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"AddressBookParser --\u003e LogicManager : v","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"LogicManager -\u003e ViewTaskListCommand : execute()","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"activate ViewTaskListCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"ViewTaskListCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"activate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"Model --\u003e ViewTaskListCommand : lastShownList","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"deactivate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"ViewTaskListCommand -\u003e Model : displayPersonTaskList(person)","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"activate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"Model -\u003e TaskListManager : setToDisplayTaskList(name)","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"activate TaskListManager","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"TaskListManager --\u003e Model","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"deactivate TaskListManager","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"Model --\u003e ViewTaskListCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"deactivate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"create CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"ViewTaskListCommand-\u003e CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"activate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"CommandResult --\u003e ViewTaskListCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"ViewTaskListCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"deactivate ViewTaskListCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"limzk126":82}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"title: ContactSh","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W10-1/tp/actions)","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W10-1/tp/branch/master/graph/badge.svg?token\u003dT9J125C4VI)](https://codecov.io/gh/AY2122S1-CS2103T-W10-1/tp)","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"**ContactSh is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"* If you are interested in using ContactSh, head over to the [_Quick Start_ section of the **User Guide**](https://ay2122s1-cs2103t-w10-1.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](https://ay2122s1-cs2103t-w10-1.github.io/tp/DeveloperGuide.html.html) is a good place to start.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kflim":5,"-":13}},{"path":"docs/team/eugenecsa.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"---","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"layout: page","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"title: Eugene Chan\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"---","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"### Project: ContactSh","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"ContactSH is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, ContactSH can get your contact management","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003deugenecsa\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"* **Project management**:","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"* **Enhancements to existing features**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    * User Guide:","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"        * Added documentation for the feature `viewtask` [\\#44](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/44)","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    * Developer Guide:","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        * Added use case [\\#36](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/36)","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"* **Community**:","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"* **Tools**:","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"eugenecsa":28}},{"path":"docs/team/kflim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"title: Kai Fang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"### Project: ContactSh","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"ContactSH is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, ContactSH can get your contact management","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"* **Code contributed**:","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"[RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dkflim\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"* **Project management**:","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"    * User Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"        * Added documentation for the feature `help` [\\#34](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/34)","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"        * Updated documentation for non-functional requirements [\\#35](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/35)","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"* **Community**:","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"    * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"    [\\#72](https://github.com/nus-cs2103-AY2122S1/ip/pull/72),","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"    [\\#103](https://github.com/nus-cs2103-AY2122S1/ip/pull/103)","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"* **Tools**:","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"* _{you can add/remove categories in the list above}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kflim":33,"eugenecsa":1}},{"path":"docs/team/leopardmerkava.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"layout: page","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"title: Andrew Baruch\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"### Project: ContactSh","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"ContactSH is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, ContactSH can get your contact management","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dleopardmerkava\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"* **Project management**:","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"* **Enhancements to existing features**","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"  * User Guide:","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    * Added documentation for the feature `Addtask` and `DeleteTask` [\\#30](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/30)","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"  * ReadmeMd:","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    * Created Ui Mockup [\\#30](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/30)","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"* **Community**:","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"* **Tools**:","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"LeopardMerkava":28,"eugenecsa":1}},{"path":"docs/team/limzk126.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"title: Lim Zhe Kang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"### Project: ContactSh","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"ContactSH is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, ContactSH can get your contact management","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dlimzk\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"* **Project management**:","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"* **Enhancements to existing features**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"  * User Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    * Added documentation for the feature `viewtask` [\\#20](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/20)","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    * Added user stories and product scope [\\#23](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/23)","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"* **Community**:","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"* **Tools**:","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"limzk126":30}},{"path":"docs/team/wz27.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wz27"},"content":"---","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"wz27"},"content":"layout: page","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"wz27"},"content":"title: Ho Wen Zhong\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"wz27"},"content":"---","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"wz27"},"content":"### Project: ContactSh","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"wz27"},"content":"ContactSh is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"wz27"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, ContactSH can get your contact management","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"wz27"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"wz27"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"wz27"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dwz27\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"wz27"},"content":"* **Project management**:","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"wz27"},"content":"* **Enhancements to existing features**","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"wz27"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"wz27"},"content":"    * User Guide:","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"wz27"},"content":"        * Added documentation for the feature `sort` [\\#26](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/26)","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"wz27"},"content":"    * ReadmeMd:","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"wz27"},"content":"        * Updated to match ContactSh [\\#25](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/25)","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"wz27"},"content":"* **Community**:","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"wz27"},"content":"* **Tools**:","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"wz27":29}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"limzk126":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"    public static final String MESSAGE_INVALID_TASK \u003d \"The size of %1$s\u0027s task list is not that big\";","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_INVALID_INTERNAL_COMMAND_FORMAT \u003d \"Invalid internal command format! Make a \"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"            + \"bug report?\";","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_UNKNOWN_INTERNAL_COMMAND \u003d \"Unknown internal command! Make a \"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"            + \"bug report?\";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    public static final String MESSAGE_INVALID_REMINDER_DAY_VALUE \u003d \"The value of the day must be a positive Integer!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LeopardMerkava":4,"limzk126":2,"-":13}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"public class Index implements Comparable\u003cIndex\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"        return ((Integer) zeroBasedIndex).hashCode();","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"     * Compare two Index by their value","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"    public int compareTo(Index other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"        Integer thisInt \u003d this.getZeroBased();","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"        Integer otherInt \u003d other.getZeroBased();","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"        return thisInt.compareTo(otherInt);","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"LeopardMerkava":16,"-":53}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"     * Returns true if the {@code sentence} contains the {@code wordsList} in the expected order.","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"     *   Ignores case, but words in the wordsList need to partially match words in the sentence and their relative","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"     *   ordering.","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"     *       containsWordsInOrderIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"     *       containsWordsInOrderIgnoreCase(\"ABc def\", \"ab d\") \u003d\u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"     *       containsWordsInOrderIgnoreCase(\"ABc def\", \"def abc\") \u003d\u003d false","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"     * @param wordsList cannot be null, cannot be empty","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"    public static boolean containsWordsInOrderIgnoreCase(String sentence, List\u003cString\u003e wordsList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"        requireNonNull(wordsList);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"        checkArgument(!wordsList.isEmpty(), \"Words parameter cannot be empty\");","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e wordsInPreppedSentence \u003d new ArrayList\u003c\u003e(List.of(sentence.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"        int wordsIndex \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"        for (int i \u003d 0; i \u003c wordsList.size(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"            wordsList.set(i, wordsList.get(i).trim().toLowerCase());","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"        for (int i \u003d 0; i \u003c wordsInPreppedSentence.size(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"            wordsInPreppedSentence.set(i, wordsInPreppedSentence.get(i).trim().toLowerCase());","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"        for (String s : wordsInPreppedSentence) {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"            if (s.startsWith(wordsList.get(wordsIndex))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"                if (++wordsIndex \u003d\u003d wordsList.size()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"                    return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"kflim"},"content":"        return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"LeopardMerkava"},"content":"     * Concatenate \"s\" at the back of the string if size is bigger than 1.","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"LeopardMerkava"},"content":"     * @param string singular form","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"LeopardMerkava"},"content":"     * @param size of list","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"LeopardMerkava"},"content":"     * @return singular or plural form of the string given","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"LeopardMerkava"},"content":"    public static String singularOrPlural(String string, int size) {","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"LeopardMerkava"},"content":"        return size \u003e 1 ? string + \"s\" : string;","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LeopardMerkava":10,"kflim":33,"-":75}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.TaskListManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"     * Executes the internal command and returns the result.","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"     * @param commandText The command as generated by other parts of the software.","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"    CommandResult executeInternal(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"    /** Returns an unmodifiable view of the task list to be displayed on the GUI. */","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"    ObservableList\u003cTask\u003e getDisplayTaskList();","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"    /** Gets important statistics information relating to tasks. */","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"    ObservableList\u003cPieChart.Data\u003e getStatistics();","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"     * Returns the {@code ModelManager}\u0027s {@code TaskListManager}.","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"    TaskListManager getTaskListManager();","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"    ObservableList\u003cPerson\u003e getObservablePersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"LeopardMerkava":8,"limzk126":16,"-":51}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.parser.AddressBookInternalParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.TaskListManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"    private final AddressBookInternalParser addressBookInternalParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"        addressBookInternalParser \u003d new AddressBookInternalParser();","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"        model.addCommand(commandText);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"    public CommandResult executeInternal(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"        logger.info(\"----------------[INTERNAL COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"        CommandResult commandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"        Command command \u003d addressBookInternalParser.parseCommand(commandText);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"    public ObservableList\u003cTask\u003e getDisplayTaskList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"        return model.getDisplayTaskList();","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"    /** Gets important statistics information relating to tasks. */","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"limzk126"},"content":"    public ObservableList\u003cPieChart.Data\u003e getStatistics() {","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"limzk126"},"content":"        return model.getStatistics();","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"limzk126"},"content":"    public TaskListManager getTaskListManager() {","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"limzk126"},"content":"        return model.getTaskListManager();","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"limzk126"},"content":"    public ObservableList\u003cPerson\u003e getObservablePersonList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"limzk126"},"content":"        return model.getObservablePersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"LeopardMerkava":12,"limzk126":24,"-":90}},{"path":"src/main/java/seedu/address/logic/commands/AccessCacheCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"public class AccessCacheCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String COMMAND_WORD \u003d \"accesscache\";","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"    public final String key;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"     * @param key The key pressed.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"    public AccessCacheCommand(String key) {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(key);","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"        this.key \u003d key;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"        if (key.equals(\"UP\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"            return new CommandResult(\"\", false, false, true, model.getBefore());","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"        } else if (key.equals(\"DOWN\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"            return new CommandResult(\"\", false, false, true, model.getAfter());","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"            throw new CommandException(\"Unknown Error in AccessCacheCommand#Execute!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"LeopardMerkava":32}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMPORTANCE;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Adds a person to the address book.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": \" + DESCRIPTION","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"wz27"},"content":"            + \"\\n\" + \"Parameters: \"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"Description]...\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"            + PREFIX_TAG + \"owesMoney\"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"            + PREFIX_DESCRIPTION + \"Really likes melons\"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"            + PREFIX_IMPORTANCE + \"true\";","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s with %2$d %3$s attached\";","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"        CommandResult commandResult \u003d new CommandResult(generateSuccessMessage(toAdd));","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"        commandResult.setWriteCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"        return commandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"     * Generates a command execution success message based on person detail","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"     * and the number of tasks given","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"    private String generateSuccessMessage(Person personToAdd) {","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"LeopardMerkava"},"content":"        int size \u003d personToAdd.getTasks().size();","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"        String taskOrTasks \u003d StringUtil.singularOrPlural(\"task\", size);","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"        return String.format(MESSAGE_SUCCESS, personToAdd, size, taskOrTasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LeopardMerkava":20,"limzk126":4,"kflim":13,"-":61,"wz27":1}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DATE;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TIME;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_VENUE;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String COMMAND_WORD \u003d \"addtask\";","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added %1$d %2$s to Person: %3$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"            + \": Add to the task list of the person identified \"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"            + \"by the index number used in the last person listing.\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"            + PREFIX_TASK_DESCRIPTION + \" TASK_NAME \"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"            + \"[\" + PREFIX_TASK_DATE + \" TASK_DATE] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"            + \"[\" + PREFIX_TASK_TIME + \" TASK_TIME] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"            + \"[\" + PREFIX_TASK_VENUE + \" TASK_VENUE] \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"            + PREFIX_TASK_DESCRIPTION + \" Likes to swim.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Add to the task list of the person specified by INDEX\";","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"    private final Index index;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"    private final List\u003cTask\u003e newTasks;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"     * @param index of the person in the filtered person list to edit the task List of","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"     * @param newTasks to add to the person\u0027s task list","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"    public AddTaskCommand(Index index, List\u003cTask\u003e newTasks) {","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"        requireAllNonNull(index, newTasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"        this.newTasks \u003d newTasks;","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"        //Make new copy for defensive programming.","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"        tasks.addAll(personToEdit.getTasks());","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"        tasks.addAll(newTasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), tasks, personToEdit.getDescription(),","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.isImportant()","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"        );","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"        CommandResult commandResult \u003d new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"        commandResult.setWriteCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"        return commandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"        //Return true if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"LeopardMerkava"},"content":"        //False if not instance of RemarkCommand (including null)","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"LeopardMerkava"},"content":"        if (!(other instanceof AddTaskCommand)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"LeopardMerkava"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"LeopardMerkava"},"content":"        AddTaskCommand e \u003d (AddTaskCommand) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"LeopardMerkava"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"LeopardMerkava"},"content":"                \u0026\u0026 newTasks.equals(e.newTasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"LeopardMerkava"},"content":"     * Generates a command execution success message based on the number","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"LeopardMerkava"},"content":"     * of tasks given and person name.","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"LeopardMerkava"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"LeopardMerkava"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"LeopardMerkava"},"content":"        int size \u003d newTasks.size();","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"LeopardMerkava"},"content":"        String taskOrTasks \u003d StringUtil.singularOrPlural(\"task\", size);","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"LeopardMerkava"},"content":"        return String.format(MESSAGE_SUCCESS, size, taskOrTasks, personToEdit.getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LeopardMerkava":96,"limzk126":3,"kflim":10,"eugenecsa":9}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"wz27"},"content":" * Clears the screen.","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"wz27"},"content":"    public static final String DESCRIPTION \u003d \"Clears the screen.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"wz27"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Screen has been cleared!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"wz27"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"wz27"},"content":"            + \": \" + DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"wz27"},"content":"        model.updateFilteredPersonList(unused -\u003e false);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"wz27"},"content":"        model.displayFilteredTaskList(unused -\u003e false);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"        CommandResult commandResult \u003d new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"        commandResult.setWriteCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"        return commandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"limzk126":4,"kflim":7,"-":19,"wz27":8}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"    private final String additionalText;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    /** The command issued is to show a single person\u0027s task list */","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    private boolean displaySingleTaskList;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    /** The command issued is to show every person\u0027s task list */","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    private boolean displayAllTaskList;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    /** The command issued modifies/writes the application\u0027s data */","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    private boolean writeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"    /** The application should change the text in CommandBox. */","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"    private final boolean changeCommandBox;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean changeCommandBox,","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"                         String additionalText) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"        this.changeCommandBox \u003d changeCommandBox;","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"        this.additionalText \u003d additionalText;","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"     * Constructs a {@code CommandResult} without changeCommandBox.","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"        this.displayAllTaskList \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"        this.displaySingleTaskList \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"        this.writeCommand \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"        this.changeCommandBox \u003d false;","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"        this.additionalText \u003d \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"    public void setDisplayAllTaskList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"        this.displayAllTaskList \u003d true;","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"        this.displaySingleTaskList \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"    public void setDisplaySingleTaskList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"        this.displaySingleTaskList \u003d true;","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"        this.displayAllTaskList \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"    public void setWriteCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"        writeCommand \u003d true;","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"    public boolean isDisplayAllTaskList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"        return displayAllTaskList;","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"    public boolean isDisplaySingleTaskList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"        return displaySingleTaskList;","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"    public boolean isWriteCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"        return writeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean isChangeCommandBox() {","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"LeopardMerkava"},"content":"        return changeCommandBox;","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"LeopardMerkava"},"content":"    public String getAdditionalText() {","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"LeopardMerkava"},"content":"        return additionalText;","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"LeopardMerkava"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"LeopardMerkava"},"content":"                \u0026\u0026 changeCommandBox \u003d\u003d otherCommandResult.changeCommandBox","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"LeopardMerkava"},"content":"                \u0026\u0026 additionalText.equals(otherCommandResult.additionalText);","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"LeopardMerkava"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, changeCommandBox, additionalText);","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LeopardMerkava":30,"limzk126":38,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"wz27"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"wz27"},"content":"    public static final String COMMAND_WORD \u003d \"rm\";","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Deletes the person identified by the index number used in \"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"            + \"the displayed person list.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"wz27"},"content":"            + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    public static final String MESSAGE_DELETE_PEOPLE_SUCCESS \u003d \"Delete People: \";","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"wz27"},"content":"    public static final String MESSAGE_DELETE_ALL_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"    private final List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"    private boolean isMultipleDelete \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"wz27"},"content":"    private boolean isAllDelete \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"     * Constructor for a DeleteCommand to delete one person.","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"     * @param targetIndex The {@code Index} of the target person.","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"        this.targetIndexes \u003d List.of(targetIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"     * Constructor for a DeleteCommand to delete a number of people.","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"     * @param targetIndexes The {@code List\u003cIndex\u003e} for multiple people.","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"    public DeleteCommand(List\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"        requireNonNull(targetIndexes);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"        isMultipleDelete \u003d true;","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"wz27"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"wz27"},"content":"     * Constructor for a DeleteCommand to delete all contacts.","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"wz27"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"wz27"},"content":"    public DeleteCommand() {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"wz27"},"content":"        this.targetIndexes \u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"wz27"},"content":"        isAllDelete \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"wz27"},"content":"        if (isAllDelete) {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"wz27"},"content":"            model.setAddressBook(new AddressBook());","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"wz27"},"content":"            CommandResult commandResult \u003d new CommandResult(MESSAGE_DELETE_ALL_SUCCESS);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"wz27"},"content":"            commandResult.setWriteCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"wz27"},"content":"            return commandResult;","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"wz27"},"content":"        } else if (!isMultipleDelete) {","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"            return executeDelete(model, lastShownList, targetIndexes.get(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"            return executeMultipleDelete(model, lastShownList, targetIndexes);","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"     * Executes the delete command for one index and returns the result.","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"     * @param model The in-memory {@code Model} of the address book data.","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"     * @param lastShownList The most recently updated {@code List}.","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"     * @param targetIndex The {@code Index} of the target person.","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"limzk126"},"content":"    public CommandResult executeDelete(Model model, List\u003cPerson\u003e lastShownList, Index targetIndex)","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"        CommandResult commandResult \u003d new CommandResult(","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"                String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"        commandResult.setWriteCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"        return commandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"     * Executes the delete command for multiple indexes and returns the result.","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"limzk126"},"content":"     * @param model The in-memory {@code Model} of the address book data.","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"limzk126"},"content":"     * @param lastShownList The most recently updated {@code List}.","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"limzk126"},"content":"     * @param targetIndexes The {@code List\u003cIndex\u003e} for the target people.","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"limzk126"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"limzk126"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"limzk126"},"content":"    public CommandResult executeMultipleDelete(Model model, List\u003cPerson\u003e lastShownList, List\u003cIndex\u003e targetIndexes)","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"limzk126"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"limzk126"},"content":"        StringBuilder sb \u003d new StringBuilder(MESSAGE_DELETE_PEOPLE_SUCCESS);","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"limzk126"},"content":"        for (Index index : targetIndexes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"limzk126"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"limzk126"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"limzk126"},"content":"            Person personToDelete \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"limzk126"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"limzk126"},"content":"            sb.append(System.lineSeparator()).append(personToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"limzk126"},"content":"        return new CommandResult(sb.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"limzk126"},"content":"                \u0026\u0026 targetIndexes.equals(((DeleteCommand) other).targetIndexes)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LeopardMerkava":1,"limzk126":65,"kflim":9,"-":55,"wz27":19}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":" * Deletes the task(s) identified using its displayed index in the task list.","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Removed %1$d %2$s from %3$s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String COMMAND_WORD \u003d \"deletetask\";","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"            + \": Deletes the task, specified by the TASKINDEX, from person \"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"            + \"identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"wz27"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"            + PREFIX_TASK_INDEX + \" TaskIndex (must be a positive integer)\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_TASK_INDEX + \" 2\";","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Deletes the task, specified by the TASK_INDEX, \"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"            + \"from person specified by the INDEX\";","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"    private final Index targetPersonIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"    private final List\u003cIndex\u003e targetTaskIndexes;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"     * Constructor for a DeleteTaskCommand to delete a task from a person.","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"     * @param targetPersonIndex The Index of the target person.","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"     * @param targetTaskIndexes The Index of the target Task that belongs to target person.","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    public DeleteTaskCommand(Index targetPersonIndex, List\u003cIndex\u003e targetTaskIndexes) {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"        requireNonNull(targetPersonIndex);","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(targetTaskIndexes);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"        this.targetPersonIndex \u003d targetPersonIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"        this.targetTaskIndexes \u003d targetTaskIndexes;","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"LeopardMerkava"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"        if (targetPersonIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"        Person personToEdit \u003d lastShownList.get(targetPersonIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"        //Make new copy for defensive programming.","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"        tasks.addAll(personToEdit.getTasks());","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cIndex\u003e copyOfIndexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"        copyOfIndexList.addAll(targetTaskIndexes);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"        Collections.sort(copyOfIndexList, Collections.reverseOrder());","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"        for (Index targetTaskIndex : targetTaskIndexes) {","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"            if (targetTaskIndex.getZeroBased() \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_INVALID_TASK, personToEdit.getName()));","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e tasksToRemove \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"LeopardMerkava"},"content":"        for (Index targetTaskIndex : copyOfIndexList) {","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"            Task taskToRemove \u003d tasks.get(targetTaskIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"            tasksToRemove.add(taskToRemove);","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"            tasks.remove(targetTaskIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), tasks, personToEdit.getDescription(),","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.isImportant()","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"        );","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"LeopardMerkava"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"LeopardMerkava"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"        CommandResult commandResult \u003d new CommandResult(generateSuccessMessage(editedPerson, tasksToRemove.size()));","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"        commandResult.setWriteCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"        return commandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"LeopardMerkava"},"content":"     * Generates a command execution success message based on","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"LeopardMerkava"},"content":"     * the task removed.","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"LeopardMerkava"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"LeopardMerkava"},"content":"    private String generateSuccessMessage(Person personToEdit, int amount) {","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"LeopardMerkava"},"content":"        String taskOrTasks \u003d StringUtil.singularOrPlural(\"task\", amount);","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"LeopardMerkava"},"content":"        return String.format(MESSAGE_SUCCESS, amount, taskOrTasks, personToEdit.getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"limzk126"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"limzk126"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"limzk126"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"limzk126"},"content":"                \u0026\u0026 targetPersonIndex.equals(((DeleteTaskCommand) other).targetPersonIndex)","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"LeopardMerkava"},"content":"                \u0026\u0026 targetTaskIndexes.equals(((DeleteTaskCommand) other).targetTaskIndexes)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LeopardMerkava":92,"limzk126":12,"kflim":11,"eugenecsa":7,"wz27":1}},{"path":"src/main/java/seedu/address/logic/commands/DoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":" * Marks task(s) identified using its displayed index in the task list as done.","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    public static final String COMMAND_WORD \u003d \"donetask\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Marked %1$d %2$s of %3$s as done.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"            + \": Marks the task, specified by the TASKINDEX, from person \"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"            + \"identified by the index number used in the displayed person list as done.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"wz27"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"            + PREFIX_TASK_INDEX + \" TaskIndex (must be a positive integer)\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_TASK_INDEX + \" 2\";","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    public static final String DESCRIPTION \u003d \"Marks the task(s), specified by the TASK_INDEX, \"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"            + \"from person specified by the INDEX as done\";","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    private final Index targetPersonIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"    private final List\u003cIndex\u003e targetTaskIndexes;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for a DoneCommand to mark a task of a person as done.","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"     * @param targetPersonIndex The Index of the target person.","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"     * @param targetTaskIndexes The Index of the target Task that belongs to target person.","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"    public DoneCommand(Index targetPersonIndex, List\u003cIndex\u003e targetTaskIndexes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"        requireAllNonNull(targetPersonIndex, targetTaskIndexes);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"        this.targetPersonIndex \u003d targetPersonIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"        this.targetTaskIndexes \u003d targetTaskIndexes;","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"        if (targetPersonIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"        Person personToEdit \u003d lastShownList.get(targetPersonIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"        //Make new copy for defensive programming.","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(personToEdit.getTasks());","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cIndex\u003e copyOfIndexList \u003d new ArrayList\u003c\u003e(targetTaskIndexes);","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"        copyOfIndexList.sort(Collections.reverseOrder());","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"        for (Index targetTaskIndex : targetTaskIndexes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"            if (targetTaskIndex.getZeroBased() \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_INVALID_TASK, personToEdit.getName()));","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"        int alreadyDone \u003d 0;","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"        for (Index targetTaskIndex : copyOfIndexList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"            Task taskDone \u003d tasks.get(targetTaskIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"            if (taskDone.getDone()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"                alreadyDone++;","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"            } else {","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"                taskDone.setDone();","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), tasks, personToEdit.getDescription(),","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.isImportant());","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson, targetTaskIndexes.size(), alreadyDone));","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"     * Generates a command execution success message based on","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"     * the task removed.","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"    private String generateSuccessMessage(Person personToEdit, int amount, int alreadyDone) {","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"        int tasksMarked \u003d amount - alreadyDone;","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"        String taskOrTasks \u003d StringUtil.singularOrPlural(\"task\", tasksMarked);","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"        String taskOrTasksNotMarked \u003d StringUtil.singularOrPlural(\"task\", alreadyDone);","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"        String markedTasks \u003d String.format(MESSAGE_SUCCESS, tasksMarked, taskOrTasks, personToEdit.getName());","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"        String alreadyDoneTasks \u003d String.format(\"%1$d %2$s are already done.\", alreadyDone, taskOrTasksNotMarked);","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"        return alreadyDone \u003d\u003d 0 ? markedTasks : markedTasks + \"\\n\" + alreadyDoneTasks;","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"eugenecsa"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"eugenecsa"},"content":"                || (other instanceof DoneCommand // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 targetPersonIndex.equals(((DoneCommand) other).targetPersonIndex)","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 targetTaskIndexes.equals(((DoneCommand) other).targetTaskIndexes)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"LeopardMerkava":5,"eugenecsa":121,"wz27":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"wz27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DATE;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"wz27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"wz27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"wz27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TIME;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"wz27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_VENUE;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"wz27"},"content":"import seedu.address.model.task.TaskDate;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"wz27"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"wz27"},"content":"import seedu.address.model.task.TaskTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"wz27"},"content":"import seedu.address.model.task.Venue;","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"wz27"},"content":" * Edits the details of an existing task.","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"wz27"},"content":"    public static final String DESCRIPTION \u003d \"Edits the details of the person/task identified.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": \" + DESCRIPTION","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \" by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"wz27"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"Description]\"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"            + \"[\" + PREFIX_TASK_INDEX + \" TASK_INDEX (must be a positive integer)\"","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"wz27"},"content":"            + \"[\" + PREFIX_TASK_DESCRIPTION + \" TASK_NAME] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"wz27"},"content":"            + \"[\" + PREFIX_TASK_DATE + \" TASK_DATE] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"wz27"},"content":"            + \"[\" + PREFIX_TASK_TIME + \" TASK_TIME] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"wz27"},"content":"            + \"[\" + PREFIX_TASK_VENUE + \" TASK_ADDRESS] \\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"wz27"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"wz27"},"content":"            + PREFIX_TASK_INDEX + \" 2 \"","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"wz27"},"content":"            + PREFIX_TASK_DESCRIPTION + \" Assignment Discussion\";","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"wz27"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s \";","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"wz27"},"content":"    public static final String MESSAGE_TASK_NOT_EDITED \u003d \"At least one field of task to edit must be provided.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"wz27"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task already exists.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"wz27"},"content":"    public static final String MESSAGE_INVALID_TASK \u003d \"The size of %1$s\u0027s task list is not that big\";","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"wz27"},"content":"    private final Index targetTaskIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"wz27"},"content":"    private final EditTaskCommand.EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"wz27"},"content":"     * @param targetTaskIndex of the person in the filtered person list","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"wz27"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"wz27"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor,","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"wz27"},"content":"                       Index targetTaskIndex, EditTaskCommand.EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"wz27"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"wz27"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"wz27"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"wz27"},"content":"        this.targetTaskIndex \u003d targetTaskIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"wz27"},"content":"        this.editTaskDescriptor \u003d editTaskDescriptor;","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"wz27"},"content":"        this.targetTaskIndex \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"wz27"},"content":"        this.editTaskDescriptor \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"wz27"},"content":"        if (targetTaskIndex !\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"wz27"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"wz27"},"content":"            tasks.addAll(personToEdit.getTasks());","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"wz27"},"content":"            if (targetTaskIndex.getZeroBased() \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"wz27"},"content":"                throw new CommandException(String.format(MESSAGE_INVALID_TASK, personToEdit.getName()));","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"wz27"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"wz27"},"content":"            Task taskToEdit \u003d tasks.get(targetTaskIndex.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"wz27"},"content":"            Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"wz27"},"content":"            if (taskToEdit.equals(editedTask)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"wz27"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"wz27"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"wz27"},"content":"            tasks.set(targetTaskIndex.getZeroBased(), editedTask);","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"wz27"},"content":"            editedPerson \u003d new Person(","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"wz27"},"content":"                    editedPerson.getName(), editedPerson.getPhone(), editedPerson.getEmail(),","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"LeopardMerkava"},"content":"                    editedPerson.getAddress(), editedPerson.getTags(), tasks, editedPerson.getDescription(),","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"LeopardMerkava"},"content":"                    editedPerson.isImportant()","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"LeopardMerkava"},"content":"            );","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"wz27"},"content":"        // If the edited details result in a duplicate person, throw an exception.","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"LeopardMerkava"},"content":"        Description updatedDescription \u003d editPersonDescriptor.getDescription().orElse(personToEdit.getDescription());","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"limzk126"},"content":"        List\u003cTask\u003e tasks \u003d editPersonDescriptor.getTasks().orElse(personToEdit.getTasks());","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"LeopardMerkava"},"content":"        Boolean updatedisImportant \u003d editPersonDescriptor.getImportance().orElse(personToEdit.isImportant());","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"LeopardMerkava"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, tasks,","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"LeopardMerkava"},"content":"                updatedDescription, updatedisImportant);","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"wz27"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskCommand.EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"wz27"},"content":"        assert(taskToEdit !\u003d null);","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"wz27"},"content":"        TaskName updatedName \u003d editTaskDescriptor.getTaskName().orElse(taskToEdit.getTaskName());","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"wz27"},"content":"        TaskDate updatedDate \u003d editTaskDescriptor.getTaskDate().orElse(taskToEdit.getDate());","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"wz27"},"content":"        TaskTime updatedTime \u003d editTaskDescriptor.getTaskTime().orElse(taskToEdit.getTime());","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"wz27"},"content":"        Venue updatedVenue \u003d editTaskDescriptor.getTaskVenue().orElse(taskToEdit.getVenue());","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"wz27"},"content":"        Task updatedTask \u003d new Task(updatedName, updatedDate, updatedTime, updatedVenue);","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"wz27"},"content":"        return updatedTask;","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":210,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"LeopardMerkava"},"content":"        private Description description;","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"limzk126"},"content":"        private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"LeopardMerkava"},"content":"        private Boolean isImportant;","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":244,"author":{"gitId":"LeopardMerkava"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"limzk126"},"content":"            setTasks(toCopy.tasks);","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"LeopardMerkava"},"content":"            setImportance(toCopy.isImportant);","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"LeopardMerkava"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, tasks, description, isImportant);","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":288,"author":{"gitId":"LeopardMerkava"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"LeopardMerkava"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"LeopardMerkava"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"LeopardMerkava"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":295,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":296,"author":{"gitId":"limzk126"},"content":"        public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"limzk126"},"content":"            this.tasks \u003d tasks;","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"limzk126"},"content":"        public Optional\u003cList\u003cTask\u003e\u003e getTasks() {","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"limzk126"},"content":"            return Optional.ofNullable(tasks);","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":303,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":304,"author":{"gitId":"LeopardMerkava"},"content":"        public void setImportance(Boolean isImportant) {","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"LeopardMerkava"},"content":"            this.isImportant \u003d isImportant;","lastModifiedDate":"2021-10-25"},{"lineNumber":306,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":307,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":308,"author":{"gitId":"LeopardMerkava"},"content":"        public Optional\u003cBoolean\u003e getImportance() {","lastModifiedDate":"2021-10-25"},{"lineNumber":309,"author":{"gitId":"LeopardMerkava"},"content":"            return Optional.ofNullable(isImportant);","lastModifiedDate":"2021-10-25"},{"lineNumber":310,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":313,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":314,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":315,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":321,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":322,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":323,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":324,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":332,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":348,"author":{"gitId":"limzk126"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-10-19"},{"lineNumber":349,"author":{"gitId":"LeopardMerkava"},"content":"                    \u0026\u0026 getTasks().equals(e.getTasks())","lastModifiedDate":"2021-10-21"},{"lineNumber":350,"author":{"gitId":"LeopardMerkava"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription());","lastModifiedDate":"2021-10-21"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"LeopardMerkava":36,"limzk126":10,"kflim":10,"-":226,"eugenecsa":1,"wz27":70}},{"path":"src/main/java/seedu/address/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMPORTANCE;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DATE;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TIME;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_VENUE;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskDate;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.Venue;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":" * Edits the details of an existing task.","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"    public static final String COMMAND_WORD \u003d \"edittask\";","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"            + \"by the index number used in the displayed person list and task number. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"            + PREFIX_TASK_INDEX + \" TASK_INDEX (must be a positive integer)\"","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"            + \"[\" + PREFIX_TASK_DESCRIPTION + \" TASK_NAME] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"            + \"[\" + PREFIX_TASK_DATE + \" TASK_DATE] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"            + \"[\" + PREFIX_TASK_TIME + \" TASK_TIME] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"            + \"[\" + PREFIX_TASK_VENUE + \" TASK_ADDRESS] \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"            + PREFIX_TASK_INDEX + \" 2 \"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"            + PREFIX_TASK_DESCRIPTION + \"Assignment Discussion\"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"            + PREFIX_IMPORTANCE + \"false\";","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Edits the details of the task identified\";","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s \";","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"wz27"},"content":"    public static final String MESSAGE_TASK_NOT_EDITED \u003d \"At least one field of task to edit must be provided.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task already exists.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_INVALID_TASK \u003d \"The size of %1$s\u0027s task list is not that big\";","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"    private final Index targetPersonIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"    private final Index targetTaskIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for EditTaskCommand to edit a person\u0027s task.","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"     * @param targetPersonIndex of the person in the filtered person list","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"     * @param targetTaskIndex of the task to edit","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"    public EditTaskCommand(Index targetPersonIndex, Index targetTaskIndex, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(targetPersonIndex);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(targetTaskIndex);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"        this.targetPersonIndex \u003d targetPersonIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"        this.targetTaskIndex \u003d targetTaskIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"        this.editTaskDescriptor \u003d editTaskDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"        if (targetPersonIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"        Person personToEdit \u003d lastShownList.get(targetPersonIndex.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(personToEdit.getTasks());","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"        if (targetTaskIndex.getZeroBased() \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_TASK, personToEdit.getName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"        Task taskToEdit \u003d tasks.get(targetTaskIndex.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"        if (taskToEdit.equals(editedTask)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"        tasks.set(targetTaskIndex.getZeroBased(), editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), tasks, personToEdit.getDescription(),","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.isImportant()","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"LeopardMerkava"},"content":"        );","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"        CommandResult commandResult \u003d new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"        commandResult.setWriteCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"        return commandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"        assert(taskToEdit !\u003d null);","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"        TaskName updatedName \u003d editTaskDescriptor.getTaskName().orElse(taskToEdit.getTaskName());","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"        TaskDate updatedDate \u003d editTaskDescriptor.getTaskDate().orElse(taskToEdit.getDate());","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"        TaskTime updatedTime \u003d editTaskDescriptor.getTaskTime().orElse(taskToEdit.getTime());","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"        Venue updatedVenue \u003d editTaskDescriptor.getTaskVenue().orElse(taskToEdit.getVenue());","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"        Task updatedTask \u003d new Task(updatedName, updatedDate, updatedTime, updatedVenue);","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"eugenecsa"},"content":"        return updatedTask;","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"eugenecsa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"eugenecsa"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"eugenecsa"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"eugenecsa"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"eugenecsa"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"eugenecsa"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"eugenecsa"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"eugenecsa"},"content":"        // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"eugenecsa"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"eugenecsa"},"content":"        return targetPersonIndex.equals(e.targetPersonIndex)","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 targetTaskIndex.equals(e.targetTaskIndex)","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"eugenecsa"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"eugenecsa"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"eugenecsa"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"eugenecsa"},"content":"        private TaskName taskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"eugenecsa"},"content":"        private TaskDate taskDate;","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"eugenecsa"},"content":"        private TaskTime taskTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"eugenecsa"},"content":"        private Venue taskVenue;","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"eugenecsa"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"eugenecsa"},"content":"        /**","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"eugenecsa"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"eugenecsa"},"content":"         */","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"eugenecsa"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"eugenecsa"},"content":"            setTaskName(toCopy.taskName);","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"eugenecsa"},"content":"            setTaskDate(toCopy.taskDate);","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"eugenecsa"},"content":"            setTaskTime(toCopy.taskTime);","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"eugenecsa"},"content":"            setTaskVenue(toCopy.taskVenue);","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"eugenecsa"},"content":"        /**","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"eugenecsa"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"eugenecsa"},"content":"         */","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"eugenecsa"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"eugenecsa"},"content":"            return CollectionUtil.isAnyNonNull(taskName, taskDate, taskTime, taskVenue);","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"eugenecsa"},"content":"        public void setTaskName(TaskName taskName) {","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"eugenecsa"},"content":"            this.taskName \u003d taskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"eugenecsa"},"content":"        public Optional\u003cTaskName\u003e getTaskName() {","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"eugenecsa"},"content":"            return Optional.ofNullable(taskName);","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"eugenecsa"},"content":"        public void setTaskDate(TaskDate taskDate) {","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"eugenecsa"},"content":"            this.taskDate \u003d taskDate;","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"eugenecsa"},"content":"        public Optional\u003cTaskDate\u003e getTaskDate() {","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"eugenecsa"},"content":"            return Optional.ofNullable(taskDate);","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"eugenecsa"},"content":"        public void setTaskTime(TaskTime taskTime) {","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"eugenecsa"},"content":"            this.taskTime \u003d taskTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"eugenecsa"},"content":"        public Optional\u003cTaskTime\u003e getTaskTime() {","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"eugenecsa"},"content":"            return Optional.ofNullable(taskTime);","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"eugenecsa"},"content":"        public void setTaskVenue(Venue venue) {","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"LeopardMerkava"},"content":"            this.taskVenue \u003d venue;","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":209,"author":{"gitId":"eugenecsa"},"content":"        public Optional\u003cVenue\u003e getTaskVenue() {","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"eugenecsa"},"content":"            return Optional.ofNullable(taskVenue);","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":212,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"eugenecsa"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":214,"author":{"gitId":"eugenecsa"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":215,"author":{"gitId":"eugenecsa"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":216,"author":{"gitId":"eugenecsa"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-22"},{"lineNumber":217,"author":{"gitId":"eugenecsa"},"content":"                return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":218,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":219,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":220,"author":{"gitId":"eugenecsa"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"eugenecsa"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"eugenecsa"},"content":"                return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":225,"author":{"gitId":"eugenecsa"},"content":"            // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"eugenecsa"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"eugenecsa"},"content":"            return getTaskName().equals(e.getTaskName())","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"eugenecsa"},"content":"                    \u0026\u0026 getTaskDate().equals(e.getTaskDate())","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"eugenecsa"},"content":"                    \u0026\u0026 getTaskTime().equals(e.getTaskTime())","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"eugenecsa"},"content":"                    \u0026\u0026 getTaskVenue().equals(e.getTaskVenue());","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":233,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LeopardMerkava":8,"limzk126":5,"kflim":10,"eugenecsa":210,"wz27":1}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Exits the program.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"wz27"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"            + \": \" + DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"wz27"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"    public static String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"    public static String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kflim":9,"-":19,"wz27":5}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.AttributeContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":" * Finds and lists all persons in address book whose specified attribute contains any of the argument keywords.","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"            \"Finds all persons whose specified detail contain any of the specified keywords (case-insensitive)\";","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"            + \": Finds all persons whose specified detail contain any of the specified keywords (case-insensitive) \"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\"","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"            + \"[\" + PREFIX_TASK_DESCRIPTION + \" TASK_NAME] \"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION]\"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"            + \"Example: \" + COMMAND_WORD + \" -n alex yeoh\";","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"    private final AttributeContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"    public FindCommand(AttributeContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"        if (predicate.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kflim":41,"-":33}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wz27"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"wz27"},"content":"    public static final String COMMAND_WORD \u003d \"man\";","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Shows program usage instructions.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"wz27"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"            + \": \" + DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"wz27"},"content":"            + \"Parameters: \" + \"[COMMAND]\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"wz27"},"content":"            + \"Example: \" + COMMAND_WORD + \" add\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":24,"author":{"gitId":"wz27"},"content":"    private boolean isShowHelp \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"wz27"},"content":"    private String commandWord \u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"wz27"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"wz27"},"content":"     * Constructor for a HelpCommand to show help window.","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"wz27"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"wz27"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"wz27"},"content":"        isShowHelp \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"wz27"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"wz27"},"content":"     * Constructor for a HelpCommand to show help for a specified command.","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"wz27"},"content":"     * @param commandSpecified The command specified to show help for.","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"wz27"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"wz27"},"content":"    public HelpCommand(String commandSpecified) {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"wz27"},"content":"        this.commandWord \u003d commandSpecified;","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"wz27"},"content":"        if (isShowHelp) {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"wz27"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"wz27"},"content":"            requireNonNull(commandWord);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"wz27"},"content":"            CommandResult commandResult \u003d new CommandResult(DESCRIPTION);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"wz27"},"content":"            switch (commandWord) {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"wz27"},"content":"            case AddCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"wz27"},"content":"            case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"wz27"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"wz27"},"content":"            case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(ClearCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"wz27"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"wz27"},"content":"            case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(SortCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"wz27"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(ListCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"wz27"},"content":"            case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(ExitCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"wz27"},"content":"            case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"wz27"},"content":"            case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"wz27"},"content":"            case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(DeleteTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"wz27"},"content":"            case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(EditTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"wz27"},"content":"            case ViewTaskListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(ViewTaskListCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"wz27"},"content":"            case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(DoneCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"wz27"},"content":"            case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"wz27"},"content":"                commandResult \u003d new CommandResult(UndoCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"wz27"},"content":"            default:","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"wz27"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"wz27"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"wz27"},"content":"            return commandResult;","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kflim":9,"-":20,"wz27":99}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"wz27"},"content":"    public static final String COMMAND_WORD \u003d \"ls\";","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Lists all current persons in the address book.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"wz27"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"wz27"},"content":"            + \": \" + DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"wz27"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kflim":9,"-":24,"wz27":6}},{"path":"src/main/java/seedu/address/logic/commands/ReminderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":" * Shows/Sets the number of days prior to a task\u0027s date and time for the task to be","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":" * reminded as due soon.","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"public class ReminderCommand extends Command {","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    public static final String COMMAND_WORD \u003d \"reminder\";","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    public static final String SET_FLAG \u003d \" -s\";","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    public static final String NO_FLAG_DESCRIPTION \u003d \"Shows the number of days prior to a task\u0027s\"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"            + \" date for the task to be reminded as due soon.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    public static final String HAS_FLAG_DESCRIPTION \u003d \"Sets the number of days prior to a task\u0027s\"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"            + \" date for the task to be reminded as due soon.\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"            + \"Parameters: DAYS (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"            + \"Example: reminder -s 21\";","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": \" + NO_FLAG_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"            + COMMAND_WORD + SET_FLAG + \": \" + HAS_FLAG_DESCRIPTION;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    public static final String MESSAGE_SET_REMINDER_SUCCESS \u003d \"Days prior to remind is set to %d\";","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    public static final String MESSAGE_SHOW_REMINDER_SUCCESS \u003d \"Days prior to remind: %d\";","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    private final boolean isSet;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    private final int daysPriorToTaskDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"     * Constructor to use if \"-s\" flag is not provided.","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"    public ReminderCommand() {","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"        this.isSet \u003d false;","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"        this.daysPriorToTaskDate \u003d Task.getDaysPriorToTaskDate();","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"     * Constructor to use if \"-s\" flag is provided.","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"    public ReminderCommand(int daysPriorToTaskDate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"        this.isSet \u003d true;","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"        this.daysPriorToTaskDate \u003d daysPriorToTaskDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"        if (isSet) {","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"            if (daysPriorToTaskDate \u003c\u003d 0) {","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_REMINDER_DAY_VALUE);","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"            Task.setDaysPriorToTaskDate(daysPriorToTaskDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"            return new CommandResult(String.format(MESSAGE_SET_REMINDER_SUCCESS, daysPriorToTaskDate));","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"            return new CommandResult(String.format(MESSAGE_SHOW_REMINDER_SUCCESS, daysPriorToTaskDate));","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"                || (other instanceof ReminderCommand // instanceof handles nulls","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"                \u0026\u0026 isSet \u003d\u003d ((ReminderCommand) other).isSet","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"                \u0026\u0026 (!isSet || daysPriorToTaskDate \u003d\u003d ((ReminderCommand) other).daysPriorToTaskDate));","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"        return NO_FLAG_DESCRIPTION;","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"limzk126":68,"kflim":10}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wz27"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"wz27"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"wz27"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"wz27"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"wz27"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"wz27"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"wz27"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"wz27"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"wz27"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the list of persons \"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"wz27"},"content":"            + \"by the alphabetical order of their name.\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"wz27"},"content":"            + \"Parameters: [-r]\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"wz27"},"content":"            + \" -r\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Sorts the list of persons\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"    private static String messageSuccess \u003d \"Sorted all persons\";","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"wz27"},"content":"    private final boolean isReverseOrder;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"wz27"},"content":"    public SortCommand(boolean isReverseOrder) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"wz27"},"content":"        this.isReverseOrder \u003d isReverseOrder;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"wz27"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"wz27"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"wz27"},"content":"        if (isReverseOrder) {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"            messageSuccess \u003d messageSuccess + \" in reverse order\";","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"wz27"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"wz27"},"content":"        model.updateSortedPersonList(isReverseOrder);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"        return new CommandResult(messageSuccess);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"                || (other instanceof SortCommand \u0026\u0026 isReverseOrder \u003d\u003d ((SortCommand) other).isReverseOrder);","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"wz27"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kflim":18,"wz27":35}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":" * Marks task(s) identified using its displayed index in the task list as not done.","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    public static final String COMMAND_WORD \u003d \"undotask\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Marked %1$d %2$s of %3$s as not done.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"            + \": Marks the task, specified by the TASKINDEX, from person \"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"            + \"identified by the index number used in the displayed person list as not done.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"wz27"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"            + PREFIX_TASK_INDEX + \" TaskIndex (must be a positive integer)\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_TASK_INDEX + \" 2\";","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    public static final String DESCRIPTION \u003d \"Marks the task(s), specified by the TASK_INDEX, \"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"            + \"from person specified by the INDEX as not done\";","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    private final Index targetPersonIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"    private final List\u003cIndex\u003e targetTaskIndexes;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for a DoneCommand to mark a task of a person as done.","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"     * @param targetPersonIndex The Index of the target person.","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"     * @param targetTaskIndexes The Index of the target Task that belongs to target person.","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"    public UndoCommand(Index targetPersonIndex, List\u003cIndex\u003e targetTaskIndexes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"        requireAllNonNull(targetPersonIndex, targetTaskIndexes);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"        this.targetPersonIndex \u003d targetPersonIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"        this.targetTaskIndexes \u003d targetTaskIndexes;","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"        if (targetPersonIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"        Person personToEdit \u003d lastShownList.get(targetPersonIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"        //Make new copy for defensive programming.","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(personToEdit.getTasks());","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cIndex\u003e copyOfIndexList \u003d new ArrayList\u003c\u003e(targetTaskIndexes);","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"        copyOfIndexList.sort(Collections.reverseOrder());","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"        for (Index targetTaskIndex : targetTaskIndexes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"            if (targetTaskIndex.getZeroBased() \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_INVALID_TASK, personToEdit.getName()));","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"        int notDone \u003d 0;","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"        for (Index targetTaskIndex : copyOfIndexList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"            Task taskDone \u003d tasks.get(targetTaskIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"            if (taskDone.getDone()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"                taskDone.setNotDone();","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"            } else {","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"                notDone++;","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"        Person editedPerson \u003d new Person (","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), tasks, personToEdit.getDescription(),","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.isImportant()","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"LeopardMerkava"},"content":"        );","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson, targetTaskIndexes.size(), notDone));","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"     * Generates a command execution success message based on","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"     * the task removed.","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"    private String generateSuccessMessage(Person personToEdit, int amount, int notDone) {","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"        int tasksMarked \u003d amount - notDone;","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"        String taskOrTasks \u003d StringUtil.singularOrPlural(\"task\", tasksMarked);","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"        String taskOrTasksNotMarked \u003d StringUtil.singularOrPlural(\"task\", notDone);","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"        String markedTasks \u003d String.format(MESSAGE_SUCCESS, tasksMarked, taskOrTasks, personToEdit.getName());","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"        String notMarkedTasks \u003d String.format(\"%1$d %2$s are already not done.\", notDone, taskOrTasksNotMarked);","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"        return notDone \u003d\u003d 0 ? markedTasks : markedTasks + \"\\n\" + notMarkedTasks;","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"eugenecsa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"eugenecsa"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"eugenecsa"},"content":"                || (other instanceof UndoCommand // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 targetPersonIndex.equals(((UndoCommand) other).targetPersonIndex)","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 targetTaskIndexes.equals(((UndoCommand) other).targetTaskIndexes)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"LeopardMerkava":6,"eugenecsa":121,"wz27":1}},{"path":"src/main/java/seedu/address/logic/commands/ViewTaskListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"import seedu.address.model.task.TaskMatchesKeywordPredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":" * Displays the task list of a specified person.\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":" * Displays the task list of every person if \"-A\" flag is provided.","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"public class ViewTaskListCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    public static final String COMMAND_WORD \u003d \"cat\";","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    public static final String ALL_FLAG \u003d \"-A\";","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    public static final String DISPLAY_SINGLE_DESCRIPTION \u003d \"Displays the task list of a \"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"            + \"person specified by index number\"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"            + \" used in the displayed person list\";","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    public static final String DISPLAY_ALL_DESCRIPTION \u003d \"Displays the task list of every person\";","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"            + \": \" + DISPLAY_SINGLE_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"            + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"            + COMMAND_WORD + \" \" + ALL_FLAG + \": \" + DISPLAY_ALL_DESCRIPTION;","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    public static final String MESSAGE_VIEW_TASKS_SUCCESS \u003d \"Viewing %1$s\u0027s tasks\";","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"    public static final String MESSAGE_VIEW_TASKS_ALL_SUCCESS \u003d \"Viewing all task list.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"    private final boolean isDisplayAll;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"    private List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"    private boolean hasFilter \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"    /** Constructor used if user wants to view all task lists. */","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"    public ViewTaskListCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"        isDisplayAll \u003d true;","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"        targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"     * Constructor used if user wants to find within the view all task list panel.","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"    public ViewTaskListCommand(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"        isDisplayAll \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"        hasFilter \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"        targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"    /** Constructor used if user wants to view a specific {@code Person}\u0027s task list . */","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"    public ViewTaskListCommand(Index targetIndex) {","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"        isDisplayAll \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"    /** Constructor for ViewTaskListCommand. */","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"    public ViewTaskListCommand(Index targetIndex, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"        this.hasFilter \u003d true;","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"        isDisplayAll \u003d false;","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"        if (isDisplayAll) {","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"            CommandResult cr \u003d new CommandResult(MESSAGE_VIEW_TASKS_ALL_SUCCESS);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"            if (hasFilter) {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"                model.setViewAllTasksFindPred(new TaskMatchesKeywordPredicate(keywords));","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"                model.setViewAllTasksFindPred(task -\u003e true);","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"            cr.setDisplayAllTaskList();","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"            cr.setWriteCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"            return cr;","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"        if ((targetIndex.getZeroBased() \u003e\u003d lastShownList.size())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"kflim"},"content":"        if (hasFilter) {","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"kflim"},"content":"            TaskMatchesKeywordPredicate predicate \u003d new TaskMatchesKeywordPredicate(keywords);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"kflim"},"content":"            model.displayFilteredPersonTaskList(personToView, predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"kflim"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":"            model.displayPersonTaskList(personToView);","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"limzk126"},"content":"        CommandResult cr \u003d new CommandResult(String.format(MESSAGE_VIEW_TASKS_SUCCESS, personToView.getName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"        cr.setDisplaySingleTaskList();","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"        return cr;","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"limzk126"},"content":"                || (other instanceof ViewTaskListCommand // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"kflim"},"content":"                \u0026\u0026 targetIndex.equals(((ViewTaskListCommand) other).targetIndex)","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"kflim"},"content":"                \u0026\u0026 keywords.equals(((ViewTaskListCommand) other).keywords)","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"kflim"},"content":"                \u0026\u0026 hasFilter \u003d\u003d ((ViewTaskListCommand) other).hasFilter); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"limzk126"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"limzk126"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"kflim"},"content":"        return \"Displays the task list of a person specified by index number used in the displayed person list\";","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"limzk126":101,"kflim":25}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kflim":2,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AccessCacheCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INTERNAL_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_KEY_DIRECTION;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.AccessCacheCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"public class AccessCacheCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"    public Command parse(String internalCommandString) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(internalCommandString);","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(internalCommandString, PREFIX_KEY_DIRECTION);","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"        if (argMultimap.getValue(PREFIX_KEY_DIRECTION).isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"            throw new ParseException(MESSAGE_INVALID_INTERNAL_COMMAND_FORMAT);","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"        return new AccessCacheCommand(argMultimap.getValue(PREFIX_KEY_DIRECTION).get());","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"LeopardMerkava":22}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMPORTANCE;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"wz27"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"wz27"},"content":"public class AddCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"wz27"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"wz27"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(args.substring(1, 2))) {","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"                        PREFIX_TAG, PREFIX_TASK_DESCRIPTION, PREFIX_DESCRIPTION, PREFIX_IMPORTANCE);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"            if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"            List\u003cTask\u003e taskList \u003d ParserUtil.parseTasks(argMultimap.getAllValues(PREFIX_TASK_DESCRIPTION));","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"            Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION)","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"                    .orElse(\"\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"            Boolean isImportant \u003d ParserUtil.parseImportance(argMultimap.getValue(PREFIX_IMPORTANCE)","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"                    .orElse(\"false\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"            Person person \u003d new Person(name, phone, email, address, tagList, taskList, description, isImportant);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"wz27"},"content":"        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"wz27"},"content":"            return new AddTaskCommandParser().parse(args);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"LeopardMerkava":13,"limzk126":1,"-":46,"eugenecsa":2,"wz27":8}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TASK_DESCRIPTION);","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"        Index index;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"                    AddTaskCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        List\u003cTask\u003e tasks \u003d ParserUtil.parseTasks(argMultimap.getAllValues(PREFIX_TASK_DESCRIPTION));","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"        return new AddTaskCommand(index, tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LeopardMerkava":31,"eugenecsa":9}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookInternalParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INTERNAL_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_INTERNAL_COMMAND;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.AccessCacheCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"public class AddressBookInternalParser {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"     * Parses internal command string into command for execution.","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"     * @param internalCommandString full internal command string","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"     * @return the command based on the command string","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws ParseException if the internal command string does not conform the expected format","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"    public Command parseCommand(String internalCommandString) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(internalCommandString.trim());","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"            throw new ParseException(MESSAGE_INVALID_INTERNAL_COMMAND_FORMAT);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"        // Coded as switch to ensure ease expansion","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"        case AccessCacheCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"            return new AccessCacheCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_INTERNAL_COMMAND);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"LeopardMerkava":46}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"import seedu.address.logic.commands.ReminderCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"import seedu.address.logic.commands.ViewTaskListCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"wz27"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"wz27"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":79,"author":{"gitId":"wz27"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"LeopardMerkava"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"        case ViewTaskListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"            return new ViewTaskListCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"        case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"            return new DoneCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"            return new UndoCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"limzk126"},"content":"        case ReminderCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":"            return new ReminderCommandParser().parse(arguments);","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LeopardMerkava":8,"limzk126":6,"-":74,"eugenecsa":13,"wz27":5}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"wz27"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n\");","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"wz27"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"-p\");","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"wz27"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"-e\");","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"wz27"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"-a\");","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"wz27"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"-l\");","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"-d\");","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    public static final Prefix PREFIX_TASK_DESCRIPTION \u003d new Prefix(\"-tn\");","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    public static final Prefix PREFIX_TASK_INDEX \u003d new Prefix(\"-ti\");","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"    public static final Prefix PREFIX_TASK_DATE \u003d new Prefix(\"-td\");","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    public static final Prefix PREFIX_TASK_TIME \u003d new Prefix(\"-tt\");","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    public static final Prefix PREFIX_TASK_VENUE \u003d new Prefix(\"-ta\");","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"wz27"},"content":"    public static final Prefix PREFIX_ALL_FLAG \u003d new Prefix(\"-A\");","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"    public static final Prefix PREFIX_IMPORTANCE \u003d new Prefix(\"-impt\");","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"    /* Internal Prefix definitions */","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"    public static final Prefix PREFIX_KEY_DIRECTION \u003d new Prefix(\"-qq\");","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"LeopardMerkava":5,"-":10,"eugenecsa":5,"wz27":6}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"wz27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALL_FLAG;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"wz27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"wz27"},"content":"public class DeleteCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"     * @throws ParseException if the user input does not conform to the expected format with or without flags.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"wz27"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"wz27"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TASK_INDEX, PREFIX_ALL_FLAG);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"wz27"},"content":"        if (argMultimap.getValue(PREFIX_ALL_FLAG).isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"wz27"},"content":"            return new DeleteCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"wz27"},"content":"        if (argMultimap.getValue(PREFIX_TASK_INDEX).isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"wz27"},"content":"            return new DeleteTaskCommandParser().parse(args);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"        if (!trimmedArgs.startsWith(\"-m\")) {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"            return parseWithoutFlag(trimmedArgs);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"            return parseWithFlag(trimmedArgs);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"     * Parses the given {@code String} of trimmed arguments in the context of the DeleteCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"     * @throws ParseException if the user input does not conform the expected format of the command without the flag.","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"    public DeleteCommand parseWithoutFlag(String trimmedArgs) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"            Index index \u003d ParserUtil.parseIndex(trimmedArgs);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"     * Parses the given {@code String} of trimmed arguments in the context of the DeleteCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"     * @throws ParseException if the user input does not conform the expected format of the command with the flag.","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"    public DeleteCommand parseWithFlag(String trimmedArgs) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"        String[] flagsAndIndexes \u003d trimmedArgs.split(\"-m\", 2);","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"        if (flagsAndIndexes[1].isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"                String[] indexes \u003d flagsAndIndexes[1].trim().split(\" \");","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"                List\u003cIndex\u003e preppedIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"                for (String indexString : indexes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"                    preppedIndexes.add(ParserUtil.parseIndex(indexString));","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"                return new DeleteCommand(preppedIndexes);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kflim"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kflim"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kflim":41,"-":27,"wz27":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_TASK_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"            Set\u003cIndex\u003e taskIndexSet \u003d ParserUtil.parseTaskIndexes(argMultimap.getAllValues(PREFIX_TASK_INDEX));","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"            List\u003cIndex\u003e taskIndex \u003d new ArrayList\u003c\u003e(taskIndexSet);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"            return new DeleteTaskCommand(index, taskIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LeopardMerkava":31,"eugenecsa":7}},{"path":"src/main/java/seedu/address/logic/parser/DoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":" * Parses input arguments and creates a new DoneCommand object","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"public class DoneCommandParser {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     * and returns a DoneCommand object for execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    public DoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_TASK_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"            Set\u003cIndex\u003e taskIndexSet \u003d ParserUtil.parseTaskIndexes(argMultimap.getAllValues(PREFIX_TASK_INDEX));","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"            List\u003cIndex\u003e taskIndex \u003d new ArrayList\u003c\u003e(taskIndexSet);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"            return new DoneCommand(index, taskIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"LeopardMerkava":1,"eugenecsa":37}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMPORTANCE;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"wz27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DATE;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"wz27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"wz27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TIME;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"wz27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_VENUE;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"                        PREFIX_DESCRIPTION, PREFIX_TASK_DESCRIPTION, PREFIX_IMPORTANCE, PREFIX_TASK_INDEX,","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"                        PREFIX_TASK_DATE, PREFIX_TASK_TIME, PREFIX_TASK_VENUE);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"wz27"},"content":"        Index taskIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"            editPersonDescriptor.setDescription(ParserUtil.parseDescription(","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"                    argMultimap.getValue(PREFIX_DESCRIPTION).get()","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"            ));","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"        if (argMultimap.getValue(PREFIX_IMPORTANCE).isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"            editPersonDescriptor.setImportance(ParserUtil.parseImportance(","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"                    argMultimap.getValue(PREFIX_IMPORTANCE).get()","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"LeopardMerkava"},"content":"            ));","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited() \u0026\u0026 argMultimap.getValue(PREFIX_TASK_INDEX).isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"wz27"},"content":"        if (argMultimap.getValue(PREFIX_TASK_INDEX).isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"            try {","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"wz27"},"content":"                taskIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TASK_INDEX).get());","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"wz27"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"wz27"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"wz27"},"content":"        if (argMultimap.getValue(PREFIX_TASK_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"wz27"},"content":"            editTaskDescriptor.setTaskName(","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"wz27"},"content":"                    ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_TASK_DESCRIPTION).get()));","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"wz27"},"content":"        if (argMultimap.getValue(PREFIX_TASK_DATE).isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"wz27"},"content":"            editTaskDescriptor.setTaskDate(ParserUtil.parseTaskDate(argMultimap.getValue(PREFIX_TASK_DATE).get()));","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"wz27"},"content":"        if (argMultimap.getValue(PREFIX_TASK_TIME).isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"wz27"},"content":"            editTaskDescriptor.setTaskTime(ParserUtil.parseTaskTime(argMultimap.getValue(PREFIX_TASK_TIME).get()));","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"wz27"},"content":"        if (argMultimap.getValue(PREFIX_TASK_VENUE).isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"wz27"},"content":"            editTaskDescriptor.setTaskVenue(ParserUtil.parseTaskVenue(argMultimap.getValue(PREFIX_TASK_VENUE).get()));","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"wz27"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited() \u0026\u0026 !editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"wz27"},"content":"        return new EditCommand(index, editPersonDescriptor, taskIndex, editTaskDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":134,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"limzk126"},"content":"     * Parses {@code Collection\u003cString\u003e tasks} into a {@code List\u003cTask\u003e} if {@code tasks} is non-empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"limzk126"},"content":"     * If {@code tasks} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"limzk126"},"content":"     * {@code List\u003cTask\u003e} containing zero task.","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"limzk126"},"content":"    private Optional\u003cList\u003cTask\u003e\u003e parseTasksForEdit(Collection\u003cString\u003e tasks) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"limzk126"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"limzk126"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"limzk126"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"limzk126"},"content":"        Collection\u003cString\u003e taskList \u003d tasks.size() \u003d\u003d 1 \u0026\u0026 tasks.contains(\"\") ? Collections.emptyList() : tasks;","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"limzk126"},"content":"        return Optional.of(ParserUtil.parseTasks(taskList));","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"LeopardMerkava":16,"limzk126":16,"-":85,"eugenecsa":5,"wz27":26}},{"path":"src/main/java/seedu/address/logic/parser/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DATE;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TIME;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_VENUE;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK_INDEX, PREFIX_TASK_DESCRIPTION, PREFIX_TASK_DATE,","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"                        PREFIX_TASK_TIME, PREFIX_TASK_VENUE);","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"        Index index;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"        Index taskIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"        if (argMultimap.getValue(PREFIX_TASK_INDEX).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"            taskIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TASK_INDEX).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"        if (argMultimap.getValue(PREFIX_TASK_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"            editTaskDescriptor.setTaskName(","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"                    ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_TASK_DESCRIPTION).get()));","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"        if (argMultimap.getValue(PREFIX_TASK_DATE).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"            editTaskDescriptor.setTaskDate(ParserUtil.parseTaskDate(argMultimap.getValue(PREFIX_TASK_DATE).get()));","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"        if (argMultimap.getValue(PREFIX_TASK_TIME).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"            editTaskDescriptor.setTaskTime(ParserUtil.parseTaskTime(argMultimap.getValue(PREFIX_TASK_TIME).get()));","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"        if (argMultimap.getValue(PREFIX_TASK_VENUE).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"            editTaskDescriptor.setTaskVenue(ParserUtil.parseTaskVenue(argMultimap.getValue(PREFIX_TASK_VENUE).get()));","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_TASK_NOT_EDITED);","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"        return new EditTaskCommand(index, taskIndex, editTaskDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"eugenecsa":66}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.person.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.person.IsImportantPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.TasksContainKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"        String[] flagAndKeywords \u003d trimmedArgs.split(\" \", 2);","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"        if (trimmedArgs.isEmpty() || flagAndKeywords.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"            String[] nameKeywords \u003d flagAndKeywords[1].split(\"\\\\s+\");","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"            switch (flagAndKeywords[0]) {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"            case \"-n\":","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"            case \"-p\":","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"                return new FindCommand(new PhoneContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"            case \"-e\":","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"                return new FindCommand(new EmailContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"            case \"-a\":","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"                return new FindCommand(new AddressContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"wz27"},"content":"            case \"-l\":","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"                return new FindCommand(new TagsContainKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"            case \"-d\":","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"                return new FindCommand(new DescriptionContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"wz27"},"content":"            case \"-tn\":","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"                return new FindCommand(new TasksContainKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"            case \"-impt\":","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"                return new FindCommand(new IsImportantPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"            default:","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kflim":23,"-":29,"eugenecsa":6,"wz27":2}},{"path":"src/main/java/seedu/address/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wz27"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"wz27"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"wz27"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.ViewTaskListCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"wz27"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"wz27"},"content":" * Parses input argument and creates a new HelpCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"wz27"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"wz27"},"content":"public class HelpCommandParser {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"wz27"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"wz27"},"content":"     * Parses the given {@code String} of argument in the context of the HelpCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"wz27"},"content":"     * and returns a HelpCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"wz27"},"content":"     * @param args String argument","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"wz27"},"content":"     * @return HelpCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"wz27"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"wz27"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"wz27"},"content":"    public HelpCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"wz27"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"wz27"},"content":"        String[] argsArray \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"wz27"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"wz27"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"wz27"},"content":"        } else if (argsArray.length \u003e 1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"wz27"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"wz27"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"wz27"},"content":"            switch(argsArray[0]) {","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"wz27"},"content":"            case AddCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"wz27"},"content":"            case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"wz27"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"wz27"},"content":"            case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"wz27"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"wz27"},"content":"            case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"wz27"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"wz27"},"content":"            case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"wz27"},"content":"            case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"wz27"},"content":"            case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"wz27"},"content":"            case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"wz27"},"content":"            case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"wz27"},"content":"            case ViewTaskListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"wz27"},"content":"            case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"wz27"},"content":"            case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"wz27"},"content":"                return new HelpCommand(argsArray[0]);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"wz27"},"content":"            default:","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"wz27"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"wz27"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"wz27"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"wz27":82}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DATE;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TIME;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_VENUE;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskDate;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.Venue;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"eugenecsa"},"content":"     * Parses a {@code String task} into a {@code Task}.","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"LeopardMerkava"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"LeopardMerkava"},"content":"    public static Task parseTask(String task) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"eugenecsa"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(task, PREFIX_TASK_DESCRIPTION,","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"eugenecsa"},"content":"                PREFIX_TASK_DATE, PREFIX_TASK_TIME, PREFIX_TASK_VENUE);","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"eugenecsa"},"content":"        TaskName taskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"eugenecsa"},"content":"        TaskDate date \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"eugenecsa"},"content":"        TaskTime time \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"eugenecsa"},"content":"        Venue venue \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"eugenecsa"},"content":"        if (argMultimap.getValue(PREFIX_TASK_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"eugenecsa"},"content":"            taskName \u003d parseTaskName(argMultimap.getValue(PREFIX_TASK_DESCRIPTION).get());","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"eugenecsa"},"content":"            throw new ParseException(Task.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"eugenecsa"},"content":"        if (argMultimap.getValue(PREFIX_TASK_DATE).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"eugenecsa"},"content":"            date \u003d parseTaskDate(argMultimap.getValue(PREFIX_TASK_DATE).get());","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":164,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"eugenecsa"},"content":"        if (argMultimap.getValue(PREFIX_TASK_TIME).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"eugenecsa"},"content":"            time \u003d parseTaskTime(argMultimap.getValue(PREFIX_TASK_TIME).get());","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"eugenecsa"},"content":"        if (argMultimap.getValue(PREFIX_TASK_VENUE).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"eugenecsa"},"content":"            venue \u003d parseTaskVenue(argMultimap.getValue(PREFIX_TASK_VENUE).get());","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"eugenecsa"},"content":"        return new Task(taskName, date, time, venue);","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":175,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":176,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":177,"author":{"gitId":"eugenecsa"},"content":"     * Parses {@code Collection\u003cString\u003e tasks} into a {@code Set\u003cTask\u003e}.","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":179,"author":{"gitId":"LeopardMerkava"},"content":"    public static List\u003cTask\u003e parseTasks(Collection\u003cString\u003e tasks) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":181,"author":{"gitId":"LeopardMerkava"},"content":"        final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":182,"author":{"gitId":"eugenecsa"},"content":"        for (String taskString : tasks) {","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"eugenecsa"},"content":"            taskList.add(parseTask(\" \" + PREFIX_TASK_DESCRIPTION + \" \" + taskString));","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":185,"author":{"gitId":"LeopardMerkava"},"content":"        return taskList;","lastModifiedDate":"2021-10-05"},{"lineNumber":186,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":187,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":188,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"eugenecsa"},"content":"     * Parses a {@code String taskName} into a {@code TaskName}.","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"eugenecsa"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"eugenecsa"},"content":"     * @throws ParseException if the given {@code taskName} is invalid.","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"eugenecsa"},"content":"    public static TaskName parseTaskName(String taskName) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(taskName);","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"eugenecsa"},"content":"        String trimmedTaskName \u003d taskName.trim();","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"eugenecsa"},"content":"        if (!TaskName.isValidTaskName(trimmedTaskName)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"eugenecsa"},"content":"            throw new ParseException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"eugenecsa"},"content":"        return new TaskName(trimmedTaskName);","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"eugenecsa"},"content":"     * Parses a {@code String taskDate} into a {@code TaskDate}.","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"eugenecsa"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"eugenecsa"},"content":"     * @throws ParseException if the given {@code taskDate} is invalid.","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":209,"author":{"gitId":"eugenecsa"},"content":"    public static TaskDate parseTaskDate(String taskDate) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(taskDate);","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"eugenecsa"},"content":"        String trimmedTaskDate \u003d taskDate.trim();","lastModifiedDate":"2021-10-22"},{"lineNumber":212,"author":{"gitId":"eugenecsa"},"content":"        if (!TaskDate.isValidTaskDate(trimmedTaskDate)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"eugenecsa"},"content":"            throw new ParseException(TaskDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":214,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":215,"author":{"gitId":"eugenecsa"},"content":"        return new TaskDate(trimmedTaskDate);","lastModifiedDate":"2021-10-22"},{"lineNumber":216,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":217,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":218,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":219,"author":{"gitId":"eugenecsa"},"content":"     * Parses a {@code String taskTime} into a {@code TaskTime}.","lastModifiedDate":"2021-10-22"},{"lineNumber":220,"author":{"gitId":"eugenecsa"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"eugenecsa"},"content":"     * @throws ParseException if the given {@code taskTime} is invalid.","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"eugenecsa"},"content":"    public static TaskTime parseTaskTime(String taskTime) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":225,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(taskTime);","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"eugenecsa"},"content":"        String trimmedTaskTime \u003d taskTime.trim();","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"eugenecsa"},"content":"        if (!TaskTime.isValidTaskTime(trimmedTaskTime)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"eugenecsa"},"content":"            throw new ParseException(TaskTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"eugenecsa"},"content":"        return new TaskTime(trimmedTaskTime);","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":233,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"eugenecsa"},"content":"     * Parses a {@code String venue} into a {@code Venue}.","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"eugenecsa"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-22"},{"lineNumber":236,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":237,"author":{"gitId":"eugenecsa"},"content":"     * @throws ParseException if the given {@code venue} is invalid.","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"eugenecsa"},"content":"    public static Venue parseTaskVenue(String venue) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":240,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(venue);","lastModifiedDate":"2021-10-22"},{"lineNumber":241,"author":{"gitId":"eugenecsa"},"content":"        String trimmedTaskVenue \u003d venue.trim();","lastModifiedDate":"2021-10-22"},{"lineNumber":242,"author":{"gitId":"eugenecsa"},"content":"        if (!Venue.isValidVenue(venue)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":243,"author":{"gitId":"eugenecsa"},"content":"            throw new ParseException(Venue.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":244,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":245,"author":{"gitId":"eugenecsa"},"content":"        return new Venue(venue);","lastModifiedDate":"2021-10-22"},{"lineNumber":246,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":247,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":248,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"LeopardMerkava"},"content":"     * Parses a {@code String desc} into a {@code Description}.","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"LeopardMerkava"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws ParseException if the given {@code desc} is invalid.","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"LeopardMerkava"},"content":"    public static Description parseDescription(String desc) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(desc);","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"LeopardMerkava"},"content":"        String trimmedDescription \u003d desc.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"LeopardMerkava"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"LeopardMerkava"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"LeopardMerkava"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"LeopardMerkava"},"content":"     * Parses a {@code String desc} into the Importance.","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"LeopardMerkava"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-26"},{"lineNumber":266,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws ParseException if the given {@code desc} is invalid.","lastModifiedDate":"2021-10-26"},{"lineNumber":268,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":269,"author":{"gitId":"LeopardMerkava"},"content":"    public static Boolean parseImportance(String importance) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":270,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(importance);","lastModifiedDate":"2021-10-26"},{"lineNumber":271,"author":{"gitId":"LeopardMerkava"},"content":"        String trimmedImportance \u003d importance.trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":272,"author":{"gitId":"LeopardMerkava"},"content":"        if (!Person.isValidImportance(trimmedImportance)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":273,"author":{"gitId":"LeopardMerkava"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":274,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":275,"author":{"gitId":"LeopardMerkava"},"content":"        return Boolean.parseBoolean(trimmedImportance);","lastModifiedDate":"2021-10-26"},{"lineNumber":276,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":277,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":278,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"LeopardMerkava"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":281,"author":{"gitId":"LeopardMerkava"},"content":"    public static Set\u003cIndex\u003e parseTaskIndexes(Collection\u003cString\u003e taskIndexes) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(taskIndexes);","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"LeopardMerkava"},"content":"        final Set\u003cIndex\u003e taskIndexList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":284,"author":{"gitId":"LeopardMerkava"},"content":"        for (String taskName : taskIndexes) {","lastModifiedDate":"2021-10-20"},{"lineNumber":285,"author":{"gitId":"LeopardMerkava"},"content":"            taskIndexList.add(parseIndex(taskName));","lastModifiedDate":"2021-10-20"},{"lineNumber":286,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":287,"author":{"gitId":"LeopardMerkava"},"content":"        return taskIndexList;","lastModifiedDate":"2021-10-20"},{"lineNumber":288,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":289,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":290,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":291,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":292,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-05"},{"lineNumber":293,"author":{"gitId":"LeopardMerkava"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-05"},{"lineNumber":294,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":295,"author":{"gitId":"LeopardMerkava"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-05"},{"lineNumber":296,"author":{"gitId":"LeopardMerkava"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-05"},{"lineNumber":297,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"LeopardMerkava":76,"-":124,"eugenecsa":98}},{"path":"src/main/java/seedu/address/logic/parser/ReminderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import seedu.address.logic.commands.ReminderCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":" * Parses input arguments and creates a new {@code RemindCommand} object.","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"public class ReminderCommandParser implements Parser\u003cReminderCommand\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    private static final String VALID_SET_REMINDER_REGEX \u003d \"-s\\\\s.*\";","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    private final Pattern validSetReminder \u003d Pattern.compile(VALID_SET_REMINDER_REGEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     * {@code RemindCommand} and returns a RemindCommand object","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     * for execution.","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    public ReminderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"        Matcher matcherSetReminder \u003d validSetReminder.matcher(trimmedArgs);","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"        if (matcherSetReminder.matches()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"            try {","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"                String daysPriorToTaskDateArg \u003d extractReminderDaysArg(trimmedArgs);","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"                int daysPriorToTaskDate \u003d Integer.parseInt(daysPriorToTaskDateArg);","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"                return new ReminderCommand(daysPriorToTaskDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"        } else if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"            return new ReminderCommand();","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"    private String extractReminderDaysArg(String args) {","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"        String daysPriorToTaskDateArg \u003d args.substring(2);","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"        return daysPriorToTaskDateArg.trim();","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"limzk126":51}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wz27"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"wz27"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"wz27"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"wz27"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"wz27"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"wz27"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"wz27"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"wz27"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"wz27"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"wz27"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"wz27"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"wz27"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"wz27"},"content":"        boolean isReverseOrder \u003d false;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"wz27"},"content":"        if (!trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"wz27"},"content":"            if (trimmedArgs.equals(\"-r\")) {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"wz27"},"content":"                isReverseOrder \u003d true;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"wz27"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"wz27"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"wz27"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"wz27"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"wz27"},"content":"        return new SortCommand(isReverseOrder);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"wz27"},"content":"}","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"wz27":36}},{"path":"src/main/java/seedu/address/logic/parser/UndoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":" * Parses input arguments and creates a new Undo object","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"public class UndoCommandParser {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     * and returns a UndoCommand object for execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    public UndoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_TASK_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"            Set\u003cIndex\u003e taskIndexSet \u003d ParserUtil.parseTaskIndexes(argMultimap.getAllValues(PREFIX_TASK_INDEX));","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"            List\u003cIndex\u003e taskIndex \u003d new ArrayList\u003c\u003e(taskIndexSet);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"            return new UndoCommand(index, taskIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndoCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"LeopardMerkava":1,"eugenecsa":37}},{"path":"src/main/java/seedu/address/logic/parser/ViewTaskListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import seedu.address.logic.commands.ViewTaskListCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":" * Parses input arguments and creates a new {@code ViewTaskListCommand} object.","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"public class ViewTaskListCommandParser implements Parser\u003cViewTaskListCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"    private static final String VALID_INPUT_WITH_FLAGS_REGEX \u003d \"[0-9]\\\\s-f\\\\s[\\\\w\\\\s]+\";","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"    private static final String VALID_INPUT_WITHOUT_FLAGS_REGEX \u003d \"[0-9]+\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    private static final String VALID_VIEW_ALL_REGEX \u003d \"-A\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    private static final String VALID_VIEW_ALL_REGEX_WITH_FLAG \u003d \"-A[\\\\s]*-f\\\\s[\\\\w\\\\s]+\";","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    private final Pattern validPatternWithoutFlags \u003d Pattern.compile(VALID_INPUT_WITHOUT_FLAGS_REGEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    private final Pattern validPatternWithFlags \u003d Pattern.compile(VALID_INPUT_WITH_FLAGS_REGEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    private final Pattern validViewAllWithoutFind \u003d Pattern.compile(VALID_VIEW_ALL_REGEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    private final Pattern validViewAllWithFind \u003d Pattern.compile(VALID_VIEW_ALL_REGEX_WITH_FLAG);","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    private Matcher matcherWithoutFlags;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"    private Matcher matcherWithFlags;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"    private Matcher matcherViewAllWithoutFind;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    private Matcher matcherViewAllWithFind;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"     * {@code ViewTaskListCommand} and returns a ViewTaskListCommand object","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"     * for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    public ViewTaskListCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"        setMatchers(trimmedArgs);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"        if (matcherViewAllWithoutFind.matches()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"            return new ViewTaskListCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"        } else if (matcherViewAllWithFind.matches()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"            return new ViewTaskListCommand(extractKeywords(trimmedArgs));","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"                if (matcherWithoutFlags.matches()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"                    Index index \u003d ParserUtil.parseIndex(trimmedArgs);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"                    return new ViewTaskListCommand(index);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"                if (matcherWithFlags.matches()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"                    String[] flagAndKeywords \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"                    Index index \u003d ParserUtil.parseIndex(flagAndKeywords[0]);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"                    List\u003cString\u003e keywords \u003d Arrays.asList(flagAndKeywords[2].split(\" \"));","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"                    return new ViewTaskListCommand(index, keywords);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"                } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"                    throw new ParseException(","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewTaskListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewTaskListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"    private void setMatchers(String args) {","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"        matcherWithoutFlags \u003d validPatternWithoutFlags.matcher(args);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"        matcherWithFlags \u003d validPatternWithFlags.matcher(args);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"        matcherViewAllWithoutFind \u003d validViewAllWithoutFind.matcher(args);","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"        matcherViewAllWithFind \u003d validViewAllWithFind.matcher(args);","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"    private List\u003cString\u003e extractKeywords(String args) {","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"        int idx \u003d args.indexOf(\"-f\");","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"        String keywords \u003d args.substring(idx + 2).trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"        List\u003cString\u003e keywordList \u003d new ArrayList\u003cString\u003e(Arrays.asList(keywords.split(\" \")));","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"        keywordList.removeIf(s -\u003e s.equals(\"\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"        return keywordList;","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"limzk126":66,"kflim":18}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.TaskListManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns the AddressBook","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns an unmodifiable view of the task list to be displayed on the GUI.","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"limzk126"},"content":"    ObservableList\u003cTask\u003e getDisplayTaskList();","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"LeopardMerkava"},"content":"     * Displays {@code person}\u0027s task list on the GUI.","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"    void displayPersonTaskList(Person person);","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"kflim"},"content":"    void displayFilteredPersonTaskList(Person person, Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"wz27"},"content":"    void updateSortedPersonList(boolean isReverseOrder);","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"wz27"},"content":"    void displayFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"limzk126"},"content":"    /** Gets important statistics information relating to tasks. */","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"limzk126"},"content":"    ObservableList\u003cPieChart.Data\u003e getStatistics();","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"limzk126"},"content":"    TaskListManager getTaskListManager();","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"LeopardMerkava"},"content":"     * Get the next input command in the cache.","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"LeopardMerkava"},"content":"    String getAfter();","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"LeopardMerkava"},"content":"     * Get the previous input command in the cache.","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"LeopardMerkava"},"content":"    String getBefore();","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"LeopardMerkava"},"content":"     * Add a command to cache","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"LeopardMerkava"},"content":"    void addCommand(String command);","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"limzk126"},"content":"    ObservableList\u003cPerson\u003e getObservablePersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"limzk126"},"content":"     * Updates the {@code observablePersonList} using the newly updated","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"limzk126"},"content":"     * {@code filteredTasks}.","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"limzk126"},"content":"    void updateObservablePersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"limzk126"},"content":"     * Sets the predicate used to filter {@code observablePersonList}.","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"limzk126"},"content":"    void setViewAllTasksFindPred(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"LeopardMerkava":30,"limzk126":27,"kflim":2,"-":84,"wz27":3}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"wz27"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"wz27"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.TaskListManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"    private final FilteredList\u003cPerson\u003e onlyFilteredPersons;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"wz27"},"content":"    private final SortedList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"    /** ObservableList used in viewing all task list. */","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"    private ObservableList\u003cPerson\u003e observablePersons;","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"    private final UserCommandCache userCommandCache;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    private final TaskListManager taskListManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"    private Predicate\u003cTask\u003e viewAllTasksFindPred \u003d s -\u003e true;","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"        this.taskListManager \u003d new TaskListManager();","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"        taskListManager.initialiseArchive(this.getAddressBook().getPersonList());","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"        this.userCommandCache \u003d UserCommandCache.getInstance();","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"        onlyFilteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"        filteredPersons \u003d new SortedList\u003c\u003e(onlyFilteredPersons);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"        observablePersons \u003d FXCollections.observableArrayList(addressBook.getPersonList());","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"limzk126"},"content":"        taskListManager.deleteEntry(target.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"limzk126"},"content":"        taskListManager.updateStatistics();","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"limzk126"},"content":"        updateObservablePersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"limzk126"},"content":"        taskListManager.createNewEntry(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"limzk126"},"content":"        taskListManager.updateStatistics();","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"limzk126"},"content":"        updateObservablePersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"limzk126"},"content":"        taskListManager.updateEntry(target, editedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"limzk126"},"content":"        taskListManager.updateStatistics();","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"limzk126"},"content":"        updateObservablePersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":162,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"kflim"},"content":"        onlyFilteredPersons.setPredicate(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"limzk126"},"content":"    public ObservableList\u003cPerson\u003e getObservablePersonList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"limzk126"},"content":"        return observablePersons;","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"limzk126"},"content":"    public void setViewAllTasksFindPred(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"limzk126"},"content":"        this.viewAllTasksFindPred \u003d predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"limzk126"},"content":"        updateObservablePersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"limzk126"},"content":"    public void updateObservablePersonList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"limzk126"},"content":"        List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"limzk126"},"content":"        for (Person person : addressBook.getPersonList()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"limzk126"},"content":"            personList.add(person.makeClone());","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"limzk126"},"content":"        for (Person person : personList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"limzk126"},"content":"            person.filterTasks(viewAllTasksFindPred);","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"limzk126"},"content":"        observablePersons \u003d FXCollections.observableArrayList(personList);","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"limzk126"},"content":"        observablePersons \u003d observablePersons.filtered(person -\u003e !person.getTasks().isEmpty());","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"wz27"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"wz27"},"content":"    public void updateSortedPersonList(boolean isReverseOrder) {","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"wz27"},"content":"        if (isReverseOrder) {","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"wz27"},"content":"            filteredPersons.setComparator(Comparator.reverseOrder());","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"wz27"},"content":"        } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"wz27"},"content":"            filteredPersons.setComparator(Comparator.naturalOrder());","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":215,"author":{"gitId":"limzk126"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"limzk126"},"content":"                \u0026\u0026 taskListManager.equals(other.taskListManager);","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"limzk126"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d display task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":220,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":221,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":222,"author":{"gitId":"limzk126"},"content":"    public TaskListManager getTaskListManager() {","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"limzk126"},"content":"        return taskListManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":226,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":227,"author":{"gitId":"limzk126"},"content":"    public ObservableList\u003cTask\u003e getDisplayTaskList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"limzk126"},"content":"        return taskListManager.getFilteredTasks();","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":230,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":231,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":232,"author":{"gitId":"limzk126"},"content":"    public void displayPersonTaskList(Person person) {","lastModifiedDate":"2021-10-19"},{"lineNumber":233,"author":{"gitId":"kflim"},"content":"        taskListManager.setToDisplayTaskList(person.getName(), false);","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"kflim"},"content":"    public void displayFilteredPersonTaskList(Person person, Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"kflim"},"content":"        taskListManager.setFilteredTasksPredicate(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"kflim"},"content":"        taskListManager.setToDisplayTaskList(person.getName(), true);","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"wz27"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":243,"author":{"gitId":"wz27"},"content":"    public void displayFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":244,"author":{"gitId":"wz27"},"content":"        taskListManager.setFilteredTasksPredicate(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":245,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"LeopardMerkava"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d cache operation \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"LeopardMerkava"},"content":"    /** Get the next input command in the cache */","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"LeopardMerkava"},"content":"    public String getAfter() {","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"LeopardMerkava"},"content":"        return userCommandCache.getAfter();","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"LeopardMerkava"},"content":"    /** Get the previous input command in the cache */","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"LeopardMerkava"},"content":"    public String getBefore() {","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"LeopardMerkava"},"content":"        return userCommandCache.getBefore();","lastModifiedDate":"2021-10-25"},{"lineNumber":256,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"LeopardMerkava"},"content":"    /** Add a command to the cache */","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"LeopardMerkava"},"content":"    public void addCommand(String command) {","lastModifiedDate":"2021-10-25"},{"lineNumber":260,"author":{"gitId":"LeopardMerkava"},"content":"        userCommandCache.addCommand(command);","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":262,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":263,"author":{"gitId":"limzk126"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d statistics Assessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":265,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":266,"author":{"gitId":"limzk126"},"content":"    public ObservableList\u003cPieChart.Data\u003e getStatistics() {","lastModifiedDate":"2021-10-25"},{"lineNumber":267,"author":{"gitId":"limzk126"},"content":"        return taskListManager.getStatList();","lastModifiedDate":"2021-10-25"},{"lineNumber":268,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LeopardMerkava":15,"limzk126":76,"kflim":11,"-":150,"wz27":17}},{"path":"src/main/java/seedu/address/model/UserCommandCache.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":" * Stores the current command cache.","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":" * Uses the Singleton design framework since there should only be 1 cache running at all time.","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"public class UserCommandCache {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"    private static UserCommandCache instance;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"    private List\u003cString\u003e commandCache;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"    private int index;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"    /** Private constructor of the cache */","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"    private UserCommandCache() {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"        this.commandCache \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"        index \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"    /** Method to get the instance. Creates one if it does not exist */","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    public static UserCommandCache getInstance() {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"            instance \u003d new UserCommandCache();","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"        return instance;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"     * Add a command to current cache. Reset index to the end of cache.","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"     * Deletes the first half if the size of cache reaches 50;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"     * @param command Command to add to cache","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"    public void addCommand(String command) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"        // Check input not null","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(command);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"        // Check cache is not null;","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(commandCache);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"        if (commandCache.size() \u003e\u003d 50) {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"            List\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"            for (int i \u003d 25; i \u003c commandCache.size(); i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"                temp.add(commandCache.get(i));","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"            commandCache \u003d temp;","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"        commandCache.add(command);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"LeopardMerkava"},"content":"        index \u003d commandCache.size() - 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"     * Get the \"previous\" command entered with respect to current pointer. If there is no last command, returns","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"     * the current command instead.","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"     * @return Last entered command String","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"    public String getBefore() {","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"        if (commandCache.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"            return \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"        String lastCommand \u003d commandCache.get(index);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"        index \u003d Math.max(0, index - 1);","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"        return lastCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"     * Get the \"next\" command entered with respect to current pointer. If there is no next command, returns","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"     * empty string instead.","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"     * @return Last entered command String","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"    public String getAfter() {","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"        if (commandCache.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"            return \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"LeopardMerkava"},"content":"        index +\u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"        String lastCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"        if (index \u003d\u003d commandCache.size()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"            lastCommand \u003d \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"LeopardMerkava"},"content":"            lastCommand \u003d commandCache.get(index);","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"        index \u003d Math.min(commandCache.size() - 1, index);","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"        return lastCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"LeopardMerkava":89}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"        sb.append(\"Gui Settings : \")","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"                .append(guiSettings)","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"LeopardMerkava"},"content":"                .append(\"\\nLocal data file location : \")","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"                .append(addressBookFilePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LeopardMerkava":4,"-":85}},{"path":"src/main/java/seedu/address/model/person/AddressContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"public class AddressContainsKeywordsPredicate extends AttributeContainsKeywordsPredicate {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"    public AddressContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"        super(keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"        return addressContainsWords(person, keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"                || (other instanceof AddressContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"                \u0026\u0026 keywords.equals(((AddressContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"     * Checks if a person\u0027s address contains the specified keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"     * @param person A {@code Person} whose address might match the keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"     * @param keywords A {@code List\u003cString\u003e} that might contain words that match the address of the person.","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"     * @throws java.lang.NullPointerException if person or keywords is null","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"    public boolean addressContainsWords(Person person, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        String preppedName \u003d person.getAddress().value.toLowerCase();","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"        return StringUtil.containsWordsInOrderIgnoreCase(preppedName, keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kflim":41}},{"path":"src/main/java/seedu/address/model/person/AttributeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"public abstract class AttributeContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"    protected final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"    protected AttributeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"        return keywords.stream().allMatch(String::isEmpty);","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kflim":17}},{"path":"src/main/java/seedu/address/model/person/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":" * Represents a Person\u0027s description / remark in the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"public class Description {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"            \"Description should be less than 500 characters long\";","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"    public final String value;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"     * Public constructor to create remark","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"    public Description(String desc) {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(desc);","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"        value \u003d desc;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"        return value;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"                || (other instanceof Description","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"                \u0026\u0026 value.equals(((Description) other).value));","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns true if a given string is a valid Description.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"        return !(test.length() \u003e 500);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"LeopardMerkava":46}},{"path":"src/main/java/seedu/address/model/person/DescriptionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":" * Tests that a {@code Person}\u0027s {@code Description} matches any of the keywords given.","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"public class DescriptionContainsKeywordsPredicate extends AttributeContainsKeywordsPredicate {","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    public DescriptionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"        super(keywords);","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"        return descriptionContainsWords(person, keywords);","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"                || (other instanceof DescriptionContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 keywords.equals(((DescriptionContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     * Checks if a person\u0027s name contains the specified keywords.","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     * @param person A {@code Person} whose description might match the keywords.","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"     * @param keywords A {@code List\u003cString\u003e} that might contain words that match the description of the person.","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"     * @throws java.lang.NullPointerException if person or keywords is null","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    public boolean descriptionContainsWords(Person person, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"        String preppedDesc \u003d person.getDescription().toString().toLowerCase();","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"        return StringUtil.containsWordsInOrderIgnoreCase(preppedDesc, keywords);","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"eugenecsa":44}},{"path":"src/main/java/seedu/address/model/person/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"public class EmailContainsKeywordsPredicate extends AttributeContainsKeywordsPredicate {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"        super(keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"        return emailContainsWords(person, keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"                || (other instanceof EmailContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"                \u0026\u0026 keywords.equals(((EmailContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"     * Checks if a person\u0027s email contains the specified keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"     * @param person A {@code Person} whose email might match the keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"     * @param keywords A {@code List\u003cString\u003e} that might contain words that match the email of the person.","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"     * @throws java.lang.NullPointerException if person or keywords is null","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"    public boolean emailContainsWords(Person person, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        String preppedName \u003d person.getEmail().value.toLowerCase();","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"        return StringUtil.containsWordsInOrderIgnoreCase(preppedName, keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kflim":41}},{"path":"src/main/java/seedu/address/model/person/IsImportantPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"public class IsImportantPredicate extends AttributeContainsKeywordsPredicate {","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    public IsImportantPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"        super(keywords);","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"        return isImportantPerson(person, keywords);","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"                || (other instanceof IsImportantPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 keywords.equals(((IsImportantPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"     * Checks if a person\u0027s isImportant is equal to keywords.","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     * @param person A {@code Person} whose isImportant might match the keywords.","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     * @param keywords A {@code List\u003cString\u003e} that might contain words that match the isImportant of the person.","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     * @throws java.lang.NullPointerException if person or keywords is null","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    public boolean isImportantPerson(Person person, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"        String preppedImportant \u003d String.valueOf(person.isImportant()).toLowerCase();","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"        return StringUtil.containsWordsInOrderIgnoreCase(preppedImportant, keywords);","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"eugenecsa":41}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"public class NameContainsKeywordsPredicate extends AttributeContainsKeywordsPredicate {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"        super(keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"        return nameContainsWords(person, keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"     * Checks if a person\u0027s name contains the specified keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"     * @param person A {@code Person} whose name might match the keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"     * @param keywords A {@code List\u003cString\u003e} that might contain words that match the name of the person.","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"     * @throws java.lang.NullPointerException if person or keywords is null","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"    public boolean nameContainsWords(Person person, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"        String preppedName \u003d person.getName().fullName.toLowerCase();","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"        return StringUtil.containsWordsInOrderIgnoreCase(preppedName, keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kflim":19,"-":25}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"wz27"},"content":"public class Person implements Comparable\u003cPerson\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"    private final Description description;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"    private final Boolean isImportant;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"    // TaskList","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"    private final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, List\u003cTask\u003e tasks,","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"                  Description description, boolean isImportant) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"        requireAllNonNull(name, phone, email, address, tags, tasks, description, isImportant);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"        this.isImportant \u003d isImportant;","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean isImportant() {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"        return isImportant;","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns an immutable task list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"LeopardMerkava"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"        return Collections.unmodifiableList(tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"     * Returns the number of tasks that are overdue.","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"    public int getOverdueTasks() {","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"            if (task.getIsOverdue()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"                count++;","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"        return count;","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"     * Returns the number of tasks that are due soon.","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"    public int getSoonDueTasks() {","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"            if (task.getIsDueSoon()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"                count++;","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"        return count;","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"LeopardMerkava"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"LeopardMerkava"},"content":"        return description;","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"     * Returns true if both persons have the same name and phone number.","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"limzk126"},"content":"     * Removes tasks from the task list that returns false upon","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"limzk126"},"content":"     * application {@code predicates}\u0027s test method.","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"limzk126"},"content":"    public void filterTasks(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"limzk126"},"content":"        List\u003cTask\u003e tasksToRemove \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"limzk126"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"limzk126"},"content":"            if (!predicate.test(task)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"limzk126"},"content":"                tasksToRemove.add(task);","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"limzk126"},"content":"        tasks.removeAll(tasksToRemove);","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"LeopardMerkava"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"LeopardMerkava"},"content":"    public static boolean isValidImportance(String input) {","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"LeopardMerkava"},"content":"        String lowerCaseInput \u003d input.toLowerCase();","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"LeopardMerkava"},"content":"        return lowerCaseInput.equals(\"true\") || lowerCaseInput.equals(\"false\");","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":174,"author":{"gitId":"LeopardMerkava"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"LeopardMerkava"},"content":"                \u0026\u0026 otherPerson.getDescription().equals(getDescription())","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"LeopardMerkava"},"content":"                \u0026\u0026 otherPerson.isImportant() \u003d\u003d isImportant();","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"LeopardMerkava"},"content":"        return Objects.hash(name, phone, email, address, tags, tasks, description, isImportant);","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":203,"author":{"gitId":"wz27"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"wz27"},"content":"    public int compareTo(Person other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":205,"author":{"gitId":"wz27"},"content":"        return this.name.toString().compareTo(other.name.toString());","lastModifiedDate":"2021-10-06"},{"lineNumber":206,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":207,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"limzk126"},"content":"     * Creates a new {@code Person} object with the same attributes.","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"limzk126"},"content":"    public Person makeClone() {","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"limzk126"},"content":"        return new Person(name, phone, email, address, tags, tasks, description, isImportant);","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LeopardMerkava":39,"limzk126":22,"-":119,"eugenecsa":29,"wz27":5}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"public class PhoneContainsKeywordsPredicate extends AttributeContainsKeywordsPredicate {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"        super(keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"        return phoneContainsWords(person, keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"                \u0026\u0026 keywords.equals(((PhoneContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"     * Checks if a person\u0027s phone contains the specified keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"     * @param person A {@code Person} whose phone might match the keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"     * @param keywords A {@code List\u003cString\u003e} that might contain words that match the phone of the person.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"     * @throws java.lang.NullPointerException if person or keywords is null","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"    public boolean phoneContainsWords(Person person, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"        String preppedPhone \u003d person.getPhone().value.toLowerCase();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        return StringUtil.containsWordsInOrderIgnoreCase(preppedPhone, keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kflim":40}},{"path":"src/main/java/seedu/address/model/person/TagsContainKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"public class TagsContainKeywordsPredicate extends AttributeContainsKeywordsPredicate {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"    public TagsContainKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"        super(keywords);","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"        return tagsContainWords(person, keywords);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"                || (other instanceof TagsContainKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"                \u0026\u0026 keywords.equals(((TagsContainKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"     * Checks if a person\u0027s tags contains the specified keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"     * @param person A {@code Person} whose tags might match the keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"     * @param keywords A {@code List\u003cString\u003e} that might contain words that match the tags of the person.","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"     * @throws java.lang.NullPointerException if person or keywords is null","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"    public boolean tagsContainWords(Person person, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"        checkArgument(!keywords.stream().allMatch(String::isEmpty));","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"        Set\u003cTag\u003e tags \u003d person.getTags();","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"        for (String keyword: keywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"            if (!tagsMatchKeyword(tags, keyword)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"                return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"     * Checks if a keyword matches any tag in a set of tags.","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"     * @param tags A {@code Set\u003cTag\u003e} that might contain a tag which has a name that matches the keyword.","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"     * @param keyword A {@code String} that might match any tag in the tags given.","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"    public boolean tagsMatchKeyword(Set\u003cTag\u003e tags, String keyword) {","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e lowercaseTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"            lowercaseTags.add(tag.tagName.toLowerCase());","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"        return lowercaseTags.stream().anyMatch(s -\u003e s.startsWith(keyword.toLowerCase()));","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kflim":63}},{"path":"src/main/java/seedu/address/model/person/TasksContainKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"public class TasksContainKeywordsPredicate extends AttributeContainsKeywordsPredicate {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"    public TasksContainKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"        super(keywords);","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"        return tasksContainWords(person, keywords);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"                || (other instanceof TasksContainKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"                \u0026\u0026 keywords.equals(((TasksContainKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"     * Checks if a person\u0027s tasks contains the specified keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"     * @param person A {@code Person} whose tasks might match the keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"     * @param keywords A {@code List\u003cString\u003e} that might contain words that match the tasks of the person.","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"     * @throws java.lang.NullPointerException if person or keywords is null","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"    public boolean tasksContainWords(Person person, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"        checkArgument(!keywords.stream().allMatch(String::isEmpty));","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"        return tasksMatchKeyword(person.getTasks(), keywords);","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"     * Checks if a keyword matches any tag in a set of tags.","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"     * @param tasks A {@code List\u003cTask\u003e} that might contain a tasks which has a name that matches the keyword.","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"     * @param keywords A {@code List\u003cString\u003e} that might match any task in the tasks given.","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"    public boolean tasksMatchKeyword(List\u003cTask\u003e tasks, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e preppedTaskNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"            preppedTaskNames.add(task.getTaskName().taskName.toLowerCase());","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"        return preppedTaskNames.stream().anyMatch(s -\u003e StringUtil.containsWordsInOrderIgnoreCase(s, keywords));","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kflim":56,"eugenecsa":1}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import javafx.beans.property.BooleanProperty;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import javafx.beans.property.SimpleBooleanProperty;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import javafx.util.Callback;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"            \"Task should contain at least the task name.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    /** Days prior to a task\u0027s date to remind user that its due soon. */","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    private static int daysPriorToTaskDate \u003d 3;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    private final TaskName taskName;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"    private final TaskDate date;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    private final TaskTime time;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"    private final Venue venue;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    private BooleanProperty isDone;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    private BooleanProperty isOverdue;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    private BooleanProperty isDueSoon;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"     * Constructor for task. Creates a new task with the given a String name.","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    public Task(TaskName taskName, TaskDate date, TaskTime time, Venue venue) {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(taskName);","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"        this.isDone \u003d new SimpleBooleanProperty(false);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"        this.isOverdue \u003d new SimpleBooleanProperty();","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"        this.isDueSoon \u003d new SimpleBooleanProperty();","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"        updateDueDate();","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"     * Creates a \"dummy\" {@code Task} for viewing all tasks.","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"        requireNonNull(taskName);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"        this.taskName \u003d new TaskName(taskName);","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"        this.date \u003d new TaskDate(\"2021-12-12\");","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"        this.time \u003d new TaskTime(\"23:59\");","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"        this.venue \u003d new Venue(\"dummy\");","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"     * {@code extractor} used for listView to detect changes in","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"     * {@code isOverdue} and {@code isDueSoon} variables of {@code Task}s.","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"    public static Callback\u003cTask, Observable[]\u003e extractor() {","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"        return (Task t) -\u003e new Observable[]{t.isOverdue, t.isDueSoon};","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"    public static void setDaysPriorToTaskDate(int days) {","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"        daysPriorToTaskDate \u003d days;","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"    public static int getDaysPriorToTaskDate() {","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"        return daysPriorToTaskDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"    public TaskName getTaskName() {","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"        return taskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"    public TaskDate getDate() {","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"        return date;","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"    public TaskTime getTime() {","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"        return time;","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"    public Venue getVenue() {","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"        return venue;","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"        return isDone.getValue();","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"    public void setDone() {","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"        isDone.setValue(true);","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"    public void setNotDone() {","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"limzk126"},"content":"        isDone.setValue(false);","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"    public boolean getIsOverdue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"        return isOverdue.getValue();","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"    public boolean getIsDueSoon() {","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"        return isDueSoon.getValue();","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"     * Updates if the task is overdue or due soon.","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"    public void updateDueDate() {","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"limzk126"},"content":"        if (!isDone.getValue()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"            LocalDate taskDate \u003d date \u003d\u003d null ? LocalDate.MAX : date.taskDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"            LocalTime taskTime \u003d time \u003d\u003d null ? LocalTime.MIDNIGHT : time.taskTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"            LocalDateTime taskDateTime \u003d LocalDateTime.of(taskDate, taskTime);","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"            if (taskDateTime.isBefore(LocalDateTime.now())) { // Overdue","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"limzk126"},"content":"                isOverdue.setValue(true);","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"limzk126"},"content":"                isDueSoon.setValue(false);","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"limzk126"},"content":"            } else if (taskDateTime.isBefore(LocalDateTime.now().plusDays(daysPriorToTaskDate))) { // Due soon","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"limzk126"},"content":"                isOverdue.setValue(false);","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"limzk126"},"content":"                isDueSoon.setValue(true);","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"eugenecsa"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"limzk126"},"content":"                isDueSoon.setValue(false);","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"limzk126"},"content":"                isOverdue.setValue(false);","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"limzk126"},"content":"            isDueSoon.setValue(false);","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"limzk126"},"content":"            isOverdue.setValue(false);","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"eugenecsa"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"eugenecsa"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"eugenecsa"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"eugenecsa"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"eugenecsa"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"eugenecsa"},"content":"        boolean sameDate \u003d otherTask.getDate() \u003d\u003d null","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"eugenecsa"},"content":"                ? date \u003d\u003d null","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"eugenecsa"},"content":"                : otherTask.getDate().equals(date);","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"eugenecsa"},"content":"        boolean sameTime \u003d otherTask.getTime() \u003d\u003d null","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"eugenecsa"},"content":"                ? time \u003d\u003d null","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"eugenecsa"},"content":"                : otherTask.getTime().equals(time);","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"eugenecsa"},"content":"        boolean sameVenue \u003d otherTask.getVenue() \u003d\u003d null","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"eugenecsa"},"content":"                ? venue \u003d\u003d null","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"eugenecsa"},"content":"                : otherTask.getVenue().equals(venue);","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"eugenecsa"},"content":"        return otherTask.getTaskName().equals(taskName)","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"limzk126"},"content":"                \u0026\u0026 otherTask.isDone.getValue() \u003d\u003d isDone.getValue()","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 sameDate","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 sameTime","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 sameVenue;","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":163,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":164,"author":{"gitId":"LeopardMerkava"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"eugenecsa"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"eugenecsa"},"content":"        builder.append(getTaskName())","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"eugenecsa"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"eugenecsa"},"content":"                .append(date \u003d\u003d null ? \"\" : date)","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"eugenecsa"},"content":"                .append(\"; Time: \")","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"eugenecsa"},"content":"                .append(time \u003d\u003d null ? \"\" : time)","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"eugenecsa"},"content":"                .append(\"; Venue: \")","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"eugenecsa"},"content":"                .append(venue \u003d\u003d null ? \"\" : venue);","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"eugenecsa"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":176,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"eugenecsa"},"content":"     * Overdue Task \u003e Due Soon Task \u003e Not done Task \u003e Done Task","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"eugenecsa"},"content":"     * Tasks with the same level of priority are then compared with date, time, name, venue, until tiebreaker","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"eugenecsa"},"content":"     * is found. (If no tiebreaker, tasks are equal, should have been caught by equals check).","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"eugenecsa"},"content":"    public int compareTo(Task otherTask) {","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"eugenecsa"},"content":"        if (otherTask.equals(this)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"eugenecsa"},"content":"            return 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"eugenecsa"},"content":"        int thisPriority \u003d priorityLevel(this);","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"eugenecsa"},"content":"        int otherPriority \u003d priorityLevel(otherTask);","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"eugenecsa"},"content":"        if (thisPriority \u003e otherPriority) {","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"eugenecsa"},"content":"            return 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"eugenecsa"},"content":"        } else if (thisPriority \u003d\u003d otherPriority) {","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"eugenecsa"},"content":"            return this.date.taskDate.compareTo(otherTask.date.taskDate) \u003d\u003d 0","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"eugenecsa"},"content":"                    ? this.time.taskTime.compareTo(otherTask.time.taskTime) \u003d\u003d 0","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"eugenecsa"},"content":"                            ? this.venue.venue.compareTo(otherTask.venue.venue)","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"eugenecsa"},"content":"                            : this.time.taskTime.compareTo(otherTask.time.taskTime)","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"eugenecsa"},"content":"                    : this.date.taskDate.compareTo(otherTask.date.taskDate);","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"eugenecsa"},"content":"            return -1;","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"eugenecsa"},"content":"    private int priorityLevel(Task task) {","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"eugenecsa"},"content":"        if (task.isOverdue.getValue()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"eugenecsa"},"content":"            return 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"eugenecsa"},"content":"        } else if (task.isDueSoon.getValue()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"eugenecsa"},"content":"            return 2;","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"eugenecsa"},"content":"        } else if (!task.isDone.getValue()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"eugenecsa"},"content":"            return 3;","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"eugenecsa"},"content":"            return 4;","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LeopardMerkava":21,"limzk126":62,"eugenecsa":132}},{"path":"src/main/java/seedu/address/model/task/TaskDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":" * Represents a Task\u0027s date in the address book.","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTaskDate(String)}","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"public class TaskDate {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"            \"Task date should be of format YYYY-MM-DD\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    public final LocalDate taskDate;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     * Constructs a {@code TaskDate}.","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"     * @param taskDate A valid date.","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    public TaskDate(String taskDate) {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(taskDate);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"        checkArgument(isValidTaskDate(taskDate));","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"        this.taskDate \u003d LocalDate.parse(taskDate);","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    public static boolean isValidTaskDate(String test) {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"            return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"        return taskDate.format(DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"                || (other instanceof TaskDate // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 taskDate.equals(((TaskDate) other).taskDate)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"        return taskDate.hashCode();","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"eugenecsa":60}},{"path":"src/main/java/seedu/address/model/task/TaskListManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":" * Serves as a main database for every {@code Person}\u0027s taskList.","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":" * Manages which {@code Person}\u0027s taskList to display on the GUI.","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"public class TaskListManager {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(TaskListManager.class);","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    private static final String PIE_CHART_LABEL_FORMAT \u003d \"%s\\n[%.0f]\";","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    private String[] pieChartLabelNames \u003d {\"Done\", \"In Progress\", \"Overdue\", \"Due soon\"};","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"    /** Stores every Person\u0027s taskList reference. */","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    private final HashMap\u003cString, List\u003cTask\u003e\u003e taskListArchive;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    /** Name of person whose taskList is chosen to be displayed. */","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"    private Name nameOfChosenPerson;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"    /** Flag to indicate if nameOfChosenPerson is initialised */","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"    private boolean isPersonSelected;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    private ObservableList\u003cTask\u003e observableTaskList;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"    /** The taskList to be displayed on the GUI. */","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"    private FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"    /** Task\u0027s statistics that will be displayed */","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"    private ObservableList\u003cPieChart.Data\u003e statList;","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"    /** Constructor for TaskListManager */","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"    public TaskListManager() {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"        taskListArchive \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"        isPersonSelected \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"        observableTaskList \u003d FXCollections.observableArrayList(Task.extractor());","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(observableTaskList);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"        statList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"            statList.add(new PieChart.Data(","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"                    String.format(PIE_CHART_LABEL_FORMAT, pieChartLabelNames[i], 0.0), 0));","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"        updateStatistics();","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"     * Sets up the archive with all stored {@code Person}\u0027s taskList upon application startup.","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"    public void initialiseArchive(ObservableList\u003cPerson\u003e observablePersonList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"        logger.fine(\"taskListArchive is loaded with storage memory.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"        requireNonNull(observablePersonList);","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"        for (Person person : observablePersonList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"            createNewEntry(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"            ObservableList\u003cTask\u003e tmp \u003d FXCollections.observableArrayList(person.getTasks());","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"     * Replaces the archive entry of {@code target} to that of {@code editedPerson}.","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"     * @param target The {@code Person} whose entry is to be replaced.","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"     * @param editedPerson The {@code Person} who is replacing the entry with its own.","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"    public void updateEntry(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"        deleteEntry(target.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"        updateEntryTaskList(editedPerson.getName(), editedPerson.getTasks());","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"     * Updates the task list of the entry corresponding to {@code Name} to that of","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"     * {@code taskList}.","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"     * @param name The {@code Name} of the {@code Person} whose entry you want to update.","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"limzk126"},"content":"     * @param taskList The {@code List\u003cTask\u003e} that you want to update the entry\u0027s task list to.","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"limzk126"},"content":"    public void updateEntryTaskList(Name name, List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"limzk126"},"content":"        requireAllNonNull(name, taskList);","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"limzk126"},"content":"        taskListArchive.put(name.toString(), taskList);","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"limzk126"},"content":"        if (name.equals(nameOfChosenPerson)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"kflim"},"content":"            setToDisplayTaskList(name, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"     * Removes the entry corresponding to {@code name} from the {@code taskListArchive}.","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"     * @param name The {@code Name} of the {@code Person} whose entry you want to delete.","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"limzk126"},"content":"    public void deleteEntry(Name name) {","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"limzk126"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"limzk126"},"content":"        taskListArchive.remove(name.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"limzk126"},"content":"     * Sets the task list corresponding to {@code name} to be displayed on the GUI.","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"limzk126"},"content":"     * @param name The {@code Name} of the {@code Person} whose task list you want to","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"limzk126"},"content":"     *             display on the GUI.","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"kflim"},"content":"    public void setToDisplayTaskList(Name name, boolean isSet) {","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"limzk126"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"limzk126"},"content":"        String logMessage \u003d name.toString() + \": task list set to be displayed.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"limzk126"},"content":"        logger.info(logMessage);","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"limzk126"},"content":"        nameOfChosenPerson \u003d name;","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"limzk126"},"content":"        assert(taskListArchive.containsKey(name.toString())) : \"taskListArchive probably\"","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"limzk126"},"content":"                + \"not initialised properly.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"limzk126"},"content":"        List\u003cTask\u003e taskList \u003d taskListArchive.get(name.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"limzk126"},"content":"        assert(taskList !\u003d null);","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"limzk126"},"content":"        observableTaskList.setAll(taskList);","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"kflim"},"content":"        if (!isSet) {","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"limzk126"},"content":"            filteredTasks.setPredicate(task -\u003e true);","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"limzk126"},"content":"     * Creates a new entry in the taskListStorage for {@code person}.","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"limzk126"},"content":"     * @param person The {@code Person} whom you want to create an entry for.","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"limzk126"},"content":"    public void createNewEntry(Person person) {","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"limzk126"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"limzk126"},"content":"        updateEntryTaskList(person.getName(), person.getTasks());","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"limzk126"},"content":"     * Returns an unmodifiable {@code ObservableList} for","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"limzk126"},"content":"     * defensive programming.","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"limzk126"},"content":"    public ObservableList\u003cTask\u003e getFilteredTasks() {","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"limzk126"},"content":"        assert(filteredTasks !\u003d null);","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"limzk126"},"content":"        return filteredTasks;","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"limzk126"},"content":"     * Returns an unmodifiable {@code ObservableList} for","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"limzk126"},"content":"     * defensive programming.","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"limzk126"},"content":"    public ObservableList\u003cPieChart.Data\u003e getStatList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"limzk126"},"content":"        return FXCollections.unmodifiableObservableList(statList);","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"limzk126"},"content":"     * Sets new predicate for the {@code FilteredList} that is to be displayed","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"limzk126"},"content":"     * on the GUI.","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"limzk126"},"content":"    public void setFilteredTasksPredicate(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"limzk126"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"limzk126"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"limzk126"},"content":"     * Updates {@code statList}\u0027s values.","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"limzk126"},"content":"    public void updateStatistics() {","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"limzk126"},"content":"        double[] statValueList \u003d calculateStatistics();","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"limzk126"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"limzk126"},"content":"            statList.get(i).setName(","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"limzk126"},"content":"                    String.format(PIE_CHART_LABEL_FORMAT, pieChartLabelNames[i], statValueList[i]));","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"limzk126"},"content":"            statList.get(i).setPieValue(statValueList[i]);","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"limzk126"},"content":"     * Iterates through all {@Task}s and updates their status.","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"limzk126"},"content":"    public void updateAllTaskStatus() {","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"limzk126"},"content":"        taskListArchive.values().stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"limzk126"},"content":"                .flatMap(Collection::stream)","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"limzk126"},"content":"                .forEach(Task::updateDueDate);","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"limzk126"},"content":"     * Calculates the following statistics:","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"limzk126"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"limzk126"},"content":"     * 1. {@code Task}s that are done","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"limzk126"},"content":"     * 2. {@code Task}s that are not done yet (In progress)","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"limzk126"},"content":"     * 3. {@code Task}s that are over due","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"limzk126"},"content":"     * 4. {@code Task}s that are due soon","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"limzk126"},"content":"    public double[] calculateStatistics() {","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"limzk126"},"content":"        double totalTask \u003d 0.0;","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"limzk126"},"content":"        double taskDone \u003d 0.0;","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"limzk126"},"content":"        double taskNotDone \u003d 0.0;","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"limzk126"},"content":"        double taskOverdue \u003d 0.0;","lastModifiedDate":"2021-10-25"},{"lineNumber":219,"author":{"gitId":"limzk126"},"content":"        double taskDueSoon \u003d 0.0;","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"limzk126"},"content":"        for (List\u003cTask\u003e taskList : taskListArchive.values()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":222,"author":{"gitId":"limzk126"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"limzk126"},"content":"                if (task.getIsDueSoon()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"limzk126"},"content":"                    taskDueSoon++;","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"limzk126"},"content":"                } else if (task.getIsOverdue()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":226,"author":{"gitId":"limzk126"},"content":"                    taskOverdue++;","lastModifiedDate":"2021-10-25"},{"lineNumber":227,"author":{"gitId":"limzk126"},"content":"                } else if (task.getDone()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":228,"author":{"gitId":"limzk126"},"content":"                    taskDone++;","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"limzk126"},"content":"                } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":230,"author":{"gitId":"limzk126"},"content":"                    // Task is not done yet.","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"limzk126"},"content":"                    taskNotDone++;","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"limzk126"},"content":"                }","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"limzk126"},"content":"                totalTask++;","lastModifiedDate":"2021-10-25"},{"lineNumber":234,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":235,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":236,"author":{"gitId":"limzk126"},"content":"        return new double[]{taskDone, taskNotDone, taskOverdue, taskDueSoon, totalTask};","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"limzk126"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"limzk126"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"limzk126"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"limzk126"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"limzk126"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"limzk126"},"content":"        if (!(obj instanceof TaskListManager)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"limzk126"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"limzk126"},"content":"        // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"limzk126"},"content":"        TaskListManager other \u003d (TaskListManager) obj;","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"limzk126"},"content":"        boolean isEquals \u003d taskListArchive.equals(other.taskListArchive)","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"limzk126"},"content":"                \u0026\u0026 observableTaskList.equals(other.observableTaskList)","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"limzk126"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks);","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"limzk126"},"content":"        if (isPersonSelected) {","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"limzk126"},"content":"            isEquals \u003d isEquals \u0026\u0026 nameOfChosenPerson.equals(other.nameOfChosenPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"limzk126"},"content":"        return isEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":264,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"limzk126":260,"kflim":4}},{"path":"src/main/java/seedu/address/model/task/TaskMatchesKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"public class TaskMatchesKeywordPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"    protected final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"    public TaskMatchesKeywordPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"        return taskContainsWords(task, keywords);","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"     * Checks if a Task\u0027s name contains the specified keywords.","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"     * @param task A {@code Task} with a name that might match the keywords.","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"     * @param keywords A {@code List\u003cString\u003e} that might contain words that match the name of the task.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"     * @throws java.lang.NullPointerException if task or keywords is null","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"    public boolean taskContainsWords(Task task, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"        String preppedName \u003d task.getTaskName().taskName.toLowerCase();","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"        return StringUtil.containsWordsInOrderIgnoreCase(preppedName, keywords);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kflim":36}},{"path":"src/main/java/seedu/address/model/task/TaskName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":" * Represents a Task\u0027s name in the address book.","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTaskName(String)}","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"public class TaskName {","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"            \"Task name should contain at least 1 non-whitespace character\";","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    /*","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S+.*\";","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"    public final String taskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"     * Constructs a {@code TaskName}.","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"     * @param taskName A valid task name.","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    public TaskName(String taskName) {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(taskName);","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"        checkArgument(isValidTaskName(taskName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"     * Returns true if a given string is a valid task name.","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"    public static boolean isValidTaskName(String test) {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"        return taskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"                || (other instanceof TaskName // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 taskName.equals(((TaskName) other).taskName)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"        return taskName.hashCode();","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"eugenecsa":57}},{"path":"src/main/java/seedu/address/model/task/TaskTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":" * Represents a Task\u0027s time in the address book.","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTaskTime(String)}","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"public class TaskTime {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"            \"Task time should be of format HH:MM\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    public final LocalTime taskTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     * Constructs a {@code TaskTime}.","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"     * @param taskTime A valid time.","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    public TaskTime(String taskTime) {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(taskTime);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"        checkArgument(isValidTaskTime(taskTime));","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"        this.taskTime \u003d LocalTime.parse(taskTime);","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    public static boolean isValidTaskTime(String test) {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"            LocalTime.parse(test);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"            return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"        return taskTime.format(DateTimeFormatter.ISO_LOCAL_TIME);","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"                || (other instanceof TaskTime // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 taskTime.equals(((TaskTime) other).taskTime)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"        return taskTime.hashCode();","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"eugenecsa":60}},{"path":"src/main/java/seedu/address/model/task/Venue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":" * Represents a Task\u0027s venue in the address book.","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidVenue(String)}","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"public class Venue {","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"            \"Task venue should contain at least 1 non-whitespace character\";","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    /*","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"     * The first character of the venue must not be a whitespace,","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S+.*\";","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"    public final String venue;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"     * Constructs a {@code Venue}.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"     * @param venue A valid name.","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    public Venue(String venue) {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(venue);","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"        checkArgument(isValidVenue(venue), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"     * Returns true if a given string is a valid Venue.","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"    public static boolean isValidVenue(String test) {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"        return venue;","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"                || (other instanceof Venue // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 venue.equals(((Venue) other).venue)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"        return venue.hashCode();","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"eugenecsa":57}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"                getTagSet(\"friends\"), getTaskList(\"Play\", \"Eat\"), new Description(\"Bald\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"                false),","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"                getTagSet(\"colleagues\", \"friends\"), getTaskList(\"Play\"), new Description(\"Know it all\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"                    false),","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"                getTagSet(\"neighbours\"), getTaskList(\"Teach\"), new Description(\"Genius\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"                    false),","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"                getTagSet(\"family\"), getTaskList(\"CS2100\"), new Description(\"\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"                    true),","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"                getTagSet(\"classmates\"), getTaskList(\"Do Homework\"),","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"                    new Description(\"Tall.. Like really tall\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"                    false),","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"                getTagSet(\"colleagues\"), getTaskList(\"Slap\"), new Description(\"Jerk\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"                    false)","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns a task list containing the list of strings given.","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"    public static List\u003cTask\u003e getTaskList(String... strings) {","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"        for (String string : strings) {","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"            TaskName taskName \u003d new TaskName(string);","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"            Task newTask \u003d new Task(taskName, null, null, null);","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"            tasks.add(newTask);","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"        return tasks;","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"LeopardMerkava":22,"-":54,"eugenecsa":11}},{"path":"src/main/java/seedu/address/model/util/TaskStatusChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.model.util;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import java.util.Timer;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.TaskListManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":" * Checks the status of all tasks periodically. Any changes detected","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":" * would be reflected to the statistics.","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"public class TaskStatusChecker {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    private Toolkit toolkit;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    private Timer timer;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    private TaskListManager taskListManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     * Constructor for TaskStatusChecker.","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    public TaskStatusChecker(TaskListManager taskListManager) {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"        this.taskListManager \u003d taskListManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"        toolkit \u003d Toolkit.getDefaultToolkit();","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"        timer \u003d new Timer();","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"        timer.schedule(new UpdateStatusTask(), 0, 5 * 1000);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     * Updates the status of all tasks by comparing the system date and time with","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     * all tasks\u0027 date and time.","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    class UpdateStatusTask extends TimerTask {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"        public void run() {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"            Platform.runLater(() -\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"                taskListManager.updateAllTaskStatus();","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"                taskListManager.updateStatistics();","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"            });","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"    public void stop() {","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"        timer.cancel();","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"limzk126":41,"kflim":4}},{"path":"src/main/java/seedu/address/model/util/UpdateStatusTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.model.util;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"public class UpdateStatusTask {","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"limzk126":3}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"    private final String description;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"    private final String isImportant;","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged, @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks,","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"            @JsonProperty(\"description\") String description, @JsonProperty(\"isImportant\") String isImportant) {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"        this.isImportant \u003d isImportant;","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"        if (tasks !\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"            this.tasks.addAll(tasks);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"        tasks.addAll(source.getTasks().stream()","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"                .map(JsonAdaptedTask::new)","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"        isImportant \u003d String.valueOf(source.isImportant());","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e modelTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"LeopardMerkava"},"content":"        for (JsonAdaptedTask task : tasks) {","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"LeopardMerkava"},"content":"            modelTasks.add(task.toModelType());","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"LeopardMerkava"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"LeopardMerkava"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"LeopardMerkava"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"LeopardMerkava"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"LeopardMerkava"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"LeopardMerkava"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"LeopardMerkava"},"content":"        if (isImportant \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"LeopardMerkava"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"LeopardMerkava"},"content":"                    \"Importance\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"LeopardMerkava"},"content":"        if (!(isImportant.equals(String.valueOf(true))","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"LeopardMerkava"},"content":"                || isImportant.equals(String.valueOf(false)))) {","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"LeopardMerkava"},"content":"            throw new IllegalValueException(\"isImportant should be boolean!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"LeopardMerkava"},"content":"        final Boolean modelImportance \u003d Boolean.parseBoolean(isImportant);","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"LeopardMerkava"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelTasks, modelDescription,","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"LeopardMerkava"},"content":"                modelImportance);","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LeopardMerkava":41,"-":107,"eugenecsa":4}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskDate;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.Venue;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    public static final String MISSING_NAME_MESSAGE_FORMAT \u003d \"Task name field is missing!\";","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    private final String daysPriorToTaskDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    private final String taskName;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    private final String taskDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"    private final String taskTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    private final String taskVenue;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"    private final String isDone;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given {@code task}.","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    public JsonAdaptedTask(@JsonProperty(\"daysPriorToTaskDate\") String daysPriorToTaskDate,","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"                           @JsonProperty(\"taskName\") String taskName,","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"                           @JsonProperty(\"taskDate\") String taskDate, @JsonProperty(\"taskTime\") String taskTime,","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"                           @JsonProperty(\"taskVenue\") String taskVenue, @JsonProperty(\"isDone\") String isDone) {","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"        this.daysPriorToTaskDate \u003d daysPriorToTaskDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"        this.taskDate \u003d taskDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        this.taskTime \u003d taskTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        this.taskVenue \u003d taskVenue;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"        this.daysPriorToTaskDate \u003d String.valueOf(Task.getDaysPriorToTaskDate());","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"        this.taskName \u003d source.getTaskName().taskName;","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"        this.taskDate \u003d source.getDate() \u003d\u003d null","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"                ? null","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"                : source.getDate().toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"        this.taskTime \u003d source.getTime() \u003d\u003d null","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"                ? null","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"                : source.getTime().toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"        this.taskVenue \u003d source.getVenue() \u003d\u003d null","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"                ? null","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"                : source.getVenue().venue;","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"        this.isDone \u003d String.valueOf(source.getDone());","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"        if (taskName \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"            throw new IllegalValueException(MISSING_NAME_MESSAGE_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"        if (!TaskName.isValidTaskName(taskName)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"            throw new IllegalValueException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"        final TaskName modelName \u003d new TaskName(taskName);","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"        TaskDate modelDate \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"        if (taskDate !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"            if (TaskDate.isValidTaskDate(taskDate)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"                modelDate \u003d new TaskDate(taskDate);","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"            } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"                throw new IllegalValueException(TaskDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"        TaskTime modelTime \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"        if (taskTime !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"            if (TaskTime.isValidTaskTime(taskTime)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"                modelTime \u003d new TaskTime(taskTime);","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"            } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"                throw new IllegalValueException(TaskTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"        Venue modelVenue \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"        if (taskVenue !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"            if (Venue.isValidVenue(taskVenue)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"                modelVenue \u003d new Venue(taskVenue);","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"            } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"                throw new IllegalValueException(Venue.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"        boolean modelIsDone \u003d Boolean.parseBoolean(isDone);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"        Task newTask \u003d new Task(modelName, modelDate, modelTime, modelVenue);","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"        if (modelIsDone) {","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"            newTask.setDone();","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"        int modelDaysPriorToTaskDate \u003d Integer.parseInt(daysPriorToTaskDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"        Task.setDaysPriorToTaskDate(modelDaysPriorToTaskDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"        return newTask;","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"LeopardMerkava"},"content":"    };","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LeopardMerkava":30,"limzk126":10,"eugenecsa":72}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.UserCommandCache;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"    private UserCommandCache userCommandCache;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"        this.userCommandCache \u003d userCommandCache.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LeopardMerkava":3,"-":78}},{"path":"src/main/java/seedu/address/ui/AllTaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.TreeCell;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.TreeItem;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.TreeView;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":" * Panel containing the task list of every person.","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"public class AllTaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    private static final String FXML \u003d \"AllTaskListPanel.fxml\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    private VBox vbox;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"    private Label allTaskListPanelHeader;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    private TreeView\u003cTuple\u003e allTaskListView;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"    private TreeItem\u003cTuple\u003e dummyNode;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"     * Creates a {@code AllTaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    public AllTaskListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"        super(FXML);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"        // Set up the treeNode.","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"        Tuple dummyTuple \u003d new Tuple(new Name(\"dummy\"), true, new Task(\"dummy\"), 0);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"        dummyNode \u003d new TreeItem\u003c\u003e(dummyTuple);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"        allTaskListView.setRoot(dummyNode);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"        updateRootNode(personList);","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"        allTaskListView.showRootProperty().set(false);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"        allTaskListView.setCellFactory(listView -\u003e new AllTaskListPanel.AllTaskListViewCell());","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"     * Updates the TreeView with the newly updated {@code personList} to show changes.","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"    public void updateTreeView(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"        if (personList.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"            allTaskListView.getRoot().getChildren().clear();","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"            updateRootNode(personList);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"     * Updates the root node with the newly updated {@code personList} to show changes.","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"    private void updateRootNode(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"        requireNonNull(personList);","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"        ObservableList\u003cTreeItem\u003cTuple\u003e\u003e childNodes \u003d allTaskListView.getRoot().getChildren();","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"        int j \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"        for (; j \u003c personList.size(); j++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"            for (; i \u003c childNodes.size() \u0026\u0026 j \u003c personList.size(); i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"                Name nodeName \u003d childNodes.get(i).getValue().getName();","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"                Person person \u003d personList.get(j);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"                Name personName \u003d person.getName();","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"                if (!nodeName.toString().equals(personName.toString())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"                    childNodes.remove(i);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"                    i--;","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"                    continue;","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"                updateChildNode(childNodes.get(i).getChildren(), personList.get(j));","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"                j++;","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"            if (j \u003e\u003d personList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"            addNewChildNode(childNodes, personList.get(j));","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"            i++;","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"        // To clear trailing childNodes.","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"limzk126"},"content":"        childNodes.remove(i, childNodes.size());","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":"     * Adds a new child node under the root node.","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"    private void addNewChildNode(ObservableList\u003cTreeItem\u003cTuple\u003e\u003e childNodes, Person person) {","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"limzk126"},"content":"        requireAllNonNull(childNodes, person);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"        Tuple childNodeTuple \u003d new Tuple(person.getName(), true, new Task(\"dummy\"), 0);","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"        TreeItem\u003cTuple\u003e childNode \u003d new TreeItem\u003c\u003e(childNodeTuple);","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"        childNode.setExpanded(true);","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"        // Listener to make child node non-collapsable.","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"limzk126"},"content":"        childNode.expandedProperty().addListener(observable -\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"            if (!childNode.isExpanded()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"                childNode.setExpanded(true);","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"limzk126"},"content":"        });","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"limzk126"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"limzk126"},"content":"        for (Task task : person.getTasks()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"limzk126"},"content":"            Tuple childNodeTaskTuple \u003d new Tuple(person.getName(), false, task, i++ + 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"limzk126"},"content":"            TreeItem\u003cTuple\u003e childNodeTask \u003d new TreeItem\u003c\u003e(childNodeTaskTuple);","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"limzk126"},"content":"            childNode.getChildren().add(childNodeTask);","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"limzk126"},"content":"        childNodes.add(childNode);","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"limzk126"},"content":"     * Updates the task nodes under the specified child node.","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"limzk126"},"content":"    private void updateChildNode(ObservableList\u003cTreeItem\u003cTuple\u003e\u003e childNodeTasks, Person person) {","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"limzk126"},"content":"        requireAllNonNull(childNodeTasks, person);","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"limzk126"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"limzk126"},"content":"        int j \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"limzk126"},"content":"        for (; j \u003c person.getTasks().size(); j++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"limzk126"},"content":"            for (; i \u003c childNodeTasks.size() \u0026\u0026 j \u003c person.getTasks().size(); i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"limzk126"},"content":"                Task task \u003d person.getTasks().get(j);","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"limzk126"},"content":"                Task childTask \u003d childNodeTasks.get(i).getValue().getTask();","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"limzk126"},"content":"                if (!task.equals(childTask)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"limzk126"},"content":"                    childNodeTasks.remove(i);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"limzk126"},"content":"                    i--;","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"limzk126"},"content":"                    continue;","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"limzk126"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"limzk126"},"content":"                childNodeTasks.get(i).getValue().setIndex(i + 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"limzk126"},"content":"                j++;","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"limzk126"},"content":"            if (j \u003e\u003d person.getTasks().size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"limzk126"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"limzk126"},"content":"            TreeItem\u003cTuple\u003e newChildNodeTask \u003d new TreeItem\u003c\u003e(","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"limzk126"},"content":"                    new Tuple(person.getName(), false, person.getTasks().get(j), i + 1));","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"limzk126"},"content":"            childNodeTasks.add(newChildNodeTask);","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"limzk126"},"content":"            i++;","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"limzk126"},"content":"        // To clear trailing childNodes.","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"limzk126"},"content":"        childNodeTasks.remove(i, childNodeTasks.size());","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"limzk126"},"content":"     * Custom {@code TreeCell} that displays the graphics of a {@code Task} using a {@code TaskCard}","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"limzk126"},"content":"     * or a {@code Name}.","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"limzk126"},"content":"    class AllTaskListViewCell extends TreeCell\u003cTuple\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"limzk126"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"limzk126"},"content":"        protected void updateItem(Tuple tuple, boolean empty) {","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"limzk126"},"content":"            super.updateItem(tuple, empty);","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"limzk126"},"content":"            if (empty || tuple \u003d\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"limzk126"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"limzk126"},"content":"                setText(null);","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"limzk126"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"limzk126"},"content":"                boolean isNameHeader \u003d tuple.isNameHeader();","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"limzk126"},"content":"                if (isNameHeader) {","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"limzk126"},"content":"                    Name name \u003d tuple.getName();","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"limzk126"},"content":"                    Label label \u003d new Label(name.toString());","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"limzk126"},"content":"                    label.setStyle(\"-fx-text-fill: cornsilk; -fx-font-weight: bold;\");","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"limzk126"},"content":"                    setGraphic(label);","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"limzk126"},"content":"                } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"limzk126"},"content":"                    Task task \u003d tuple.getTask();","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"limzk126"},"content":"                    TaskCard tc \u003d new TaskCard(task, tuple.getIndex());","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"limzk126"},"content":"                    tc.initialise(vbox, 150);","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"limzk126"},"content":"                    setGraphic(tc.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"limzk126"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"limzk126":190}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"    private final InternalCommandExecutor internalCommandExecutor;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"    public CommandBox(CommandExecutor commandExecutor, InternalCommandExecutor internalCommandExecutor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"        this.internalCommandExecutor \u003d internalCommandExecutor;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"     * Handles the Up and Down arrow pressed event;","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"     * @param key The key pressed.","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    private void keyPressed(KeyEvent key) {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"            if (key.getCode().equals(KeyCode.UP)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"                internalCommandExecutor.executeInternal(\"accesscache -qqUP\");","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"            } else if (key.getCode().equals(KeyCode.DOWN)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"                internalCommandExecutor.executeInternal(\"accesscache -qqDOWN\");","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"            } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"                //Do Nothing","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"    /** Method to set text in text field */","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"    public void setText(String text) {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(text);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"        commandTextField.setText(text);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"LeopardMerkava"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"LeopardMerkava"},"content":"    @FunctionalInterface","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"LeopardMerkava"},"content":"    public interface InternalCommandExecutor {","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"LeopardMerkava"},"content":"        /**","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"LeopardMerkava"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"LeopardMerkava"},"content":"         *","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"LeopardMerkava"},"content":"         * @see seedu.address.logic.Logic#executeInternal(String)","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"LeopardMerkava"},"content":"         */","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"LeopardMerkava"},"content":"        CommandResult executeInternal(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"LeopardMerkava":44,"-":84}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import java.util.Hashtable;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.ReminderCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.ViewTaskListCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":" * Creates a window to show the user a table of commands.","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":" * Inspired by and adapted from the HelpPage in https://github.com/greyguy21/ip/","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"public class HelpWindow extends AnchorPane {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"    public static final String USER_GUIDE_URL \u003d \"https://ay2122s1-cs2103t-w10-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"    public static final String USER_GUIDE_MESSAGE \u003d \"For full details, refer to the user guide: \" + USER_GUIDE_URL;","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"    public static final String HELP_MESSAGE \u003d \"For more detailed commands, type \\\"help [command]\\\"\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"            + \"To close this window, type \\\"close\\\"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"    private static final String APPLICATION_ICON \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"    private static final Hashtable\u003cString, CommandDetail\u003e commandTable \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"    private static Stage stage;","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"    private static final boolean isActive \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"    private static HelpWindow helpWindow;","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"    private interface CommandDetail {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"        void execute();","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"kflim"},"content":"    private TextField textField;","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"kflim"},"content":"    private Label additionalInfo;","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"kflim"},"content":"    private TableView\u003cCommand\u003e tableView;","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"kflim"},"content":"    private TableColumn\u003cCommand, String\u003e command;","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"kflim"},"content":"    private TableColumn\u003cCommand, String\u003e description;","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"kflim"},"content":"    private Label userGuideMessage;","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"kflim"},"content":"    private Button copyButton;","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":95,"author":{"gitId":"kflim"},"content":"    private HelpWindow() {","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"kflim"},"content":"        stage \u003d new Stage();","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"kflim"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"kflim"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainApp.class.getResource(\"/view/HelpWindow.fxml\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"kflim"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"kflim"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"kflim"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"kflim"},"content":"            assert ap !\u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"kflim"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"kflim"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"kflim"},"content":"            stage.setTitle(\"Help\");","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"kflim"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"kflim"},"content":"            stage.getIcons().add(","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"kflim"},"content":"                    new Image(Objects.requireNonNull(MainApp.class.getResourceAsStream(APPLICATION_ICON)))","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"kflim"},"content":"            );","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"kflim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"kflim"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"kflim"},"content":"        fillCommandTable();","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"kflim"},"content":"        additionalInfo.setText(\"\");","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"kflim"},"content":"        userGuideMessage.setText(USER_GUIDE_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"kflim"},"content":"        copyButton.setText(\"Copy URL\");","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":123,"author":{"gitId":"kflim"},"content":"    public static HelpWindow getWindow() {","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"kflim"},"content":"        if (!HelpWindow.isActive) {","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"kflim"},"content":"            helpWindow \u003d new HelpWindow();","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"kflim"},"content":"        return helpWindow;","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"kflim"},"content":"     * Sets up the respective children of the AnchorPane.","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"kflim"},"content":"    public void initialize() {","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"kflim"},"content":"        setupTextField();","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"kflim"},"content":"        setupTable();","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"kflim"},"content":"        setupButton();","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":160,"author":{"gitId":"kflim"},"content":"        stage.show();","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"kflim"},"content":"        stage.centerOnScreen();","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"kflim"},"content":"        return stage.isShowing();","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"kflim"},"content":"        stage.hide();","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":182,"author":{"gitId":"kflim"},"content":"        stage.requestFocus();","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":185,"author":{"gitId":"kflim"},"content":"    private void setupButton() {","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"kflim"},"content":"        copyButton.setOnMousePressed(event -\u003e copyUrl());","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    // @@author kflim-reused","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/greyguy21/ip/","lastModifiedDate":"2021-10-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-10-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private void setupColumns() {","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        command.setCellValueFactory(","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                new PropertyValueFactory\u003c\u003e(\"command\")","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        description.setCellValueFactory(","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                new PropertyValueFactory\u003c\u003e(\"description\")","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private void setupTextField() {","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        textField.setOnKeyPressed(event -\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            if (event.getCode() \u003d\u003d KeyCode.ENTER) {","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                handleUserInput(textField.getText());","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                textField.setText(\"\");","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    private void setupTable() {","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        setupColumns();","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        setupTableData();","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    private void setupTableData() {","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        Person samplePerson \u003d new Person(","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                new Name(\"Amy Bee\"), new Phone(\"123456789\"), new Email(\"amy@gmail.com\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                new Address(\"123, Jurong West Ave 6, #08-111\"), new HashSet\u003c\u003e(), new ArrayList\u003c\u003e(), new Description(\"\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                false","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        descriptor.setName(samplePerson.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        descriptor.setPhone(samplePerson.getPhone());","lastModifiedDate":"2021-10-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        descriptor.setEmail(samplePerson.getEmail());","lastModifiedDate":"2021-10-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        descriptor.setAddress(samplePerson.getAddress());","lastModifiedDate":"2021-10-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        descriptor.setTags(samplePerson.getTags());","lastModifiedDate":"2021-10-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        descriptor.setImportance(samplePerson.isImportant());","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        EditTaskCommand.EditTaskDescriptor taskDescriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        ObservableList\u003cCommand\u003e data \u003d FXCollections.observableArrayList(","lastModifiedDate":"2021-10-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                new AddCommand(samplePerson), new AddTaskCommand(Index.fromZeroBased(0), new ArrayList\u003c\u003e()),","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                new ClearCommand(), new DeleteCommand(Index.fromZeroBased(0)),","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                new DeleteTaskCommand(Index.fromZeroBased(0), new ArrayList\u003c\u003e()),","lastModifiedDate":"2021-10-20"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                new DoneCommand(Index.fromZeroBased(0), new ArrayList\u003c\u003e()),","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                new EditCommand(Index.fromZeroBased(0), descriptor),","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                new EditTaskCommand(Index.fromZeroBased(0), Index.fromZeroBased(0), taskDescriptor), new ExitCommand(),","lastModifiedDate":"2021-10-28"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                new FindCommand(null), new ListCommand(), new ReminderCommand(),","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                new SortCommand(false),","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                new UndoCommand(Index.fromZeroBased(0), new ArrayList\u003c\u003e()), new ViewTaskListCommand()","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        tableView.setItems(data);","lastModifiedDate":"2021-10-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        tableView.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);","lastModifiedDate":"2021-10-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        tableView.setSelectionModel(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        url.putString(USER_GUIDE_URL);","lastModifiedDate":"2021-10-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    private void fillCommandTable() {","lastModifiedDate":"2021-10-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        commandTable.put(AddCommand.COMMAND_WORD, this::handleAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        commandTable.put(AddTaskCommand.COMMAND_WORD, this::handleAddTask);","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        commandTable.put(ClearCommand.COMMAND_WORD, this::handleClear);","lastModifiedDate":"2021-10-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        commandTable.put(DeleteCommand.COMMAND_WORD, this::handleDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        commandTable.put(DeleteTaskCommand.COMMAND_WORD, this::handleDelTask);","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        commandTable.put(DoneCommand.COMMAND_WORD, this::handleDoneTask);","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        commandTable.put(EditCommand.COMMAND_WORD, this::handleEdit);","lastModifiedDate":"2021-10-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        commandTable.put(EditTaskCommand.COMMAND_WORD, this::handleEditTask);","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        commandTable.put(ExitCommand.COMMAND_WORD, this::handleExit);","lastModifiedDate":"2021-10-28"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        commandTable.put(FindCommand.COMMAND_WORD, this::handleFind);","lastModifiedDate":"2021-10-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        commandTable.put(ListCommand.COMMAND_WORD, this::handleList);","lastModifiedDate":"2021-10-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        commandTable.put(ReminderCommand.COMMAND_WORD, this::handleReminder);","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        commandTable.put(SortCommand.COMMAND_WORD, this::handleSort);","lastModifiedDate":"2021-10-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        commandTable.put(UndoCommand.COMMAND_WORD, this::handleUndoTask);","lastModifiedDate":"2021-10-24"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        commandTable.put(ViewTaskListCommand.COMMAND_WORD, this::handleViewTask);","lastModifiedDate":"2021-10-28"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        commandTable.put(\"close\", this::handleCloseWindow);","lastModifiedDate":"2021-10-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    private void handleUserInput(String userInput) {","lastModifiedDate":"2021-10-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        String[] words \u003d userInput.trim().split(\" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        if (areValidWords(words)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            performCommand(words, userInput.startsWith(\"close\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    private boolean areValidWords(String[] words) {","lastModifiedDate":"2021-10-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        if (words[0].equals(\"help\") \u0026\u0026 words.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            additionalInfo.setText(\"Enter the command that you wish to query after \\\"help\\\"!\");","lastModifiedDate":"2021-10-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        } else if (words[0].equals(\"close\") \u0026\u0026 words.length \u003d\u003d 1","lastModifiedDate":"2021-10-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                || words.length \u003d\u003d 2 \u0026\u0026 words[0].equals(\"help\") \u0026\u0026 isValidCommand(words[1])) {","lastModifiedDate":"2021-10-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            additionalInfo.setText(\"That is not a valid command\");","lastModifiedDate":"2021-10-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public boolean isValidCommand(String userInput) {","lastModifiedDate":"2021-10-10"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        return commandTable.containsKey(userInput);","lastModifiedDate":"2021-10-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    private void performCommand(String[] userInput, boolean isClose) {","lastModifiedDate":"2021-10-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        if (isClose) {","lastModifiedDate":"2021-10-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            commandTable.get(userInput[0]).execute();","lastModifiedDate":"2021-10-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            commandTable.get(userInput[1]).execute();","lastModifiedDate":"2021-10-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    private void handleAdd() {","lastModifiedDate":"2021-10-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                + \"add -n NAME -p PHONE_NUMBER -e EMAIL -a ADDRESS [-l TAG]… [-d DESCRIPTION] [-impt IMPORTANCE]\"","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                + \"\\nA person can have any number of labels \"","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                + \"\\nOnly true or false will be accepted for the IMPORTANCE value\"","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    private void handleAddTask() {","lastModifiedDate":"2021-10-28"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                + \"add INDEX -tn TASK_NAME [-td TASK_DATE] [-tt TASK_TIME] [-ta TASK_ADDRESS]\"","lastModifiedDate":"2021-10-28"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                + \"\\nAdds a task to the person at the specified INDEX\"","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    private void handleClear() {","lastModifiedDate":"2021-10-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: clear \\nClears all entries from ContactSH.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    private void handleDelete() {","lastModifiedDate":"2021-10-07"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                + \"rm INDEX [-A]\"","lastModifiedDate":"2021-10-28"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                + \"\\nDeletes the person at the specified index IF it is valid. \"","lastModifiedDate":"2021-10-28"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                + \"\\nIf the optional -A flag is given, all of the current data will be deleted\"","lastModifiedDate":"2021-10-28"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-28"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    private void handleDelTask() {","lastModifiedDate":"2021-10-28"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: rm INDEX -ti TASK_INDEX… \\nDeletes a task from the specified person.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    private void handleDoneTask() {","lastModifiedDate":"2021-10-28"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                + \"donetask INDEX -ti TASK_INDEX…\"","lastModifiedDate":"2021-10-28"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                + \"\\nMarks tasks attached to the person at the specified INDEX as done\"","lastModifiedDate":"2021-10-28"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    private void handleEdit() {","lastModifiedDate":"2021-10-28"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                + \"edit INDEX -ti TASK_INDEX [-tn TASK_NAME] [-td TASK_DATE] [-tt TASK_TIME] [-ta TASK_ADDRESS]…\"","lastModifiedDate":"2021-10-28"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                + \"\\nEdits the person at the specified index IF it is valid\"","lastModifiedDate":"2021-10-28"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-28"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    private void handleEditTask() {","lastModifiedDate":"2021-10-28"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                + \"edit INDEX -ti TASK_INDEX [-tn TASK_NAME] [-td TASK_DATE] [-tt TASK_TIME] [-ta TASK_ADDRESS]…\"","lastModifiedDate":"2021-10-28"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                + \"\\nEdits a task attached to the person (at the specified INDEX) according to the TASK_INDEX\"","lastModifiedDate":"2021-10-28"},{"lineNumber":360,"author":{"gitId":"-"},"content":"                + \"\\nAt least one of the optional fields must be provided.\"","lastModifiedDate":"2021-10-28"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-28"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2021-10-28"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: exit\" + \"\\nExits the program entirely\");","lastModifiedDate":"2021-10-28"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    private void handleFind() {","lastModifiedDate":"2021-10-28"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":370,"author":{"gitId":"-"},"content":"                + \"find [-n NAME] [-p PHONE_NUMBER] [-e EMAIL] [-a ADDRESS] [-l TAG]… [-d DESCRIPTION] \"","lastModifiedDate":"2021-10-28"},{"lineNumber":371,"author":{"gitId":"-"},"content":"                + \"[-tn TASK_NAME] KEYWORD [MORE_KEYWORDS]\"","lastModifiedDate":"2021-10-28"},{"lineNumber":372,"author":{"gitId":"-"},"content":"                + \"\\nPersons matching all the keywords will be returned\"","lastModifiedDate":"2021-10-28"},{"lineNumber":373,"author":{"gitId":"-"},"content":"                + \"\\nAt least one of the optional fields must be provided\"","lastModifiedDate":"2021-10-28"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-28"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    private void handleList() {","lastModifiedDate":"2021-10-28"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: list\" + \"\\nShows a list of all persons in ContactSh\");","lastModifiedDate":"2021-10-28"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    private void handleReminder() {","lastModifiedDate":"2021-10-28"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                + \"reminder [-s DAYS]\"","lastModifiedDate":"2021-10-28"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                + \"\\nShows the number of days prior to a task\u0027s date for the task to be reminded as due soon\"","lastModifiedDate":"2021-10-28"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                + \"\\nIf the optional field is provided, it sets the number of days to the provided number\"","lastModifiedDate":"2021-10-28"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-28"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    private void handleSort() {","lastModifiedDate":"2021-10-28"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":391,"author":{"gitId":"-"},"content":"                + \"sort [-r]\"","lastModifiedDate":"2021-10-28"},{"lineNumber":392,"author":{"gitId":"-"},"content":"                + \"\\nSort persons by the alphabetical order of their name.\"","lastModifiedDate":"2021-10-28"},{"lineNumber":393,"author":{"gitId":"-"},"content":"                + \"\\nIf the optional -r flag is provided, a list of persons sorted in reverse order is displayed\"","lastModifiedDate":"2021-10-28"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-28"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    private void handleUndoTask() {","lastModifiedDate":"2021-10-28"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":399,"author":{"gitId":"-"},"content":"                + \"undotask INDEX -ti TASK_INDEX…\"","lastModifiedDate":"2021-10-28"},{"lineNumber":400,"author":{"gitId":"-"},"content":"                + \"\\nMarks task(s) indicated by the TASK_INDEX of person indicated by INDEX as not done.\"","lastModifiedDate":"2021-10-28"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-28"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    private void handleViewTask() {","lastModifiedDate":"2021-10-28"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        additionalInfo.setText(\"Format: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":406,"author":{"gitId":"-"},"content":"                + \"cat INDEX [-f KEYWORDS]\"","lastModifiedDate":"2021-10-28"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                + \"\\nShows the tasks of person specified person\"","lastModifiedDate":"2021-10-28"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                + \"\\nIf the optional field KEYWORDS is given, a filtered list of tasks will be shown\"","lastModifiedDate":"2021-10-28"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-28"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    private void handleCloseWindow() {","lastModifiedDate":"2021-10-07"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        stage.close(); // May update to have a timer if possible","lastModifiedDate":"2021-10-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":415,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"LeopardMerkava":1,"kflim":112,"-":300,"eugenecsa":2}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"import seedu.address.logic.commands.ViewTaskListCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"import seedu.address.model.util.TaskStatusChecker;","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"    private StatisticsDisplay statisticsDisplay;","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"    private AllTaskListPanel allTaskListPanel;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    private CommandBox commandBox;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"    private TaskStatusChecker taskStatusChecker;","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"    private AnchorPane resultDisplayPlaceholder;","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"    private AnchorPane statisticsDisplayPlaceholder;","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"    private AnchorPane personListSplitPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"    private AnchorPane taskListSplitPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"    public MainWindow(Stage primaryStage, Logic logic, TaskStatusChecker taskStatusChecker) {","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"        this.taskStatusChecker \u003d taskStatusChecker;","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"kflim"},"content":"        helpWindow \u003d HelpWindow.getWindow();","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"limzk126"},"content":"     * Event handler when user clicks on a particular {@code ListCell} in the {@code personListView}.","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"limzk126"},"content":"     * Updates the {@code taskListPanel} to show the task list of the {@code Person} represented","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"limzk126"},"content":"     * by the selected {@code ListCell}.","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"limzk126"},"content":"    public void handleMouseClicked(ListView\u003cPerson\u003e personListView) {","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"limzk126"},"content":"        int selectedIndex \u003d personListView.getSelectionModel().getSelectedIndex() + 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"limzk126"},"content":"        String inputCommand \u003d ViewTaskListCommand.COMMAND_WORD + \" \" + selectedIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"limzk126"},"content":"            executeCommand(inputCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"limzk126"},"content":"        } catch (ParseException | CommandException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"limzk126"},"content":"            logger.warning(\"HandleMouseClicked caught an exception when not supposed to:\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"limzk126"},"content":"                    + e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"limzk126"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"limzk126"},"content":"    /** Makes child node of anchor resize together with its parent. */","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"limzk126"},"content":"    private void setAnchorProperties(AnchorPane ap) {","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"limzk126"},"content":"        AnchorPane.setBottomAnchor(ap.getChildren().get(0), 0.0);","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"limzk126"},"content":"        AnchorPane.setLeftAnchor(ap.getChildren().get(0), 0.0);","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"limzk126"},"content":"        AnchorPane.setRightAnchor(ap.getChildren().get(0), 0.0);","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"limzk126"},"content":"        AnchorPane.setTopAnchor(ap.getChildren().get(0), 0.0);","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"limzk126"},"content":"        // Initialising mouse click properties for ListView\u003cPerson\u003e.","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"limzk126"},"content":"        ListView\u003cPerson\u003e personListView \u003d personListPanel.getPersonListView();","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"limzk126"},"content":"        personListView.setOnMouseClicked(event -\u003e handleMouseClicked(personListView));","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"limzk126"},"content":"        personListSplitPanel.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"limzk126"},"content":"        setAnchorProperties(personListSplitPanel);","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"limzk126"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getDisplayTaskList());","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"limzk126"},"content":"        allTaskListPanel \u003d new AllTaskListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"limzk126"},"content":"        taskListSplitPanel.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"limzk126"},"content":"        setAnchorProperties(taskListSplitPanel);","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":174,"author":{"gitId":"limzk126"},"content":"        setAnchorProperties(resultDisplayPlaceholder);","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"limzk126"},"content":"        statisticsDisplay \u003d new StatisticsDisplay(logic.getStatistics());","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"limzk126"},"content":"        statisticsDisplayPlaceholder.getChildren().add(statisticsDisplay.getRoot());","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"limzk126"},"content":"        setAnchorProperties(statisticsDisplayPlaceholder);","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":183,"author":{"gitId":"LeopardMerkava"},"content":"        commandBox \u003d new CommandBox(this::executeCommand, this::executeInternalCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":225,"author":{"gitId":"kflim"},"content":"        taskStatusChecker.stop();","lastModifiedDate":"2021-11-01"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":228,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"limzk126"},"content":"    private void handleDisplayAllTaskList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"limzk126"},"content":"        taskListSplitPanel.getChildren().clear();","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"limzk126"},"content":"        taskListSplitPanel.getChildren().add(allTaskListPanel.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"limzk126"},"content":"        setAnchorProperties(taskListSplitPanel);","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"limzk126"},"content":"    private void handleDisplaySingleTaskList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"limzk126"},"content":"        taskListSplitPanel.getChildren().clear();","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"limzk126"},"content":"        taskListSplitPanel.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"limzk126"},"content":"        setAnchorProperties(taskListSplitPanel);","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"limzk126"},"content":"            if (commandResult.isDisplayAllTaskList()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"limzk126"},"content":"                handleDisplayAllTaskList();","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"limzk126"},"content":"            if (commandResult.isDisplaySingleTaskList()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"limzk126"},"content":"                handleDisplaySingleTaskList();","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"limzk126"},"content":"            if (commandResult.isWriteCommand()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":266,"author":{"gitId":"limzk126"},"content":"                allTaskListPanel.updateTreeView(logic.getObservablePersonList());","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":278,"author":{"gitId":"LeopardMerkava"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-10-25"},{"lineNumber":279,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":280,"author":{"gitId":"LeopardMerkava"},"content":"     * @see seedu.address.logic.Logic#executeInternal(String)","lastModifiedDate":"2021-10-25"},{"lineNumber":281,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":282,"author":{"gitId":"LeopardMerkava"},"content":"    private CommandResult executeInternalCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"LeopardMerkava"},"content":"            CommandResult commandResult \u003d logic.executeInternal(commandText);","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"LeopardMerkava"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"LeopardMerkava"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-25"},{"lineNumber":287,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":288,"author":{"gitId":"LeopardMerkava"},"content":"            if (commandResult.isChangeCommandBox()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":289,"author":{"gitId":"LeopardMerkava"},"content":"                commandBox.setText(commandResult.getAdditionalText());","lastModifiedDate":"2021-10-25"},{"lineNumber":290,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2021-10-25"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2021-10-25"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"LeopardMerkava":17,"limzk126":81,"kflim":6,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import javafx.scene.layout.ColumnConstraints;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"    private FlowPane importance;","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"wz27"},"content":"    private Label description;","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"wz27"},"content":"    private Label tasksDue;","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"    @FXML","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"    private ColumnConstraints col0;","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"                .forEach(tag -\u003e tags.getChildren().add(addTags(tag)));","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"wz27"},"content":"        description.setText(person.getDescription().toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"        tasksDue.setText(\"Overdue Tasks: \" + person.getOverdueTasks()","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"                + \"\\nSoon to be due Tasks: \" + person.getSoonDueTasks());","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"        if (person.isImportant()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"            importance.getChildren().add(new Label(\"Important!\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"LeopardMerkava"},"content":"    private Label addTags (Tag tag) {","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"LeopardMerkava"},"content":"        Label label \u003d new Label(tag.tagName);","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"LeopardMerkava"},"content":"        label.setMaxWidth(col0.getMinWidth());","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"LeopardMerkava"},"content":"        return label;","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"LeopardMerkava":17,"-":76,"eugenecsa":3,"wz27":3}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    public ListView\u003cPerson\u003e getPersonListView() {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"        return personListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"limzk126":4,"-":49}},{"path":"src/main/java/seedu/address/ui/StatisticsDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"public class StatisticsDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"    private static final String FXML \u003d \"StatisticsDisplay.fxml\";","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    private PieChart pieChart;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    private final ObservableList\u003cPieChart.Data\u003e statList;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     * Constructor for StatisticsDisplay.","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    public StatisticsDisplay(ObservableList\u003cPieChart.Data\u003e statList) {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"        super(FXML);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"        this.statList \u003d statList;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"        pieChart.setData(statList);","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"        initialise();","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     * Initialises the GUI values for {@code PieChart}.","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    private void initialise() {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"        pieChart.setLabelLineLength(30);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        for (Node node : pieChart.lookupAll(\".chart-legend-item\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"            if (node instanceof Label) {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"                Label label \u003d (Label) node;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"                label.setWrapText(true);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"                label.setManaged(true);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"                label.setPrefWidth(160);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"                label.setStyle(\"-fx-border-width: 4\");","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"                label.setStyle(\"-fx-border-color: darkblue\");","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"limzk126":46}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    public final Task task;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    public final int displayedIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    private HBox descriptionPane;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    private Label id;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    private Label taskName;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"wz27"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"wz27"},"content":"    private Label taskDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"wz27"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"wz27"},"content":"    private Label taskTime;","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"wz27"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"wz27"},"content":"    private Label taskVenue;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"     * Creates a {@code TaskCard} with the given {@code Task} and index to display.","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"        this.displayedIndex \u003d displayedIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"wz27"},"content":"        taskName.setText(\"Task: \" + task.getTaskName().taskName);","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"wz27"},"content":"        String taskDateStr \u003d task.getDate() \u003d\u003d null ? \"\" : \"Date: \" + task.getDate().taskDate.toString();","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"wz27"},"content":"        String taskTimeStr \u003d task.getTime() \u003d\u003d null ? \"\" : \"Time: \" + task.getTime().taskTime.toString();","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"wz27"},"content":"        String taskVenueStr \u003d task.getVenue() \u003d\u003d null ? \"\" : \"Venue: \" + task.getVenue().venue;","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"wz27"},"content":"        taskDate.setText(taskDateStr);","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"wz27"},"content":"        taskTime.setText(taskTimeStr);","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"wz27"},"content":"        taskVenue.setText(taskVenueStr);","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"     * Initialises properties of FXML nodes of this TaskCard using {@code vbox}\u0027s properties.","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"     * @param value The extra amount to be reduced from the Text\u0027s width.","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"    public void initialise(VBox vbox, double value) {","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"        // Sets width property of HBox to be dependent on VBox\u0027s width and padding property.","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"        descriptionPane.maxWidthProperty().bind(Bindings.createDoubleBinding(()-\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"                vbox.getWidth() - vbox.getPadding().getLeft() - vbox.getPadding().getRight() - 1,","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"                vbox.widthProperty(), vbox.paddingProperty()));","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"        // Sets width property of Text to be dependent on VBox\u0027s width and padding property.","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"        taskName.maxWidthProperty().bind(Bindings.createDoubleBinding(()-\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"                vbox.getWidth() - vbox.getPadding().getLeft() - vbox.getPadding().getRight() - value,","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"                vbox.widthProperty(), vbox.paddingProperty()));","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"wz27"},"content":"        taskDate.setBackground(new Background(","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"wz27"},"content":"                new BackgroundFill(javafx.scene.paint.Paint.valueOf(\"blue\"), CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"wz27"},"content":"        taskTime.setBackground(new Background(","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"wz27"},"content":"                new BackgroundFill(javafx.scene.paint.Paint.valueOf(\"blueviolet\"), CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"wz27"},"content":"        taskVenue.setBackground(new Background(","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"wz27"},"content":"                new BackgroundFill(javafx.scene.paint.Paint.valueOf(\"brown\"), CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"        if (task.getDone()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"            descriptionPane.setBackground(new Background(","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"                    new BackgroundFill(javafx.scene.paint.Paint.valueOf(\"green\"), CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"        task.updateDueDate();","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"        if (task.getIsDueSoon()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"            descriptionPane.setBackground(new Background(","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"                    new BackgroundFill(javafx.scene.paint.Paint.valueOf(\"darkorange\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"                    CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"        if (task.getIsOverdue()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"            descriptionPane.setBackground(new Background(","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"                    new BackgroundFill(javafx.scene.paint.Paint.valueOf(\"red\"), CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"limzk126":54,"eugenecsa":18,"wz27":23}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":" * Panel containing the list of Tasks.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    private VBox vbox;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    private Label taskListPanelHeader;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"                setText(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"            } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"                TaskCard tc \u003d new TaskCard(task, getIndex() + 1);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"                tc.initialise(vbox, 120);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"                setGraphic(tc.getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"limzk126":56}},{"path":"src/main/java/seedu/address/ui/Tuple.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":" * Tuple data structure to hold important information for the TreeView nodes.","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"public class Tuple {","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"    private Name name;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"    /** This node is a name header */","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    private boolean nameHeader;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    private Task task;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    private int index;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    /** Constructor for Tuple class */","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    public Tuple(Name name, boolean nameHeader, Task task, int index) {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"        this.nameHeader \u003d nameHeader;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"        return name;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"    public Task getTask() {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"        return task;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    public boolean isNameHeader() {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        return nameHeader;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"    public int getIndex() {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"        return index;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"    public void setName(Name name) {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"    public void setTask(Task task) {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"    public void setNameHeader(boolean isNameHeader) {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"        this.nameHeader \u003d isNameHeader;","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"    public void setIndex(int index) {","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"limzk126":57}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.util.TaskStatusChecker;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    private final TaskStatusChecker taskStatusChecker;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"        this.taskStatusChecker \u003d new TaskStatusChecker(logic.getTaskListManager());","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic, taskStatusChecker);","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"limzk126":3,"kflim":1,"-":88}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"    public UiPart() {}","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kflim":2,"-":88}},{"path":"src/main/resources/view/AllTaskListPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"#AllTaskListPanelHeader {","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"    -fx-background-color: black;","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"    -fx-text-fill: lime green;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"limzk126":6}},{"path":"src/main/resources/view/AllTaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.control.TreeView?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"\u003cVBox fx:id\u003d\"vbox\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"      \u003cLabel fx:id\u003d\"AllTaskListPanelHeader\" prefWidth\u003d\"${AllTaskListPanelHeader.parent.width}\" text\u003d\"All Task List\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"      \u003cTreeView fx:id\u003d\"allTaskListView\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"tree-view\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"limzk126":13}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" onKeyPressed\u003d\"#keyPressed\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"LeopardMerkava":2,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":".text-description {","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":".tree-view {","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"limzk126"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"limzk126"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":".tree-cell:filled:even {","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"limzk126"},"content":".tree-cell:filled:odd {","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"limzk126"},"content":".tree-cell:filled:selected #descriptionPane {","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"limzk126"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"limzk126"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"limzk126"},"content":".tree-cell .label {","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"limzk126"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"limzk126"},"content":".tree-cell {","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"limzk126"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"limzk126"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"limzk126"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"limzk126"},"content":".tree-cell:filled:selected {","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"limzk126"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"limzk126"},"content":".tree-cell .arrow {","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"limzk126"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"limzk126"},"content":"#filterField, #personListPanel, #personWebpage, #allTaskListView {","lastModifiedDate":"2021-10-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":381,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":387,"author":{"gitId":"LeopardMerkava"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-11-02"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":394,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"LeopardMerkava":1,"limzk126":42,"-":351}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":".root {","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans\";","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":".label {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"    -fx-font-size: 8pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":".text-field {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"    -fx-font-size: 8pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":".table-view {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"    -fx-padding: 5;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":".table-row-cell {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"    -fx-border-color: white;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"    -fx-table-cell-border-color: white;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"    -fx-alignment: center;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":".table-column {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"    -fx-alignment: center;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"    -fx-font-size: 8pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kflim":38,"-":3}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"\u003cfx:root minHeight\u003d\"300.0\" minWidth\u003d\"446.0\" prefHeight\u003d\"594.0\" prefWidth\u003d\"807.0\" stylesheets\u003d\"@HelpWindow.css\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"  \u003cLabel fx:id\u003d\"helpMessage\" alignment\u003d\"CENTER\" layoutX\u003d\"251.0\" layoutY\u003d\"14.0\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"39.0\" prefWidth\u003d\"303.0\" text\u003d\"Label\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"  \u003cTextField fx:id\u003d\"textField\" alignment\u003d\"CENTER\" layoutX\u003d\"313.0\" layoutY\u003d\"67.0\" prefHeight\u003d\"25.0\" prefWidth\u003d\"180.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"  \u003cLabel fx:id\u003d\"additionalInfo\" alignment\u003d\"CENTER\" layoutX\u003d\"105.0\" layoutY\u003d\"114.0\" prefHeight\u003d\"72.0\" prefWidth\u003d\"598.0\" style\u003d\"-fx-border-color: #DDDDDD;\" text\u003d\"Label\" textAlignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"  \u003cTableView fx:id\u003d\"tableView\" layoutX\u003d\"-1.0\" layoutY\u003d\"207.0\" prefHeight\u003d\"335.0\" prefWidth\u003d\"807.0\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"    \u003ccolumns\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"      \u003cTableColumn fx:id\u003d\"command\" maxWidth\u003d\"2000.0\" prefWidth\u003d\"123.0\" text\u003d\"Command\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"      \u003cTableColumn fx:id\u003d\"description\" minWidth\u003d\"200.0\" prefWidth\u003d\"679.0\" text\u003d\"Description\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"    \u003c/columns\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"  \u003c/TableView\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"  \u003cLabel fx:id\u003d\"userGuideMessage\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" layoutY\u003d\"542.0\" prefHeight\u003d\"50.0\" prefWidth\u003d\"745.0\" style\u003d\"-fx-wrap-text: true;\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"  \u003cButton fx:id\u003d\"copyButton\" alignment\u003d\"CENTER\" layoutX\u003d\"745.0\" layoutY\u003d\"542.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"50.0\" prefWidth\u003d\"61.0\" style\u003d\"-fx-wrap-text: true;\" text\u003d\"Button\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"kflim":16,"-":6}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"        \u003cURL value\u003d\"@TaskListPanel.css\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"        \u003cURL value\u003d\"@TaskListCard.css\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"        \u003cURL value\u003d\"@PersonListCard.css\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"        \u003cURL value\u003d\"@StatisticsDisplay.css\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"        \u003cURL value\u003d\"@AllTaskListPanel.css\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"            \u003cAnchorPane prefHeight\u003d\"250.0\" prefWidth\u003d\"160.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"                  \u003cSplitPane dividerPositions\u003d\"0.5\" layoutX\u003d\"51.0\" layoutY\u003d\"-14.0\" prefHeight\u003d\"160.0\" prefWidth\u003d\"340.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"                    \u003citems\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"                      \u003cAnchorPane fx:id\u003d\"resultDisplayPlaceholder\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"155.0\" prefWidth\u003d\"500.0\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"                      \u003cAnchorPane fx:id\u003d\"statisticsDisplayPlaceholder\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"160.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"                    \u003c/items\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"                  \u003c/SplitPane\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"               \u003c/children\u003e\u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"                     \u003cSplitPane dividerPositions\u003d\"0.5\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"                       \u003citems\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"                         \u003cAnchorPane fx:id\u003d\"personListSplitPanel\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"160.0\" prefWidth\u003d\"500.0\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"                         \u003cAnchorPane fx:id\u003d\"taskListSplitPanel\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"160.0\" prefWidth\u003d\"500.0\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"                       \u003c/items\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"                     \u003c/SplitPane\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"                  \u003c/children\u003e\u003c/StackPane\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"LeopardMerkava":7,"limzk126":23,"-":47}},{"path":"src/main/resources/view/PersonListCard.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"#name {","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"#address {","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    -fx-padding: 2 2 2 2;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"    -fx-border-color: lime green;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"#phone {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    -fx-padding: 2 2 2 2;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    -fx-border-color: lime green;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"#email {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    -fx-padding: 2 2 2 2;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    -fx-border-color: lime green;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"#description {","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"    -fx-padding: 2 2 2 2;","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"    -fx-border-color: lime green;","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"LeopardMerkava":7,"limzk126":24}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"  \u003cGridPane gridLinesVisible\u003d\"true\" hgap\u003d\"1.0\" vgap\u003d\"1.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"      \u003cColumnConstraints fx:id\u003d\"col0\" hgrow\u003d\"SOMETIMES\" minWidth\u003d\"100.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"         \u003cColumnConstraints hgrow\u003d\"NEVER\" minWidth\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\" GridPane.hgrow\u003d\"SOMETIMES\" GridPane.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"         \u003cFlowPane fx:id\u003d\"importance\" alignment\u003d\"CENTER_LEFT\" columnHalignment\u003d\"CENTER\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" style\u003d\"-fx-border-color: #000000;\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"         \u003cFlowPane\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"           \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id \" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"           \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"         \u003c/FlowPane\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" hgap\u003d\"1.0\" minWidth\u003d\"100.0\" style\u003d\"-fx-border-color: #000000;\" vgap\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"               \u003cInsets bottom\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"            \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"               \u003cInsets bottom\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"            \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"               \u003cInsets bottom\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"            \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"      \u003cLabel fx:id\u003d\"tasksDue\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$tasksDue\" GridPane.columnIndex\u003d\"2\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"wz27"},"content":"      \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LeopardMerkava":20,"limzk126":12,"-":17,"wz27":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"LeopardMerkava":2,"-":6}},{"path":"src/main/resources/view/StatisticsDisplay.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":".chart-pie-label-line {","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"    -fx-stroke: lime;","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"    -fx-fill: lime;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":".chart-pie-label {","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    -fx-fill: Cornsilk;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":".chart-legend {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"    -fx-max-width: 160;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":".chart-legend-item {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":".default-color0.chart-pie {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    -fx-pie-color: #00FF00","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":".default-color1.chart-pie {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    -fx-pie-color: lightblue;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":".default-color2.chart-pie {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    -fx-pie-color: red;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":".default-color3.chart-pie {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"    -fx-pie-color: orange;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"#pieChart {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    -fx-legend-side: left;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"limzk126":35}},{"path":"src/main/resources/view/StatisticsDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.chart.PieChart?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"\u003cVBox minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"      \u003cPieChart fx:id\u003d\"pieChart\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"limzk126":11}},{"path":"src/main/resources/view/TaskListCard.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"#id {","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"    -fx-min-width: 80.0;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"#taskList {","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"#taskName {","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"limzk126":10,"eugenecsa":3}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"wz27"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"\u003cHBox fx:id\u003d\"descriptionPane\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"wz27"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"wz27"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"wz27"},"content":"            \u003cLabel fx:id\u003d\"id\" text\u003d\"\\$id\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"wz27"},"content":"            \u003cLabel fx:id\u003d\"taskName\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$taskName\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"wz27"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"wz27"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"30\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"wz27"},"content":"            \u003cLabel fx:id\u003d\"taskDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$taskDate\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"wz27"},"content":"            \u003cLabel fx:id\u003d\"taskTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$taskTime\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"            \u003cLabel fx:id\u003d\"taskVenue\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$taskVenue\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"wz27"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"wz27"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"limzk126":9,"wz27":12}},{"path":"src/main/resources/view/TaskListPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"#taskListPanelHeader {","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"    -fx-background-color: black;","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"    -fx-text-fill: lime green;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"limzk126":6}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"\u003cVBox fx:id\u003d\"vbox\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"      \u003cLabel fx:id\u003d\"taskListPanelHeader\" prefWidth\u003d\"${taskListPanelHeader.parent.width}\" text\u003d\"Task List\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"      \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"limzk126":12}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"    \"description\" : \"\",","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"    \"isImportant\" : \"false\"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"    \"description\" : \"\",","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"    \"isImportant\" : \"false\"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LeopardMerkava":6,"-":11}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"    \"description\" : \"\",","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"    \"isImportant\" : \"false\"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LeopardMerkava":3,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"    \"description\" : \"\",","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"    \"isImportant\" : \"false\"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"    \"description\" : \"\",","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"    \"isImportant\" : \"false\"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LeopardMerkava":6,"-":12}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"    \"description\" : \"\",","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"    \"isImportant\" : \"false\"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LeopardMerkava":3,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"    \"tasks\" : [ {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"eat\",","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    }, {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"sleep\",","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    }, {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"study\",","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    } ],","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"    \"description\" : \"Owner of Lunta Inc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"    \"isImportant\" : \"true\"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"    \"tasks\" : [ {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"a\",","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"    }, {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"bc\",","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"    }, {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"c\",","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    } ],","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"    \"description\" : \"HR in Sarimba\",","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"    \"isImportant\" : \"true\"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"    \"name\" : \"Benjamin Wesley\",","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"    \"phone\" : \"88956321\",","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"    \"email\" : \"benwe@example.com\",","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"    \"address\" : \"23, Coleman Street, #05-30\",","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"    \"tagged\" : [ \"cousin\" ],","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"    \"tasks\" : [ {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"eat\",","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"    }, {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"sleep\",","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"    }, {","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"study\",","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"    } ],","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"    \"description\" : \"\",","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"    \"isImportant\" : \"false\"","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  },{","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"LeopardMerkava"},"content":"    \"tasks\" : [ ],","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"LeopardMerkava"},"content":"    \"description\" : \"\",","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"LeopardMerkava"},"content":"    \"isImportant\" : \"false\"","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"limzk126"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"    \"tasks\" : [ {","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"c\",","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"    }, {","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"d\",","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"    }, {","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"e\",","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"    } ],","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"LeopardMerkava"},"content":"    \"description\" : \"Potential Client?\",","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"LeopardMerkava"},"content":"    \"isImportant\" : \"true\"","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"limzk126"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"eugenecsa"},"content":"    \"tasks\" : [ {","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"consult prof Damith about project iteration v1.\",","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"eugenecsa"},"content":"    } ],","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"LeopardMerkava"},"content":"    \"description\" : \"CS2103/T Teammate\",","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"LeopardMerkava"},"content":"    \"isImportant\" : \"true\"","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"limzk126"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-14"},{"lineNumber":141,"author":{"gitId":"eugenecsa"},"content":"    \"tasks\" : [ {","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"a\",","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"eugenecsa"},"content":"    } ],","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"LeopardMerkava"},"content":"    \"description\" : \"b\",","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"LeopardMerkava"},"content":"    \"isImportant\" : \"false\"","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"limzk126"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"eugenecsa"},"content":"    \"tasks\" : [ {","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"limzk126"},"content":"      \"daysPriorToTaskDate\": 3,","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"eugenecsa"},"content":"      \"taskName\" : \"asdasd\",","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"eugenecsa"},"content":"      \"taskDate\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"eugenecsa"},"content":"      \"taskTime\" : null,","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"eugenecsa"},"content":"      \"taskVenue\" : null","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"eugenecsa"},"content":"    } ],","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"LeopardMerkava"},"content":"    \"description\" : \"fffffffffffffff\",","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"LeopardMerkava"},"content":"    \"isImportant\" : \"false\"","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LeopardMerkava":17,"limzk126":22,"kflim":5,"-":40,"eugenecsa":82}},{"path":"src/test/java/seedu/address/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"    public void equals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"        assertNotEquals(null, guiSettings);","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"kflim":13}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"LeopardMerkava"},"content":"    public void testSingularorPlural() {","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"LeopardMerkava"},"content":"        assertEquals(\"tasks\", StringUtil.singularOrPlural(\"task\", 2));","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"LeopardMerkava"},"content":"        assertEquals(\"task\", StringUtil.singularOrPlural(\"task\", 1));","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"LeopardMerkava"},"content":"        assertEquals(\"pets\", StringUtil.singularOrPlural(\"pet\", 2));","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"LeopardMerkava"},"content":"        assertEquals(\"pet\", StringUtil.singularOrPlural(\"pet\", 1));","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"LeopardMerkava":9,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"wz27"},"content":"        String deleteCommand \u003d \"rm 9\";","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"                + ADDRESS_DESC_AMY + DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"limzk126"},"content":"    public void getDisplayTaskList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"        Task[] taskList \u003d {};","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"        ObservableList\u003cTask\u003e observableList \u003d FXCollections.observableList(Arrays.asList(taskList));","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"        FilteredList\u003cTask\u003e filteredTasks \u003d new FilteredList\u003c\u003e(observableList);","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"        assertEquals(logic.getDisplayTaskList(), (ObservableList\u003cTask\u003e) filteredTasks);","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"    public void getDisplayTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getDisplayTaskList().remove(0));","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"LeopardMerkava":2,"limzk126":16,"-":162,"wz27":1}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"                        validPerson,","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"                        validPerson.getTasks().size(),","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"                        StringUtil.singularOrPlural(\"task\", validPerson.getTasks().size())","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"                ), expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"LeopardMerkava":6,"-":44}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.TaskListManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"                validPerson,","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"                validPerson.getTasks().size(),","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"                StringUtil.singularOrPlural(\"task\", validPerson.getTasks().size())","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"            ), commandResult.getFeedbackToUser()","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"        );","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"limzk126"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"limzk126"},"content":"        public void displayPersonTaskList(Person person) {","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"limzk126"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"kflim"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"kflim"},"content":"        public void displayFilteredPersonTaskList(Person person, Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"kflim"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"wz27"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"wz27"},"content":"        public void displayFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"wz27"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"limzk126"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"limzk126"},"content":"        public ObservableList\u003cTask\u003e getDisplayTaskList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"limzk126"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"limzk126"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"wz27"},"content":"        public void updateSortedPersonList(boolean isReverseOrder) {","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"wz27"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"limzk126"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"limzk126"},"content":"        public ObservableList\u003cPieChart.Data\u003e getStatistics() {","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"limzk126"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"LeopardMerkava"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"LeopardMerkava"},"content":"        public void addCommand(String command) {","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"LeopardMerkava"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"limzk126"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"limzk126"},"content":"        public TaskListManager getTaskListManager() {","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"limzk126"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"LeopardMerkava"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"LeopardMerkava"},"content":"        public String getBefore() {","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"LeopardMerkava"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"LeopardMerkava"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"LeopardMerkava"},"content":"        public String getAfter() {","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"LeopardMerkava"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"limzk126"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"limzk126"},"content":"        public ObservableList\u003cPerson\u003e getObservablePersonList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"limzk126"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"limzk126"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"limzk126"},"content":"        public void updateObservablePersonList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"limzk126"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"limzk126"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"limzk126"},"content":"        public void setViewAllTasksFindPred(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"limzk126"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"LeopardMerkava":22,"limzk126":41,"kflim":5,"-":192,"wz27":8}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_LIST_1;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_LIST_2;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"    public void constructor_nullArg_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null, null));","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"                new AddTaskCommand(","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"                    Index.fromOneBased(model.getFilteredPersonList().size()),","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"                    null)","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"        );","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"        taskList.add(new Task(new TaskName(\"Task1\"), null, null, null));","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null, taskList));","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"    public void constructor_correctArgs_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"        assertAll(() -\u003e new AddTaskCommand(INDEX_FIRST_PERSON, VALID_TASK_LIST_1));","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"    public void execute_addTask_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(personToEdit.getTasks());","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"        List\u003cTask\u003e newTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"        newTasks.add(new Task(new TaskName(\"walk\"), null, null, null));","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"        tasks.addAll(newTasks);","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), tasks, personToEdit.getDescription(),","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.isImportant()","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"        );","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(INDEX_FIRST_PERSON, newTasks);","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"                AddTaskCommand.MESSAGE_SUCCESS, newTasks.size(),","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"                StringUtil.singularOrPlural(\"task\", newTasks.size()), personToEdit.getName()","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"        );","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"        assertCommandSuccess(addTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"kflim"},"content":"    public void execute_invalidPersonIndex_failure() {","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"kflim"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(outOfBoundIndex, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"kflim"},"content":"        assertCommandFailure(addTaskCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"        final AddTaskCommand standardCommand \u003d new AddTaskCommand(INDEX_FIRST_PERSON, VALID_TASK_LIST_1);","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"LeopardMerkava"},"content":"        AddTaskCommand commandWithSameValues \u003d new AddTaskCommand(INDEX_FIRST_PERSON, VALID_TASK_LIST_1);","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"LeopardMerkava"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"LeopardMerkava"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"LeopardMerkava"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"LeopardMerkava"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"LeopardMerkava"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"LeopardMerkava"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"LeopardMerkava"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"LeopardMerkava"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"LeopardMerkava"},"content":"        assertFalse(standardCommand.equals(new AddTaskCommand(INDEX_SECOND_PERSON, VALID_TASK_LIST_1)));","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"LeopardMerkava"},"content":"        // different tasklist -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"LeopardMerkava"},"content":"        assertFalse(standardCommand.equals(new AddTaskCommand(INDEX_FIRST_PERSON, VALID_TASK_LIST_2)));","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LeopardMerkava":67,"kflim":39,"eugenecsa":3}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"wz27"},"content":"        assertCommandSuccess(new DeleteCommand(), model, DeleteCommand.MESSAGE_DELETE_ALL_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"wz27"},"content":"        assertCommandSuccess(new DeleteCommand(), model, DeleteCommand.MESSAGE_DELETE_ALL_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":30,"wz27":2}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"    public static final String VALID_TASK_NAME_TASK1 \u003d \"task 1\";","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"    public static final String VALID_TASK_NAME_TASK2 \u003d \"task 2\";","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"    public static final List\u003cTask\u003e VALID_TASK_LIST_1 \u003d new ArrayList\u003cTask\u003e(","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"            Arrays.asList(new Task(new TaskName(VALID_TASK_NAME_TASK1), null, null, null))","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"    );","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"    public static final List\u003cTask\u003e VALID_TASK_LIST_2 \u003d new ArrayList\u003cTask\u003e(","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"            Arrays.asList(new Task(new TaskName(VALID_TASK_NAME_TASK2), null, null, null))","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"    );","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String VALID_DESCRIPTION_AMY \u003d \"Owner of platinum membership\";","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String VALID_DESCRIPTION_BOB \u003d \"Potential Chinese Supplier\";","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String DESCRIPTION_DESC_AMY \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String DESCRIPTION_DESC_BOB \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String INVALID_TASK \u003d \"   \";","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String INVALID_DESCRIPTION_DESC \u003d \" \" + PREFIX_DESCRIPTION","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"            + \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"            + \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"            + \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"            + \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"            + \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"            + \"1\"; // More than 500 characters is not allowed","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"                .withTags(VALID_TAG_FRIEND).withDescription(VALID_DESCRIPTION_AMY).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"LeopardMerkava"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withDescription(VALID_DESCRIPTION_BOB).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"kflim"},"content":"            System.out.println(result.getFeedbackToUser());","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"kflim"},"content":"            System.out.println(expectedCommandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"LeopardMerkava":20,"kflim":2,"-":126,"eugenecsa":5}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"    public void execute_validIndexUnfilteredListWithoutFlag_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"    public void execute_validIndexUnfilteredListWithFlag_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"        String expectedMessage \u003d DeleteCommand.MESSAGE_DELETE_PEOPLE_SUCCESS + System.lineSeparator() + personToDelete;","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"    public void execute_invalidIndexUnfilteredListWithoutFlag_throwsCommandException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"    public void execute_invalidIndexUnfilteredListWithFlag_throwsCommandException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(outOfBoundIndex));","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"    public void execute_validIndexFilteredListWithoutFlag_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"kflim"},"content":"    public void execute_validIndexFilteredListWithFlag_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"kflim"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"kflim"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"kflim"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"kflim"},"content":"        String expectedMessage \u003d DeleteCommand.MESSAGE_DELETE_PEOPLE_SUCCESS + System.lineSeparator() + personToDelete;","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"kflim"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"kflim"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"kflim"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"kflim"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"kflim"},"content":"    public void execute_invalidIndexFilteredListWithoutFlag_throwsCommandException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"kflim"},"content":"    public void execute_invalidIndexFilteredListWithFlag_throwsCommandException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"kflim"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"kflim"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"kflim"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"kflim"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"kflim"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(outOfBoundIndex));","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"kflim"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kflim":56,"-":105}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":" * {@code DeleteTaskCommand}.","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"class DeleteTaskCommandTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"    public void constructor_nullArgs_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"        Index targetTasksIndex \u003d Index.fromZeroBased(model.getFilteredPersonList()","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"                        .get(1)","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"                        .getTasks()","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"                        .size());","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cIndex\u003e targetTaskIndexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"        targetTaskIndexList.add(targetTasksIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTaskCommand(null, null));","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTaskCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTaskCommand(null, targetTaskIndexList));","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"    public void constructor_correctArgs_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"        Index targetTasksIndex \u003d Index.fromOneBased(model.getFilteredPersonList()","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"                .get(0)","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"                .getTasks()","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"                .size());","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cIndex\u003e targetTaskIndexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"        targetTaskIndexList.add(targetTasksIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"        assertAll(() -\u003e new DeleteTaskCommand(INDEX_FIRST_PERSON, targetTaskIndexList));","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"    void execute_invalidTargetPersonIndex_throwsCommandException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"        Index targetPersonIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size());","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"        Index targetTask \u003d Index.fromZeroBased(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cIndex\u003e targetTaskIndexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"        targetTaskIndexList.add(targetTask);","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(targetPersonIndex, targetTaskIndexList);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"        CommandException commandException \u003d Assertions.assertThrows(","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"            CommandException.class, () -\u003e deleteTaskCommand.execute(model));","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"        assert commandException !\u003d null;","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"        assertEquals(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, commandException.getMessage());","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"    void execute_invalidTargetTaskIndex_throwsCommandException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"        Person person \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"        Name personName \u003d person.getName();","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"        Index targetTaskIndex \u003d Index.fromZeroBased(person.getTasks().size());","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cIndex\u003e targetTaskIndexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"LeopardMerkava"},"content":"        targetTaskIndexList.add(targetTaskIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON, targetTaskIndexList);","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"        CommandException commandException \u003d Assertions.assertThrows(","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"            CommandException.class, () -\u003e deleteTaskCommand.execute(model));","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"        assert commandException !\u003d null;","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"        assertEquals(String.format(Messages.MESSAGE_INVALID_TASK, personName),","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"                commandException.getMessage());","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"limzk126"},"content":"    void execute_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":"            Index personIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"limzk126"},"content":"            Person person \u003d model.getFilteredPersonList().get(personIndex.getZeroBased());","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"limzk126"},"content":"            List\u003cTask\u003e taskListCopy \u003d new ArrayList\u003c\u003e(person.getTasks());","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"            Index targetTaskIndex \u003d Index.fromOneBased(taskListCopy.size());","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"LeopardMerkava"},"content":"            List\u003cIndex\u003e targetTaskIndexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"LeopardMerkava"},"content":"            targetTaskIndexList.add(targetTaskIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"LeopardMerkava"},"content":"            taskListCopy.remove(targetTaskIndex.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"LeopardMerkava"},"content":"            DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(personIndex, targetTaskIndexList);","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"LeopardMerkava"},"content":"            String feedback \u003d String.format(DeleteTaskCommand.MESSAGE_SUCCESS, 1, \"task\", person.getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"LeopardMerkava"},"content":"            CommandResult resultCopy \u003d new CommandResult(feedback);","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"LeopardMerkava"},"content":"            CommandResult result \u003d deleteTaskCommand.execute(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"LeopardMerkava"},"content":"            person \u003d model.getFilteredPersonList().get(personIndex.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"LeopardMerkava"},"content":"            assertEquals(person.getTasks(), taskListCopy);","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"LeopardMerkava"},"content":"            assertEquals(result, resultCopy);","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"LeopardMerkava"},"content":"            fail();","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"LeopardMerkava"},"content":"    void execute_success_multiple() {","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"LeopardMerkava"},"content":"            Index personIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"LeopardMerkava"},"content":"            Person person \u003d model.getFilteredPersonList().get(personIndex.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"LeopardMerkava"},"content":"            List\u003cTask\u003e taskListCopy \u003d new ArrayList\u003c\u003e(person.getTasks());","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"LeopardMerkava"},"content":"            Index targetTaskIndex \u003d Index.fromOneBased(taskListCopy.size());","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"LeopardMerkava"},"content":"            Index targetTaskIndex2 \u003d Index.fromOneBased(taskListCopy.size() - 1);","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"LeopardMerkava"},"content":"            List\u003cIndex\u003e targetTaskIndexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"LeopardMerkava"},"content":"            targetTaskIndexList.add(targetTaskIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"LeopardMerkava"},"content":"            targetTaskIndexList.add(targetTaskIndex2);","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"limzk126"},"content":"            taskListCopy.remove(targetTaskIndex.getZeroBased());","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"LeopardMerkava"},"content":"            taskListCopy.remove(targetTaskIndex.getZeroBased() - 1);","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":141,"author":{"gitId":"LeopardMerkava"},"content":"            DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(personIndex, targetTaskIndexList);","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"LeopardMerkava"},"content":"            String feedback \u003d String.format(DeleteTaskCommand.MESSAGE_SUCCESS, 2, \"tasks\", person.getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"limzk126"},"content":"            CommandResult resultCopy \u003d new CommandResult(feedback);","lastModifiedDate":"2021-10-14"},{"lineNumber":145,"author":{"gitId":"limzk126"},"content":"            CommandResult result \u003d deleteTaskCommand.execute(model);","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"limzk126"},"content":"            person \u003d model.getFilteredPersonList().get(personIndex.getZeroBased());","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":149,"author":{"gitId":"limzk126"},"content":"            assertEquals(person.getTasks(), taskListCopy);","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"limzk126"},"content":"            assertEquals(result, resultCopy);","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"limzk126"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"limzk126"},"content":"            fail();","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"limzk126"},"content":"    void getCommand_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":158,"author":{"gitId":"limzk126"},"content":"        String commandWord \u003d DeleteTaskCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"LeopardMerkava"},"content":"        Index targetTaskIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"LeopardMerkava"},"content":"        Index targetTaskIndex2 \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"LeopardMerkava"},"content":"        Index targetTaskIndex3 \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cIndex\u003e targetTaskIndexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"LeopardMerkava"},"content":"        targetTaskIndexList.add(targetTaskIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"limzk126"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-14"},{"lineNumber":167,"author":{"gitId":"LeopardMerkava"},"content":"                targetTaskIndexList);","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"limzk126"},"content":"        assertEquals(deleteTaskCommand.getCommand(), commandWord);","lastModifiedDate":"2021-10-14"},{"lineNumber":169,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"LeopardMerkava"},"content":"        targetTaskIndexList.add(targetTaskIndex2);","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"LeopardMerkava"},"content":"        targetTaskIndexList.add(targetTaskIndex3);","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"LeopardMerkava"},"content":"        DeleteTaskCommand deleteTaskCommand2 \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"LeopardMerkava"},"content":"                targetTaskIndexList);","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"LeopardMerkava"},"content":"        assertEquals(deleteTaskCommand2.getCommand(), commandWord);","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"limzk126"},"content":"    void getDescription_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":180,"author":{"gitId":"limzk126"},"content":"        String description \u003d DeleteTaskCommand.DESCRIPTION;","lastModifiedDate":"2021-10-14"},{"lineNumber":181,"author":{"gitId":"LeopardMerkava"},"content":"        Index targetTaskIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cIndex\u003e targetTaskIndexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"LeopardMerkava"},"content":"        targetTaskIndexList.add(targetTaskIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"limzk126"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-14"},{"lineNumber":185,"author":{"gitId":"LeopardMerkava"},"content":"                targetTaskIndexList);","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"limzk126"},"content":"        assertEquals(deleteTaskCommand.getDescription(), description);","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":190,"author":{"gitId":"limzk126"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":191,"author":{"gitId":"LeopardMerkava"},"content":"        Index targetTaskIndex1 \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"LeopardMerkava"},"content":"        Index targetTaskIndex2 \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cIndex\u003e targetTaskIndexList1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cIndex\u003e targetTaskIndexList2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cIndex\u003e targetTaskIndexList3 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"LeopardMerkava"},"content":"        targetTaskIndexList1.add(targetTaskIndex1);","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"LeopardMerkava"},"content":"        targetTaskIndexList2.add(targetTaskIndex2);","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"LeopardMerkava"},"content":"        targetTaskIndexList3.add(targetTaskIndex1);","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"LeopardMerkava"},"content":"        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON, targetTaskIndexList1);","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"LeopardMerkava"},"content":"        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON, targetTaskIndexList2);","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"LeopardMerkava"},"content":"        DeleteTaskCommand deleteThirdCommand \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON, targetTaskIndexList3);","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":206,"author":{"gitId":"limzk126"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":207,"author":{"gitId":"limzk126"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":208,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":209,"author":{"gitId":"limzk126"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":210,"author":{"gitId":"LeopardMerkava"},"content":"        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON, targetTaskIndexList1);","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"limzk126"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-14"},{"lineNumber":212,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":213,"author":{"gitId":"limzk126"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":214,"author":{"gitId":"limzk126"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-14"},{"lineNumber":215,"author":{"gitId":"limzk126"},"content":"        assertFalse(deleteFirstCommand.equals(new DeleteCommand(INDEX_FIRST_PERSON)));","lastModifiedDate":"2021-10-14"},{"lineNumber":216,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":217,"author":{"gitId":"limzk126"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":218,"author":{"gitId":"limzk126"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":219,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":220,"author":{"gitId":"limzk126"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":221,"author":{"gitId":"limzk126"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":222,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":223,"author":{"gitId":"limzk126"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":224,"author":{"gitId":"LeopardMerkava"},"content":"        assertFalse(deleteFirstCommand.equals(new DeleteTaskCommand(INDEX_SECOND_PERSON, targetTaskIndexList1)));","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"LeopardMerkava"},"content":"        // different list but same tasks -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"LeopardMerkava"},"content":"        assertTrue(deleteFirstCommand.equals(deleteThirdCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"LeopardMerkava"},"content":"        // different list \u0026 different tasks -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"LeopardMerkava"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":232,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"LeopardMerkava":91,"limzk126":141}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"        Person person \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"        expectedModel.setPerson(person, editedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"limzk126":2,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"        // different description-\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withDescription(VALID_DESCRIPTION_BOB).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"LeopardMerkava":5,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/EditTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_TASK1;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_TASK2;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"public class EditTaskCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    private EditTaskCommand.EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"        editTaskDescriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(personToEdit.getTasks());","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"        Task newTask \u003d new Task(new TaskName(\"walk\"), null, null, null);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"        editTaskDescriptor.setTaskName(new TaskName(\"walk\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"        tasks.set(0, newTask);","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), tasks, personToEdit.getDescription(),","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.isImportant()","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"        );","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK, editTaskDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, newTask.toString());","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"    public void execute_outOfBoundsPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"        Person person \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"        Index outOfBoundIndex \u003d Index.fromZeroBased(person.getTasks().size());","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"        editTaskDescriptor.setTaskName(new TaskName(\"walk\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"                INDEX_FIRST_PERSON, outOfBoundIndex, editTaskDescriptor","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"        );","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"        assertCommandFailure(","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"                editTaskCommand, model, String.format(EditTaskCommand.MESSAGE_INVALID_TASK, person.getName())","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"        );","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"    public void execute_duplicateTask_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"        Person person \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d person.getTasks().get(0);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"        editTaskDescriptor.setTaskName(task.getTaskName());","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"        editTaskDescriptor.setTaskDate(task.getDate());","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"        editTaskDescriptor.setTaskTime(task.getTime());","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"        editTaskDescriptor.setTaskVenue(task.getVenue());","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK, editTaskDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"        editTaskDescriptor.setTaskName(new TaskName(VALID_TASK_NAME_TASK1));","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex, INDEX_FIRST_TASK,","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"                editTaskDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"        editTaskDescriptor.setTaskName(new TaskName(VALID_TASK_NAME_TASK1));","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex, INDEX_FIRST_TASK,","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"                editTaskDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"        EditTaskCommand.EditTaskDescriptor standardDescriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"        standardDescriptor.setTaskName(new TaskName(VALID_TASK_NAME_TASK1));","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"eugenecsa"},"content":"        final EditTaskCommand standardCommand \u003d new EditTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK,","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"eugenecsa"},"content":"                standardDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"eugenecsa"},"content":"        editTaskDescriptor.setTaskName(new TaskName(VALID_TASK_NAME_TASK1));","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"eugenecsa"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"eugenecsa"},"content":"        EditTaskCommand commandWithSameValues \u003d new EditTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK,","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"eugenecsa"},"content":"                editTaskDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"eugenecsa"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"eugenecsa"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"eugenecsa"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"eugenecsa"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"eugenecsa"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"eugenecsa"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"eugenecsa"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"eugenecsa"},"content":"        editTaskDescriptor.setTaskName(new TaskName(VALID_TASK_NAME_TASK1));","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"eugenecsa"},"content":"        // different person index -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"eugenecsa"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_SECOND_PERSON, INDEX_FIRST_TASK,","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"eugenecsa"},"content":"                editTaskDescriptor)));","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"eugenecsa"},"content":"        editTaskDescriptor.setTaskName(new TaskName(VALID_TASK_NAME_TASK1));","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"eugenecsa"},"content":"        // different task index -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"eugenecsa"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_FIRST_PERSON, INDEX_SECOND_TASK,","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"eugenecsa"},"content":"                editTaskDescriptor)));","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"eugenecsa"},"content":"        editTaskDescriptor.setTaskName(new TaskName(VALID_TASK_NAME_TASK2));","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"eugenecsa"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"eugenecsa"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK,","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"eugenecsa"},"content":"                editTaskDescriptor)));","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LeopardMerkava":3,"kflim":34,"eugenecsa":117}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import static seedu.address.testutil.TypicalPersons.BENJAMIN;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.TasksContainKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"    public void findPersons_zeroKeywords_failure() {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"kflim"},"content":"    public void findByNameOneKeyword_multiplePersonsFound_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"kflim"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"kflim"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\"ben\");","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"kflim"},"content":"        assertEquals(Arrays.asList(BENSON, BENJAMIN), model.getFilteredPersonList());","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"kflim"},"content":"    public void findByNameMultipleKeywords_singlePersonsFound_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"kflim"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"kflim"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\"dan me\");","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"kflim"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"kflim"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"kflim"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"kflim"},"content":"        assertEquals(List.of(DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"kflim"},"content":"    public void findByPhoneOneKeyword_multiplePersonsFound_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"kflim"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d preparePhonePredicate(\"948\");","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"kflim"},"content":"        assertEquals(Arrays.asList(ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"kflim"},"content":"    public void findByAddressOneKeyword_multiplePersonsFound_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"kflim"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"kflim"},"content":"        AddressContainsKeywordsPredicate predicate \u003d prepareAddressPredicate(\"street\");","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"kflim"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"kflim"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"kflim"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"kflim"},"content":"        assertEquals(Arrays.asList(BENJAMIN, CARL, DANIEL, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"kflim"},"content":"    public void findByAddressMultipleKeywords_singlePersonFound_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"kflim"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"kflim"},"content":"        AddressContainsKeywordsPredicate predicate \u003d prepareAddressPredicate(\"michegan ave\");","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"kflim"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"kflim"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"kflim"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"kflim"},"content":"        assertEquals(List.of(ELLE), model.getFilteredPersonList());","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"kflim"},"content":"    public void findByEmailOneKeyword_singlePersonFound_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"kflim"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"kflim"},"content":"        EmailContainsKeywordsPredicate predicate \u003d prepareEmailPredicate(\"heinz\");","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"kflim"},"content":"        assertEquals(List.of(CARL), model.getFilteredPersonList());","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"kflim"},"content":"    public void findByTagOneKeyword_multiplePersonsFound_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"kflim"},"content":"        TagsContainKeywordsPredicate predicate \u003d prepareTagPredicate(\"friend\");","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"kflim"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"kflim"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"kflim"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"kflim"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"kflim"},"content":"    public void findByTaskOneKeyword_singlePersonFound_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"kflim"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"kflim"},"content":"        TasksContainKeywordsPredicate predicate \u003d prepareTasksPredicate(\"sleep\");","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"kflim"},"content":"        assertEquals(Arrays.asList(ALICE, BENJAMIN), model.getFilteredPersonList());","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":162,"author":{"gitId":"kflim"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"kflim"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.trim().split(\"\\\\s+\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"kflim"},"content":"     * Parses {@code userInput} into a {@code PhoneContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"kflim"},"content":"    private PhoneContainsKeywordsPredicate preparePhonePredicate(String userInput) {","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"kflim"},"content":"        return new PhoneContainsKeywordsPredicate(Arrays.asList(userInput.trim().split(\"\\\\s+\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"kflim"},"content":"     * Parses {@code userInput} into a {@code EmailContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"kflim"},"content":"    private EmailContainsKeywordsPredicate prepareEmailPredicate(String userInput) {","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"kflim"},"content":"        return new EmailContainsKeywordsPredicate(Arrays.asList(userInput.trim().split(\"\\\\s+\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"kflim"},"content":"     * Parses {@code userInput} into a {@code AddressContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"kflim"},"content":"    private AddressContainsKeywordsPredicate prepareAddressPredicate(String userInput) {","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"kflim"},"content":"        return new AddressContainsKeywordsPredicate(Arrays.asList(userInput.trim().split(\"\\\\s+\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"kflim"},"content":"     * Parses {@code userInput} into a {@code TagContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"kflim"},"content":"    private TagsContainKeywordsPredicate prepareTagPredicate(String userInput) {","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"kflim"},"content":"        return new TagsContainKeywordsPredicate(Arrays.asList(userInput.trim().split(\"\\\\s+\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"kflim"},"content":"     * Parses {@code userInput} into a {@code TagContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"kflim"},"content":"    private TasksContainKeywordsPredicate prepareTasksPredicate(String userInput) {","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"kflim"},"content":"        return new TasksContainKeywordsPredicate(Arrays.asList(userInput.trim().split(\"\\\\s+\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kflim":116,"-":84}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"public class SortCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"    public void execute_sortPersonList_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"        SortCommand sortCommand \u003d new SortCommand(true);","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"        String expectedMessage \u003d \"Sorted all persons in reverse order\";","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"        expectedModel.updateSortedPersonList(true);","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kflim":24}},{"path":"src/test/java/seedu/address/logic/commands/ViewTaskListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"import seedu.address.model.task.TaskMatchesKeywordPredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"public class ViewTaskListCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"        ViewTaskListCommand viewTaskListFirstCommand \u003d new ViewTaskListCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"        ViewTaskListCommand viewTaskListSecondCommand \u003d new ViewTaskListCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"        ViewTaskListCommand viewFilteredTaskListCommand \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"                new ViewTaskListCommand(INDEX_FIRST_PERSON, Arrays.asList(\"cook\", \"project\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"        assertEquals(viewTaskListFirstCommand, viewTaskListFirstCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"        ViewTaskListCommand viewTaskListFirstCommandCopy \u003d new ViewTaskListCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"        assertEquals(viewTaskListFirstCommand, viewTaskListFirstCommandCopy);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"        assertFalse(viewTaskListFirstCommand.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"        assertNotEquals(null, viewTaskListFirstCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"        assertNotEquals(viewTaskListFirstCommand, viewTaskListSecondCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"        // different keywords -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"        assertNotEquals(viewTaskListFirstCommand, viewFilteredTaskListCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"    void execute_invalidTargetPersonIndex_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"        Index targetPersonIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"        ViewTaskListCommand viewTaskListCommand \u003d new ViewTaskListCommand(targetPersonIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"        assertCommandFailure(viewTaskListCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"    void execute_validTargetPersonIndex_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"        ViewTaskListCommand viewTaskListCommand \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"                new ViewTaskListCommand(INDEX_FIRST_PERSON, Arrays.asList(\"sleep\", \"work\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"        String expectedMessage \u003d String.format(ViewTaskListCommand.MESSAGE_VIEW_TASKS_SUCCESS, personToView.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"        expectedModel.displayFilteredPersonTaskList(personToView,","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"                new TaskMatchesKeywordPredicate(Arrays.asList(\"sleep\", \"work\")));","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"        assertCommandSuccess(viewTaskListCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kflim":77}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + DESCRIPTION_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + DESCRIPTION_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + DESCRIPTION_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + DESCRIPTION_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + DESCRIPTION_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + DESCRIPTION_DESC_BOB,","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"                + DESCRIPTION_DESC_AMY,","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"LeopardMerkava"},"content":"                + DESCRIPTION_DESC_BOB,","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"LeopardMerkava"},"content":"                + DESCRIPTION_DESC_BOB,","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"LeopardMerkava"},"content":"                + DESCRIPTION_DESC_BOB,","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"LeopardMerkava"},"content":"                + DESCRIPTION_DESC_BOB,","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"LeopardMerkava"},"content":"                + VALID_DESCRIPTION_BOB,","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"LeopardMerkava":22,"-":129}},{"path":"src/test/java/seedu/address/logic/parser/AddTaskParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.Venue;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"public class AddTaskParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"    private AddTaskCommandParser parser \u003d new AddTaskCommandParser();","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    void parse_validArgs_returnsAddTaskCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e taskList1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        taskList1.add(new Task(new TaskName(\"play\"), null, null, null));","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e taskList2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        taskList2.add(new Task(new TaskName(\"play\"), null, null, null));","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"        taskList2.add(new Task(new TaskName(\"sleep\"), null, null, new Venue(\"Home\")));","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"        assertParseSuccess(parser, \"1 -tn play\", new AddTaskCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"                taskList1));","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"        assertParseSuccess(parser, \"1 -tn play -tn sleep -ta Home\", new AddTaskCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"                taskList2));","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"    void parse_invalidArgs_throwParseException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"                AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, \"1 tas/a\", expectedMessage);","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"LeopardMerkava":33,"eugenecsa":7}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"/*import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;*/","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"wz27"},"content":"/*import seedu.address.testutil.EditPersonDescriptorBuilder;*/","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"    public void parseCommand_addTask() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"        String command \u003d AddTaskCommand.COMMAND_WORD + \" 1 \" + PREFIX_TASK_DESCRIPTION + \"blob \";","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"        String moreTask \u003d PREFIX_TASK_DESCRIPTION + \"blob2\";","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"        assertTrue(parser.parseCommand(command) instanceof AddTaskCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"        assertTrue(parser.parseCommand(command + moreTask) instanceof AddTaskCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"wz27"},"content":"    /*@Test","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"wz27"},"content":"    }*/","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"    /*@Test","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"kflim"},"content":"    }*/","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"wz27"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" add\") instanceof HelpCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"LeopardMerkava":7,"kflim":2,"-":87,"eugenecsa":3,"wz27":6}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"        assertParseSuccess(parser, \"-m 1\", new DeleteCommand(List.of(INDEX_FIRST_PERSON)));","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"        assertParseSuccess(parser, \"-m 1 2\",","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"                new DeleteCommand(Arrays.asList(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON)));","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"        assertParseFailure(parser, \"a\", String.format(","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"        assertParseFailure(parser, \"-m\", String.format(","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"        assertParseFailure(parser, \"-m a\", String.format(","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"limzk126":2,"kflim":11,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"class DeleteTaskCommandParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    void parse_validArgs_returnsDeleteTaskCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cIndex\u003e indexList1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"        Index taskIndex2 \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"        Index taskIndex1 \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"        indexList1.add(taskIndex2);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cIndex\u003e indexList2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"        indexList2.add(taskIndex1);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"        indexList2.add(taskIndex2);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"        assertParseSuccess(parser, \"1 -ti 2\", new DeleteTaskCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"                indexList1));","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"        assertParseSuccess(parser, \"1 -ti 2 -ti 2 -ti 2\", new DeleteTaskCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"                indexList1));","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"        assertParseSuccess(parser, \"1 -ti 2 -ti 1\", new DeleteTaskCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"                indexList2));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"    void parse_invalidArgs_throwParseException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"                DeleteTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"        assertParseFailure(parser, \"1ti/2\", expectedMessage);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, \"1 ti2\", expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, \"1 ti/\", expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, \"1 ti/ew\", expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, \"1 ti/1 ew\", expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, \"ti/2\", expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, \"ex ti/2\", expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, \"1 ti/2 n/Bob\", expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"LeopardMerkava":22,"limzk126":27,"eugenecsa":3}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESCRIPTION_DESC;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DESCRIPTION_DESC, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"LeopardMerkava"},"content":"        // desc","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"LeopardMerkava"},"content":"        userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"LeopardMerkava"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDescription(VALID_DESCRIPTION_AMY).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"LeopardMerkava"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"LeopardMerkava"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"LeopardMerkava":11,"-":210}},{"path":"src/test/java/seedu/address/logic/parser/EditTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_TASK1;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.commands.EditTaskCommand.MESSAGE_TASK_NOT_EDITED;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"public class EditTaskCommandParserTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    private static final String VALID_TASK \u003d PREFIX_TASK_DESCRIPTION + VALID_TASK_NAME_TASK1;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    private static final String INVALID_TASK \u003d PREFIX_TASK_DESCRIPTION + \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"    private static final String VALID_TASK_INDEX \u003d PREFIX_TASK_INDEX + \" 1 \";","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"    private EditTaskCommandParser parser \u003d new EditTaskCommandParser();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        // no index specified","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        assertParseFailure(parser, VALID_TASK_INDEX + VALID_TASK, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"        // no task index specified","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"        assertParseFailure(parser, \"1 \" + VALID_TASK, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"        // no task specified","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"        assertParseFailure(parser, \"1 \" + VALID_TASK_INDEX, MESSAGE_TASK_NOT_EDITED);","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"        // no index, task index and no task specified","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"        // negative index","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"        assertParseFailure(parser, \"-5 \" + VALID_TASK_INDEX + VALID_TASK, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"        // zero index","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"        assertParseFailure(parser, \"0 \" + VALID_TASK_INDEX + VALID_TASK, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"    public void parse_invalidTaskIndex_failure() {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"        // negative task index","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"        assertParseFailure(parser, \"1 -ti -5 \" + VALID_TASK, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"        // zero task index","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"        assertParseFailure(parser, \"1 -ti 0 \" + VALID_TASK, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"        // invalid arguments being parsed as task index","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"        assertParseFailure(parser, \"1 -ti 1 some random string\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"        // invalid prefix being parsed as task index","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"        assertParseFailure(parser, \"1 -ti 1 i/ string\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"    public void parse_invalidTask_failure() {","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"        assertParseFailure(parser, \"1 \" + VALID_TASK_INDEX + INVALID_TASK, TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + VALID_TASK_INDEX + VALID_TASK;","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"        Index targetTaskIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"        EditTaskCommand.EditTaskDescriptor editTaskDescriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"        editTaskDescriptor.setTaskName(new TaskName(VALID_TASK_NAME_TASK1));","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex,","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"                targetTaskIndex, editTaskDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"eugenecsa":97}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.TasksContainKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"        FindCommand idealFindCommand \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(List.of(\"Alice\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"        assertParseSuccess(parser, \"-n Alice\", idealFindCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"        // leading and trailing whitespaces","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"        FindCommand longFindCommand \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(List.of(\"Alice\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        assertParseSuccess(parser, \"   -n Alice   \", longFindCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"        // using different flags and different predicates","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"        FindCommand expectedPhoneFindCommand \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"                new FindCommand(new PhoneContainsKeywordsPredicate(List.of(\"88\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"        FindCommand expectedEmailFindCommand \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"                new FindCommand(new EmailContainsKeywordsPredicate(List.of(\"alice\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"        FindCommand expectedAddressFindCommand \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"                new FindCommand(new AddressContainsKeywordsPredicate(List.of(\"10th\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"        FindCommand expectedTagFindCommand \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"                new FindCommand(new TagsContainKeywordsPredicate(List.of(\"owes\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"        FindCommand expectedTasksFindCommand \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"                new FindCommand(new TasksContainKeywordsPredicate(List.of(\"study\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"        assertParseSuccess(parser, \"-p 88\", expectedPhoneFindCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"        assertParseSuccess(parser, \"-e alice\", expectedEmailFindCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"        assertParseSuccess(parser, \"-a 10th\", expectedAddressFindCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"wz27"},"content":"        assertParseSuccess(parser, \"-l owes\", expectedTagFindCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"wz27"},"content":"        assertParseSuccess(parser, \"-tn study\", expectedTasksFindCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"        assertParseFailure(parser, \"-t \",","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"        assertParseFailure(parser, \"-sadasd \",","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"        assertParseFailure(parser, \"-sadasd sadsad\",","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"kflim":36,"-":29,"wz27":2}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"    private static final String INVALID_TASK \u003d \"  \";","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"    private static final String VALID_TASK \u003d \"task 1\";","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"LeopardMerkava":2,"-":196}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"    public void parse_validArgument_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"        assertParseSuccess(parser, \"-r\", new SortCommand(true));","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"    public void parse_invalidArguments_failure() {","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"        assertParseFailure(parser, \"r\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"kflim":27}},{"path":"src/test/java/seedu/address/logic/parser/ViewTaskListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.ViewTaskListCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"public class ViewTaskListCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"    private final ViewTaskListCommandParser viewTaskListCommandParser \u003d new ViewTaskListCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"        assertParseSuccess(viewTaskListCommandParser, \"1\", new ViewTaskListCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"        assertParseSuccess(viewTaskListCommandParser, \"1 -f work\",","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"                new ViewTaskListCommand(INDEX_FIRST_PERSON, List.of(\"work\")));","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"        assertParseFailure(viewTaskListCommandParser, \"a\", String.format(","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, ViewTaskListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kflim":30}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"    public void getDisplayTaskList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"        Task[] taskList \u003d {};","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"        ObservableList\u003cTask\u003e observableList \u003d FXCollections.observableList(Arrays.asList(taskList));","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"        FilteredList\u003cTask\u003e filteredTasks \u003d new FilteredList\u003c\u003e(observableList);","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"        assertEquals(modelManager.getDisplayTaskList(), (ObservableList\u003cTask\u003e) filteredTasks);","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"limzk126"},"content":"    public void displayPersonTaskList_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"limzk126"},"content":"        modelManager \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"        Person validPerson \u003d new PersonBuilder().withTasks(\"1| | | \", \"2| | | \", \"3| | | \").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"limzk126"},"content":"        List\u003cTask\u003e taskList \u003d validPerson.getTasks();","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"limzk126"},"content":"        modelManager.addPerson(validPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"limzk126"},"content":"        modelManager.displayPersonTaskList(validPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"limzk126"},"content":"        ObservableList\u003cTask\u003e filteredTasks \u003d modelManager.getDisplayTaskList();","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"limzk126"},"content":"        assertEquals(taskList.size(), filteredTasks.size());","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"limzk126"},"content":"        for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"limzk126"},"content":"            assertEquals(taskList.get(i), filteredTasks.get(i));","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"limzk126"},"content":"    public void getDisplayTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"limzk126"},"content":"        modelManager \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"limzk126"},"content":"        Person person \u003d modelManager.getFilteredPersonList().get(0);","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"limzk126"},"content":"        modelManager.displayPersonTaskList(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"limzk126"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getDisplayTaskList().remove(0));","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"limzk126"},"content":"        // different TaskListManager -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"eugenecsa"},"content":"        Person firstPerson \u003d new PersonBuilder().withTasks(\"transfer $100| | | \", \"transfer $101| | | \").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"eugenecsa"},"content":"        Person secondPerson \u003d new PersonBuilder().withTasks(\"transfer $101| | | \", \"transfer 100| | | \").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"limzk126"},"content":"        ModelManager mockModelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"limzk126"},"content":"        mockModelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"limzk126"},"content":"        mockModelManager.addPerson(firstPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"limzk126"},"content":"        modelManager.addPerson(secondPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"limzk126"},"content":"        assertFalse(modelManager.equals(mockModelManager));","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"limzk126"},"content":"        // Same TaskListManager -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"limzk126"},"content":"        mockModelManager.deletePerson(firstPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"limzk126"},"content":"        modelManager.deletePerson(secondPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"limzk126"},"content":"        assertTrue(modelManager.equals(mockModelManager));","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"limzk126":55,"-":132,"eugenecsa":3}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"    public void equals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"        assertEquals(userPrefs, userPrefs);","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"        // null -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"        assertNotEquals(null, userPrefs);","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"kflim":17,"-":22}},{"path":"src/test/java/seedu/address/model/person/AddressContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"public class AddressContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d List.of(\"123, Jurong West Ave 6, #08-111\");","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d List.of(\"124, Jurong East Ave 5, #09-99\");","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"        AddressContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"                new AddressContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"        AddressContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"                new AddressContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"        AddressContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"                new AddressContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        assertFalse(firstPredicate.equals(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"        // different names -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"        Person samplePerson \u003d new PersonBuilder().withAddress(\"13, Jurong North Ave 2, #05-55\").build();","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"        // One keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"        AddressContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"                new AddressContainsKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"Jurong\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(new ArrayList\u003c\u003e(Arrays.asList(\"13\", \"Jurong\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"        // One abbreviated keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"Juro\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"        // Multiple abbreviated keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(new ArrayList\u003c\u003e(Arrays.asList(\"13\", \"Ju\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"        // Multiple abbreviated keywords in random case","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(new ArrayList\u003c\u003e(Arrays.asList(\"13\", \"juRong\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"        AddressContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"Clementi\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"555, Jurong South Ave 3, #11-11\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"kflim"},"content":"    public void test_keywordsEmpty_throwsException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"kflim"},"content":"        AddressContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"kflim"},"content":"        // Empty keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"kflim"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"kflim"},"content":"        assertThrows(","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"kflim"},"content":"                IllegalArgumentException.class, (","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"kflim"},"content":"                ) -\u003e predicate.test(new PersonBuilder().withAddress(\"10, Clementi Ave 4, #13-55\").build())","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"kflim"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kflim":90}},{"path":"src/test/java/seedu/address/model/person/EmailContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"public class EmailContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d List.of(\"asdf@example.com\");","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d List.of(\"fdsa@tmail.com\");","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d new EmailContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"                new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"        assertFalse(firstPredicate.equals(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"        // different emails -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"        Person samplePerson \u003d new PersonBuilder().withEmail(\"qwerty@bahoo.com\").build();","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"        // One keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"        EmailContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"                new EmailContainsKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"qwerty@bahoo.com\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"        // One abbreviated keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"qwerty\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"        EmailContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"asdf\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"zxcv@dotmail.com\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"    public void test_keywordsEmpty_throwsException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"        EmailContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"        // Empty keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"        assertThrows(","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"                IllegalArgumentException.class, (","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"                ) -\u003e predicate.test(new PersonBuilder().withEmail(\"amazingspiderman@doodle.com\").build())","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kflim":75}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d List.of(\"first\");","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d List.of(\"second\");","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"        assertFalse(firstPredicate.equals(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"        // different names -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"        Person samplePerson \u003d new PersonBuilder().withName(\"John William Cena\").build();","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"John\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(new ArrayList\u003c\u003e(Arrays.asList(\"John\", \"Cena\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"        // One abbreviated keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"Will\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"        // Multiple abbreviated keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(new ArrayList\u003c\u003e(Arrays.asList(\"Jo\", \"Will\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"        // Multiple abbreviated keywords in random case","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(new ArrayList\u003c\u003e(Arrays.asList(\"jO\", \"WIlL\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"        NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"Carol\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"    public void test_keywordsEmpty_throwsException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"kflim"},"content":"        NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"        // Empty keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"kflim"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"kflim"},"content":"        assertThrows(","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"kflim"},"content":"                IllegalArgumentException.class, (","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"kflim"},"content":"                ) -\u003e predicate.test(new PersonBuilder().withName(\"Alice Bob\").build())","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"kflim"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kflim":38,"-":48}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"        // same name, same phone, all other attributes different -\u003e returns true","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"        // different phone number, all other attributes same -\u003e returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":89,"eugenecsa":6}},{"path":"src/test/java/seedu/address/model/person/PhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"public class PhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d List.of(\"98786451\");","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d List.of(\"97512727\");","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d new PhoneContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"        PhoneContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"                new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"        assertFalse(firstPredicate.equals(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"        // different phones -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"        Person samplePerson \u003d new PersonBuilder().withPhone(\"97857575\").build();","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"        // One keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"                new PhoneContainsKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"97857575\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"        // One abbreviated keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"9785\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"        PhoneContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"97857575\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"97454542\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"    public void test_keywordsEmpty_throwsException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"        PhoneContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"        // Empty keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"        assertThrows(","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"                IllegalArgumentException.class, (","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"                ) -\u003e predicate.test(new PersonBuilder().withPhone(\"85757857\").build())","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kflim":75}},{"path":"src/test/java/seedu/address/model/person/TagsContainKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"public class TagsContainKeywordsPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d List.of(\"friend\");","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"buddy\", \"cousin\");","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"        TagsContainKeywordsPredicate firstPredicate \u003d new TagsContainKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"        TagsContainKeywordsPredicate secondPredicate \u003d new TagsContainKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"        TagsContainKeywordsPredicate firstPredicateCopy \u003d new TagsContainKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"        assertFalse(firstPredicate.equals(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"        // different names -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"    public void test_tagsContainKeywords_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"        Person samplePerson \u003d new PersonBuilder().withTags(\"buddy\", \"cousin\").build();","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"        // One keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"        TagsContainKeywordsPredicate predicate \u003d new TagsContainKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"buddy\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(new ArrayList\u003c\u003e(Arrays.asList(\"buddy\", \"cousin\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"        // One abbreviated keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"bud\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"        // Multiple abbreviated keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(new ArrayList\u003c\u003e(Arrays.asList(\"bud\", \"cous\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"        // Multiple abbreviated keywords in random case","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(new ArrayList\u003c\u003e(Arrays.asList(\"Bud\", \"couS\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"    public void test_tagsDoNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"        TagsContainKeywordsPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"boss\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"buddy\", \"cousin\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"    public void test_keywordsEmpty_throwsException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"kflim"},"content":"        TagsContainKeywordsPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"        // Empty keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"kflim"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"kflim"},"content":"        assertThrows(","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"kflim"},"content":"                IllegalArgumentException.class, (","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"kflim"},"content":"                ) -\u003e predicate.test(new PersonBuilder().withTags(\"buddy\", \"cousin\").build())","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"kflim"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kflim":86}},{"path":"src/test/java/seedu/address/model/person/TasksContainKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"public class TasksContainKeywordsPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d List.of(\"eat\");","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"sleep\", \"walk\");","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"        TasksContainKeywordsPredicate firstPredicate \u003d new TasksContainKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"        TasksContainKeywordsPredicate secondPredicate \u003d new TasksContainKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"        TasksContainKeywordsPredicate firstPredicateCopy \u003d new TasksContainKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"        assertFalse(firstPredicate.equals(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"        // different names -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"    public void test_tasksContainKeywords_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"        Person samplePerson \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"                new PersonBuilder().withTasks(\"Conduct tutorial\", \"Project meeting\", \"Fill up gas tank\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"        // One keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"        TasksContainKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"                new TasksContainKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"conduct\")));","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"        predicate \u003d new TasksContainKeywordsPredicate(new ArrayList\u003c\u003e(Arrays.asList(\"project\", \"meeting\")));","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"        // One abbreviated keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"        predicate \u003d new TasksContainKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"meet\")));","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"        // Multiple abbreviated keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"        predicate \u003d new TasksContainKeywordsPredicate(new ArrayList\u003c\u003e(Arrays.asList(\"pro\", \"meet\")));","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"        // Multiple abbreviated keywords in random case","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"        predicate \u003d new TasksContainKeywordsPredicate(new ArrayList\u003c\u003e(Arrays.asList(\"pR\", \"Mee\")));","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"        assertTrue(predicate.test(samplePerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"    public void test_tasksDoNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"        TasksContainKeywordsPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"        predicate \u003d new TasksContainKeywordsPredicate(new ArrayList\u003c\u003e(List.of(\"run\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"work\", \"study\", \"exercise\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"    public void test_keywordsEmpty_throwsException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"kflim"},"content":"        TasksContainKeywordsPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"kflim"},"content":"        // Empty keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"kflim"},"content":"        predicate \u003d new TasksContainKeywordsPredicate(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"kflim"},"content":"        assertThrows(","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"kflim"},"content":"                IllegalArgumentException.class, (","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"kflim"},"content":"                ) -\u003e predicate.test(new PersonBuilder().withTags(\"work\", \"study\", \"run\").build())","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"kflim"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kflim":88}},{"path":"src/test/java/seedu/address/model/task/TaskListManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"public class TaskListManagerTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"        TaskListManager firstManager \u003d new TaskListManager();","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"        TaskListManager secondManager \u003d new TaskListManager();","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"        assertEquals(firstManager, firstManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"        assertEquals(firstManager, secondManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"        assertFalse(firstManager.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"        assertNotEquals(null, firstManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kflim":28}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    private static final String INVALID_IMPORTANCE \u003d \"yes\";","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"    private static final String VALID_DESCRIPTION \u003d BENSON.getDescription().toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"    private static final String VALID_IMPORTANCE \u003d String.valueOf(BENSON.isImportant());","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    private static final List\u003cJsonAdaptedTask\u003e VALID_TASKS \u003d BENSON.getTasks().stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"            .map(JsonAdaptedTask::new)","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"                        VALID_TAGS, VALID_TASKS, VALID_DESCRIPTION, VALID_IMPORTANCE","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"                );","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"                VALID_TAGS, VALID_TASKS, VALID_DESCRIPTION, VALID_IMPORTANCE","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"        );","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"                        VALID_TAGS, VALID_TASKS, VALID_DESCRIPTION, VALID_IMPORTANCE","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"                );","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"LeopardMerkava"},"content":"                VALID_TAGS, VALID_TASKS, VALID_DESCRIPTION, VALID_IMPORTANCE","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"        );","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"                        VALID_TAGS, VALID_TASKS, VALID_DESCRIPTION, VALID_IMPORTANCE","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"LeopardMerkava"},"content":"                );","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"LeopardMerkava"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"LeopardMerkava"},"content":"                VALID_TAGS, VALID_TASKS, VALID_DESCRIPTION, VALID_IMPORTANCE","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"LeopardMerkava"},"content":"        );","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"LeopardMerkava"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"LeopardMerkava"},"content":"                        VALID_TAGS, VALID_TASKS, VALID_DESCRIPTION, VALID_IMPORTANCE","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"LeopardMerkava"},"content":"                );","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"LeopardMerkava"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"LeopardMerkava"},"content":"                VALID_TAGS, VALID_TASKS, VALID_DESCRIPTION, VALID_IMPORTANCE","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"LeopardMerkava"},"content":"        );","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"LeopardMerkava"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"LeopardMerkava"},"content":"                        invalidTags, VALID_TASKS, VALID_DESCRIPTION, VALID_IMPORTANCE","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"LeopardMerkava"},"content":"                );","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"LeopardMerkava"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"LeopardMerkava"},"content":"    public void toModelType_invalidImportance_throwsIllegalValueException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"LeopardMerkava"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"LeopardMerkava"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"LeopardMerkava"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"LeopardMerkava"},"content":"                        invalidTags, VALID_TASKS, VALID_DESCRIPTION, VALID_IMPORTANCE","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"LeopardMerkava"},"content":"                );","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LeopardMerkava":41,"-":101,"eugenecsa":3}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"        descriptor.setDescription(person.getDescription());","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"        descriptor.setTasks(person.getTasks());","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"        descriptor.setImportance(person.isImportant());","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"LeopardMerkava"},"content":"     * Sets the {@code Descripton} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"LeopardMerkava"},"content":"    public EditPersonDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"LeopardMerkava"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"LeopardMerkava"},"content":"        return this;","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"     * Parse the {@code tasks} into a {@code List\u003cTask\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"     * that we are building.","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"    public EditPersonDescriptorBuilder withTasks(String... tasks) {","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"        for (String task : tasks) {","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"            TaskName taskName \u003d new TaskName(task);","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"            Task newTask \u003d new Task(taskName, null, null, null);","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"            taskList.add(newTask);","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"        descriptor.setTasks(taskList);","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"        return this;","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"LeopardMerkava":12,"limzk126":11,"-":87,"eugenecsa":9}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Default eh?\";","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"    private Description description;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"    private boolean isImportant;","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"        isImportant \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"        description \u003d personToCopy.getDescription();","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"        tasks \u003d personToCopy.getTasks();","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"        isImportant \u003d personToCopy.isImportant();","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"    public PersonBuilder withTasks(String ... tasks) {","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"        this.tasks \u003d SampleDataUtil.getTaskList(tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"LeopardMerkava"},"content":"     * Sets the {@code Description} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"LeopardMerkava"},"content":"    public PersonBuilder withDescription(String description) {","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"LeopardMerkava"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"LeopardMerkava"},"content":"        return this;","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"LeopardMerkava"},"content":"     * Sets the {@code Description} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"LeopardMerkava"},"content":"    public PersonBuilder withImportance(boolean importance) {","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"LeopardMerkava"},"content":"        this.isImportant \u003d importance;","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"LeopardMerkava"},"content":"        return this;","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":131,"author":{"gitId":"LeopardMerkava"},"content":"        return new Person(name, phone, email, address, tags, tasks, description, isImportant);","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"LeopardMerkava":39,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"        sb.append(PREFIX_DESCRIPTION + person.getDescription().value + \" \");","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"        person.getTasks().stream().forEach(","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"            s -\u003e sb.append(PREFIX_TASK_DESCRIPTION + s.getTaskName().taskName + \" \"));","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"        descriptor.getDescription().ifPresent(desc -\u003e sb.append(PREFIX_DESCRIPTION).append(desc.value).append(\" \"));","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"        if (descriptor.getTasks().isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"            List\u003cTask\u003e tasks \u003d descriptor.getTasks().get();","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"                sb.append(PREFIX_TASK_DESCRIPTION).append(\" \");","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"                tasks.forEach(s -\u003e sb.append(PREFIX_TASK_DESCRIPTION).append(s.getTaskName().taskName).append(\" \"));","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"LeopardMerkava":3,"limzk126":13,"-":61,"eugenecsa":4}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":12,"eugenecsa":2}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"    public static final Person ALICE \u003d new PersonBuilder()","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"            .withTasks(\"eat| | | \", \"sleep| | | \", \"study| | | \")","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"            .withDescription(\"Owner of Lunta Inc\")","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"            .withImportance(true)","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"            .build();","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"            .withTasks(\"a| | | \", \"b| | | \", \"c| | | \")","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"            .withDescription(\"HR in Sarimba\")","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"            .withImportance(true)","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"            .build();","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"    public static final Person BENJAMIN \u003d new PersonBuilder()","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"            .withName(\"Benjamin Wesley\")","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"            .withPhone(\"88956321\")","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"            .withEmail(\"benwe@example.com\")","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"            .withAddress(\"23, Coleman Street, #05-30\")","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"            .withTags(\"cousin\")","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"            .withTasks(\"work| | | \", \"play| | | \", \"sleep| | | \")","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"            .withDescription(\"\")","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"            .withImportance(false)","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"            .build();","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"    public static final Person CARL \u003d new PersonBuilder()","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"            .withName(\"Carl Kurz\")","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"            .withDescription(\"\")","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"            .withImportance(false)","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"            .build();","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"    public static final Person DANIEL \u003d new PersonBuilder()","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"            .withTasks(\"c| | | \", \"d| | | \", \"e| | | \")","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"            .withDescription(\"Potential Client?\")","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"            .withImportance(true)","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"            .build();","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"    public static final Person ELLE \u003d new PersonBuilder()","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"            .withAddress(\"michegan ave\")","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"            .withTasks(\"consult prof Damith about project iteration v1.3| | | \")","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"            .withDescription(\"CS2103/T Teammate\")","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"            .withImportance(true)","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"            .build();","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"kflim"},"content":"    public static final Person FIONA \u003d new PersonBuilder()","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"kflim"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"            .withAddress(\"little tokyo\")","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"            .withTasks(\"a| | | \")","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"LeopardMerkava"},"content":"            .withDescription(\"b\")","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"LeopardMerkava"},"content":"            .withImportance(false)","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"            .build();","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"kflim"},"content":"    public static final Person GEORGE \u003d new PersonBuilder()","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"kflim"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"limzk126"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"limzk126"},"content":"            .withAddress(\"4th street\")","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"            .withTasks(\"a| | | \", \"bbb| | | \", \"ccccc| | | \", \"ddddd| | | \", \"eeeeeeeeeeeee| | | \")","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"LeopardMerkava"},"content":"            .withDescription(\"fffffffffffffff\")","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"LeopardMerkava"},"content":"            .withImportance(false)","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"            .build();","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"LeopardMerkava"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withImportance(false).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"LeopardMerkava"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withImportance(true).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"LeopardMerkava"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"LeopardMerkava"},"content":"            .withDescription(VALID_DESCRIPTION_AMY).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":116,"author":{"gitId":"LeopardMerkava"},"content":"            .withDescription(VALID_DESCRIPTION_BOB).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"kflim"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, BENJAMIN, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"LeopardMerkava":23,"limzk126":25,"kflim":26,"-":55,"eugenecsa":7}},{"path":"src/test/java/seedu/address/ui/HelpWindowTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"public class HelpWindowTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"    public void execute_outOfThreadInitialization_throwsError() {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"        boolean isThrown \u003d false;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"            HelpWindow helpWindow \u003d HelpWindow.getWindow();","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"        } catch (ExceptionInInitializerError e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"            isThrown \u003d true;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"        assertTrue(isThrown);","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kflim":19}}]
