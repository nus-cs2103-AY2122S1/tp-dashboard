[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wz27"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W10-1/tp/actions)","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"wz27"},"content":"* This is **ContactSh**, a **CLI-based contacts manager for NUS Student Entrepreneurs proficient in Unix CLI**.\u003cbr\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"wz27"},"content":"  Benefits:","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"wz27"},"content":"  * users familiar with Unix commands can quickly master using the app efficiently","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"wz27"},"content":"  * keeps track of tasks/meetings associated with contacts","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"wz27"},"content":"  * enhanced contact searchability and organisation","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"wz27"},"content":"  * eliminates the need to remember and recall interpersonal details of contacts","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"wz27"},"content":"* It is named `ContactSh` (`Contacts`+`Shell`) because it was created as a contact management software designed with common Shell interfaces in mind.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"wz27"},"content":"* For the detailed documentation of this project, see the **[ContactSh Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"-":7,"wz27":10}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"### Lim Zhe Kang","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"\u003cimg src\u003d\"images/limzk126.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"[[github](http://github.com/limzk126)]","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"[[portfolio](team/limzk126.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"* Role: Testing","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"* Responsibilities: Ensure the testing of the project is done properly and on time.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"### Chan Sze Ann, Eugene","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"\u003cimg src\u003d\"images/eugenecsa.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"[[github](http://github.com/eugenecsa)] [[portfolio](team/eugenecsa.md)]","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"* Role: Code Quality","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"* Responsibilities: Looks after code quality, ensures adherence to coding standards, etc.","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"wz27"},"content":"### Ho Wen Zhong","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"wz27"},"content":"\u003cimg src\u003d\"images/wz27.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"wz27"},"content":"[[github](http://github.com/wz27)]","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"wz27"},"content":"[[portfolio](team/wz27.md)]","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"wz27"},"content":"* Role: Integration, Scheduling and Tracking","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"wz27"},"content":"* Responsibilities: In charge of versioning of the code, maintaining the code repository, integrating various parts of","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"wz27"},"content":"  the software to create a whole. In charge of defining, assigning, and tracking project tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"### Andrew Baruch","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"\u003cimg src\u003d\"images/leopardmerkava.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"[[github](https://github.com/LeopardMerkava)]","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"[[portfolio](team/leopardmerkava.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"* Role: Deliverable and Deadline, UI","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format. In charge of UI ensuring it fits the use case.","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"### Lim Kai Fang","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"\u003cimg src\u003d\"images/kflim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"[[GitHub page](https://github.com/kflim)]","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"[Portfolio](team/kflim.md)","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"* Role: Documentation","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"* Responsibilities: Responsible for the quality of various project documents.","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"LeopardMerkava":6,"limzk126":5,"kflim":6,"-":29,"eugenecsa":6,"wz27":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"limzk126"},"content":"* NUS Student Entrepreneurs","lastModifiedDate":"2021-09-28"},{"lineNumber":261,"author":{"gitId":"limzk126"},"content":"* Proficient in Unix CLI","lastModifiedDate":"2021-09-28"},{"lineNumber":262,"author":{"gitId":"limzk126"},"content":"* Has many meetings and is in contact with different people (students, mentors,","lastModifiedDate":"2021-09-28"},{"lineNumber":263,"author":{"gitId":"limzk126"},"content":"  stakeholders, clients, partners)","lastModifiedDate":"2021-09-28"},{"lineNumber":264,"author":{"gitId":"limzk126"},"content":"* Carries Laptop around (prefers Laptop)","lastModifiedDate":"2021-09-28"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"limzk126"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-28"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"limzk126"},"content":"* Users familiar with Unix commands can quickly master using the app efficiently.","lastModifiedDate":"2021-09-28"},{"lineNumber":269,"author":{"gitId":"limzk126"},"content":"* Allow users to keep track of tasks/meetings associated with contacts.","lastModifiedDate":"2021-09-28"},{"lineNumber":270,"author":{"gitId":"limzk126"},"content":"* Enhanced contact searchability and organisation.","lastModifiedDate":"2021-09-28"},{"lineNumber":271,"author":{"gitId":"limzk126"},"content":"* Eliminates the need to remember and recall interpersonal details of contacts.","lastModifiedDate":"2021-09-28"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"limzk126"},"content":"| | **experienced user** |\t**manipulate multiple contacts with one command** | **improve my work efficiency** |","lastModifiedDate":"2021-09-28"},{"lineNumber":280,"author":{"gitId":"limzk126"},"content":"| `**` | experienced user | delete multiple contacts using only one command | improve my work efficiency |","lastModifiedDate":"2021-09-28"},{"lineNumber":281,"author":{"gitId":"limzk126"},"content":"| `**` | experienced user |\tmove multiple contacts using only one command | improve my work efficiency |","lastModifiedDate":"2021-09-28"},{"lineNumber":282,"author":{"gitId":"limzk126"},"content":"| `**` | experienced user |\tadd multiple contacts using only one command | improve my work efficiency |","lastModifiedDate":"2021-09-28"},{"lineNumber":283,"author":{"gitId":"limzk126"},"content":"| `**` | experienced user |\tsearch for contacts using abbreviations | improve my work efficiency |","lastModifiedDate":"2021-09-28"},{"lineNumber":284,"author":{"gitId":"limzk126"},"content":"| | **expert CL user** | **use high-level CLI instructions** | **directly use the app at a high-level** |","lastModifiedDate":"2021-09-28"},{"lineNumber":285,"author":{"gitId":"limzk126"},"content":"| `**` | expert CL user | make command combinations | execute multiple instructions in one line |","lastModifiedDate":"2021-09-28"},{"lineNumber":286,"author":{"gitId":"limzk126"},"content":"| `**` | expert CL user | redirect input/output | input/output from/to files instead of stdin |","lastModifiedDate":"2021-09-28"},{"lineNumber":287,"author":{"gitId":"limzk126"},"content":"| `**` | expert CL user | create scripts | automate specific tasks |","lastModifiedDate":"2021-09-28"},{"lineNumber":288,"author":{"gitId":"limzk126"},"content":"| | **beginner user** | **learn commands fast** | **spend less time on learning** |","lastModifiedDate":"2021-09-28"},{"lineNumber":289,"author":{"gitId":"limzk126"},"content":"| `***` | beginner user | view the user guide easily | learn the commands as and when I need |","lastModifiedDate":"2021-09-28"},{"lineNumber":290,"author":{"gitId":"limzk126"},"content":"| `***` | beginner user | view the list of instructions | know what instructions are available |","lastModifiedDate":"2021-09-28"},{"lineNumber":291,"author":{"gitId":"limzk126"},"content":"| `***` | beginner user | see examples of contacts | have an idea of how contacts will be presented |","lastModifiedDate":"2021-09-28"},{"lineNumber":292,"author":{"gitId":"limzk126"},"content":"| | **student entrepreneur** | **organise my contacts according to specific groups** | **find the ones i want easily** |","lastModifiedDate":"2021-09-28"},{"lineNumber":293,"author":{"gitId":"limzk126"},"content":"| `**` | student entrepreneur | categorize my business contacts | organize them better |","lastModifiedDate":"2021-09-28"},{"lineNumber":294,"author":{"gitId":"limzk126"},"content":"| `**` | student entrepreneur | differentiate between business and student contacts | differentiate easily |","lastModifiedDate":"2021-09-28"},{"lineNumber":295,"author":{"gitId":"limzk126"},"content":"| `***` | student entrepreneur | view my contacts in an organized manner | have a better overview |","lastModifiedDate":"2021-09-28"},{"lineNumber":296,"author":{"gitId":"limzk126"},"content":"| | **intermediate user** | **sort and filter my contacts** | **sieve out irrelevant contacts** |","lastModifiedDate":"2021-09-28"},{"lineNumber":297,"author":{"gitId":"limzk126"},"content":"| `***` | intermediate user | look through the list of contacts| see the contacts I have added |","lastModifiedDate":"2021-09-28"},{"lineNumber":298,"author":{"gitId":"limzk126"},"content":"| `***` | intermediate user | search for contact names | directly find the contact of a person in mind |","lastModifiedDate":"2021-09-28"},{"lineNumber":299,"author":{"gitId":"limzk126"},"content":"| `***` | intermediate user | assign tasks to contacts | know what I should contact them for |","lastModifiedDate":"2021-09-28"},{"lineNumber":300,"author":{"gitId":"limzk126"},"content":"| `***` | intermediate user | delete tasks from contacts | remove task which are done |","lastModifiedDate":"2021-09-28"},{"lineNumber":301,"author":{"gitId":"limzk126"},"content":"| `**` | intermediate user | sort contacts by tasks | identify connections between contacts |","lastModifiedDate":"2021-09-28"},{"lineNumber":302,"author":{"gitId":"limzk126"},"content":"| `**` | intermediate user | choose what information about my contacts to view | read the information easier |","lastModifiedDate":"2021-09-28"},{"lineNumber":303,"author":{"gitId":"limzk126"},"content":"| `***` | intermediate user | view task from contacts | see what tasks are connected to said contact |","lastModifiedDate":"2021-09-28"},{"lineNumber":304,"author":{"gitId":"limzk126"},"content":"| | **experienced user** | **update large number of contacts at once** | **exclude manually adding them myself** |","lastModifiedDate":"2021-09-28"},{"lineNumber":305,"author":{"gitId":"limzk126"},"content":"| `**` | experienced user | import a list of contacts | add a large number of contacts at once |","lastModifiedDate":"2021-09-28"},{"lineNumber":306,"author":{"gitId":"limzk126"},"content":"| `**` | experienced user | export a list of contacts | send them to other people |","lastModifiedDate":"2021-09-28"},{"lineNumber":307,"author":{"gitId":"limzk126"},"content":"| | **general user** | | |","lastModifiedDate":"2021-09-28"},{"lineNumber":308,"author":{"gitId":"limzk126"},"content":"| `**` | general CLI user| use commands from cli | exclude the need to learn new commands |","lastModifiedDate":"2021-09-28"},{"lineNumber":309,"author":{"gitId":"limzk126"},"content":"| `***` | user | update contact details | keep track of their details |","lastModifiedDate":"2021-09-28"},{"lineNumber":310,"author":{"gitId":"limzk126"},"content":"| `***` | user | delete contacts | get rid of contacts who are no longer relevant |","lastModifiedDate":"2021-09-28"},{"lineNumber":311,"author":{"gitId":"limzk126"},"content":"| `***` | new user | save contacts | keep track of them |","lastModifiedDate":"2021-09-28"},{"lineNumber":312,"author":{"gitId":"limzk126"},"content":"| `***` | new user | purge all example contacts | start adding my own contacts |","lastModifiedDate":"2021-09-28"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"eugenecsa"},"content":"(For all use cases below, the **System** is the `ContactSH` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-28"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"eugenecsa"},"content":"**Use case: Add a contact**","lastModifiedDate":"2021-09-28"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"eugenecsa"},"content":"1. User requests to add a contact.","lastModifiedDate":"2021-09-28"},{"lineNumber":323,"author":{"gitId":"eugenecsa"},"content":"2. ContactSH adds the contact","lastModifiedDate":"2021-09-28"},{"lineNumber":324,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":325,"author":{"gitId":"eugenecsa"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":326,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":327,"author":{"gitId":"eugenecsa"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":328,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":329,"author":{"gitId":"eugenecsa"},"content":"* 1a. The given contact is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":330,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":331,"author":{"gitId":"eugenecsa"},"content":"    * 1a1. ContactSH shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":332,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":333,"author":{"gitId":"eugenecsa"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":334,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":335,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":336,"author":{"gitId":"eugenecsa"},"content":"**Use case: Delete a contact**","lastModifiedDate":"2021-09-28"},{"lineNumber":337,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":338,"author":{"gitId":"eugenecsa"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":339,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":340,"author":{"gitId":"eugenecsa"},"content":"1.  User requests to list contacts","lastModifiedDate":"2021-09-28"},{"lineNumber":341,"author":{"gitId":"eugenecsa"},"content":"2.  ContactSH shows a list of contacts","lastModifiedDate":"2021-09-28"},{"lineNumber":342,"author":{"gitId":"eugenecsa"},"content":"3.  User requests to delete a specific contact in the list","lastModifiedDate":"2021-09-28"},{"lineNumber":343,"author":{"gitId":"eugenecsa"},"content":"4.  ContactSH deletes the contact","lastModifiedDate":"2021-09-28"},{"lineNumber":344,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":345,"author":{"gitId":"eugenecsa"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":346,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":347,"author":{"gitId":"eugenecsa"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":348,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":349,"author":{"gitId":"eugenecsa"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":350,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":351,"author":{"gitId":"eugenecsa"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":352,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":353,"author":{"gitId":"eugenecsa"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":354,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":355,"author":{"gitId":"eugenecsa"},"content":"    * 3a1. ContactSH shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":356,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":357,"author":{"gitId":"eugenecsa"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":359,"author":{"gitId":"eugenecsa"},"content":"**Use case: Update Contact**","lastModifiedDate":"2021-09-28"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":361,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":363,"author":{"gitId":"eugenecsa"},"content":"1. User requests a list of contacts.","lastModifiedDate":"2021-09-28"},{"lineNumber":364,"author":{"gitId":"eugenecsa"},"content":"2. ContactSH shows a list of contacts.","lastModifiedDate":"2021-09-28"},{"lineNumber":365,"author":{"gitId":"eugenecsa"},"content":"3. User requests to edit a specific contact in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":366,"author":{"gitId":"eugenecsa"},"content":"4. ContactSH edits the contact.","lastModifiedDate":"2021-09-28"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"eugenecsa"},"content":"    * 3a1. ContactSH shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":382,"author":{"gitId":"eugenecsa"},"content":"* 3b. The given edit information is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":383,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":384,"author":{"gitId":"eugenecsa"},"content":"    * 3b1. ContactSH shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":385,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":386,"author":{"gitId":"eugenecsa"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":387,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":388,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":389,"author":{"gitId":"eugenecsa"},"content":"**Use case: Find contact(s) by a criterion**","lastModifiedDate":"2021-09-28"},{"lineNumber":390,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":391,"author":{"gitId":"eugenecsa"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":392,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":393,"author":{"gitId":"eugenecsa"},"content":"1. User requests for contacts satisfying a criterion.","lastModifiedDate":"2021-09-28"},{"lineNumber":394,"author":{"gitId":"eugenecsa"},"content":"2. ContactSH searches for contacts that satisfy the criterion.","lastModifiedDate":"2021-09-28"},{"lineNumber":395,"author":{"gitId":"eugenecsa"},"content":"3. ContactSH displays the list of contacts that satisfy the criterion.","lastModifiedDate":"2021-09-28"},{"lineNumber":396,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":397,"author":{"gitId":"eugenecsa"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":398,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":399,"author":{"gitId":"eugenecsa"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":400,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":401,"author":{"gitId":"eugenecsa"},"content":"* 1a. The given criterion is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":402,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":403,"author":{"gitId":"eugenecsa"},"content":"    * 1a1. ContactSH shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":404,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":405,"author":{"gitId":"eugenecsa"},"content":"      Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":406,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":407,"author":{"gitId":"eugenecsa"},"content":"* 2a. No result matches the criterion.","lastModifiedDate":"2021-09-28"},{"lineNumber":408,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":409,"author":{"gitId":"eugenecsa"},"content":"    * 2a1. ContactSH returns message stating no contact found.","lastModifiedDate":"2021-09-28"},{"lineNumber":410,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":411,"author":{"gitId":"eugenecsa"},"content":"      Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":412,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":413,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":414,"author":{"gitId":"eugenecsa"},"content":"**Use case: Find command and its usage**","lastModifiedDate":"2021-09-28"},{"lineNumber":415,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":416,"author":{"gitId":"eugenecsa"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":417,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":418,"author":{"gitId":"eugenecsa"},"content":"1. User requests for a list of commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":419,"author":{"gitId":"eugenecsa"},"content":"2. ContactSH returns a list of commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":420,"author":{"gitId":"eugenecsa"},"content":"3. User requests for details of a specific command in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":421,"author":{"gitId":"eugenecsa"},"content":"4. ContactSH returns the details of the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":422,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":423,"author":{"gitId":"eugenecsa"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":424,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":425,"author":{"gitId":"eugenecsa"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":426,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":427,"author":{"gitId":"eugenecsa"},"content":"* 3a. The given command is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":428,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":429,"author":{"gitId":"eugenecsa"},"content":"    * 3a1. ContactSH shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":434,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"kflim"},"content":"4. Any changes to the data should be saved permanently and automatically.","lastModifiedDate":"2021-09-28"},{"lineNumber":442,"author":{"gitId":"kflim"},"content":"5. Should be easy to learn and use at all times regardless of the user\u0027s skill with the user interface.","lastModifiedDate":"2021-09-28"},{"lineNumber":443,"author":{"gitId":"kflim"},"content":"6. The project is expected to push deliverables according to the module schedule.","lastModifiedDate":"2021-09-28"},{"lineNumber":444,"author":{"gitId":"kflim"},"content":"7. Should be compliant with the coding standards of the module.","lastModifiedDate":"2021-09-28"},{"lineNumber":445,"author":{"gitId":"kflim"},"content":"8. Documentation for the project, such as the user and developer guides, should be effective and concise.","lastModifiedDate":"2021-09-28"},{"lineNumber":446,"author":{"gitId":"kflim"},"content":"9. Should be logging useful information and tracking sources of errors as they are identified.","lastModifiedDate":"2021-09-28"},{"lineNumber":447,"author":{"gitId":"kflim"},"content":"10. Should be easily testable from different testing approaches (e.g. Integration testing, System testing, automated","lastModifiedDate":"2021-09-28"},{"lineNumber":448,"author":{"gitId":"kflim"},"content":"    functional tests, manual tests etc.)","lastModifiedDate":"2021-09-28"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"limzk126":44,"kflim":8,"-":363,"eugenecsa":93}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"ContactSH is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, contactSH can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"1. Download the latest `contactSH.jar` from [here](https://github.com/AY2122S1-CS2103T-W10-1/tp/releases).","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your ContactSH.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to ContactSH.","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"### Give a list of instructions : `help`","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"Shows the user a list of instructions that can be used to navigate the app.","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"Format: help [“command-name”]","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"* If no command-name is entered, the user will see the list of all the keywords for each command","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"* If the user enters a valid command-name, the user will see the full details of that command, which includes the format and description of the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"Sample outcome (User typed “help sort”):","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"kflim"},"content":"Sort persons by the alphabetical order of their name","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"kflim"},"content":"Format: sort [-r]","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"kflim"},"content":"-r returns a sorted list in reverse order","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"kflim"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"Adds a person to ContactSH.","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"Shows a list of all persons in ContactSH.","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"Edits an existing person in ContactSH.","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"eugenecsa"},"content":"Deletes the specified person from ContactSH.","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"eugenecsa"},"content":"* `list` followed by `delete 2` deletes the 2nd person in ContactSH.","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"LeopardMerkava"},"content":"### Add task:","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"LeopardMerkava"},"content":"Add a task to the current list of tasks attached to a person.","lastModifiedDate":"2021-09-28"},{"lineNumber":160,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":161,"author":{"gitId":"LeopardMerkava"},"content":"Format: `addtask INDEX task/TASKNAME`","lastModifiedDate":"2021-09-28"},{"lineNumber":162,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":163,"author":{"gitId":"LeopardMerkava"},"content":"* Adds a task to the person at the specified INDEX. The index refers to the index number shown in the displayed person list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-28"},{"lineNumber":164,"author":{"gitId":"LeopardMerkava"},"content":"* The name of the task is specified by the TASKNAME.","lastModifiedDate":"2021-09-28"},{"lineNumber":165,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":166,"author":{"gitId":"LeopardMerkava"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":167,"author":{"gitId":"LeopardMerkava"},"content":"* `addtask 1 task/call for meeting` Adds the task \"call for meeting\" to the list of task of the person in 1st person.","lastModifiedDate":"2021-09-28"},{"lineNumber":168,"author":{"gitId":"LeopardMerkava"},"content":"### Delete task:","lastModifiedDate":"2021-09-28"},{"lineNumber":169,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":170,"author":{"gitId":"LeopardMerkava"},"content":"Deletes a task from the specified person.","lastModifiedDate":"2021-09-28"},{"lineNumber":171,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":172,"author":{"gitId":"LeopardMerkava"},"content":"Format: `deltask INDEX ti/TASK_INDEX`","lastModifiedDate":"2021-09-28"},{"lineNumber":173,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":174,"author":{"gitId":"LeopardMerkava"},"content":"* Deletes a task attached to the person at the specified INDEX. The index refers to the index number shown in the displayed person list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-28"},{"lineNumber":175,"author":{"gitId":"LeopardMerkava"},"content":"* The task deleted is specified by the TASK_INDEX. The task_index refers to the index number displayed in the tasklist of said person. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-28"},{"lineNumber":176,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":177,"author":{"gitId":"LeopardMerkava"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":178,"author":{"gitId":"LeopardMerkava"},"content":"* `deltask 2 ti/2` Deletes the 2nd task attached to the 2nd person.","lastModifiedDate":"2021-09-28"},{"lineNumber":179,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":180,"author":{"gitId":"eugenecsa"},"content":"### Edit task:","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"eugenecsa"},"content":"Edit an existing task in ContactSH.","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"eugenecsa"},"content":"Format: `edittask INDEX ti/TASK_INDEX [task/TASKNAME]`","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"eugenecsa"},"content":"* Edits a task attached to the person at the specified INDEX. The index refers to the index number shown in the displayed person list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"eugenecsa"},"content":"* The task edited  is specified by the TASK_INDEX. The task_index refers to the index number displayed in the tasklist of said person. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"eugenecsa"},"content":"* Existing values will be updated to the input value.","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"eugenecsa"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"eugenecsa"},"content":"Examples:","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"eugenecsa"},"content":"* `edittask 3 ti/2 task/Group Project Meeting` Changes the description of the 2nd task attached to the 3rd person in the list to `Group Project Meeting`.","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"eugenecsa"},"content":"Clears all entries from ContactSH.","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"limzk126"},"content":"### Viewing list of tasks of a person: `viewtask`","lastModifiedDate":"2021-09-27"},{"lineNumber":207,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":208,"author":{"gitId":"limzk126"},"content":"Shows the user a list of tasks that has been attached to a specific person.","lastModifiedDate":"2021-09-27"},{"lineNumber":209,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":210,"author":{"gitId":"limzk126"},"content":"Format: `viewtask INDEX`","lastModifiedDate":"2021-09-27"},{"lineNumber":211,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":212,"author":{"gitId":"limzk126"},"content":"* Displays the list of tasks attached to the person at the specified`INDEX`.","lastModifiedDate":"2021-09-27"},{"lineNumber":213,"author":{"gitId":"limzk126"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-27"},{"lineNumber":214,"author":{"gitId":"limzk126"},"content":"* The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-09-27"},{"lineNumber":215,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":216,"author":{"gitId":"limzk126"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":217,"author":{"gitId":"limzk126"},"content":"* `list` followed by delete 2 deletes the 2nd person in the address book.","lastModifiedDate":"2021-09-27"},{"lineNumber":218,"author":{"gitId":"limzk126"},"content":"* `find` Betsy followed by `delete 1` deletes the 1st person in the results of the `find`","lastModifiedDate":"2021-09-27"},{"lineNumber":219,"author":{"gitId":"limzk126"},"content":"command.","lastModifiedDate":"2021-09-27"},{"lineNumber":220,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":221,"author":{"gitId":"wz27"},"content":"### Sorting persons by name: `sort`","lastModifiedDate":"2021-09-28"},{"lineNumber":222,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":223,"author":{"gitId":"wz27"},"content":"Sort persons by the alphabetical order of their name.","lastModifiedDate":"2021-09-28"},{"lineNumber":224,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":225,"author":{"gitId":"wz27"},"content":"Format: `sort [-r]`","lastModifiedDate":"2021-09-28"},{"lineNumber":226,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":227,"author":{"gitId":"wz27"},"content":"* The default sort with no options provided displays a list of persons sorted in ascending ASCII alphabetical order of their name.","lastModifiedDate":"2021-09-28"},{"lineNumber":228,"author":{"gitId":"wz27"},"content":"* If the optional -r flag is provided, a list of persons sorted in reverse order is displayed.","lastModifiedDate":"2021-09-28"},{"lineNumber":229,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"eugenecsa"},"content":"ContactSH data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":236,"author":{"gitId":"eugenecsa"},"content":"ContactSH data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":239,"author":{"gitId":"eugenecsa"},"content":"If your changes to the data file makes its format invalid, ContactSH will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"eugenecsa"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ContactSH home folder.","lastModifiedDate":"2021-09-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"wz27"},"content":"**Sort** | `sort [-r]`","lastModifiedDate":"2021-09-28"},{"lineNumber":266,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"LeopardMerkava"},"content":"**Add Task** | `addtask INDEX task/TASKNAME` \u003cbr\u003e e.g., `addtask 2 task/celebrate $1 million revenue`","lastModifiedDate":"2021-09-28"},{"lineNumber":268,"author":{"gitId":"LeopardMerkava"},"content":"**Delete Task** | `deltask INDEX ti/TASK_INDEX` \u003cbr\u003e e.g., `deltask 2 ti/2`","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"LeopardMerkava":25,"limzk126":15,"kflim":15,"-":175,"eugenecsa":28,"wz27":10}},{"path":"docs/team/eugenecsa.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"---","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"layout: page","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"title: Eugene Chan\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"---","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"### Project: ContactSh","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"ContactSH is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, ContactSH can get your contact management","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003deugenecsa\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"* **Project management**:","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"* **Enhancements to existing features**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    * User Guide:","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"        * Added documentation for the feature `viewtask` [\\#44](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/44)","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    * Developer Guide:","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        * Added use case [\\#36](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/36)","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"* **Community**:","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"* **Tools**:","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"eugenecsa":28}},{"path":"docs/team/kflim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"title: Kai Fang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"### Project: ContactSh","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"ContactSH is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, ContactSH can get your contact management","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"* **Code contributed**:","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"[RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dkflim\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"* **Project management**:","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"    * User Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"        * Added documentation for the feature `help` [\\#34](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/34)","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"        * Updated documentation for non-functional requirements [\\#35](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/35)","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"* **Community**:","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"    * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"    [\\#72](https://github.com/nus-cs2103-AY2122S1/ip/pull/72),","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"    [\\#103](https://github.com/nus-cs2103-AY2122S1/ip/pull/103)","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"* **Tools**:","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"* _{you can add/remove categories in the list above}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kflim":33,"eugenecsa":1}},{"path":"docs/team/leopardmerkava.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"layout: page","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"title: Andrew Baruch\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"### Project: ContactSh","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"ContactSH is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, ContactSH can get your contact management","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dleopardmerkava\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"* **Project management**:","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"* **Enhancements to existing features**","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"  * User Guide:","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    * Added documentation for the feature `Addtask` and `DeleteTask` [\\#30](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/30)","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"  * ReadmeMd:","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    * Created Ui Mockup [\\#30](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/30)","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"* **Community**:","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"* **Tools**:","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"LeopardMerkava":28,"eugenecsa":1}},{"path":"docs/team/limzk126.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"title: Lim Zhe Kang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"### Project: ContactSh","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"ContactSH is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, ContactSH can get your contact management","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dlimzk\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"* **Project management**:","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"* **Enhancements to existing features**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"  * User Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    * Added documentation for the feature `viewtask` [\\#20](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/20)","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    * Added user stories and product scope [\\#23](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/23)","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"* **Community**:","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"* **Tools**:","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"limzk126":30}},{"path":"docs/team/wz27.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wz27"},"content":"---","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"wz27"},"content":"layout: page","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"wz27"},"content":"title: Ho Wen Zhong\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"wz27"},"content":"---","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"wz27"},"content":"### Project: ContactSh","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"wz27"},"content":"ContactSh is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"wz27"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, ContactSH can get your contact management","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"wz27"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"wz27"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"wz27"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dwz27\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"wz27"},"content":"* **Project management**:","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"wz27"},"content":"* **Enhancements to existing features**","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"wz27"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"wz27"},"content":"    * User Guide:","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"wz27"},"content":"        * Added documentation for the feature `sort` [\\#26](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/26)","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"wz27"},"content":"    * ReadmeMd:","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"wz27"},"content":"        * Updated to match ContactSh [\\#25](https://github.com/AY2122S1-CS2103T-W10-1/tp/pull/25)","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"wz27"},"content":"* **Community**:","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"wz27"},"content":"* **Tools**:","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"wz27":29}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"     * Concatenate \"s\" at the back of the string if size is bigger than 1.","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"     * @param string singular form","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"     * @param size of list","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"     * @return singular or plural form of the string given","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"    public static String singularOrPlural(String string, int size) {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"        return size \u003e 1 ? string + \"s\" : string;","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LeopardMerkava":10,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"     * Updates the currently displayed person\u0027s taskList to the given {@code taskList}.","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"    void updateDisplayTaskList(List\u003cTask\u003e taskList);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"    /** Returns an unmodifiable view of the display task list. */","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"    ObservableList\u003cTask\u003e getDisplayTaskList();","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"limzk126":10,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"    public void updateDisplayTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"        model.updateDisplayTaskList(taskList);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"    public ObservableList\u003cTask\u003e getDisplayTaskList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"        return model.getDisplayTaskList();","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"limzk126":12,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Adds a person to the address book.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": \" + DESCRIPTION","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \" Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s with %2$d %3$s attached\";","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"        return new CommandResult(generateSuccessMessage(toAdd));","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"     * Generates a command execution success message based on person detail","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"     * and the number of tasks given","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"    private String generateSuccessMessage(Person personToAdd) {","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"        int size \u003d personToAdd.getTasks().size();","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"        String taskOrTasks \u003d StringUtil.singularOrPlural(\"task\", size);","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"        return String.format(MESSAGE_SUCCESS, personToAdd, size, taskOrTasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LeopardMerkava":14,"kflim":15,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String COMMAND_WORD \u003d \"addtask\";","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added %1$d %2$s to Person: %3$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"            + \": Add to the task list of the person identified \"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"            + \"by the index number used in the last person listing.\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"            + PREFIX_TASK + \"[TASKNAME]\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"            + PREFIX_TASK + \"Likes to swim.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Add to the task list of the person specified by INDEX\";","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"    private final Index index;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"    private final List\u003cTask\u003e newTasks;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"     * @param index of the person in the filtered person list to edit the task List of","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"     * @param newTasks to add to the person\u0027s task list","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"    public AddTaskCommand(Index index, List\u003cTask\u003e newTasks) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"        requireAllNonNull(index, newTasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"        this.newTasks \u003d newTasks;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"LeopardMerkava"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"        //Make new copy for defensive programming.","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"        tasks.addAll(personToEdit.getTasks());","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"        tasks.addAll(newTasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"        //Return true if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"        //False if not instance of RemarkCommand (including null)","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"        if (!(other instanceof AddTaskCommand)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"        AddTaskCommand e \u003d (AddTaskCommand) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"                \u0026\u0026 newTasks.equals(e.newTasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"LeopardMerkava"},"content":"     * Generates a command execution success message based on the number","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"LeopardMerkava"},"content":"     * of tasks given and person name.","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"LeopardMerkava"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"LeopardMerkava"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"LeopardMerkava"},"content":"        int size \u003d newTasks.size();","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"LeopardMerkava"},"content":"        String taskOrTasks \u003d StringUtil.singularOrPlural(\"task\", size);","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"LeopardMerkava"},"content":"        return String.format(MESSAGE_SUCCESS, size, taskOrTasks, personToEdit.getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LeopardMerkava":98,"kflim":10}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Clears the address book.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kflim":9,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Deletes the person identified by the index number used in \"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"            + \"the displayed person list.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LeopardMerkava":2,"kflim":11,"-":53,"eugenecsa":2}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Removed %1$s task from %2$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_INVALID_TASK \u003d \"The size of %1$s\u0027s task list is not that big\";","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String COMMAND_WORD \u003d \"deletetask\";","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"            + \": Deletes the task, specified by the TASKINDEX, from person\"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"            + \"identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"            + PREFIX_TASK_INDEX + \"TaskIndex\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_TASK_INDEX + \"2\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Deletes the task, specified by the TASK_INDEX, \"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"            + \"from person specified by the INDEX\";","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"    private final Index targetPersonIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"    private final Index targetTaskIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"     * Constructor for a DeleteTaskCommand to delete a task from a person.","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"     * @param targetPersonIndex The Index of the target person.","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"     * @param targetTaskIndex The Index of the target Task that belongs to target person.","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"    public DeleteTaskCommand(Index targetPersonIndex, Index targetTaskIndex) {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"        this.targetPersonIndex \u003d targetPersonIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"        this.targetTaskIndex \u003d targetTaskIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"        if (targetPersonIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"        Person personToEdit \u003d lastShownList.get(targetPersonIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"        //Make new copy for defensive programming.","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"        tasks.addAll(personToEdit.getTasks());","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"        if (targetTaskIndex.getZeroBased() \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_TASK, personToEdit.getName()));","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"        Task taskToRemove \u003d tasks.get(targetTaskIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"        tasks.remove(targetTaskIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson, taskToRemove));","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"     * Generates a command execution success message based on","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"     * the task removed.","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"LeopardMerkava"},"content":"    private String generateSuccessMessage(Person personToEdit, Task taskRemoved) {","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"LeopardMerkava"},"content":"        return String.format(MESSAGE_SUCCESS, taskRemoved.getTaskName(), personToEdit.getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LeopardMerkava":79,"kflim":12,"eugenecsa":3}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Edits the details of the person identified.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": \" + DESCRIPTION","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \" by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_CANNOT_EDIT_TASK \u003d \"Editing Task is not supported through edit person. \"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"            + \"Please use addtask and deletetask instead\";","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e tasks \u003d personToEdit.getTasks();","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"LeopardMerkava"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"LeopardMerkava":5,"kflim":11,"-":224}},{"path":"src/main/java/seedu/address/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":" * Edits the details of an existing task.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    public static final String COMMAND_WORD \u003d \"edittask\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"            + \"by the index number used in the displayed person list and task number. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"            + PREFIX_TASK_INDEX + \"TASK_INDEX \"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"            + \"[\" + PREFIX_TASK + \"TASKNAME]...\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"            + PREFIX_TASK_INDEX + \"2 \"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"            + PREFIX_TASK + \"Assignment Discussion\";","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Edits the details of the task identified\";","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s \";","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_TASK_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task already exists.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"    public static final String MESSAGE_INVALID_TASK \u003d \"The size of %1$s\u0027s task list is not that big\";","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"    private final Index targetPersonIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"    private final Index targetTaskIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    private final Task editedTask;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"     * @param targetPersonIndex of the person in the filtered person list","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"     * @param targetTaskIndex of the task to edit","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"    public EditTaskCommand(Index targetPersonIndex, Index targetTaskIndex, Task editedTask) {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(targetPersonIndex);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(targetTaskIndex);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"        this.targetPersonIndex \u003d targetPersonIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"        this.targetTaskIndex \u003d targetTaskIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"        this.editedTask \u003d editedTask;","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"        if (targetPersonIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"        Person personToEdit \u003d lastShownList.get(targetPersonIndex.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"        tasks.addAll(personToEdit.getTasks());","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"        if (targetTaskIndex.getZeroBased() \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_TASK, personToEdit.getName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"        Task taskToEdit \u003d tasks.get(targetTaskIndex.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"        if (taskToEdit.equals(editedTask)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"        tasks.set(targetTaskIndex.getZeroBased(), editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), tasks);","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"        // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"        return targetPersonIndex.equals(e.targetPersonIndex)","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 targetTaskIndex.equals(e.targetTaskIndex)","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"                \u0026\u0026 editedTask.equals(e.editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kflim":10,"eugenecsa":108}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Exits the program.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"    public static final String MESSAGE_USAGE \u003d DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"    public static String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"    public static String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kflim":11,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Finds all persons whose names contain the specified keywords\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kflim":10,"-":42}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Shows program usage instructions.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": \" + DESCRIPTION + \"\\nExample: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kflim":11,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Lists all current persons in the address book.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kflim":10,"-":24}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wz27"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"wz27"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"wz27"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"wz27"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"wz27"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"wz27"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"wz27"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"wz27"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"wz27"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the list of persons \"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"wz27"},"content":"            + \"by the alphabetical order of their name.\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"wz27"},"content":"            + \"Parameters: [-r]\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"wz27"},"content":"            + \" -r\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"    public static final String DESCRIPTION \u003d \"Sorts the list of persons\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"    private String messageSuccess \u003d \"Sorted all persons\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"wz27"},"content":"    private final boolean isReverseOrder;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"wz27"},"content":"    public SortCommand(boolean isReverseOrder) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"wz27"},"content":"        this.isReverseOrder \u003d isReverseOrder;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"wz27"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"wz27"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"wz27"},"content":"        if (isReverseOrder) {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"            messageSuccess \u003d messageSuccess + \" in reverse order\";","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"wz27"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"wz27"},"content":"        model.updateSortedPersonList(isReverseOrder);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"        return new CommandResult(messageSuccess);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"        return DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"wz27"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kflim":12,"wz27":35}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kflim":2,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"                        PREFIX_TAG, PREFIX_TASK);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e taskList \u003d ParserUtil.parseTasks(argMultimap.getAllValues(PREFIX_TASK));","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, taskList);","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"LeopardMerkava":8,"-":46}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TASK);","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"        Index index;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"                    AddTaskCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e tasks \u003d ParserUtil.parseTasks(argMultimap.getAllValues(PREFIX_TASK));","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"        return new AddTaskCommand(index, tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LeopardMerkava":33,"eugenecsa":7}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"wz27"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"wz27"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"LeopardMerkava"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LeopardMerkava":8,"-":76,"eugenecsa":4,"wz27":4}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"    public static final Prefix PREFIX_TASK \u003d new Prefix(\"task/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"    public static final Prefix PREFIX_TASK_INDEX \u003d new Prefix(\"ti/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"LeopardMerkava":2,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_TASK_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"            Index taskIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TASK_INDEX).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"            return new DeleteTaskCommand(index, taskIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LeopardMerkava":24,"eugenecsa":4}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"                        PREFIX_TASK);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"        if (argMultimap.getValue(PREFIX_TASK).isPresent()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"            throw new ParseException(EditCommand.MESSAGE_CANNOT_EDIT_TASK);","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"LeopardMerkava":7,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK_INDEX, PREFIX_TASK);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        Index index;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"        Index taskIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"        Task editedTask;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"            taskIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TASK_INDEX).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"        if (argMultimap.getValue(PREFIX_TASK).isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"            editedTask \u003d ParserUtil.parseTask(argMultimap.getValue(PREFIX_TASK).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_TASK_NOT_EDITED);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"        return new EditTaskCommand(index, taskIndex, editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"eugenecsa":45}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"LeopardMerkava"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"LeopardMerkava"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"LeopardMerkava"},"content":"    public static Task parseTask(String task) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"LeopardMerkava"},"content":"        String trimmedTask \u003d task.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"LeopardMerkava"},"content":"        if (!Task.isValidTaskName(trimmedTask)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"LeopardMerkava"},"content":"            throw new ParseException(Task.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"LeopardMerkava"},"content":"        return new Task(trimmedTask);","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"LeopardMerkava"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"LeopardMerkava"},"content":"    public static List\u003cTask\u003e parseTasks(Collection\u003cString\u003e tasks) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"LeopardMerkava"},"content":"        final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"LeopardMerkava"},"content":"        for (String taskName : tasks) {","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"LeopardMerkava"},"content":"            taskList.add(parseTask(taskName));","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"LeopardMerkava"},"content":"        return taskList;","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"LeopardMerkava"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"LeopardMerkava"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"LeopardMerkava"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"LeopardMerkava":39,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wz27"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"wz27"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"wz27"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"wz27"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"wz27"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"wz27"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"wz27"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"wz27"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"wz27"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"wz27"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"wz27"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"wz27"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"wz27"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"wz27"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"wz27"},"content":"        boolean isReverseOrder \u003d false;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"wz27"},"content":"        if (!trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"wz27"},"content":"            if (trimmedArgs.equals(\"-r\")) {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"wz27"},"content":"                isReverseOrder \u003d true;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"wz27"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"wz27"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"wz27"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"wz27"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"wz27"},"content":"        } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"wz27"},"content":"            isReverseOrder \u003d false;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"wz27"},"content":"        return new SortCommand(isReverseOrder);","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"wz27"},"content":"}","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"wz27":38}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"     * Updates the currently displayed person\u0027s taskList to the given {@code taskList}.","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"     * @throws NullPointerException if {@code taskList} is null.","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"    void updateDisplayTaskList(List\u003cTask\u003e taskList);","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"limzk126"},"content":"    /** Returns an unmodifiable view of the display task list. */","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"    ObservableList\u003cTask\u003e getDisplayTaskList();","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"wz27"},"content":"    void updateSortedPersonList(boolean isReverseOrder);","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"limzk126":12,"-":87,"wz27":1}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"wz27"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"wz27"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"wz27"},"content":"    private final FilteredList\u003cPerson\u003e onlyfilteredPersons;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"wz27"},"content":"    private final SortedList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    private final ObservableList\u003cTask\u003e displayTaskList;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    private final ObservableList\u003cTask\u003e unmodifiableDisplayTaskList;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"        displayTaskList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"        unmodifiableDisplayTaskList \u003d FXCollections.unmodifiableObservableList(displayTaskList);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"wz27"},"content":"        onlyfilteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"wz27"},"content":"        filteredPersons \u003d new SortedList\u003c\u003e(onlyfilteredPersons);","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"wz27"},"content":"        onlyfilteredPersons.setPredicate(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"wz27"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"wz27"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"wz27"},"content":"    public void updateSortedPersonList(boolean isReverseOrder) {","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"wz27"},"content":"        if (isReverseOrder) {","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"wz27"},"content":"            filteredPersons.setComparator(Comparator.reverseOrder());","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"wz27"},"content":"        } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"wz27"},"content":"            filteredPersons.setComparator(Comparator.naturalOrder());","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"limzk126"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d display task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"limzk126"},"content":"    public void updateDisplayTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"limzk126"},"content":"        requireNonNull(taskList);","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"limzk126"},"content":"        displayTaskList.setAll(taskList);","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"limzk126"},"content":"    public ObservableList\u003cTask\u003e getDisplayTaskList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"limzk126"},"content":"        return unmodifiableDisplayTaskList;","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"limzk126":21,"-":148,"wz27":16}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"wz27"},"content":"public class Person implements Comparable\u003cPerson\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"    // TaskList","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"    private final List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"        requireAllNonNull(name, phone, email, address, tags, tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns an immutable task list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"        return Collections.unmodifiableList(tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"wz27"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"wz27"},"content":"    public int compareTo(Person other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"wz27"},"content":"        return this.name.toString().compareTo(other.name.toString());","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"wz27"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LeopardMerkava":17,"-":120,"wz27":5}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"public class Task {","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Task names should contain at least 1 non-whitespace character\";","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S+.*\"; // At least 1 non-whitespace","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"    public final String taskName;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"     * Constructor for task. Creates a new task with the given a String name.","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"    public Task (String taskName) {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"        requireNonNull(taskName);","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"        checkArgument(isValidTaskName(taskName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"        return taskName;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"                || (other instanceof Task \u0026\u0026 taskName.equals(((Task) other).getTaskName()));","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"    public static boolean isValidTaskName(String test) {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"        return taskName;","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LeopardMerkava":41}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"                getTagSet(\"friends\"), getTaskList(\"Play\")),","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"                getTagSet(\"colleagues\", \"friends\"), getTaskList(\"Play\")),","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"                getTagSet(\"neighbours\"), getTaskList(\"Teach\")),","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"                getTagSet(\"family\"), getTaskList(\"CS2100\")),","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"                getTagSet(\"classmates\"), getTaskList(\"Do Homework\")),","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"                getTagSet(\"colleagues\"), getTaskList(\"Slap\"))","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns a task list containing the list of strings given.","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"    public static List\u003cTask\u003e getTaskList(String... strings) {","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"                .map(Task::new)","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"LeopardMerkava":17,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"        tasks.addAll(source.getTasks().stream()","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"                .map(JsonAdaptedTask::new)","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e modelTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"LeopardMerkava"},"content":"        for (JsonAdaptedTask task : tasks) {","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"            modelTasks.add(task.toModelType());","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"LeopardMerkava"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelTasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LeopardMerkava":11,"-":108}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"    private final String taskName;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given {@code taskName}.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"    public JsonAdaptedTask(String taskName) {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"        taskName \u003d source.getTaskName();","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"    @JsonValue","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"        return taskName;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"        if (!Task.isValidTaskName(taskName)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"            throw new IllegalValueException(Task.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"        return new Task(taskName);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"    };","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LeopardMerkava":44}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import java.util.Hashtable;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"public class HelpWindow extends AnchorPane {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"    public static final String USER_GUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\";","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"    public static final String USER_GUIDE_MESSAGE \u003d \"For full details, refer to the user guide: \" + USER_GUIDE_URL;","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"    public static final String HELP_MESSAGE \u003d \"For more detailed commands, type \\\"help [command]\\\"\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"            + \"To close this window, type \\\"close\\\"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"    private static final String APPLICATION_ICON \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"    private static final Hashtable\u003cString, CommandDetail\u003e commandTable \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"    private static Stage stage;","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"    private interface CommandDetail {","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"        void execute();","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"    private TextField textField;","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"    private Label additionalInfo;","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"    private TableView\u003cCommand\u003e tableView;","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"    private TableColumn\u003cCommand, String\u003e command;","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"    private TableColumn\u003cCommand, String\u003e description;","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"    private Label userGuideMessage;","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"kflim"},"content":"    private Button copyButton;","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":86,"author":{"gitId":"kflim"},"content":"    public HelpWindow() {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"kflim"},"content":"        stage \u003d new Stage();","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"kflim"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"kflim"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainApp.class.getResource(\"/view/HelpWindow.fxml\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"kflim"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"kflim"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"kflim"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"kflim"},"content":"            assert ap !\u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"kflim"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"kflim"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"kflim"},"content":"            stage.setTitle(\"Help\");","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"kflim"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"kflim"},"content":"            stage.getIcons().add(","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"kflim"},"content":"                    new Image(Objects.requireNonNull(MainApp.class.getResourceAsStream(APPLICATION_ICON)))","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"kflim"},"content":"            );","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"kflim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"kflim"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"kflim"},"content":"        fillCommandTable();","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"kflim"},"content":"        additionalInfo.setText(\"\");","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"kflim"},"content":"        userGuideMessage.setText(USER_GUIDE_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"kflim"},"content":"        copyButton.setText(\"Copy URL\");","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"kflim"},"content":"     * Sets up the respective children of the AnchorPane.","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"kflim"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"kflim"},"content":"    public void initialize() {","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"kflim"},"content":"        setupTextField();","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"kflim"},"content":"        setupTable();","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"kflim"},"content":"        setupButton();","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"kflim"},"content":"        stage.show();","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"kflim"},"content":"        stage.centerOnScreen();","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"kflim"},"content":"        return stage.isShowing();","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":157,"author":{"gitId":"kflim"},"content":"        stage.hide();","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"kflim"},"content":"        stage.requestFocus();","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":167,"author":{"gitId":"kflim"},"content":"    private void setupButton() {","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"kflim"},"content":"        copyButton.setOnMousePressed(event -\u003e copyUrl());","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"kflim"},"content":"    private void setupColumns() {","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"kflim"},"content":"        command.setCellValueFactory(","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"kflim"},"content":"                new PropertyValueFactory\u003c\u003e(\"command\")","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"kflim"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"kflim"},"content":"        description.setCellValueFactory(","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"kflim"},"content":"                new PropertyValueFactory\u003c\u003e(\"description\")","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"kflim"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"kflim"},"content":"    private void setupTextField() {","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"kflim"},"content":"        textField.setOnKeyPressed(event -\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"kflim"},"content":"            if (event.getCode() \u003d\u003d KeyCode.ENTER) {","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"kflim"},"content":"                handleUserInput(textField.getText());","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"kflim"},"content":"                textField.setText(\"\");","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"kflim"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"kflim"},"content":"        });","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"kflim"},"content":"    private void setupTable() {","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"kflim"},"content":"        setupColumns();","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"kflim"},"content":"        setupTableData();","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"kflim"},"content":"    private void setupTableData() {","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"kflim"},"content":"        Person samplePerson \u003d new Person(","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"kflim"},"content":"                new Name(\"Amy Bee\"), new Phone(\"123456789\"), new Email(\"amy@gmail.com\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"kflim"},"content":"                new Address(\"123, Jurong West Ave 6, #08-111\"), new HashSet\u003c\u003e(), new ArrayList\u003c\u003e()","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"kflim"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"kflim"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"kflim"},"content":"        descriptor.setName(samplePerson.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"kflim"},"content":"        descriptor.setPhone(samplePerson.getPhone());","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"kflim"},"content":"        descriptor.setEmail(samplePerson.getEmail());","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"kflim"},"content":"        descriptor.setAddress(samplePerson.getAddress());","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"kflim"},"content":"        descriptor.setTags(samplePerson.getTags());","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"kflim"},"content":"        ObservableList\u003cCommand\u003e data \u003d FXCollections.observableArrayList(","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"kflim"},"content":"                new AddCommand(samplePerson), new ClearCommand(), new DeleteCommand(null),","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"kflim"},"content":"                new EditCommand(Index.fromZeroBased(0), descriptor), new FindCommand(null),","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"kflim"},"content":"                new ListCommand(), new ExitCommand(), new SortCommand(false),","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"kflim"},"content":"                new AddTaskCommand(Index.fromZeroBased(0), new ArrayList\u003c\u003e()),","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"kflim"},"content":"                new DeleteTaskCommand(Index.fromZeroBased(0), Index.fromZeroBased(0)),","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"kflim"},"content":"                new EditTaskCommand(Index.fromZeroBased(0), Index.fromZeroBased(0), new Task(\"sample\"))","lastModifiedDate":"2021-10-08"},{"lineNumber":214,"author":{"gitId":"kflim"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"kflim"},"content":"        tableView.setItems(data);","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"kflim"},"content":"        tableView.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"kflim"},"content":"        tableView.setSelectionModel(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":228,"author":{"gitId":"kflim"},"content":"        url.putString(USER_GUIDE_URL);","lastModifiedDate":"2021-10-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":231,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":232,"author":{"gitId":"kflim"},"content":"    private void fillCommandTable() {","lastModifiedDate":"2021-10-07"},{"lineNumber":233,"author":{"gitId":"kflim"},"content":"        commandTable.put(AddCommand.COMMAND_WORD, this::handleAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":234,"author":{"gitId":"kflim"},"content":"        commandTable.put(ClearCommand.COMMAND_WORD, this::handleClear);","lastModifiedDate":"2021-10-08"},{"lineNumber":235,"author":{"gitId":"kflim"},"content":"        commandTable.put(DeleteCommand.COMMAND_WORD, this::handleDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":236,"author":{"gitId":"kflim"},"content":"        commandTable.put(EditCommand.COMMAND_WORD, this::handleEdit);","lastModifiedDate":"2021-10-08"},{"lineNumber":237,"author":{"gitId":"kflim"},"content":"        commandTable.put(FindCommand.COMMAND_WORD, this::handleFind);","lastModifiedDate":"2021-10-08"},{"lineNumber":238,"author":{"gitId":"kflim"},"content":"        commandTable.put(ListCommand.COMMAND_WORD, this::handleList);","lastModifiedDate":"2021-10-08"},{"lineNumber":239,"author":{"gitId":"kflim"},"content":"        commandTable.put(ExitCommand.COMMAND_WORD, this::handleExit);","lastModifiedDate":"2021-10-08"},{"lineNumber":240,"author":{"gitId":"kflim"},"content":"        commandTable.put(SortCommand.COMMAND_WORD, this::handleSort);","lastModifiedDate":"2021-10-08"},{"lineNumber":241,"author":{"gitId":"kflim"},"content":"        commandTable.put(AddTaskCommand.COMMAND_WORD, this::handleAddTask);","lastModifiedDate":"2021-10-08"},{"lineNumber":242,"author":{"gitId":"kflim"},"content":"        commandTable.put(DeleteTaskCommand.COMMAND_WORD, this::handleDelTask);","lastModifiedDate":"2021-10-08"},{"lineNumber":243,"author":{"gitId":"kflim"},"content":"        commandTable.put(EditTaskCommand.COMMAND_WORD, this::handleEditTask);","lastModifiedDate":"2021-10-08"},{"lineNumber":244,"author":{"gitId":"kflim"},"content":"        commandTable.put(\"viewtask\", this::handleViewTask); // placeholder","lastModifiedDate":"2021-10-08"},{"lineNumber":245,"author":{"gitId":"kflim"},"content":"        commandTable.put(\"close\", this::handleCloseWindow);","lastModifiedDate":"2021-10-08"},{"lineNumber":246,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":247,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":248,"author":{"gitId":"kflim"},"content":"    private void handleUserInput(String userInput) {","lastModifiedDate":"2021-10-07"},{"lineNumber":249,"author":{"gitId":"kflim"},"content":"        String[] words \u003d userInput.trim().split(\" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":250,"author":{"gitId":"kflim"},"content":"        if (areValidWords(words)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":251,"author":{"gitId":"kflim"},"content":"            performCommand(words, userInput.startsWith(\"close\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":252,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":253,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":254,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":255,"author":{"gitId":"kflim"},"content":"    private boolean areValidWords(String[] words) {","lastModifiedDate":"2021-10-07"},{"lineNumber":256,"author":{"gitId":"kflim"},"content":"        if (words[0].equals(\"help\") \u0026\u0026 words.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-07"},{"lineNumber":257,"author":{"gitId":"kflim"},"content":"            additionalInfo.setText(\"Enter the command that you wish to query after \\\"help\\\"!\");","lastModifiedDate":"2021-10-07"},{"lineNumber":258,"author":{"gitId":"kflim"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":259,"author":{"gitId":"kflim"},"content":"        } else if (words[0].equals(\"close\") \u0026\u0026 words.length \u003d\u003d 1","lastModifiedDate":"2021-10-07"},{"lineNumber":260,"author":{"gitId":"kflim"},"content":"                || words.length \u003d\u003d 2 \u0026\u0026 words[0].equals(\"help\") \u0026\u0026 isValidCommand(words[1])) {","lastModifiedDate":"2021-10-07"},{"lineNumber":261,"author":{"gitId":"kflim"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":262,"author":{"gitId":"kflim"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":263,"author":{"gitId":"kflim"},"content":"            additionalInfo.setText(\"That is not a valid command\");","lastModifiedDate":"2021-10-07"},{"lineNumber":264,"author":{"gitId":"kflim"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":265,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":266,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":267,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":268,"author":{"gitId":"kflim"},"content":"    private boolean isValidCommand(String userInput) {","lastModifiedDate":"2021-10-07"},{"lineNumber":269,"author":{"gitId":"kflim"},"content":"        return commandTable.containsKey(userInput);","lastModifiedDate":"2021-10-08"},{"lineNumber":270,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":271,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":272,"author":{"gitId":"kflim"},"content":"    private void performCommand(String[] userInput, boolean isClose) {","lastModifiedDate":"2021-10-07"},{"lineNumber":273,"author":{"gitId":"kflim"},"content":"        if (isClose) {","lastModifiedDate":"2021-10-07"},{"lineNumber":274,"author":{"gitId":"kflim"},"content":"            commandTable.get(userInput[0]).execute();","lastModifiedDate":"2021-10-08"},{"lineNumber":275,"author":{"gitId":"kflim"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":276,"author":{"gitId":"kflim"},"content":"            commandTable.get(userInput[1]).execute();","lastModifiedDate":"2021-10-08"},{"lineNumber":277,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":278,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":279,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":280,"author":{"gitId":"kflim"},"content":"    private void handleAdd() {","lastModifiedDate":"2021-10-07"},{"lineNumber":281,"author":{"gitId":"kflim"},"content":"        additionalInfo.setText(\"Format: add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":282,"author":{"gitId":"kflim"},"content":"                + \"A person can have any number of tags (including 0)\");","lastModifiedDate":"2021-10-07"},{"lineNumber":283,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":284,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":285,"author":{"gitId":"kflim"},"content":"    private void handleClear() {","lastModifiedDate":"2021-10-07"},{"lineNumber":286,"author":{"gitId":"kflim"},"content":"        additionalInfo.setText(\"Format: clear\\nClears and resets the data in ContactSh\");","lastModifiedDate":"2021-10-07"},{"lineNumber":287,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":288,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":289,"author":{"gitId":"kflim"},"content":"    private void handleDelete() {","lastModifiedDate":"2021-10-07"},{"lineNumber":290,"author":{"gitId":"kflim"},"content":"        additionalInfo.setText(\"Format: delete INDEX\\nDeletes the person at the specified index IF it is valid\");","lastModifiedDate":"2021-10-07"},{"lineNumber":291,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":292,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":293,"author":{"gitId":"kflim"},"content":"    private void handleEdit() {","lastModifiedDate":"2021-10-07"},{"lineNumber":294,"author":{"gitId":"kflim"},"content":"        additionalInfo.setText(\"Format: edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":295,"author":{"gitId":"kflim"},"content":"                + \"Edits the person at the specified index IF it is valid\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":296,"author":{"gitId":"kflim"},"content":"                + \"You can remove all the person’s tags by typing t/ without specifying any tags after it.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":297,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":298,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":299,"author":{"gitId":"kflim"},"content":"    private void handleFind() {","lastModifiedDate":"2021-10-07"},{"lineNumber":300,"author":{"gitId":"kflim"},"content":"        additionalInfo.setText(","lastModifiedDate":"2021-10-07"},{"lineNumber":301,"author":{"gitId":"kflim"},"content":"                \"Format: find KEYWORD [MORE_KEYWORDS]\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":302,"author":{"gitId":"kflim"},"content":"                        + \"Only full words will be matched and persons matching at least one keyword will be returned\"","lastModifiedDate":"2021-10-07"},{"lineNumber":303,"author":{"gitId":"kflim"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":304,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":305,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":306,"author":{"gitId":"kflim"},"content":"    private void handleList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":307,"author":{"gitId":"kflim"},"content":"        additionalInfo.setText(\"Format: list\\n\" + \"Shows a list of all persons in ContactSh\");","lastModifiedDate":"2021-10-07"},{"lineNumber":308,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":309,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":310,"author":{"gitId":"kflim"},"content":"    private void handleExit() {","lastModifiedDate":"2021-10-07"},{"lineNumber":311,"author":{"gitId":"kflim"},"content":"        additionalInfo.setText(\"Format: exit\\n\" + \"Exits the program entirely\");","lastModifiedDate":"2021-10-07"},{"lineNumber":312,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":313,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":314,"author":{"gitId":"kflim"},"content":"    private void handleSort() {","lastModifiedDate":"2021-10-07"},{"lineNumber":315,"author":{"gitId":"kflim"},"content":"        additionalInfo.setText(\"Format: sort [-r]\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":316,"author":{"gitId":"kflim"},"content":"                + \"Sort persons by the alphabetical order of their name.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":317,"author":{"gitId":"kflim"},"content":"                + \"If the optional -r flag is provided, a list of persons sorted in reverse order is displayed\");","lastModifiedDate":"2021-10-07"},{"lineNumber":318,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":319,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":320,"author":{"gitId":"kflim"},"content":"    private void handleAddTask() {","lastModifiedDate":"2021-10-07"},{"lineNumber":321,"author":{"gitId":"kflim"},"content":"        additionalInfo.setText(\"Format: addtask INDEX task/TASKNAME\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":322,"author":{"gitId":"kflim"},"content":"                + \"Adds a task to the person at the specified INDEX\");","lastModifiedDate":"2021-10-07"},{"lineNumber":323,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":324,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":325,"author":{"gitId":"kflim"},"content":"    private void handleDelTask() {","lastModifiedDate":"2021-10-07"},{"lineNumber":326,"author":{"gitId":"kflim"},"content":"        additionalInfo.setText(\"Format: deltask INDEX ti/TASK_INDEX\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":327,"author":{"gitId":"kflim"},"content":"                + \"Deletes a task attached to the person at the specified INDEX\");","lastModifiedDate":"2021-10-07"},{"lineNumber":328,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":329,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":330,"author":{"gitId":"kflim"},"content":"    private void handleViewTask() {","lastModifiedDate":"2021-10-07"},{"lineNumber":331,"author":{"gitId":"kflim"},"content":"        additionalInfo.setText(\"Format: viewtask INDEX\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":332,"author":{"gitId":"kflim"},"content":"                + \"Displays the list of tasks attached to the person at the specifiedINDEX\");","lastModifiedDate":"2021-10-07"},{"lineNumber":333,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":334,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":335,"author":{"gitId":"kflim"},"content":"    private void handleEditTask() {","lastModifiedDate":"2021-10-08"},{"lineNumber":336,"author":{"gitId":"kflim"},"content":"        additionalInfo.setText(\"Format: edittask INDEX ti/TASK_INDEX [task/TASKNAME]\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":337,"author":{"gitId":"kflim"},"content":"                + \"Edits a task attached to the person (at the specified INDEX) according to the TASK_INDEX\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":338,"author":{"gitId":"kflim"},"content":"                + \"At least one of the optional fields must be provided.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":339,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":340,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":341,"author":{"gitId":"kflim"},"content":"    private void handleCloseWindow() {","lastModifiedDate":"2021-10-07"},{"lineNumber":342,"author":{"gitId":"kflim"},"content":"        stage.close(); // May update to have a timer if possible","lastModifiedDate":"2021-10-07"},{"lineNumber":343,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kflim":262,"-":82}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"    private AnchorPane personListSplitPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"    private AnchorPane taskListSplitPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"limzk126"},"content":"     * Event handler when user clicks on a particular ListCell in the {@code tmp}.","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"limzk126"},"content":"     * Updates the task list panel to show the task list of the Person represented by","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"limzk126"},"content":"     * the selected ListCell.","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"limzk126"},"content":"    public void handleMouseClicked(ListView\u003cPerson\u003e personListView) {","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"limzk126"},"content":"        List\u003cTask\u003e selectedTaskList \u003d personListView.getSelectionModel().getSelectedItem().getTasks();","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"limzk126"},"content":"        logic.updateDisplayTaskList(selectedTaskList);","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"limzk126"},"content":"    /** Makes child node of anchor resize together with its parent. */","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"limzk126"},"content":"    private void setAnchorProperties(AnchorPane ap) {","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"limzk126"},"content":"        AnchorPane.setBottomAnchor(ap.getChildren().get(0), 0.0);","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"limzk126"},"content":"        AnchorPane.setLeftAnchor(ap.getChildren().get(0), 0.0);","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"limzk126"},"content":"        AnchorPane.setRightAnchor(ap.getChildren().get(0), 0.0);","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"limzk126"},"content":"        AnchorPane.setTopAnchor(ap.getChildren().get(0), 0.0);","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"limzk126"},"content":"        // Initialising mouse click properties for ListView\u003cPerson\u003e.","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"limzk126"},"content":"        ListView\u003cPerson\u003e personListView \u003d personListPanel.getPersonListView();","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"limzk126"},"content":"        personListView.setOnMouseClicked(event -\u003e handleMouseClicked(personListView));","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"limzk126"},"content":"        personListSplitPanel.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"limzk126"},"content":"        setAnchorProperties(personListSplitPanel);","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"limzk126"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getDisplayTaskList());","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"limzk126"},"content":"        taskListSplitPanel.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"limzk126"},"content":"        setAnchorProperties(taskListSplitPanel);","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"limzk126":42,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    private Text taskList;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"        taskList.setText(person.getTasks().toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"LeopardMerkava":4,"-":77}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    public ListView\u003cPerson\u003e getPersonListView() {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"        return personListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"limzk126":4,"-":49}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    public final Task task;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    public final int displayedIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    private HBox descriptionPane;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    private Label id;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    private Label taskName;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"     * Creates a {@code TaskCard} with the given {@code Task} and index to display.","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"        this.displayedIndex \u003d displayedIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"     * Initialises properties of FXML nodes of this TaskCard using {@code lc}\u0027s properties.","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"    public void initialise(ListCell\u003cTask\u003e lc) {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"        // Sets width property of HBox to be dependent on list cell\u0027s width and padding property.","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"        descriptionPane.maxWidthProperty().bind(Bindings.createDoubleBinding(()-\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"            lc.getWidth() - lc.getPadding().getLeft() - lc.getPadding().getRight() - 1,","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"            lc.widthProperty(), lc.paddingProperty()));","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"        taskName.setText(task.getTaskName());","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"limzk126":49}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":" * Panel containing the list of Tasks.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    private VBox vbox;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    private Label taskListPanelHeader;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"                setText(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"            } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"                TaskCard tc \u003d new TaskCard(task, getIndex() + 1);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"                tc.initialise(this);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"                setGraphic(tc.getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"limzk126":56}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"    public UiPart() {}","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kflim":2,"-":88}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":".root {","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans\";","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":".label {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"    -fx-font-size: 8pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":".text-field {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"    -fx-font-size: 8pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":".table-view {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"    -fx-padding: 5;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":".table-row-cell {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"    -fx-border-color: white;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"    -fx-table-cell-border-color: white;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"    -fx-alignment: center;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":".table-column {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"    -fx-alignment: center;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"    -fx-font-size: 8pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kflim":38,"-":3}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"\u003cfx:root minHeight\u003d\"300.0\" minWidth\u003d\"446.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"599.0\" stylesheets\u003d\"@HelpWindow.css\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"  \u003cLabel fx:id\u003d\"helpMessage\" alignment\u003d\"CENTER\" layoutX\u003d\"147.0\" layoutY\u003d\"14.0\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"39.0\" prefWidth\u003d\"303.0\" text\u003d\"Label\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"  \u003cTextField fx:id\u003d\"textField\" alignment\u003d\"CENTER\" layoutX\u003d\"209.0\" layoutY\u003d\"68.0\" prefHeight\u003d\"25.0\" prefWidth\u003d\"180.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"  \u003cLabel fx:id\u003d\"additionalInfo\" alignment\u003d\"CENTER\" layoutX\u003d\"41.0\" layoutY\u003d\"111.0\" prefHeight\u003d\"72.0\" prefWidth\u003d\"516.0\" style\u003d\"-fx-border-color: #DDDDDD;\" text\u003d\"Label\" textAlignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"  \u003cTableView fx:id\u003d\"tableView\" layoutX\u003d\"-1.0\" layoutY\u003d\"207.0\" prefHeight\u003d\"296.0\" prefWidth\u003d\"599.0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"    \u003ccolumns\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"      \u003cTableColumn fx:id\u003d\"command\" maxWidth\u003d\"2000.0\" prefWidth\u003d\"123.0\" text\u003d\"Command\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"      \u003cTableColumn fx:id\u003d\"description\" minWidth\u003d\"200.0\" prefWidth\u003d\"473.0\" text\u003d\"Description\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"    \u003c/columns\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"  \u003c/TableView\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"  \u003cLabel fx:id\u003d\"userGuideMessage\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"-1.0\" layoutY\u003d\"503.0\" prefHeight\u003d\"50.0\" prefWidth\u003d\"538.0\" style\u003d\"-fx-wrap-text: true;\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"  \u003cButton fx:id\u003d\"copyButton\" alignment\u003d\"CENTER\" layoutX\u003d\"537.0\" layoutY\u003d\"503.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"50.0\" prefWidth\u003d\"61.0\" style\u003d\"-fx-wrap-text: true;\" text\u003d\"Button\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"kflim":16,"-":6}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"        \u003cURL value\u003d\"@TaskListPanel.css\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"        \u003cURL value\u003d\"@TaskListCard.css\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"        \u003cURL value\u003d\"@PersonListCard.css\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100.0\" prefHeight\u003d\"100.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"                     \u003cSplitPane dividerPositions\u003d\"0.49788583509513734\" prefHeight\u003d\"160.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"                       \u003citems\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"                         \u003cAnchorPane fx:id\u003d\"personListSplitPanel\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"160.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"                         \u003cAnchorPane fx:id\u003d\"taskListSplitPanel\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"160.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"                       \u003c/items\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"                     \u003c/SplitPane\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"                  \u003c/children\u003e\u003c/StackPane\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"limzk126":21,"-":51}},{"path":"src/main/resources/view/PersonListCard.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"#name {","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"#address {","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    -fx-padding: 2 2 2 2;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"    -fx-border-color: lime green;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"#phone {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    -fx-padding: 2 2 2 2;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    -fx-border-color: lime green;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"#email {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    -fx-padding: 2 2 2 2;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    -fx-border-color: lime green;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"limzk126":24}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"      \u003cText fx:id\u003d\"taskList\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"                  \u003cInsets bottom\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"               \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"      \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"               \u003cInsets bottom\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"            \u003c/VBox.margin\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"               \u003cInsets bottom\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"            \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"               \u003cInsets bottom\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"            \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"               \u003cInsets bottom\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"            \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LeopardMerkava":9,"limzk126":20,"-":29}},{"path":"src/main/resources/view/TaskListCard.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"#id {","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"    -fx-min-width: 80.0;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"#taskName {","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"limzk126":8}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"\u003cHBox fx:id\u003d\"descriptionPane\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"      \u003cLabel fx:id\u003d\"id\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"      \u003cLabel fx:id\u003d\"taskName\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"limzk126":15}},{"path":"src/main/resources/view/TaskListPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"#taskListPanelHeader {","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"    -fx-background-color: black;","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"    -fx-text-fill: lime green;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"limzk126":6}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"\u003cVBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"      \u003cLabel fx:id\u003d\"taskListPanelHeader\" prefWidth\u003d\"${taskListPanelHeader.parent.width}\" text\u003d\"Task List\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"      \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"limzk126":12}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"LeopardMerkava"},"content":"    public void testSingularorPlural() {","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"LeopardMerkava"},"content":"        assertEquals(\"tasks\", StringUtil.singularOrPlural(\"task\", 2));","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"LeopardMerkava"},"content":"        assertEquals(\"task\", StringUtil.singularOrPlural(\"task\", 1));","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"LeopardMerkava"},"content":"        assertEquals(\"pets\", StringUtil.singularOrPlural(\"pet\", 2));","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"LeopardMerkava"},"content":"        assertEquals(\"pet\", StringUtil.singularOrPlural(\"pet\", 1));","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"LeopardMerkava":9,"-":143}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"                        validPerson,","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"                        validPerson.getTasks().size(),","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"                        StringUtil.singularOrPlural(\"task\", validPerson.getTasks().size())","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"                ), expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"LeopardMerkava":6,"-":44}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"                validPerson,","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"                validPerson.getTasks().size(),","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"                StringUtil.singularOrPlural(\"task\", validPerson.getTasks().size())","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"            ), commandResult.getFeedbackToUser()","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"        );","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"limzk126"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"limzk126"},"content":"        public void updateDisplayTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"limzk126"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"limzk126"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"limzk126"},"content":"        public ObservableList\u003cTask\u003e getDisplayTaskList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"limzk126"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"wz27"},"content":"        public void updateSortedPersonList(boolean isReverseOrder) {","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"wz27"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"wz27"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"LeopardMerkava":8,"limzk126":13,"-":192,"wz27":3}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_LIST_1;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_LIST_2;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"    public void constructor_nullArg_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null, null));","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"                new AddTaskCommand(","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"                    Index.fromOneBased(model.getFilteredPersonList().size()),","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"                    null)","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"        );","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"        taskList.add(new Task(\"Task1\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null, taskList));","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"        final AddTaskCommand standardCommand \u003d new AddTaskCommand(INDEX_FIRST_PERSON, VALID_TASK_LIST_1);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"        AddTaskCommand commandWithSameValues \u003d new AddTaskCommand(INDEX_FIRST_PERSON, VALID_TASK_LIST_1);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"LeopardMerkava"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"        assertFalse(standardCommand.equals(new AddTaskCommand(INDEX_SECOND_PERSON, VALID_TASK_LIST_1)));","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"        // different tasklist -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"        assertFalse(standardCommand.equals(new AddTaskCommand(INDEX_FIRST_PERSON, VALID_TASK_LIST_2)));","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LeopardMerkava":66}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String VALID_TASK_TASK1 \u003d \"task 1\";","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String VALID_TASK_TASK2 \u003d \"task 2\";","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"    public static final List\u003cTask\u003e VALID_TASK_LIST_1 \u003d new ArrayList\u003cTask\u003e(","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"            Arrays.asList(new Task(VALID_TASK_TASK1))","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"    );","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    public static final List\u003cTask\u003e VALID_TASK_LIST_2 \u003d new ArrayList\u003cTask\u003e(","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"            Arrays.asList(new Task(VALID_TASK_TASK2))","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"    );","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"    public static final String INVALID_TASK \u003d \"   \";","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"LeopardMerkava":10,"-":128}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"    public void parseCommand_addTask() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"        String command \u003d AddTaskCommand.COMMAND_WORD + \" 1 \" + PREFIX_TASK + \"blob \";","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"        String moreTask \u003d PREFIX_TASK + \"blob2\";","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"        assertTrue(parser.parseCommand(command) instanceof AddTaskCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"        assertTrue(parser.parseCommand(command + moreTask) instanceof AddTaskCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"LeopardMerkava":10,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"    private static final String INVALID_TASK \u003d \"  \";","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"    private static final String VALID_TASK \u003d \"task 1\";","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"LeopardMerkava":2,"-":196}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"        tasks \u003d personToCopy.getTasks();","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"    public PersonBuilder withTasks(String ... tasks) {","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"        this.tasks \u003d SampleDataUtil.getTaskList(tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"LeopardMerkava"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":108,"author":{"gitId":"LeopardMerkava"},"content":"        return new Person(name, phone, email, address, tags, tasks);","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"LeopardMerkava":16,"-":95}}]
